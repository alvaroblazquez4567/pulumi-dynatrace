{
    "name": "dynatrace",
    "displayName": "Dynatrace",
    "description": "A Pulumi package for creating and managing Dynatrace cloud resources.",
    "keywords": [
        "pulumi",
        "dynatrace",
        "category/infrastructure"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`dynatrace` Terraform Provider](https://github.com/dynatrace-oss/terraform-provider-dynatrace).",
    "repository": "https://github.com/alvaroblazquez4567/pulumi-dynatrace",
    "pluginDownloadURL": "github://api.github.com/alvaroblazquez4567",
    "publisher": "alvaroblazquez4567",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "rootNamespace": "Lbrlabs.PulumiPackage"
        },
        "go": {
            "importBasePath": "github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "nodejs": {
            "packageName": "@alvaroblazquez4567/pulumi-dynatrace",
            "packageDescription": "A Pulumi package for creating and managing Dynatrace cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/dynatrace-oss/terraform-provider-dynatrace)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-dynatrace` repo](https://github.com/alvaroblazquez4567/pulumi-dynatrace/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-dynatrace` repo](https://github.com/dynatrace-oss/terraform-provider-dynatrace/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "packageName": "lbrlabs_pulumi_dynatrace",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/dynatrace-oss/terraform-provider-dynatrace)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-dynatrace` repo](https://github.com/alvaroblazquez4567/pulumi-dynatrace/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-dynatrace` repo](https://github.com/dynatrace-oss/terraform-provider-dynatrace/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {}
        }
    },
    "config": {
        "variables": {
            "accountId": {
                "type": "string",
                "secret": true
            },
            "automationClientId": {
                "type": "string",
                "secret": true
            },
            "automationClientSecret": {
                "type": "string",
                "secret": true
            },
            "automationEnvUrl": {
                "type": "string",
                "description": "The URL of the Dynatrace Environment with Platform capabilities turned on (`https://#####.apps.dynatrace.com)`. This is\noptional configuration when `dt_env_url` already specifies a SaaS Environment like `https://#####.live.dynatrace.com` or\n`https://#####.apps.dynatrace.com`\n"
            },
            "automationTokenUrl": {
                "type": "string",
                "description": "The URL that provides the Bearer tokens when accessing the Automation REST API. This is optional configuration when\n`dt_env_url` already specifies a SaaS Environment like `https://#####.live.dynatrace.com` or\n`https://#####.apps.dynatrace.com`\n"
            },
            "clientId": {
                "type": "string",
                "secret": true
            },
            "clientSecret": {
                "type": "string",
                "secret": true
            },
            "dtApiToken": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DYNATRACE_API_TOKEN",
                        "DT_API_TOKEN"
                    ]
                },
                "secret": true
            },
            "dtClusterApiToken": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DYNATRACE_CLUSTER_API_TOKEN",
                        "DT_CLUSTER_API_TOKEN"
                    ]
                },
                "secret": true
            },
            "dtClusterUrl": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DYNATRACE_CLUSTER_URL",
                        "DT_CLUSTER_URL"
                    ]
                },
                "secret": true
            },
            "dtEnvUrl": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DYNATRACE_ENV_URL",
                        "DT_ENV_URL"
                    ]
                }
            },
            "iamAccountId": {
                "type": "string",
                "secret": true
            },
            "iamClientId": {
                "type": "string",
                "secret": true
            },
            "iamClientSecret": {
                "type": "string",
                "secret": true
            }
        }
    },
    "types": {
        "dynatrace:index/AlertingFilters:AlertingFilters": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AlertingFiltersFilter:AlertingFiltersFilter"
                    },
                    "description": "A conditions for the metric usage\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AlertingFiltersFilter:AlertingFiltersFilter": {
            "properties": {
                "custom": {
                    "$ref": "#/types/dynatrace:index/AlertingFiltersFilterCustom:AlertingFiltersFilterCustom",
                    "description": "Configuration of a custom event filter. Filters custom events by title or description. If both specified, the AND logic applies\n"
                },
                "predefined": {
                    "$ref": "#/types/dynatrace:index/AlertingFiltersFilterPredefined:AlertingFiltersFilterPredefined",
                    "description": "Configuration of a custom event filter. Filters custom events by title or description. If both specified, the AND logic applies\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AlertingFiltersFilterCustom:AlertingFiltersFilterCustom": {
            "properties": {
                "description": {
                    "$ref": "#/types/dynatrace:index/AlertingFiltersFilterCustomDescription:AlertingFiltersFilterCustomDescription",
                    "description": "Configuration of a matching filter\n"
                },
                "metadata": {
                    "$ref": "#/types/dynatrace:index/AlertingFiltersFilterCustomMetadata:AlertingFiltersFilterCustomMetadata",
                    "description": "Configuration of a matching filter\n"
                },
                "title": {
                    "$ref": "#/types/dynatrace:index/AlertingFiltersFilterCustomTitle:AlertingFiltersFilterCustomTitle",
                    "description": "Configuration of a matching filter\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AlertingFiltersFilterCustomDescription:AlertingFiltersFilterCustomDescription": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "description": "The condition is case sensitive (`false`) or case insensitive (`true`).   If not set, then `false` is used, making the condition case sensitive\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The filter is enabled (`true`) or disabled (`false`)\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Reverses the comparison **operator**. For example it turns the **begins with** into **does not begin with**\n"
                },
                "operator": {
                    "type": "string",
                    "description": "Operator of the comparison.   You can reverse it by setting **negate** to `true`. Possible values are `BEGINS_WITH`, `CONTAINS`, `REGEX_MATCHES`, `ENDS_WITH` and `STRING_EQUALS`\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value to compare to\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/AlertingFiltersFilterCustomMetadata:AlertingFiltersFilterCustomMetadata": {
            "properties": {
                "items": {
                    "$ref": "#/types/dynatrace:index/AlertingFiltersFilterCustomMetadataItems:AlertingFiltersFilterCustomMetadataItems",
                    "description": "Define filters for event properties. A maximum of 20 properties is allowed.\n"
                }
            },
            "type": "object",
            "required": [
                "items"
            ]
        },
        "dynatrace:index/AlertingFiltersFilterCustomMetadataItems:AlertingFiltersFilterCustomMetadataItems": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AlertingFiltersFilterCustomMetadataItemsFilter:AlertingFiltersFilterCustomMetadataItemsFilter"
                    },
                    "description": "A conditions for the metric usage\n"
                }
            },
            "type": "object",
            "required": [
                "filters"
            ]
        },
        "dynatrace:index/AlertingFiltersFilterCustomMetadataItemsFilter:AlertingFiltersFilterCustomMetadataItemsFilter": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "GET /api/v2/eventProperties for list of available keys\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Reverses the comparison **operator**. For example it turns the **begins with** into **does not begin with**\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value to compare to\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "dynatrace:index/AlertingFiltersFilterCustomTitle:AlertingFiltersFilterCustomTitle": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "description": "The condition is case sensitive (`false`) or case insensitive (`true`).   If not set, then `false` is used, making the condition case sensitive\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The filter is enabled (`true`) or disabled (`false`)\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Reverses the comparison **operator**. For example it turns the **begins with** into **does not begin with**\n"
                },
                "operator": {
                    "type": "string",
                    "description": "Operator of the comparison.   You can reverse it by setting **negate** to `true`. Possible values are `BEGINS_WITH`, `CONTAINS`, `REGEX_MATCHES`, `ENDS_WITH` and `STRING_EQUALS`\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value to compare to\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/AlertingFiltersFilterPredefined:AlertingFiltersFilterPredefined": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "description": "Reverses the comparison **operator**. For example it turns the **begins with** into **does not begin with**\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the predefined event. Possible values are `APPLICATION_ERROR_RATE_INCREASED`, `APPLICATION_SLOWDOWN`, `APPLICATION_UNEXPECTED_HIGH_LOAD`, `APPLICATION_UNEXPECTED_LOW_LOAD`, `AWS_LAMBDA_HIGH_ERROR_RATE`, `CUSTOM_APPLICATION_ERROR_RATE_INCREASED`, `CUSTOM_APPLICATION_SLOWDOWN`, `CUSTOM_APPLICATION_UNEXPECTED_HIGH_LOAD`, `CUSTOM_APPLICATION_UNEXPECTED_LOW_LOAD`, `CUSTOM_APP_CRASH_RATE_INCREASED`, `DATABASE_CONNECTION_FAILURE`, `DATA_CENTER_SERVICE_PERFORMANCE_DEGRADATION`, `DATA_CENTER_SERVICE_UNAVAILABLE`, `EBS_VOLUME_HIGH_LATENCY`, `EC2_HIGH_CPU`, `ELB_HIGH_BACKEND_ERROR_RATE`, `ENTERPRICE_APPLICATION_PERFORMANCE_DEGRADATION`, `ENTERPRISE_APPLICATION_UNAVAILABLE`, `ESXI_GUEST_ACTIVE_SWAP_WAIT`, `ESXI_GUEST_CPU_LIMIT_REACHED`, `ESXI_HOST_CPU_SATURATION`, `ESXI_HOST_DATASTORE_LOW_DISK_SPACE`, `ESXI_HOST_DISK_QUEUE_SLOW`, `ESXI_HOST_DISK_SLOW`, `ESXI_HOST_MEMORY_SATURATION`, `ESXI_HOST_NETWORK_PROBLEMS`, `ESXI_HOST_OVERLOADED_STORAGE`, `ESXI_VM_IMPACT_HOST_CPU_SATURATION`, `ESXI_VM_IMPACT_HOST_MEMORY_SATURATION`, `EXTERNAL_SYNTHETIC_TEST_OUTAGE`, `EXTERNAL_SYNTHETIC_TEST_SLOWDOWN`, `HOST_OF_SERVICE_UNAVAILABLE`, `HTTP_CHECK_GLOBAL_OUTAGE`, `HTTP_CHECK_LOCAL_OUTAGE`, `HTTP_CHECK_TEST_LOCATION_SLOWDOWN`, `MOBILE_APPLICATION_ERROR_RATE_INCREASED`, `MOBILE_APPLICATION_SLOWDOWN`, `MOBILE_APPLICATION_UNEXPECTED_HIGH_LOAD`, `MOBILE_APPLICATION_UNEXPECTED_LOW_LOAD`, `MOBILE_APP_CRASH_RATE_INCREASED`, `MONITORING_UNAVAILABLE`, `OSI_DISK_LOW_INODES`, `OSI_GRACEFULLY_SHUTDOWN`, `OSI_HIGH_CPU`, `OSI_HIGH_MEMORY`, `OSI_LOW_DISK_SPACE`, `OSI_NIC_DROPPED_PACKETS_HIGH`, `OSI_NIC_ERRORS_HIGH`, `OSI_NIC_UTILIZATION_HIGH`, `OSI_SLOW_DISK`, `OSI_UNEXPECTEDLY_UNAVAILABLE`, `PGI_OF_SERVICE_UNAVAILABLE`, `PGI_UNAVAILABLE`, `PG_LOW_INSTANCE_COUNT`, `PROCESS_CRASHED`, `PROCESS_HIGH_GC_ACTIVITY`, `PROCESS_MEMORY_RESOURCE_EXHAUSTED`, `PROCESS_NA_HIGH_CONN_FAIL_RATE`, `PROCESS_NA_HIGH_LOSS_RATE`, `PROCESS_THREADS_RESOURCE_EXHAUSTED`, `RDS_HIGH_CPU`, `RDS_HIGH_LATENCY`, `RDS_LOW_MEMORY`, `RDS_LOW_STORAGE_SPACE`, `RDS_OF_SERVICE_UNAVAILABLE`, `RDS_RESTART_SEQUENCE`, `SERVICE_ERROR_RATE_INCREASED`, `SERVICE_SLOWDOWN`, `SERVICE_UNEXPECTED_HIGH_LOAD`, `SERVICE_UNEXPECTED_LOW_LOAD`, `SYNTHETIC_GLOBAL_OUTAGE`, `SYNTHETIC_LOCAL_OUTAGE`, `SYNTHETIC_NODE_OUTAGE`, `SYNTHETIC_PRIVATE_LOCATION_OUTAGE` and `SYNTHETIC_TEST_LOCATION_SLOWDOWN`\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/AlertingProfileEventTypeFilter:AlertingProfileEventTypeFilter": {
            "properties": {
                "customEventFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AlertingProfileEventTypeFilterCustomEventFilter:AlertingProfileEventTypeFilterCustomEventFilter"
                    },
                    "description": "Configuration of a custom event filter. Filters custom events by title or description. If both specified, the AND logic applies\n"
                },
                "predefinedEventFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AlertingProfileEventTypeFilterPredefinedEventFilter:AlertingProfileEventTypeFilterPredefinedEventFilter"
                    },
                    "description": "Configuration of a custom event filter. Filters custom events by title or description. If both specified, the AND logic applies\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AlertingProfileEventTypeFilterCustomEventFilter:AlertingProfileEventTypeFilterCustomEventFilter": {
            "properties": {
                "customDescriptionFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AlertingProfileEventTypeFilterCustomEventFilterCustomDescriptionFilter:AlertingProfileEventTypeFilterCustomEventFilterCustomDescriptionFilter"
                    },
                    "description": "Configuration of a matching filter\n"
                },
                "customTitleFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AlertingProfileEventTypeFilterCustomEventFilterCustomTitleFilter:AlertingProfileEventTypeFilterCustomEventFilterCustomTitleFilter"
                    },
                    "description": "Configuration of a matching filter\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AlertingProfileEventTypeFilterCustomEventFilterCustomDescriptionFilter:AlertingProfileEventTypeFilterCustomEventFilterCustomDescriptionFilter": {
            "properties": {
                "caseInsensitive": {
                    "type": "boolean",
                    "description": "The condition is case sensitive (`false`) or case insensitive (`true`).   If not set, then `false` is used, making the condition case sensitive\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The filter is enabled (`true`) or disabled (`false`)\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Reverses the comparison **operator**. For example it turns the **begins with** into **does not begin with**\n"
                },
                "operator": {
                    "type": "string",
                    "description": "Operator of the comparison.   You can reverse it by setting **negate** to `true`. Possible values are `BEGINS_WITH`, `CONTAINS`, `CONTAINS_REGEX`, `ENDS_WITH` and `EQUALS`\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value to compare to\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/AlertingProfileEventTypeFilterCustomEventFilterCustomTitleFilter:AlertingProfileEventTypeFilterCustomEventFilterCustomTitleFilter": {
            "properties": {
                "caseInsensitive": {
                    "type": "boolean",
                    "description": "The condition is case sensitive (`false`) or case insensitive (`true`).   If not set, then `false` is used, making the condition case sensitive\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The filter is enabled (`true`) or disabled (`false`)\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Reverses the comparison **operator**. For example it turns the **begins with** into **does not begin with**\n"
                },
                "operator": {
                    "type": "string",
                    "description": "Operator of the comparison.   You can reverse it by setting **negate** to `true`. Possible values are `BEGINS_WITH`, `CONTAINS`, `CONTAINS_REGEX`, `ENDS_WITH` and `EQUALS`\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value to compare to\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/AlertingProfileEventTypeFilterPredefinedEventFilter:AlertingProfileEventTypeFilterPredefinedEventFilter": {
            "properties": {
                "eventType": {
                    "type": "string",
                    "description": "The type of the predefined event. Possible values are `APPLICATION_ERROR_RATE_INCREASED`, `APPLICATION_SLOWDOWN`, `APPLICATION_UNEXPECTED_HIGH_LOAD`, `APPLICATION_UNEXPECTED_LOW_LOAD`, `AWS_LAMBDA_HIGH_ERROR_RATE`, `CUSTOM_APPLICATION_ERROR_RATE_INCREASED`, `CUSTOM_APPLICATION_SLOWDOWN`, `CUSTOM_APPLICATION_UNEXPECTED_HIGH_LOAD`, `CUSTOM_APPLICATION_UNEXPECTED_LOW_LOAD`, `CUSTOM_APP_CRASH_RATE_INCREASED`, `DATABASE_CONNECTION_FAILURE`, `DATA_CENTER_SERVICE_PERFORMANCE_DEGRADATION`, `DATA_CENTER_SERVICE_UNAVAILABLE`, `EBS_VOLUME_HIGH_LATENCY`, `EC2_HIGH_CPU`, `ELB_HIGH_BACKEND_ERROR_RATE`, `ENTERPRICE_APPLICATION_PERFORMANCE_DEGRADATION`, `ENTERPRISE_APPLICATION_UNAVAILABLE`, `ESXI_GUEST_ACTIVE_SWAP_WAIT`, `ESXI_GUEST_CPU_LIMIT_REACHED`, `ESXI_HOST_CPU_SATURATION`, `ESXI_HOST_DATASTORE_LOW_DISK_SPACE`, `ESXI_HOST_DISK_QUEUE_SLOW`, `ESXI_HOST_DISK_SLOW`, `ESXI_HOST_MEMORY_SATURATION`, `ESXI_HOST_NETWORK_PROBLEMS`, `ESXI_HOST_OVERLOADED_STORAGE`, `ESXI_VM_IMPACT_HOST_CPU_SATURATION`, `ESXI_VM_IMPACT_HOST_MEMORY_SATURATION`, `EXTERNAL_SYNTHETIC_TEST_OUTAGE`, `EXTERNAL_SYNTHETIC_TEST_SLOWDOWN`, `HOST_OF_SERVICE_UNAVAILABLE`, `HTTP_CHECK_GLOBAL_OUTAGE`, `HTTP_CHECK_LOCAL_OUTAGE`, `HTTP_CHECK_TEST_LOCATION_SLOWDOWN`, `MOBILE_APPLICATION_ERROR_RATE_INCREASED`, `MOBILE_APPLICATION_SLOWDOWN`, `MOBILE_APPLICATION_UNEXPECTED_HIGH_LOAD`, `MOBILE_APPLICATION_UNEXPECTED_LOW_LOAD`, `MOBILE_APP_CRASH_RATE_INCREASED`, `MONITORING_UNAVAILABLE`, `OSI_DISK_LOW_INODES`, `OSI_GRACEFULLY_SHUTDOWN`, `OSI_HIGH_CPU`, `OSI_HIGH_MEMORY`, `OSI_LOW_DISK_SPACE`, `OSI_NIC_DROPPED_PACKETS_HIGH`, `OSI_NIC_ERRORS_HIGH`, `OSI_NIC_UTILIZATION_HIGH`, `OSI_SLOW_DISK`, `OSI_UNEXPECTEDLY_UNAVAILABLE`, `PGI_OF_SERVICE_UNAVAILABLE`, `PGI_UNAVAILABLE`, `PG_LOW_INSTANCE_COUNT`, `PROCESS_CRASHED`, `PROCESS_HIGH_GC_ACTIVITY`, `PROCESS_MEMORY_RESOURCE_EXHAUSTED`, `PROCESS_NA_HIGH_CONN_FAIL_RATE`, `PROCESS_NA_HIGH_LOSS_RATE`, `PROCESS_THREADS_RESOURCE_EXHAUSTED`, `RDS_HIGH_CPU`, `RDS_HIGH_LATENCY`, `RDS_LOW_MEMORY`, `RDS_LOW_STORAGE_SPACE`, `RDS_OF_SERVICE_UNAVAILABLE`, `RDS_RESTART_SEQUENCE`, `SERVICE_ERROR_RATE_INCREASED`, `SERVICE_SLOWDOWN`, `SERVICE_UNEXPECTED_HIGH_LOAD`, `SERVICE_UNEXPECTED_LOW_LOAD`, `SYNTHETIC_GLOBAL_OUTAGE`, `SYNTHETIC_LOCAL_OUTAGE`, `SYNTHETIC_NODE_OUTAGE`, `SYNTHETIC_PRIVATE_LOCATION_OUTAGE` and `SYNTHETIC_TEST_LOCATION_SLOWDOWN`\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Reverses the comparison **operator**. For example it turns the **begins with** into **does not begin with**\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "eventType"
            ]
        },
        "dynatrace:index/AlertingProfileMetadata:AlertingProfileMetadata": {
            "properties": {
                "clusterVersion": {
                    "type": "string",
                    "description": "Dynatrace server version\n"
                },
                "configurationVersions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A Sorted list of the version numbers of the configuration\n"
                },
                "currentConfigurationVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A Sorted list of the version numbers of the configuration\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AlertingProfileRule:AlertingProfileRule": {
            "properties": {
                "delayInMinutes": {
                    "type": "integer",
                    "description": "Send a notification if a problem remains open longer than *X* minutes\n"
                },
                "severityLevel": {
                    "type": "string",
                    "description": "The severity level to trigger the alert. Possible values are `AVAILABILITY`,\t`CUSTOM_ALERT`,\t`ERROR`,`MONITORING_UNAVAILABLE`,`PERFORMANCE` and `RESOURCE_CONTENTION`.\n"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AlertingProfileRuleTagFilter:AlertingProfileRuleTagFilter"
                    },
                    "description": "Configuration of the tag filtering of the alerting profile\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "delayInMinutes",
                "severityLevel",
                "tagFilters"
            ]
        },
        "dynatrace:index/AlertingProfileRuleTagFilter:AlertingProfileRuleTagFilter": {
            "properties": {
                "includeMode": {
                    "type": "string",
                    "description": "The filtering mode:  * `INCLUDE_ANY`: The rule applies to monitored entities that have at least one of the specified tags. You can specify up to 100 tags.  * `INCLUDE_ALL`: The rule applies to monitored entities that have **all** of the specified tags. You can specify up to 10 tags.  * `NONE`: The rule applies to all monitored entities\n"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AlertingProfileRuleTagFilterTagFilter:AlertingProfileRuleTagFilterTagFilter"
                    },
                    "description": "A list of required tags\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "includeMode"
            ]
        },
        "dynatrace:index/AlertingProfileRuleTagFilterTagFilter:AlertingProfileRuleTagFilterTagFilter": {
            "properties": {
                "context": {
                    "type": "string",
                    "description": "The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value\n"
                },
                "key": {
                    "type": "string",
                    "description": "The key of the tag. Custom tags have the tag value here\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value to compare to\n"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/AlertingRules:AlertingRules": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AlertingRulesRule:AlertingRulesRule"
                    },
                    "description": "A conditions for the metric usage\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AlertingRulesRule:AlertingRulesRule": {
            "properties": {
                "delayInMinutes": {
                    "type": "integer",
                    "description": "Send a notification if a problem remains open longer than *X* minutes\n"
                },
                "includeMode": {
                    "type": "string",
                    "description": "The filtering mode:  * `INCLUDE_ANY`: The rule applies to monitored entities that have at least one of the specified tags. You can specify up to 100 tags.  * `INCLUDE_ALL`: The rule applies to monitored entities that have **all** of the specified tags. You can specify up to 10 tags.  * `NONE`: The rule applies to all monitored entities\n"
                },
                "severityLevel": {
                    "type": "string",
                    "description": "The severity level to trigger the alert. Possible values are `AVAILABILITY`,\t`CUSTOM_ALERT`,\t`ERRORS`,`MONITORING_UNAVAILABLE`,`PERFORMANCE` and `RESOURCE_CONTENTION`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Entities which contain any/all of the configured tags will match this alerting profile. It is recommended to use manual tags.\n"
                }
            },
            "type": "object",
            "required": [
                "delayInMinutes",
                "includeMode",
                "severityLevel"
            ]
        },
        "dynatrace:index/ApiDetectionConditions:ApiDetectionConditions": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ApiDetectionConditionsCondition:ApiDetectionConditionsCondition"
                    }
                }
            },
            "type": "object",
            "required": [
                "conditions"
            ]
        },
        "dynatrace:index/ApiDetectionConditionsCondition:ApiDetectionConditionsCondition": {
            "properties": {
                "base": {
                    "type": "string",
                    "description": "Possible Values: `FILE_NAME`, `FQCN`, `PACKAGE`\n"
                },
                "matcher": {
                    "type": "string",
                    "description": "Possible Values: `BEGINS_WITH`, `CONTAINS`\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "base",
                "matcher",
                "pattern"
            ]
        },
        "dynatrace:index/ApplicationAnomaliesFailureRate:ApplicationAnomaliesFailureRate": {
            "properties": {
                "auto": {
                    "$ref": "#/types/dynatrace:index/ApplicationAnomaliesFailureRateAuto:ApplicationAnomaliesFailureRateAuto",
                    "description": "Parameters of failure rate increase auto-detection. Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + **1%** = 2.5%  Relative: 1.5% + 1.5% * **50%** = 2.25%\n"
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/ApplicationAnomaliesFailureRateThresholds:ApplicationAnomaliesFailureRateThresholds",
                    "description": "Fixed thresholds for failure rate increase detection\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ApplicationAnomaliesFailureRateAuto:ApplicationAnomaliesFailureRateAuto": {
            "properties": {
                "absolute": {
                    "type": "integer",
                    "description": "Absolute increase of failing service calls to trigger an alert, %\n"
                },
                "relative": {
                    "type": "integer",
                    "description": "Relative increase of failing service calls to trigger an alert, %\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "absolute",
                "relative"
            ]
        },
        "dynatrace:index/ApplicationAnomaliesFailureRateThresholds:ApplicationAnomaliesFailureRateThresholds": {
            "properties": {
                "sensitivity": {
                    "type": "string",
                    "description": "Sensitivity of the threshold.  With `low` sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With `high` sensitivity, no statistical confidence is used. Each violation triggers alert\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "Failure rate during any 5-minute period to trigger an alert, %\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "sensitivity",
                "threshold"
            ]
        },
        "dynatrace:index/ApplicationAnomaliesResponseTime:ApplicationAnomaliesResponseTime": {
            "properties": {
                "auto": {
                    "$ref": "#/types/dynatrace:index/ApplicationAnomaliesResponseTimeAuto:ApplicationAnomaliesResponseTimeAuto",
                    "description": "Parameters of the response time degradation auto-detection. Violation of **any** criterion triggers an alert\n"
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/ApplicationAnomaliesResponseTimeThresholds:ApplicationAnomaliesResponseTimeThresholds",
                    "description": "Fixed thresholds for response time degradation detection\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ApplicationAnomaliesResponseTimeAuto:ApplicationAnomaliesResponseTimeAuto": {
            "properties": {
                "load": {
                    "type": "string",
                    "description": "Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are `FIFTEEN_REQUESTS_PER_MINUTE`, `FIVE_REQUESTS_PER_MINUTE`, `ONE_REQUEST_PER_MINUTE` and `TEN_REQUESTS_PER_MINUTE`\n"
                },
                "milliseconds": {
                    "type": "integer",
                    "description": "Alert if the response time degrades by more than *X* milliseconds\n"
                },
                "percent": {
                    "type": "integer",
                    "description": "Alert if the response time degrades by more than *X* %\n"
                },
                "slowestMilliseconds": {
                    "type": "integer",
                    "description": "Alert if the response time of the slowest 10% degrades by more than *X* milliseconds\n"
                },
                "slowestPercent": {
                    "type": "integer",
                    "description": "Alert if the response time of the slowest 10% degrades by more than *X* milliseconds\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "load",
                "milliseconds",
                "percent",
                "slowestMilliseconds",
                "slowestPercent"
            ]
        },
        "dynatrace:index/ApplicationAnomaliesResponseTimeThresholds:ApplicationAnomaliesResponseTimeThresholds": {
            "properties": {
                "load": {
                    "type": "string",
                    "description": "Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are `FIFTEEN_REQUESTS_PER_MINUTE`, `FIVE_REQUESTS_PER_MINUTE`, `ONE_REQUEST_PER_MINUTE` and `TEN_REQUESTS_PER_MINUTE`\n"
                },
                "milliseconds": {
                    "type": "integer",
                    "description": "Alert if the response time degrades by more than *X* milliseconds\n"
                },
                "sensitivity": {
                    "type": "string",
                    "description": "Sensitivity of the threshold.  With `low` sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With `high` sensitivity, no statistical confidence is used. Each violation triggers alert\n"
                },
                "slowestMilliseconds": {
                    "type": "integer",
                    "description": "Alert if the response time of the slowest 10% degrades by more than *X* milliseconds\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "load",
                "milliseconds",
                "sensitivity",
                "slowestMilliseconds"
            ]
        },
        "dynatrace:index/ApplicationAnomaliesTraffic:ApplicationAnomaliesTraffic": {
            "properties": {
                "drops": {
                    "$ref": "#/types/dynatrace:index/ApplicationAnomaliesTrafficDrops:ApplicationAnomaliesTrafficDrops",
                    "description": "The configuration of traffic drops detection\n"
                },
                "spikes": {
                    "$ref": "#/types/dynatrace:index/ApplicationAnomaliesTrafficSpikes:ApplicationAnomaliesTrafficSpikes",
                    "description": "The configuration of traffic spikes detection\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ApplicationAnomaliesTrafficDrops:ApplicationAnomaliesTrafficDrops": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "The detection is enabled (`true`) or disabled (`false`)\n"
                },
                "percent": {
                    "type": "integer",
                    "description": "Alert if the response time degrades by more than *X* %\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/ApplicationAnomaliesTrafficSpikes:ApplicationAnomaliesTrafficSpikes": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "The detection is enabled (`true`) or disabled (`false`)\n"
                },
                "percent": {
                    "type": "integer",
                    "description": "Alert if the response time degrades by more than *X* %\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacy:ApplicationDataPrivacySessionReplayDataPrivacy": {
            "properties": {
                "contentMaskingSettings": {
                    "$ref": "#/types/dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettings:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettings",
                    "description": "(Field has overlap with `dynatrace.SessionReplayWebPrivacy`) Content masking settings for Session Replay.\n"
                },
                "optIn": {
                    "type": "boolean"
                },
                "urlExclusionRules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "contentMaskingSettings"
            ]
        },
        "dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettings:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettings": {
            "properties": {
                "playback": {
                    "$ref": "#/types/dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlayback:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlayback",
                    "description": "(Field has overlap with `dynatrace.SessionReplayWebPrivacy`) Configuration of the Session Replay masking during Playback\n"
                },
                "recording": {
                    "$ref": "#/types/dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecording:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecording",
                    "description": "(Field has overlap with `dynatrace.SessionReplayWebPrivacy`) Configuration of the Session Replay masking during Recording\n"
                }
            },
            "type": "object",
            "required": [
                "playback",
                "recording"
            ]
        },
        "dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlayback:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlayback": {
            "properties": {
                "preset": {
                    "type": "string",
                    "description": "The type of the masking:\n"
                },
                "rules": {
                    "$ref": "#/types/dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlaybackRules:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlaybackRules",
                    "description": "A list of masking rules\n"
                }
            },
            "type": "object",
            "required": [
                "preset"
            ]
        },
        "dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlaybackRules:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlaybackRules": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlaybackRulesRule:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlaybackRulesRule"
                    },
                    "description": "The masking rule defining how data is hidden\n"
                }
            },
            "type": "object",
            "required": [
                "rules"
            ]
        },
        "dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlaybackRulesRule:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlaybackRulesRule": {
            "properties": {
                "selector": {
                    "type": "string",
                    "description": "The selector for the element or the attribute to be masked.\n"
                },
                "type": {
                    "type": "string"
                },
                "userInteractionHidden": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "selector",
                "type"
            ]
        },
        "dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecording:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecording": {
            "properties": {
                "preset": {
                    "type": "string",
                    "description": "The type of the masking:\n"
                },
                "rules": {
                    "$ref": "#/types/dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRules:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRules",
                    "description": "A list of masking rules\n"
                }
            },
            "type": "object",
            "required": [
                "preset"
            ]
        },
        "dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRules:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRules": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesRule:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesRule"
                    },
                    "description": "The masking rule defining how data is hidden\n"
                }
            },
            "type": "object",
            "required": [
                "rules"
            ]
        },
        "dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesRule:ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesRule": {
            "properties": {
                "selector": {
                    "type": "string",
                    "description": "The selector for the element or the attribute to be masked.\n"
                },
                "type": {
                    "type": "string"
                },
                "userInteractionHidden": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "selector",
                "type"
            ]
        },
        "dynatrace:index/ApplicationDetectionRuleFilterConfig:ApplicationDetectionRuleFilterConfig": {
            "properties": {
                "applicationMatchTarget": {
                    "type": "string",
                    "description": "Where to look for the pattern value, possible values are `DOMAIN` or `URL`\n"
                },
                "applicationMatchType": {
                    "type": "string",
                    "description": "The operator used for matching the application detection rule, possible values are `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`, `MATCHES`\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The value to look for with the application detection rule\n"
                }
            },
            "type": "object",
            "required": [
                "applicationMatchTarget",
                "applicationMatchType",
                "pattern"
            ]
        },
        "dynatrace:index/ApplicationErrorRulesCustomErrors:ApplicationErrorRulesCustomErrors": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ApplicationErrorRulesCustomErrorsRule:ApplicationErrorRulesCustomErrorsRule"
                    },
                    "description": "Configuration of the custom error in the web application\n"
                }
            },
            "type": "object",
            "required": [
                "rules"
            ]
        },
        "dynatrace:index/ApplicationErrorRulesCustomErrorsRule:ApplicationErrorRulesCustomErrorsRule": {
            "properties": {
                "capture": {
                    "type": "boolean",
                    "description": "Capture (`true`) or ignore (`false`) the error\n"
                },
                "customAlerting": {
                    "type": "boolean",
                    "description": "Include (`true`) or exclude (`false`) the error in Davis AI [problem detection and analysis](https://dt-url.net/a963kd2)\n"
                },
                "impactApdex": {
                    "type": "boolean",
                    "description": "Include (`true`) or exclude (`false`) the error in Apdex calculation\n"
                },
                "keyMatcher": {
                    "type": "string",
                    "description": "The matching operation for the **keyPattern**. Possible values are `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH` and `EQUALS`\n"
                },
                "keyPattern": {
                    "type": "string",
                    "description": "The key of the error to look for\n"
                },
                "valueMatcher": {
                    "type": "string",
                    "description": "The matching operation for the **valuePattern**. Possible values are `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH` and `EQUALS`.\n"
                },
                "valuePattern": {
                    "type": "string",
                    "description": "The value of the error to look for\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ApplicationErrorRulesHttpErrors:ApplicationErrorRulesHttpErrors": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ApplicationErrorRulesHttpErrorsRule:ApplicationErrorRulesHttpErrorsRule"
                    },
                    "description": "Configuration of the HTTP error in the web application\n"
                }
            },
            "type": "object",
            "required": [
                "rules"
            ]
        },
        "dynatrace:index/ApplicationErrorRulesHttpErrorsRule:ApplicationErrorRulesHttpErrorsRule": {
            "properties": {
                "capture": {
                    "type": "boolean",
                    "description": "Capture (`true`) or ignore (`false`) the error\n"
                },
                "considerBlockedRequests": {
                    "type": "boolean",
                    "description": "If `true`, match by errors that have CSP Rule violations\n"
                },
                "considerForAi": {
                    "type": "boolean",
                    "description": "Include (`true`) or exclude (`false`) the error in Davis AI [problem detection and analysis](https://dt-url.net/a963kd2)\n"
                },
                "considerUnknownErrorCode": {
                    "type": "boolean",
                    "description": "If `true`, match by errors that have unknown HTTP status code\n"
                },
                "errorCodes": {
                    "type": "string",
                    "description": "The HTTP status code or status code range to match by.\n"
                },
                "filter": {
                    "type": "string"
                },
                "filterByUrl": {
                    "type": "boolean"
                },
                "impactApdex": {
                    "type": "boolean",
                    "description": "Include (`true`) or exclude (`false`) the error in Apdex calculation\n"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AppsecNotificationAttackCandidateBasedEmailPayload:AppsecNotificationAttackCandidateBasedEmailPayload": {
            "properties": {
                "body": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "body",
                "subject"
            ]
        },
        "dynatrace:index/AppsecNotificationAttackCandidateBasedJiraPayload:AppsecNotificationAttackCandidateBasedJiraPayload": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "summary"
            ]
        },
        "dynatrace:index/AppsecNotificationAttackCandidateBasedWebhookPayload:AppsecNotificationAttackCandidateBasedWebhookPayload": {
            "properties": {
                "payload": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "payload"
            ]
        },
        "dynatrace:index/AppsecNotificationEmailConfiguration:AppsecNotificationEmailConfiguration": {
            "properties": {
                "bccRecipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ccRecipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "recipients"
            ]
        },
        "dynatrace:index/AppsecNotificationJiraConfiguration:AppsecNotificationJiraConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string",
                    "secret": true
                },
                "issueType": {
                    "type": "string"
                },
                "projectKey": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "issueType",
                "projectKey",
                "url",
                "username"
            ]
        },
        "dynatrace:index/AppsecNotificationSecurityProblemBasedEmailPayload:AppsecNotificationSecurityProblemBasedEmailPayload": {
            "properties": {
                "body": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "body",
                "subject"
            ]
        },
        "dynatrace:index/AppsecNotificationSecurityProblemBasedJiraPayload:AppsecNotificationSecurityProblemBasedJiraPayload": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "summary"
            ]
        },
        "dynatrace:index/AppsecNotificationSecurityProblemBasedWebhookPayload:AppsecNotificationSecurityProblemBasedWebhookPayload": {
            "properties": {
                "payload": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "payload"
            ]
        },
        "dynatrace:index/AppsecNotificationWebhookConfiguration:AppsecNotificationWebhookConfiguration": {
            "properties": {
                "acceptAnyCertificate": {
                    "type": "boolean"
                },
                "headers": {
                    "$ref": "#/types/dynatrace:index/AppsecNotificationWebhookConfigurationHeaders:AppsecNotificationWebhookConfigurationHeaders"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "acceptAnyCertificate",
                "url"
            ]
        },
        "dynatrace:index/AppsecNotificationWebhookConfigurationHeaders:AppsecNotificationWebhookConfigurationHeaders": {
            "properties": {
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AppsecNotificationWebhookConfigurationHeadersHeader:AppsecNotificationWebhookConfigurationHeadersHeader"
                    }
                }
            },
            "type": "object",
            "required": [
                "headers"
            ]
        },
        "dynatrace:index/AppsecNotificationWebhookConfigurationHeadersHeader:AppsecNotificationWebhookConfigurationHeadersHeader": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "secret": {
                    "type": "boolean"
                },
                "secretValue": {
                    "type": "string",
                    "secret": true
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "secret"
            ]
        },
        "dynatrace:index/AttackAllowlistAttackHandling:AttackAllowlistAttackHandling": {
            "properties": {
                "blockingStrategy": {
                    "type": "string",
                    "description": "Possible Values: `MONITOR`, `OFF`\n"
                }
            },
            "type": "object",
            "required": [
                "blockingStrategy"
            ]
        },
        "dynatrace:index/AttackAllowlistCriteria:AttackAllowlistCriteria": {
            "properties": {
                "attackPattern": {
                    "type": "string",
                    "description": "Only consider attacks matching the specified pattern.\n"
                },
                "sourceIp": {
                    "type": "string",
                    "description": "Source IP\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AttackAllowlistMetadata:AttackAllowlistMetadata": {
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "comment"
            ]
        },
        "dynatrace:index/AttackRulesAttackHandling:AttackRulesAttackHandling": {
            "properties": {
                "blockingStrategy": {
                    "type": "string",
                    "description": "Possible Values: `BLOCK`, `MONITOR`, `OFF`\n"
                }
            },
            "type": "object",
            "required": [
                "blockingStrategy"
            ]
        },
        "dynatrace:index/AttackRulesCriteria:AttackRulesCriteria": {
            "properties": {
                "attackType": {
                    "type": "string",
                    "description": "Possible Values: `ANY`, `CMD_INJECTION`, `JNDI_INJECTION`, `SQL_INJECTION`, `SSRF`\n"
                },
                "processGroup": {
                    "type": "string",
                    "description": "Process group\n"
                }
            },
            "type": "object",
            "required": [
                "attackType"
            ]
        },
        "dynatrace:index/AttackRulesMetadata:AttackRulesMetadata": {
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "comment"
            ]
        },
        "dynatrace:index/AttackSettingsDefaultAttackHandling:AttackSettingsDefaultAttackHandling": {
            "properties": {
                "blockingStrategyDotNet": {
                    "type": "string",
                    "description": "(v1.290) Possible Values: `BLOCK`, `MONITOR`, `OFF`\n"
                },
                "blockingStrategyJava": {
                    "type": "string",
                    "description": "Possible Values: `BLOCK`, `MONITOR`, `OFF`\n"
                }
            },
            "type": "object",
            "required": [
                "blockingStrategyJava"
            ]
        },
        "dynatrace:index/AutomationBusinessCalendarHolidays:AutomationBusinessCalendarHolidays": {
            "properties": {
                "holidays": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutomationBusinessCalendarHolidaysHoliday:AutomationBusinessCalendarHolidaysHoliday"
                    },
                    "description": "A (unordered) list of holidays valid in this calendar\n"
                }
            },
            "type": "object",
            "required": [
                "holidays"
            ]
        },
        "dynatrace:index/AutomationBusinessCalendarHolidaysHoliday:AutomationBusinessCalendarHolidaysHoliday": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "The date of this holiday: Example `2017-07-04` for July 4th 2017\n"
                },
                "title": {
                    "type": "string",
                    "description": "An official name for this holiday\n"
                }
            },
            "type": "object",
            "required": [
                "date",
                "title"
            ]
        },
        "dynatrace:index/AutomationSchedulingRuleFixedOffset:AutomationSchedulingRuleFixedOffset": {
            "properties": {
                "offset": {
                    "type": "integer",
                    "description": "Every day of the scheduling rule referred to with `rule` will be offset by this amount of days\n"
                },
                "rule": {
                    "type": "string",
                    "description": "Refers to a scheduling rule for which to produce valid days with an offset\n"
                }
            },
            "type": "object",
            "required": [
                "offset",
                "rule"
            ]
        },
        "dynatrace:index/AutomationSchedulingRuleGrouping:AutomationSchedulingRuleGrouping": {
            "properties": {
                "combines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IDs of scheduling rules determining the days the schedule should apply to\n"
                },
                "intersects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IDs of scheduling rules determining the days the schedule is allowed apply to. If specified, only days that are covered by `combine` and `intersect` are valid days for the schedule\n"
                },
                "subtracts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IDs of scheduling rules determing the days the schedule must not apply. If specified it reduces down the set of days covered by `combine` and `intersect`\n"
                }
            },
            "type": "object",
            "required": [
                "combines"
            ]
        },
        "dynatrace:index/AutomationSchedulingRuleRecurrence:AutomationSchedulingRuleRecurrence": {
            "properties": {
                "datestart": {
                    "type": "string",
                    "description": "The recurrence start. Example: `2017-07-04` represents July 4th 2017\n"
                },
                "daysInMonths": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Restricts the recurrence to specific days within a month. `1`, `2`, `3`, ... refers to the first, second, third day in the month. You can also specify negative values to refer to values relative to the last day. `-1` refers to the last day, `-2` refers to the second to the last day, ...\n"
                },
                "daysInYears": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Restricts the recurrence to specific days within a year. `1`, `2`, `3`, ... refers to the first, second, third day of the year. You can also specify negative values to refer to values relative to the last day. `-1` refers to the last day, `-2` refers to the second to the last day, ...\n"
                },
                "easters": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Restricts the recurrence to specific days relative to Easter Sunday. `0` will yield the Easter Sunday itself\n"
                },
                "frequency": {
                    "type": "string",
                    "description": "Possible values are `YEARLY`, `MONTHLY`, `WEEKLY`, `DAILY`, `HOURLY`, `MINUTELY` and `SECONDLY`. Example: `frequency` = `DAILY` and `interval` = `2` schedules for every other day\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "The interval between each iteration. Default: 1. Example: `frequency` = `DAILY` and `interval` = `2` schedules for every other day\n"
                },
                "months": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Restricts the recurrence to specific months. `1` for `January`, `2` for `February`, ..., `12` for `December`\n"
                },
                "weekdays": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Restricts the recurrence to specific week days. Possible values are `MO`, `TU`, `WE`, `TH`, `FR`, `SA` and `SU`\n"
                },
                "weeks": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Restricts the recurrence to specific weeks within a year. `1`, `2`, `3`, ... refers to the first, second, third week of the year. You can also specify negative values to refer to values relative to the last week. `-1` refers to the last week, `-2` refers to the second to the last week, ...\n"
                },
                "workdays": {
                    "type": "string",
                    "description": "Possible values are `WORKING` (Work days), `HOLIDAYS` (Holidays) and `OFF` (Weekends + Holidays)\n"
                }
            },
            "type": "object",
            "required": [
                "datestart",
                "frequency",
                "workdays"
            ]
        },
        "dynatrace:index/AutomationSchedulingRuleRelativeOffset:AutomationSchedulingRuleRelativeOffset": {
            "properties": {
                "direction": {
                    "type": "string"
                },
                "sourceRule": {
                    "type": "string"
                },
                "targetRule": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "direction",
                "sourceRule",
                "targetRule"
            ]
        },
        "dynatrace:index/AutomationWorkflowTasks:AutomationWorkflowTasks": {
            "properties": {
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutomationWorkflowTasksTask:AutomationWorkflowTasksTask"
                    },
                    "description": "TODO: No documentation available\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AutomationWorkflowTasksTask:AutomationWorkflowTasksTask": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Currently known and supported values are `dynatrace.automations:http-function`, `dynatrace.automations:run-javascript` and `dynatrace.automations:execute-dql-query`\n"
                },
                "active": {
                    "type": "boolean",
                    "description": "Specifies whether a task should be skipped as a no operation or not\n"
                },
                "concurrency": {
                    "type": "string",
                    "description": "Required if `with_items` is specified. By default loops execute sequentially with concurrency set to 1. You can increase how often it runs in parallel\n"
                },
                "conditions": {
                    "$ref": "#/types/dynatrace:index/AutomationWorkflowTasksTaskConditions:AutomationWorkflowTasksTaskConditions",
                    "description": "Conditions that have to be met in order to execute that task\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description for this task\n"
                },
                "input": {
                    "type": "string",
                    "description": "Parameters and values for this task as JSON code. Contents depend on the kind of task - determined by the attribute `action`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the task\n"
                },
                "position": {
                    "$ref": "#/types/dynatrace:index/AutomationWorkflowTasksTaskPosition:AutomationWorkflowTasksTaskPosition",
                    "description": "Layouting information about the task tile when visualized. If not specified Dynatrace will position the task tiles automatically\n"
                },
                "retry": {
                    "$ref": "#/types/dynatrace:index/AutomationWorkflowTasksTaskRetry:AutomationWorkflowTasksTaskRetry",
                    "description": "Configure whether to automatically rerun the task on failure. If not specified no retries will be attempted\n"
                },
                "timeout": {
                    "type": "string",
                    "description": "Specifies a default task timeout in seconds. 15 * 60 (15min) is used when not set. Minimum 1. Maximum 604800\n"
                },
                "withItems": {
                    "type": "string",
                    "description": "Iterates over items in a list, allowing actions to be executed repeatedly. Example: Specifying `item in [1, 2, 3]` here will execute the task three times for the numbers 1, 2 and 3 - with the current number available for scripting using the expression `{{ _.item }}`\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "name"
            ]
        },
        "dynatrace:index/AutomationWorkflowTasksTaskConditions:AutomationWorkflowTasksTaskConditions": {
            "properties": {
                "custom": {
                    "type": "string",
                    "description": "A custom condition that needs to be met for the current task to get executed\n"
                },
                "else": {
                    "type": "string",
                    "description": "Possible values are `SKIP` and `STOP`\n"
                },
                "states": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "key/value pairs where the `key` is the name of another task and the value the status it needs to be for the current task to get executed. Possible values are `SUCCESS`, `ERROR`, `ANY`, `OK` (Success or Skipped) and `NOK` (Error or Cancelled)\n"
                }
            },
            "type": "object",
            "required": [
                "states"
            ]
        },
        "dynatrace:index/AutomationWorkflowTasksTaskPosition:AutomationWorkflowTasksTaskPosition": {
            "properties": {
                "x": {
                    "type": "integer",
                    "description": "x-coordinate for layouting\n"
                },
                "y": {
                    "type": "integer",
                    "description": "y-coordinate for layouting\n"
                }
            },
            "type": "object",
            "required": [
                "x",
                "y"
            ]
        },
        "dynatrace:index/AutomationWorkflowTasksTaskRetry:AutomationWorkflowTasksTaskRetry": {
            "properties": {
                "count": {
                    "type": "string",
                    "description": "Specifies a maximum number of times that a task can be repeated in case it fails on execution. You can specify either a number between 1 and 99 here or use an expression (`{{}}`). Default: 1\n"
                },
                "delay": {
                    "type": "string",
                    "description": "Specifies a delay in seconds between subsequent task retries. You can specify either a number between 1 and 3600 here or an expression (`{{...}}`). Default: 1\n"
                },
                "failedLoopIterationsOnly": {
                    "type": "boolean",
                    "description": "Specifies whether retrying the failed iterations or the whole loop. Default: true\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AutomationWorkflowTrigger:AutomationWorkflowTrigger": {
            "properties": {
                "event": {
                    "$ref": "#/types/dynatrace:index/AutomationWorkflowTriggerEvent:AutomationWorkflowTriggerEvent",
                    "description": "If specified the workflow is getting triggered based on events\n"
                },
                "schedule": {
                    "$ref": "#/types/dynatrace:index/AutomationWorkflowTriggerSchedule:AutomationWorkflowTriggerSchedule",
                    "description": "If specified the workflow is getting triggered based on a schedule\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AutomationWorkflowTriggerEvent:AutomationWorkflowTriggerEvent": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Specifies whether a task should be skipped as a no operation or not\n"
                },
                "config": {
                    "$ref": "#/types/dynatrace:index/AutomationWorkflowTriggerEventConfig:AutomationWorkflowTriggerEventConfig",
                    "description": "If specified the workflow is getting triggered based on events\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AutomationWorkflowTriggerEventConfig:AutomationWorkflowTriggerEventConfig": {
            "properties": {
                "davisEvent": {
                    "$ref": "#/types/dynatrace:index/AutomationWorkflowTriggerEventConfigDavisEvent:AutomationWorkflowTriggerEventConfigDavisEvent",
                    "description": "Contains trigger configuration based on Davis Events. Either `davis_event`, `davis_problem`, `davis_event` or `config` need to set\n"
                },
                "davisProblem": {
                    "$ref": "#/types/dynatrace:index/AutomationWorkflowTriggerEventConfigDavisProblem:AutomationWorkflowTriggerEventConfigDavisProblem",
                    "description": "Contains trigger configuration based on Davis Problems. Either `davis_event`, `davis_problem`, `davis_event` or `config` need to set\n"
                },
                "event": {
                    "$ref": "#/types/dynatrace:index/AutomationWorkflowTriggerEventConfigEvent:AutomationWorkflowTriggerEventConfigEvent",
                    "description": "If specified the workflow is getting triggered based on events\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the trigger configuration to expect within attribute `value`. Only required if `config` is set. Must not be set if `davis_event`, `davis_problem` or `event` are present\n"
                },
                "value": {
                    "type": "string",
                    "description": "Contains JSON encoded trigger configuration if the trigger type is neither `davis_event`, `davis_problem` or `event`. It requires the attribute `type` to be set in combination\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AutomationWorkflowTriggerEventConfigDavisEvent:AutomationWorkflowTriggerEventConfigDavisEvent": {
            "properties": {
                "entityTags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "key/value pairs for entity tags to match for. For tags that don't require a value, just specify an empty string as value. Omit this attribute if all entities should match\n"
                },
                "entityTagsMatch": {
                    "type": "string",
                    "description": "Specifies whether all or just any of the configured entity tags need to match. Possible values: `all` and `any`. Omit this attribute if all entities should match\n"
                },
                "onProblemClose": {
                    "type": "boolean",
                    "description": "If set to `true` closing a problem also is considered an event that triggers the execution\n"
                },
                "types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The types of davis events to trigger an execution. Possible values are `CUSTOM_ANNOTATION`, `APPLICATION_UNEXPECTED_HIGH_LOAD`, `APPLICATION_UNEXPECTED_LOW_LOAD`, `APPLICATION_OVERLOAD_PREVENTION`, `APPLICATION_SLOWDOWN`, `AVAILABILITY_EVENT`, `LOG_AVAILABILITY`, `EC2_HIGH_CPU`, `RDS_BACKUP_COMPLETED`, `RDS_BACKUP_STARTED`, `SYNTHETIC_GLOBAL_OUTAGE`, `SYNTHETIC_LOCAL_OUTAGE`, `SYNTHETIC_TEST_LOCATION_SLOWDOWN`, `CUSTOM_CONFIGURATION`, `PROCESS_NA_HIGH_CONN_FAIL_RATE`, `OSI_HIGH_CPU`, `CUSTOM_ALERT`, `CUSTOM_APP_CRASH_RATE_INCREASED`, `CUSTOM_APPLICATION_ERROR_RATE_INCREASED`, `CUSTOM_APPLICATION_UNEXPECTED_HIGH_LOAD`, `CUSTOM_APPLICATION_UNEXPECTED_LOW_LOAD`, `CUSTOM_APPLICATION_OVERLOAD_PREVENTION`, `CUSTOM_APPLICATION_SLOWDOWN`, `PGI_CUSTOM_AVAILABILITY`, `PGI_CUSTOM_ERROR`, `CUSTOM_INFO`, `PGI_CUSTOM_PERFORMANCE`, `CUSTOM_DEPLOYMENT`, `DEPLOYMENT_CHANGED_CHANGE`, `DEPLOYMENT_CHANGED_NEW`, `DEPLOYMENT_CHANGED_REMOVED`, `EBS_VOLUME_HIGH_LATENCY`, `ERROR_EVENT`, `LOG_ERROR`, `ESXI_HOST_CONNECTION_FAILED`, `ESXI_HOST_CONNECTION_LOST`, `ESXI_GUEST_CPU_LIMIT_REACHED`, `ESXI_GUEST_ACTIVE_SWAP_WAIT`, `ESXI_HOST_CPU_SATURATION`, `ESXI_HOST_MEMORY_SATURATION`, `ESXI_HOST_MAINTENANCE`, `ESXI_HOST_NETWORK_PROBLEMS`, `ESXI_HOST_NO_CONNECTION`, `ESXI_HOST_SHUTDOWN`, `ESXI_HOST_DISK_SLOW`, `ESXI_HOST_UP`, `ESXI_HOST_TIMEOUT`, `ESXI_VM_IMPACT_HOST_CPU_SATURATION`, `ESXI_VM_IMPACT_HOST_MEMORY_SATURATION`, `DATABASE_CONNECTION_FAILURE`, `RDS_AZ_FAILOVER_COMPLETED`, `RDS_AZ_FAILOVER_STARTED`, `SERVICE_ERROR_RATE_INCREASED`, `RDS_HIGH_LATENCY`, `OSI_NIC_UTILIZATION_HIGH`, `OSI_NIC_ERRORS_HIGH`, `PGI_HAPROXY_QUEUED_REQUESTS_HIGH`, `PGI_RMQ_HIGH_FILE_DESC_USAGE`, `PGI_RMQ_HIGH_MEM_USAGE`, `PGI_RMQ_HIGH_PROCESS_USAGE`, `PGI_RMQ_HIGH_SOCKETS_USAGE`, `OSI_NIC_DROPPED_PACKETS_HIGH`, `PGI_MYSQL_SLOW_QUERIES_RATE_HIGH`, `PGI_KEYSTONE_SLOW`, `PGI_HAPROXY_SESSION_USAGE_HIGH`, `HOST_LOG_AVAILABILITY`, `HOST_LOG_ERROR`, `OSI_GRACEFULLY_SHUTDOWN`, `HOST_LOG_MATCHED`, `OSI_UNEXPECTEDLY_UNAVAILABLE`, `HOST_LOG_PERFORMANCE`, `HOST_OF_SERVICE_UNAVAILABLE`, `HTTP_CHECK_GLOBAL_OUTAGE`, `HTTP_CHECK_LOCAL_OUTAGE`, `HTTP_CHECK_TEST_LOCATION_SLOWDOWN`, `ESXI_HOST_DISK_QUEUE_SLOW`, `LOG_MATCHED`, `APPLICATION_ERROR_RATE_INCREASED`, `APPLICATION_JS_FRAMEWORK_DETECTED`, `AWS_LAMBDA_HIGH_ERROR_RATE`, `ELB_HIGH_BACKEND_ERROR_RATE`, `ELB_HIGH_FRONTEND_ERROR_RATE`, `ELB_HIGH_UNHEALTHY_HOST_RATE`, `PROCESS_HIGH_GC_ACTIVITY`, `ESXI_HOST_DATASTORE_LOW_DISK_SPACE`, `OSI_DOCKER_DEVICEMAPPER_LOW_DATA_SPACE`, `OSI_LOW_DISK_SPACE`, `OSI_DOCKER_DEVICEMAPPER_LOW_METADATA_SPACE`, `OSI_DISK_LOW_INODES`, `PGI_RMQ_LOW_DISK_SPACE`, `RDS_LOW_STORAGE_SPACE`, `MARKED_FOR_TERMINATION`, `PROCESS_MEMORY_RESOURCE_EXHAUSTED`, `OSI_HIGH_MEMORY`, `MOBILE_APP_CRASH_RATE_INCREASED`, `MOBILE_APPLICATION_ERROR_RATE_INCREASED`, `MOBILE_APPLICATION_OVERLOAD_PREVENTION`, `MOBILE_APPLICATION_SLOWDOWN`, `MOBILE_APPLICATION_UNEXPECTED_HIGH_LOAD`, `MOBILE_APPLICATION_UNEXPECTED_LOW_LOAD`, `MONITORING_UNAVAILABLE`, `PROCESS_NA_HIGH_LOSS_RATE`, `PGI_KEYSTONE_UNHEALTHY`, `ESXI_HOST_OVERLOADED_STORAGE`, `PERFORMANCE_EVENT`, `LOG_PERFORMANCE`, `PGI_LOG_AVAILABILITY`, `PGI_CRASHED_INFO`, `PROCESS_CRASHED`, `PGI_LOG_ERROR`, `PG_LOW_INSTANCE_COUNT`, `PGI_LOG_MATCHED`, `PGI_MEMDUMP`, `PGI_LOG_PERFORMANCE`, `PROCESS_RESTART`, `PGI_UNAVAILABLE`, `RDS_HIGH_CPU`, `RDS_LOW_MEMORY`, `RDS_OF_SERVICE_UNAVAILABLE`, `RESOURCE_CONTENTION_EVENT`, `SERVICE_SLOWDOWN`, `RDS_RESTART`, `RDS_RESTART_SEQUENCE`, `PGI_OF_SERVICE_UNAVAILABLE`, `OSI_SLOW_DISK`, `SYNTHETIC_NODE_OUTAGE`, `SYNTHETIC_PRIVATE_LOCATION_OUTAGE`, `EXTERNAL_SYNTHETIC_TEST_OUTAGE`, `EXTERNAL_SYNTHETIC_TEST_SLOWDOWN`, `PROCESS_THREADS_RESOURCE_EXHAUSTED`, `SERVICE_UNEXPECTED_HIGH_LOAD`, `SERVICE_UNEXPECTED_LOW_LOAD`, `ESXI_VM_DISCONNECTED`, `OPENSTACK_VM_LAUNCH_FAILED`, `ESXI_HOST_VM_MOTION_LEFT`, `ESXI_HOST_VM_MOTION_ARRIVED`, `ESXI_VM_MOTION`, `OPENSTACK_VM_MOTION`, `ESXI_VM_POWER_OFF`, `ESXI_VM_SHUTDOWN`, `OPENSTACK_HOST_VM_SHUTDOWN`, `ESXI_VM_START`, `ESXI_HOST_VM_STARTED`, `OPENSTACK_HOST_VM_STARTED`\n"
                }
            },
            "type": "object",
            "required": [
                "types"
            ]
        },
        "dynatrace:index/AutomationWorkflowTriggerEventConfigDavisProblem:AutomationWorkflowTriggerEventConfigDavisProblem": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutomationWorkflowTriggerEventConfigDavisProblemCategory:AutomationWorkflowTriggerEventConfigDavisProblemCategory"
                    }
                },
                "customFilter": {
                    "type": "string"
                },
                "entityTags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "key/value pairs for entity tags to match for. For tags that don't require a value, just specify an empty string as value. Omit this attribute if all entities should match\n"
                },
                "entityTagsMatch": {
                    "type": "string",
                    "description": "Specifies whether all or just any of the configured entity tags need to match. Possible values: `all` and `any`. Omit this attribute if all entities should match\n"
                },
                "onProblemClose": {
                    "type": "boolean",
                    "description": "If set to `true` closing a problem also is considered an event that triggers the execution\n"
                }
            },
            "type": "object",
            "required": [
                "categories"
            ]
        },
        "dynatrace:index/AutomationWorkflowTriggerEventConfigDavisProblemCategory:AutomationWorkflowTriggerEventConfigDavisProblemCategory": {
            "properties": {
                "availability": {
                    "type": "boolean"
                },
                "custom": {
                    "type": "boolean",
                    "description": "A custom condition that needs to be met for the current task to get executed\n"
                },
                "error": {
                    "type": "boolean"
                },
                "info": {
                    "type": "boolean"
                },
                "monitoringUnavailable": {
                    "type": "boolean"
                },
                "resource": {
                    "type": "boolean"
                },
                "slowdown": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AutomationWorkflowTriggerEventConfigEvent:AutomationWorkflowTriggerEventConfigEvent": {
            "properties": {
                "eventType": {
                    "type": "string",
                    "description": "Possible values: `events` or `bizevents`. Default: `events`\n"
                },
                "query": {
                    "type": "string",
                    "description": "A query based on DQL for events that trigger executions\n"
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "dynatrace:index/AutomationWorkflowTriggerSchedule:AutomationWorkflowTriggerSchedule": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Specifies whether a task should be skipped as a no operation or not\n"
                },
                "filterParameters": {
                    "$ref": "#/types/dynatrace:index/AutomationWorkflowTriggerScheduleFilterParameters:AutomationWorkflowTriggerScheduleFilterParameters",
                    "description": "Advanced restrictions for the schedule to trigger executions\n"
                },
                "rule": {
                    "type": "string",
                    "description": "Refers to a configured rule that determines at which days the schedule should be active. If not specified it implies that the schedule is valid every day\n"
                },
                "timeZone": {
                    "type": "string",
                    "description": "A time zone the scheduled times to align with. If not specified it will be chosen automatically based on the location of the Dynatrace Server\n"
                },
                "trigger": {
                    "$ref": "#/types/dynatrace:index/AutomationWorkflowTriggerScheduleTrigger:AutomationWorkflowTriggerScheduleTrigger",
                    "description": "Detailed configuration about the timing constraints that trigger the execution\n"
                }
            },
            "type": "object",
            "required": [
                "trigger"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "timeZone",
                        "trigger"
                    ]
                }
            }
        },
        "dynatrace:index/AutomationWorkflowTriggerScheduleFilterParameters:AutomationWorkflowTriggerScheduleFilterParameters": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "Specifies a maximum number of times that a task can be repeated in case it fails on execution. You can specify either a number between 1 and 99 here or use an expression (`{{}}`). Default: 1\n"
                },
                "earliestStart": {
                    "type": "string",
                    "description": "If specified, the schedule won't trigger executions before the given date\n"
                },
                "earliestStartTime": {
                    "type": "string",
                    "description": "If specified, the schedule won't trigger executions before the given time\n"
                },
                "excludeDates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "If specified, the schedule won't trigger exeuctions on the given dates\n"
                },
                "includeDates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "If specified, the schedule will trigger executions on the given dates, even if the main configuration prohibits it\n"
                },
                "until": {
                    "type": "string",
                    "description": "If specified, the schedule won't trigger executions after the given date\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AutomationWorkflowTriggerScheduleTrigger:AutomationWorkflowTriggerScheduleTrigger": {
            "properties": {
                "betweenEnd": {
                    "type": "string",
                    "description": "Triggers the schedule every n minutes within a given time frame - specifying the end time on any valid day in 24h format (e.g. 14:22:44). Conflicts with `cron` and `time`. Required with `interval_minutes` and `between_start`\n"
                },
                "betweenStart": {
                    "type": "string",
                    "description": "Triggers the schedule every n minutes within a given time frame - specifying the start time on any valid day in 24h format (e.g. 13:22:44). Conflicts with `cron` and `time`. Required with `interval_minutes` and `between_end`\n"
                },
                "cron": {
                    "type": "string",
                    "description": "Configures using cron syntax. Conflicts with `time`, `interval_minutes`, `between_start` and `between_end`\n"
                },
                "intervalMinutes": {
                    "type": "integer",
                    "description": "Triggers the schedule every n minutes within a given time frame. Minimum: 1, Maximum: 720. Required with `between_start` and `between_end`. Conflicts with `cron` and `time`\n"
                },
                "time": {
                    "type": "string",
                    "description": "Specifies a fixed time the schedule will trigger at in 24h format (e.g. `14:23:59`). Conflicts with `cron`, `interval_minutes`, `between_start` and `between_end`\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AutotagEntitySelectorBasedRule:AutotagEntitySelectorBasedRule": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "normalization": {
                    "type": "string"
                },
                "selector": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "valueFormat": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AutotagRule:AutotagRule": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleCondition:AutotagRuleCondition"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "normalization": {
                    "type": "string"
                },
                "propagationTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "valueFormat": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/AutotagRuleCondition:AutotagRuleCondition": {
            "properties": {
                "applicationTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionApplicationTypeComparison:AutotagRuleConditionApplicationTypeComparison"
                    },
                    "deprecationMessage": "You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "applicationTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionApplicationType:AutotagRuleConditionApplicationType"
                    }
                },
                "azureComputeModeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionAzureComputeModeComparison:AutotagRuleConditionAzureComputeModeComparison"
                    }
                },
                "azureComputeModes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionAzureComputeMode:AutotagRuleConditionAzureComputeMode"
                    },
                    "deprecationMessage": "You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility."
                },
                "azureSkuComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionAzureSkuComparision:AutotagRuleConditionAzureSkuComparision"
                    },
                    "deprecationMessage": "You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility."
                },
                "azureSkus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionAzureSkus:AutotagRuleConditionAzureSkus"
                    }
                },
                "baseComparisonBasics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionBaseComparisonBasic:AutotagRuleConditionBaseComparisonBasic"
                    },
                    "deprecationMessage": "You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility."
                },
                "baseConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionBaseConditionKey:AutotagRuleConditionBaseConditionKey"
                    },
                    "deprecationMessage": "'base_condition_key' is deprecated. You should use 'key'"
                },
                "bitnessComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionBitnessComparision:AutotagRuleConditionBitnessComparision"
                    },
                    "deprecationMessage": "You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility."
                },
                "bitnesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionBitness:AutotagRuleConditionBitness"
                    }
                },
                "cloudTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionCloudTypeComparison:AutotagRuleConditionCloudTypeComparison"
                    },
                    "deprecationMessage": "You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "cloudTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionCloudType:AutotagRuleConditionCloudType"
                    }
                },
                "comparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionComparison:AutotagRuleConditionComparison"
                    }
                },
                "customApplicationTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionCustomApplicationTypeComparison:AutotagRuleConditionCustomApplicationTypeComparison"
                    },
                    "deprecationMessage": "You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "customApplicationTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionCustomApplicationType:AutotagRuleConditionCustomApplicationType"
                    }
                },
                "customHostMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionCustomHostMetadataConditionKey:AutotagRuleConditionCustomHostMetadataConditionKey"
                    },
                    "deprecationMessage": "'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'"
                },
                "customHostMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionCustomHostMetadata:AutotagRuleConditionCustomHostMetadata"
                    }
                },
                "customProcessMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionCustomProcessMetadataConditionKey:AutotagRuleConditionCustomProcessMetadataConditionKey"
                    },
                    "deprecationMessage": "'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'"
                },
                "customProcessMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionCustomProcessMetadata:AutotagRuleConditionCustomProcessMetadata"
                    }
                },
                "databaseTopologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionDatabaseTopology:AutotagRuleConditionDatabaseTopology"
                    }
                },
                "databaseTopologyComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionDatabaseTopologyComparison:AutotagRuleConditionDatabaseTopologyComparison"
                    },
                    "deprecationMessage": "You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility."
                },
                "dcrumDecoderComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionDcrumDecoderComparison:AutotagRuleConditionDcrumDecoderComparison"
                    },
                    "deprecationMessage": "You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility."
                },
                "dcrumDecoders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionDcrumDecoder:AutotagRuleConditionDcrumDecoder"
                    }
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionEntity:AutotagRuleConditionEntity"
                    }
                },
                "entityIdComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionEntityIdComparison:AutotagRuleConditionEntityIdComparison"
                    },
                    "deprecationMessage": "You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility."
                },
                "hostTeches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionHostTech:AutotagRuleConditionHostTech"
                    }
                },
                "hypervisorTypeComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionHypervisorTypeComparision:AutotagRuleConditionHypervisorTypeComparision"
                    },
                    "deprecationMessage": "`hypervisor_type_comparision` is deprecated. Use `hypervisor` instead"
                },
                "hypervisors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionHypervisor:AutotagRuleConditionHypervisor"
                    }
                },
                "indexedNameComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionIndexedNameComparison:AutotagRuleConditionIndexedNameComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility."
                },
                "indexedNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionIndexedName:AutotagRuleConditionIndexedName"
                    }
                },
                "indexedStringComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionIndexedStringComparison:AutotagRuleConditionIndexedStringComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility."
                },
                "indexedStrings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionIndexedString:AutotagRuleConditionIndexedString"
                    }
                },
                "indexedTagComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionIndexedTagComparison:AutotagRuleConditionIndexedTagComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility."
                },
                "indexedTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionIndexedTag:AutotagRuleConditionIndexedTag"
                    }
                },
                "integerComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionIntegerComparison:AutotagRuleConditionIntegerComparison"
                    },
                    "deprecationMessage": "You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility."
                },
                "integers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionInteger:AutotagRuleConditionInteger"
                    }
                },
                "ipaddressComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionIpaddressComparison:AutotagRuleConditionIpaddressComparison"
                    },
                    "deprecationMessage": "You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility."
                },
                "ipaddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionIpaddress:AutotagRuleConditionIpaddress"
                    }
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionKey:AutotagRuleConditionKey"
                    }
                },
                "mobilePlatformComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionMobilePlatformComparison:AutotagRuleConditionMobilePlatformComparison"
                    },
                    "deprecationMessage": "You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility."
                },
                "mobilePlatforms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionMobilePlatform:AutotagRuleConditionMobilePlatform"
                    }
                },
                "osArches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionOsArch:AutotagRuleConditionOsArch"
                    }
                },
                "osTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionOsType:AutotagRuleConditionOsType"
                    }
                },
                "osarchitectureComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionOsarchitectureComparison:AutotagRuleConditionOsarchitectureComparison"
                    },
                    "deprecationMessage": "You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility."
                },
                "ostypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionOstypeComparison:AutotagRuleConditionOstypeComparison"
                    },
                    "deprecationMessage": "You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility."
                },
                "paasTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionPaasTypeComparison:AutotagRuleConditionPaasTypeComparison"
                    },
                    "deprecationMessage": "You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "paasTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionPaasType:AutotagRuleConditionPaasType"
                    }
                },
                "processMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionProcessMetadataConditionKey:AutotagRuleConditionProcessMetadataConditionKey"
                    },
                    "deprecationMessage": "'process_metadata_condition_key' is deprecated. You should use 'process_metadata'"
                },
                "processMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionProcessMetadata:AutotagRuleConditionProcessMetadata"
                    }
                },
                "serviceTopologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionServiceTopology:AutotagRuleConditionServiceTopology"
                    }
                },
                "serviceTopologyComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionServiceTopologyComparison:AutotagRuleConditionServiceTopologyComparison"
                    },
                    "deprecationMessage": "You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility."
                },
                "serviceTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionServiceTypeComparison:AutotagRuleConditionServiceTypeComparison"
                    },
                    "deprecationMessage": "You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "serviceTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionServiceType:AutotagRuleConditionServiceType"
                    }
                },
                "simpleHostTechComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionSimpleHostTechComparison:AutotagRuleConditionSimpleHostTechComparison"
                    },
                    "deprecationMessage": "You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility."
                },
                "simpleTechComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionSimpleTechComparison:AutotagRuleConditionSimpleTechComparison"
                    },
                    "deprecationMessage": "You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility."
                },
                "stringComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionStringComparison:AutotagRuleConditionStringComparison"
                    },
                    "deprecationMessage": "You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility."
                },
                "stringConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionStringConditionKey:AutotagRuleConditionStringConditionKey"
                    },
                    "deprecationMessage": "'string_condition_key' is deprecated. You should use 'string_key'"
                },
                "stringKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionStringKey:AutotagRuleConditionStringKey"
                    }
                },
                "strings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionString:AutotagRuleConditionString"
                    }
                },
                "syntheticEngineTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionSyntheticEngineTypeComparison:AutotagRuleConditionSyntheticEngineTypeComparison"
                    },
                    "deprecationMessage": "You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "syntheticEngines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionSyntheticEngine:AutotagRuleConditionSyntheticEngine"
                    }
                },
                "tagComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionTagComparison:AutotagRuleConditionTagComparison"
                    },
                    "deprecationMessage": "You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionTag:AutotagRuleConditionTag"
                    }
                },
                "teches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRuleConditionTech:AutotagRuleConditionTech"
                    }
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AutotagRuleConditionApplicationType:AutotagRuleConditionApplicationType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionApplicationTypeComparison:AutotagRuleConditionApplicationTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionAzureComputeMode:AutotagRuleConditionAzureComputeMode": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionAzureComputeModeComparison:AutotagRuleConditionAzureComputeModeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionAzureSkuComparision:AutotagRuleConditionAzureSkuComparision": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionAzureSkus:AutotagRuleConditionAzureSkus": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionBaseComparisonBasic:AutotagRuleConditionBaseComparisonBasic": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/AutotagRuleConditionBaseConditionKey:AutotagRuleConditionBaseConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ]
        },
        "dynatrace:index/AutotagRuleConditionBitness:AutotagRuleConditionBitness": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionBitnessComparision:AutotagRuleConditionBitnessComparision": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionCloudType:AutotagRuleConditionCloudType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionCloudTypeComparison:AutotagRuleConditionCloudTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionComparison:AutotagRuleConditionComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/AutotagRuleConditionCustomApplicationType:AutotagRuleConditionCustomApplicationType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionCustomApplicationTypeComparison:AutotagRuleConditionCustomApplicationTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionCustomHostMetadata:AutotagRuleConditionCustomHostMetadata": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/AutotagRuleConditionCustomHostMetadataDynamicKey:AutotagRuleConditionCustomHostMetadataDynamicKey"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/AutotagRuleConditionCustomHostMetadataConditionKey:AutotagRuleConditionCustomHostMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/AutotagRuleConditionCustomHostMetadataConditionKeyDynamicKey:AutotagRuleConditionCustomHostMetadataConditionKeyDynamicKey"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/AutotagRuleConditionCustomHostMetadataConditionKeyDynamicKey:AutotagRuleConditionCustomHostMetadataConditionKeyDynamicKey": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/AutotagRuleConditionCustomHostMetadataDynamicKey:AutotagRuleConditionCustomHostMetadataDynamicKey": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/AutotagRuleConditionCustomProcessMetadata:AutotagRuleConditionCustomProcessMetadata": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/AutotagRuleConditionCustomProcessMetadataDynamicKey:AutotagRuleConditionCustomProcessMetadataDynamicKey"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/AutotagRuleConditionCustomProcessMetadataConditionKey:AutotagRuleConditionCustomProcessMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/AutotagRuleConditionCustomProcessMetadataConditionKeyDynamicKey:AutotagRuleConditionCustomProcessMetadataConditionKeyDynamicKey"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/AutotagRuleConditionCustomProcessMetadataConditionKeyDynamicKey:AutotagRuleConditionCustomProcessMetadataConditionKeyDynamicKey": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/AutotagRuleConditionCustomProcessMetadataDynamicKey:AutotagRuleConditionCustomProcessMetadataDynamicKey": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/AutotagRuleConditionDatabaseTopology:AutotagRuleConditionDatabaseTopology": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionDatabaseTopologyComparison:AutotagRuleConditionDatabaseTopologyComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionDcrumDecoder:AutotagRuleConditionDcrumDecoder": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionDcrumDecoderComparison:AutotagRuleConditionDcrumDecoderComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionEntity:AutotagRuleConditionEntity": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionEntityIdComparison:AutotagRuleConditionEntityIdComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionHostTech:AutotagRuleConditionHostTech": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/AutotagRuleConditionHostTechValue:AutotagRuleConditionHostTechValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionHostTechValue:AutotagRuleConditionHostTechValue": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "verbatimType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AutotagRuleConditionHypervisor:AutotagRuleConditionHypervisor": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionHypervisorTypeComparision:AutotagRuleConditionHypervisorTypeComparision": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionIndexedName:AutotagRuleConditionIndexedName": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionIndexedNameComparison:AutotagRuleConditionIndexedNameComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionIndexedString:AutotagRuleConditionIndexedString": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionIndexedStringComparison:AutotagRuleConditionIndexedStringComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionIndexedTag:AutotagRuleConditionIndexedTag": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/AutotagRuleConditionIndexedTagValue:AutotagRuleConditionIndexedTagValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionIndexedTagComparison:AutotagRuleConditionIndexedTagComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/AutotagRuleConditionIndexedTagComparisonValue:AutotagRuleConditionIndexedTagComparisonValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionIndexedTagComparisonValue:AutotagRuleConditionIndexedTagComparisonValue": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/AutotagRuleConditionIndexedTagValue:AutotagRuleConditionIndexedTagValue": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/AutotagRuleConditionInteger:AutotagRuleConditionInteger": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionIntegerComparison:AutotagRuleConditionIntegerComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionIpaddress:AutotagRuleConditionIpaddress": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionIpaddressComparison:AutotagRuleConditionIpaddressComparison": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionKey:AutotagRuleConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ]
        },
        "dynatrace:index/AutotagRuleConditionMobilePlatform:AutotagRuleConditionMobilePlatform": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionMobilePlatformComparison:AutotagRuleConditionMobilePlatformComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionOsArch:AutotagRuleConditionOsArch": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionOsType:AutotagRuleConditionOsType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionOsarchitectureComparison:AutotagRuleConditionOsarchitectureComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionOstypeComparison:AutotagRuleConditionOstypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionPaasType:AutotagRuleConditionPaasType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionPaasTypeComparison:AutotagRuleConditionPaasTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionProcessMetadata:AutotagRuleConditionProcessMetadata": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/AutotagRuleConditionProcessMetadataConditionKey:AutotagRuleConditionProcessMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/AutotagRuleConditionServiceTopology:AutotagRuleConditionServiceTopology": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionServiceTopologyComparison:AutotagRuleConditionServiceTopologyComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionServiceType:AutotagRuleConditionServiceType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionServiceTypeComparison:AutotagRuleConditionServiceTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionSimpleHostTechComparison:AutotagRuleConditionSimpleHostTechComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/AutotagRuleConditionSimpleHostTechComparisonValue:AutotagRuleConditionSimpleHostTechComparisonValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionSimpleHostTechComparisonValue:AutotagRuleConditionSimpleHostTechComparisonValue": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "verbatimType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AutotagRuleConditionSimpleTechComparison:AutotagRuleConditionSimpleTechComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/AutotagRuleConditionSimpleTechComparisonValue:AutotagRuleConditionSimpleTechComparisonValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionSimpleTechComparisonValue:AutotagRuleConditionSimpleTechComparisonValue": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "verbatimType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AutotagRuleConditionString:AutotagRuleConditionString": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionStringComparison:AutotagRuleConditionStringComparison": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionStringConditionKey:AutotagRuleConditionStringConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/AutotagRuleConditionStringKey:AutotagRuleConditionStringKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/AutotagRuleConditionSyntheticEngine:AutotagRuleConditionSyntheticEngine": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionSyntheticEngineTypeComparison:AutotagRuleConditionSyntheticEngineTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionTag:AutotagRuleConditionTag": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/AutotagRuleConditionTagValue:AutotagRuleConditionTagValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionTagComparison:AutotagRuleConditionTagComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/AutotagRuleConditionTagComparisonValue:AutotagRuleConditionTagComparisonValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionTagComparisonValue:AutotagRuleConditionTagComparisonValue": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/AutotagRuleConditionTagValue:AutotagRuleConditionTagValue": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/AutotagRuleConditionTech:AutotagRuleConditionTech": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/AutotagRuleConditionTechValue:AutotagRuleConditionTechValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/AutotagRuleConditionTechValue:AutotagRuleConditionTechValue": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "verbatimType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AutotagRulesRules:AutotagRulesRules": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRulesRulesRule:AutotagRulesRulesRule"
                    }
                }
            },
            "type": "object",
            "required": [
                "rules"
            ]
        },
        "dynatrace:index/AutotagRulesRulesRule:AutotagRulesRulesRule": {
            "properties": {
                "attributeRule": {
                    "$ref": "#/types/dynatrace:index/AutotagRulesRulesRuleAttributeRule:AutotagRulesRulesRuleAttributeRule",
                    "description": "no documentation available\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "entitySelector": {
                    "type": "string",
                    "description": "The documentation of the entity selector can be found [here](https://dt-url.net/apientityselector).\n"
                },
                "type": {
                    "type": "string",
                    "description": "Possible Values: `ME`, `SELECTOR`\n"
                },
                "valueFormat": {
                    "type": "string",
                    "description": "Type '{' for placeholder suggestions\n"
                },
                "valueNormalization": {
                    "type": "string",
                    "description": "Possible Values: `Leavetextas_is`, `Tolowercase`, `Touppercase`\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "type",
                "valueNormalization"
            ]
        },
        "dynatrace:index/AutotagRulesRulesRuleAttributeRule:AutotagRulesRulesRuleAttributeRule": {
            "properties": {
                "azureToPgpropagation": {
                    "type": "boolean",
                    "description": "Apply to process groups connected to matching Azure entities\n"
                },
                "azureToServicePropagation": {
                    "type": "boolean",
                    "description": "Apply to services provided by matching Azure entities\n"
                },
                "conditions": {
                    "$ref": "#/types/dynatrace:index/AutotagRulesRulesRuleAttributeRuleConditions:AutotagRulesRulesRuleAttributeRuleConditions",
                    "description": "no documentation available\n"
                },
                "entityType": {
                    "type": "string",
                    "description": "Possible Values: `APPLICATION`, `AWS_APPLICATION_LOAD_BALANCER`, `AWS_CLASSIC_LOAD_BALANCER`, `AWS_NETWORK_LOAD_BALANCER`, `AWS_RELATIONAL_DATABASE_SERVICE`, `AZURE`, `CUSTOM_APPLICATION`, `CUSTOM_DEVICE`, `DCRUM_APPLICATION`, `ESXI_HOST`, `EXTERNAL_SYNTHETIC_TEST`, `HOST`, `HTTP_CHECK`, `MOBILE_APPLICATION`, `PROCESS_GROUP`, `SERVICE`, `SYNTHETIC_TEST`\n"
                },
                "hostToPgpropagation": {
                    "type": "boolean",
                    "description": "Apply to processes running on matching hosts\n"
                },
                "pgToHostPropagation": {
                    "type": "boolean",
                    "description": "Apply to underlying hosts of matching process groups\n"
                },
                "pgToServicePropagation": {
                    "type": "boolean",
                    "description": "Apply to all services provided by the process groups\n"
                },
                "serviceToHostPropagation": {
                    "type": "boolean",
                    "description": "Apply to underlying hosts of matching services\n"
                },
                "serviceToPgpropagation": {
                    "type": "boolean",
                    "description": "Apply to underlying process groups of matching services\n"
                }
            },
            "type": "object",
            "required": [
                "conditions",
                "entityType"
            ]
        },
        "dynatrace:index/AutotagRulesRulesRuleAttributeRuleConditions:AutotagRulesRulesRuleAttributeRuleConditions": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRulesRulesRuleAttributeRuleConditionsCondition:AutotagRulesRulesRuleAttributeRuleConditionsCondition"
                    }
                }
            },
            "type": "object",
            "required": [
                "conditions"
            ]
        },
        "dynatrace:index/AutotagRulesRulesRuleAttributeRuleConditionsCondition:AutotagRulesRulesRuleAttributeRuleConditionsCondition": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "description": "Case sensitive\n"
                },
                "dynamicKey": {
                    "type": "string",
                    "description": "Dynamic key\n"
                },
                "dynamicKeySource": {
                    "type": "string",
                    "description": "Key source\n"
                },
                "entityId": {
                    "type": "string",
                    "description": "Value\n"
                },
                "enumValue": {
                    "type": "string",
                    "description": "Value\n"
                },
                "integerValue": {
                    "type": "integer",
                    "description": "Value\n"
                },
                "key": {
                    "type": "string",
                    "description": "Possible Values: `APPMON_SERVER_NAME`, `APPMON_SYSTEM_PROFILE_NAME`, `AWS_ACCOUNT_ID`, `AWS_ACCOUNT_NAME`, `AWS_APPLICATION_LOAD_BALANCER_NAME`, `AWS_APPLICATION_LOAD_BALANCER_TAGS`, `AWS_AUTO_SCALING_GROUP_NAME`, `AWS_AUTO_SCALING_GROUP_TAGS`, `AWS_AVAILABILITY_ZONE_NAME`, `AWS_CLASSIC_LOAD_BALANCER_FRONTEND_PORTS`, `AWS_CLASSIC_LOAD_BALANCER_NAME`, `AWS_CLASSIC_LOAD_BALANCER_TAGS`, `AWS_NETWORK_LOAD_BALANCER_NAME`, `AWS_NETWORK_LOAD_BALANCER_TAGS`, `AWS_RELATIONAL_DATABASE_SERVICE_DB_NAME`, `AWS_RELATIONAL_DATABASE_SERVICE_ENDPOINT`, `AWS_RELATIONAL_DATABASE_SERVICE_ENGINE`, `AWS_RELATIONAL_DATABASE_SERVICE_INSTANCE_CLASS`, `AWS_RELATIONAL_DATABASE_SERVICE_NAME`, `AWS_RELATIONAL_DATABASE_SERVICE_PORT`, `AWS_RELATIONAL_DATABASE_SERVICE_TAGS`, `AZURE_ENTITY_NAME`, `AZURE_ENTITY_TAGS`, `AZURE_MGMT_GROUP_NAME`, `AZURE_MGMT_GROUP_UUID`, `AZURE_REGION_NAME`, `AZURE_SCALE_SET_NAME`, `AZURE_SUBSCRIPTION_NAME`, `AZURE_SUBSCRIPTION_UUID`, `AZURE_TENANT_NAME`, `AZURE_TENANT_UUID`, `AZURE_VM_NAME`, `BROWSER_MONITOR_NAME`, `BROWSER_MONITOR_TAGS`, `CLOUD_APPLICATION_LABELS`, `CLOUD_APPLICATION_NAME`, `CLOUD_APPLICATION_NAMESPACE_LABELS`, `CLOUD_APPLICATION_NAMESPACE_NAME`, `CLOUD_FOUNDRY_FOUNDATION_NAME`, `CLOUD_FOUNDRY_ORG_NAME`, `CUSTOM_APPLICATION_NAME`, `CUSTOM_APPLICATION_PLATFORM`, `CUSTOM_APPLICATION_TAGS`, `CUSTOM_APPLICATION_TYPE`, `CUSTOM_DEVICE_DNS_ADDRESS`, `CUSTOM_DEVICE_GROUP_NAME`, `CUSTOM_DEVICE_GROUP_TAGS`, `CUSTOM_DEVICE_IP_ADDRESS`, `CUSTOM_DEVICE_METADATA`, `CUSTOM_DEVICE_NAME`, `CUSTOM_DEVICE_PORT`, `CUSTOM_DEVICE_TAGS`, `CUSTOM_DEVICE_TECHNOLOGY`, `DATA_CENTER_SERVICE_DECODER_TYPE`, `DATA_CENTER_SERVICE_IP_ADDRESS`, `DATA_CENTER_SERVICE_METADATA`, `DATA_CENTER_SERVICE_NAME`, `DATA_CENTER_SERVICE_PORT`, `DATA_CENTER_SERVICE_TAGS`, `DOCKER_CONTAINER_NAME`, `DOCKER_FULL_IMAGE_NAME`, `DOCKER_IMAGE_VERSION`, `EC2_INSTANCE_AMI_ID`, `EC2_INSTANCE_AWS_INSTANCE_TYPE`, `EC2_INSTANCE_AWS_SECURITY_GROUP`, `EC2_INSTANCE_BEANSTALK_ENV_NAME`, `EC2_INSTANCE_ID`, `EC2_INSTANCE_NAME`, `EC2_INSTANCE_PRIVATE_HOST_NAME`, `EC2_INSTANCE_PUBLIC_HOST_NAME`, `EC2_INSTANCE_TAGS`, `ENTERPRISE_APPLICATION_DECODER_TYPE`, `ENTERPRISE_APPLICATION_IP_ADDRESS`, `ENTERPRISE_APPLICATION_METADATA`, `ENTERPRISE_APPLICATION_NAME`, `ENTERPRISE_APPLICATION_PORT`, `ENTERPRISE_APPLICATION_TAGS`, `ESXI_HOST_CLUSTER_NAME`, `ESXI_HOST_HARDWARE_MODEL`, `ESXI_HOST_HARDWARE_VENDOR`, `ESXI_HOST_NAME`, `ESXI_HOST_PRODUCT_NAME`, `ESXI_HOST_PRODUCT_VERSION`, `ESXI_HOST_TAGS`, `EXTERNAL_MONITOR_ENGINE_DESCRIPTION`, `EXTERNAL_MONITOR_ENGINE_NAME`, `EXTERNAL_MONITOR_ENGINE_TYPE`, `EXTERNAL_MONITOR_NAME`, `EXTERNAL_MONITOR_TAGS`, `GEOLOCATION_SITE_NAME`, `GOOGLE_CLOUD_PLATFORM_ZONE_NAME`, `GOOGLE_COMPUTE_INSTANCE_ID`, `GOOGLE_COMPUTE_INSTANCE_MACHINE_TYPE`, `GOOGLE_COMPUTE_INSTANCE_NAME`, `GOOGLE_COMPUTE_INSTANCE_PROJECT`, `GOOGLE_COMPUTE_INSTANCE_PROJECT_ID`, `GOOGLE_COMPUTE_INSTANCE_PUBLIC_IP_ADDRESSES`, `HOST_AIX_LOGICAL_CPU_COUNT`, `HOST_AIX_SIMULTANEOUS_THREADS`, `HOST_AIX_VIRTUAL_CPU_COUNT`, `HOST_ARCHITECTURE`, `HOST_AWS_NAME_TAG`, `HOST_AZURE_COMPUTE_MODE`, `HOST_AZURE_SKU`, `HOST_AZURE_WEB_APPLICATION_HOST_NAMES`, `HOST_AZURE_WEB_APPLICATION_SITE_NAMES`, `HOST_BITNESS`, `HOST_BOSH_AVAILABILITY_ZONE`, `HOST_BOSH_DEPLOYMENT_ID`, `HOST_BOSH_INSTANCE_ID`, `HOST_BOSH_INSTANCE_NAME`, `HOST_BOSH_NAME`, `HOST_BOSH_STEMCELL_VERSION`, `HOST_CLOUD_TYPE`, `HOST_CPU_CORES`, `HOST_CUSTOM_METADATA`, `HOST_DETECTED_NAME`, `HOST_GROUP_ID`, `HOST_GROUP_NAME`, `HOST_HYPERVISOR_TYPE`, `HOST_IP_ADDRESS`, `HOST_KUBERNETES_LABELS`, `HOST_LOGICAL_CPU_CORES`, `HOST_NAME`, `HOST_ONEAGENT_CUSTOM_HOST_NAME`, `HOST_OS_TYPE`, `HOST_OS_VERSION`, `HOST_PAAS_MEMORY_LIMIT`, `HOST_PAAS_TYPE`, `HOST_TAGS`, `HOST_TECHNOLOGY`, `HTTP_MONITOR_NAME`, `HTTP_MONITOR_TAGS`, `KUBERNETES_CLUSTER_NAME`, `KUBERNETES_NODE_NAME`, `KUBERNETES_SERVICE_NAME`, `MOBILE_APPLICATION_NAME`, `MOBILE_APPLICATION_PLATFORM`, `MOBILE_APPLICATION_TAGS`, `NAME_OF_COMPUTE_NODE`, `OPENSTACK_ACCOUNT_NAME`, `OPENSTACK_ACCOUNT_PROJECT_NAME`, `OPENSTACK_AVAILABILITY_ZONE_NAME`, `OPENSTACK_PROJECT_NAME`, `OPENSTACK_REGION_NAME`, `OPENSTACK_VM_INSTANCE_TYPE`, `OPENSTACK_VM_NAME`, `OPENSTACK_VM_SECURITY_GROUP`, `PROCESS_GROUP_AZURE_HOST_NAME`, `PROCESS_GROUP_AZURE_SITE_NAME`, `PROCESS_GROUP_CUSTOM_METADATA`, `PROCESS_GROUP_DETECTED_NAME`, `PROCESS_GROUP_ID`, `PROCESS_GROUP_LISTEN_PORT`, `PROCESS_GROUP_NAME`, `PROCESS_GROUP_PREDEFINED_METADATA`, `PROCESS_GROUP_TAGS`, `PROCESS_GROUP_TECHNOLOGY`, `PROCESS_GROUP_TECHNOLOGY_EDITION`, `PROCESS_GROUP_TECHNOLOGY_VERSION`, `QUEUE_NAME`, `QUEUE_TECHNOLOGY`, `QUEUE_VENDOR`, `SERVICE_AKKA_ACTOR_SYSTEM`, `SERVICE_CTG_SERVICE_NAME`, `SERVICE_DATABASE_HOST_NAME`, `SERVICE_DATABASE_NAME`, `SERVICE_DATABASE_TOPOLOGY`, `SERVICE_DATABASE_VENDOR`, `SERVICE_DETECTED_NAME`, `SERVICE_ESB_APPLICATION_NAME`, `SERVICE_IBM_CTG_GATEWAY_URL`, `SERVICE_MESSAGING_LISTENER_CLASS_NAME`, `SERVICE_NAME`, `SERVICE_PORT`, `SERVICE_PUBLIC_DOMAIN_NAME`, `SERVICE_REMOTE_ENDPOINT`, `SERVICE_REMOTE_SERVICE_NAME`, `SERVICE_TAGS`, `SERVICE_TECHNOLOGY`, `SERVICE_TECHNOLOGY_EDITION`, `SERVICE_TECHNOLOGY_VERSION`, `SERVICE_TOPOLOGY`, `SERVICE_TYPE`, `SERVICE_WEB_APPLICATION_ID`, `SERVICE_WEB_CONTEXT_ROOT`, `SERVICE_WEB_SERVER_ENDPOINT`, `SERVICE_WEB_SERVER_NAME`, `SERVICE_WEB_SERVICE_NAME`, `SERVICE_WEB_SERVICE_NAMESPACE`, `VMWARE_DATACENTER_NAME`, `VMWARE_VM_NAME`, `WEB_APPLICATION_NAME`, `WEB_APPLICATION_NAME_PATTERN`, `WEB_APPLICATION_TAGS`, `WEB_APPLICATION_TYPE`\n"
                },
                "operator": {
                    "type": "string",
                    "description": "Possible Values: `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`, `EXISTS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `IS_IP_IN_RANGE`, `LOWER_THAN`, `LOWER_THAN_OR_EQUAL`, `NOT_BEGINS_WITH`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_EXISTS`, `NOT_GREATER_THAN`, `NOT_GREATER_THAN_OR_EQUAL`, `NOT_IS_IP_IN_RANGE`, `NOT_LOWER_THAN`, `NOT_LOWER_THAN_OR_EQUAL`, `NOT_REGEX_MATCHES`, `NOT_TAG_KEY_EQUALS`, `REGEX_MATCHES`, `TAG_KEY_EQUALS`\n"
                },
                "stringValue": {
                    "type": "string",
                    "description": "Value\n"
                },
                "tag": {
                    "type": "string",
                    "description": "Format: `[CONTEXT]tagKey:tagValue`\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "operator"
            ]
        },
        "dynatrace:index/AutotagV2Rules:AutotagV2Rules": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagV2RulesRule:AutotagV2RulesRule"
                    }
                }
            },
            "type": "object",
            "required": [
                "rules"
            ]
        },
        "dynatrace:index/AutotagV2RulesRule:AutotagV2RulesRule": {
            "properties": {
                "attributeRule": {
                    "$ref": "#/types/dynatrace:index/AutotagV2RulesRuleAttributeRule:AutotagV2RulesRuleAttributeRule",
                    "description": "no documentation available\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "entitySelector": {
                    "type": "string",
                    "description": "The documentation of the entity selector can be found [here](https://dt-url.net/apientityselector).\n"
                },
                "type": {
                    "type": "string",
                    "description": "Possible Values: `ME`, `SELECTOR`\n"
                },
                "valueFormat": {
                    "type": "string",
                    "description": "Type '{' for placeholder suggestions\n"
                },
                "valueNormalization": {
                    "type": "string",
                    "description": "Possible Values: `Leavetextas_is`, `Tolowercase`, `Touppercase`\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "type",
                "valueNormalization"
            ]
        },
        "dynatrace:index/AutotagV2RulesRuleAttributeRule:AutotagV2RulesRuleAttributeRule": {
            "properties": {
                "azureToPgpropagation": {
                    "type": "boolean",
                    "description": "Apply to process groups connected to matching Azure entities\n"
                },
                "azureToServicePropagation": {
                    "type": "boolean",
                    "description": "Apply to services provided by matching Azure entities\n"
                },
                "conditions": {
                    "$ref": "#/types/dynatrace:index/AutotagV2RulesRuleAttributeRuleConditions:AutotagV2RulesRuleAttributeRuleConditions",
                    "description": "no documentation available\n"
                },
                "entityType": {
                    "type": "string",
                    "description": "Possible Values: `APPLICATION`, `AWS_APPLICATION_LOAD_BALANCER`, `AWS_CLASSIC_LOAD_BALANCER`, `AWS_NETWORK_LOAD_BALANCER`, `AWS_RELATIONAL_DATABASE_SERVICE`, `AZURE`, `CUSTOM_APPLICATION`, `CUSTOM_DEVICE`, `DCRUM_APPLICATION`, `ESXI_HOST`, `EXTERNAL_SYNTHETIC_TEST`, `HOST`, `HTTP_CHECK`, `MOBILE_APPLICATION`, `PROCESS_GROUP`, `SERVICE`, `SYNTHETIC_TEST`\n"
                },
                "hostToPgpropagation": {
                    "type": "boolean",
                    "description": "Apply to processes running on matching hosts\n"
                },
                "pgToHostPropagation": {
                    "type": "boolean",
                    "description": "Apply to underlying hosts of matching process groups\n"
                },
                "pgToServicePropagation": {
                    "type": "boolean",
                    "description": "Apply to all services provided by the process groups\n"
                },
                "serviceToHostPropagation": {
                    "type": "boolean",
                    "description": "Apply to underlying hosts of matching services\n"
                },
                "serviceToPgpropagation": {
                    "type": "boolean",
                    "description": "Apply to underlying process groups of matching services\n"
                }
            },
            "type": "object",
            "required": [
                "conditions",
                "entityType"
            ]
        },
        "dynatrace:index/AutotagV2RulesRuleAttributeRuleConditions:AutotagV2RulesRuleAttributeRuleConditions": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagV2RulesRuleAttributeRuleConditionsCondition:AutotagV2RulesRuleAttributeRuleConditionsCondition"
                    }
                }
            },
            "type": "object",
            "required": [
                "conditions"
            ]
        },
        "dynatrace:index/AutotagV2RulesRuleAttributeRuleConditionsCondition:AutotagV2RulesRuleAttributeRuleConditionsCondition": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "description": "Case sensitive\n"
                },
                "dynamicKey": {
                    "type": "string",
                    "description": "Dynamic key\n"
                },
                "dynamicKeySource": {
                    "type": "string",
                    "description": "Key source\n"
                },
                "entityId": {
                    "type": "string",
                    "description": "Value\n"
                },
                "enumValue": {
                    "type": "string",
                    "description": "Value\n"
                },
                "integerValue": {
                    "type": "integer",
                    "description": "Value\n"
                },
                "key": {
                    "type": "string",
                    "description": "Possible Values: `APPMON_SERVER_NAME`, `APPMON_SYSTEM_PROFILE_NAME`, `AWS_ACCOUNT_ID`, `AWS_ACCOUNT_NAME`, `AWS_APPLICATION_LOAD_BALANCER_NAME`, `AWS_APPLICATION_LOAD_BALANCER_TAGS`, `AWS_AUTO_SCALING_GROUP_NAME`, `AWS_AUTO_SCALING_GROUP_TAGS`, `AWS_AVAILABILITY_ZONE_NAME`, `AWS_CLASSIC_LOAD_BALANCER_FRONTEND_PORTS`, `AWS_CLASSIC_LOAD_BALANCER_NAME`, `AWS_CLASSIC_LOAD_BALANCER_TAGS`, `AWS_NETWORK_LOAD_BALANCER_NAME`, `AWS_NETWORK_LOAD_BALANCER_TAGS`, `AWS_RELATIONAL_DATABASE_SERVICE_DB_NAME`, `AWS_RELATIONAL_DATABASE_SERVICE_ENDPOINT`, `AWS_RELATIONAL_DATABASE_SERVICE_ENGINE`, `AWS_RELATIONAL_DATABASE_SERVICE_INSTANCE_CLASS`, `AWS_RELATIONAL_DATABASE_SERVICE_NAME`, `AWS_RELATIONAL_DATABASE_SERVICE_PORT`, `AWS_RELATIONAL_DATABASE_SERVICE_TAGS`, `AZURE_ENTITY_NAME`, `AZURE_ENTITY_TAGS`, `AZURE_MGMT_GROUP_NAME`, `AZURE_MGMT_GROUP_UUID`, `AZURE_REGION_NAME`, `AZURE_SCALE_SET_NAME`, `AZURE_SUBSCRIPTION_NAME`, `AZURE_SUBSCRIPTION_UUID`, `AZURE_TENANT_NAME`, `AZURE_TENANT_UUID`, `AZURE_VM_NAME`, `BROWSER_MONITOR_NAME`, `BROWSER_MONITOR_TAGS`, `CLOUD_APPLICATION_LABELS`, `CLOUD_APPLICATION_NAME`, `CLOUD_APPLICATION_NAMESPACE_LABELS`, `CLOUD_APPLICATION_NAMESPACE_NAME`, `CLOUD_FOUNDRY_FOUNDATION_NAME`, `CLOUD_FOUNDRY_ORG_NAME`, `CUSTOM_APPLICATION_NAME`, `CUSTOM_APPLICATION_PLATFORM`, `CUSTOM_APPLICATION_TAGS`, `CUSTOM_APPLICATION_TYPE`, `CUSTOM_DEVICE_DNS_ADDRESS`, `CUSTOM_DEVICE_GROUP_NAME`, `CUSTOM_DEVICE_GROUP_TAGS`, `CUSTOM_DEVICE_IP_ADDRESS`, `CUSTOM_DEVICE_METADATA`, `CUSTOM_DEVICE_NAME`, `CUSTOM_DEVICE_PORT`, `CUSTOM_DEVICE_TAGS`, `CUSTOM_DEVICE_TECHNOLOGY`, `DATA_CENTER_SERVICE_DECODER_TYPE`, `DATA_CENTER_SERVICE_IP_ADDRESS`, `DATA_CENTER_SERVICE_METADATA`, `DATA_CENTER_SERVICE_NAME`, `DATA_CENTER_SERVICE_PORT`, `DATA_CENTER_SERVICE_TAGS`, `DOCKER_CONTAINER_NAME`, `DOCKER_FULL_IMAGE_NAME`, `DOCKER_IMAGE_VERSION`, `EC2_INSTANCE_AMI_ID`, `EC2_INSTANCE_AWS_INSTANCE_TYPE`, `EC2_INSTANCE_AWS_SECURITY_GROUP`, `EC2_INSTANCE_BEANSTALK_ENV_NAME`, `EC2_INSTANCE_ID`, `EC2_INSTANCE_NAME`, `EC2_INSTANCE_PRIVATE_HOST_NAME`, `EC2_INSTANCE_PUBLIC_HOST_NAME`, `EC2_INSTANCE_TAGS`, `ENTERPRISE_APPLICATION_DECODER_TYPE`, `ENTERPRISE_APPLICATION_IP_ADDRESS`, `ENTERPRISE_APPLICATION_METADATA`, `ENTERPRISE_APPLICATION_NAME`, `ENTERPRISE_APPLICATION_PORT`, `ENTERPRISE_APPLICATION_TAGS`, `ESXI_HOST_CLUSTER_NAME`, `ESXI_HOST_HARDWARE_MODEL`, `ESXI_HOST_HARDWARE_VENDOR`, `ESXI_HOST_NAME`, `ESXI_HOST_PRODUCT_NAME`, `ESXI_HOST_PRODUCT_VERSION`, `ESXI_HOST_TAGS`, `EXTERNAL_MONITOR_ENGINE_DESCRIPTION`, `EXTERNAL_MONITOR_ENGINE_NAME`, `EXTERNAL_MONITOR_ENGINE_TYPE`, `EXTERNAL_MONITOR_NAME`, `EXTERNAL_MONITOR_TAGS`, `GEOLOCATION_SITE_NAME`, `GOOGLE_CLOUD_PLATFORM_ZONE_NAME`, `GOOGLE_COMPUTE_INSTANCE_ID`, `GOOGLE_COMPUTE_INSTANCE_MACHINE_TYPE`, `GOOGLE_COMPUTE_INSTANCE_NAME`, `GOOGLE_COMPUTE_INSTANCE_PROJECT`, `GOOGLE_COMPUTE_INSTANCE_PROJECT_ID`, `GOOGLE_COMPUTE_INSTANCE_PUBLIC_IP_ADDRESSES`, `HOST_AIX_LOGICAL_CPU_COUNT`, `HOST_AIX_SIMULTANEOUS_THREADS`, `HOST_AIX_VIRTUAL_CPU_COUNT`, `HOST_ARCHITECTURE`, `HOST_AWS_NAME_TAG`, `HOST_AZURE_COMPUTE_MODE`, `HOST_AZURE_SKU`, `HOST_AZURE_WEB_APPLICATION_HOST_NAMES`, `HOST_AZURE_WEB_APPLICATION_SITE_NAMES`, `HOST_BITNESS`, `HOST_BOSH_AVAILABILITY_ZONE`, `HOST_BOSH_DEPLOYMENT_ID`, `HOST_BOSH_INSTANCE_ID`, `HOST_BOSH_INSTANCE_NAME`, `HOST_BOSH_NAME`, `HOST_BOSH_STEMCELL_VERSION`, `HOST_CLOUD_TYPE`, `HOST_CPU_CORES`, `HOST_CUSTOM_METADATA`, `HOST_DETECTED_NAME`, `HOST_GROUP_ID`, `HOST_GROUP_NAME`, `HOST_HYPERVISOR_TYPE`, `HOST_IP_ADDRESS`, `HOST_KUBERNETES_LABELS`, `HOST_LOGICAL_CPU_CORES`, `HOST_NAME`, `HOST_ONEAGENT_CUSTOM_HOST_NAME`, `HOST_OS_TYPE`, `HOST_OS_VERSION`, `HOST_PAAS_MEMORY_LIMIT`, `HOST_PAAS_TYPE`, `HOST_TAGS`, `HOST_TECHNOLOGY`, `HTTP_MONITOR_NAME`, `HTTP_MONITOR_TAGS`, `KUBERNETES_CLUSTER_NAME`, `KUBERNETES_NODE_NAME`, `KUBERNETES_SERVICE_NAME`, `MOBILE_APPLICATION_NAME`, `MOBILE_APPLICATION_PLATFORM`, `MOBILE_APPLICATION_TAGS`, `NAME_OF_COMPUTE_NODE`, `OPENSTACK_ACCOUNT_NAME`, `OPENSTACK_ACCOUNT_PROJECT_NAME`, `OPENSTACK_AVAILABILITY_ZONE_NAME`, `OPENSTACK_PROJECT_NAME`, `OPENSTACK_REGION_NAME`, `OPENSTACK_VM_INSTANCE_TYPE`, `OPENSTACK_VM_NAME`, `OPENSTACK_VM_SECURITY_GROUP`, `PROCESS_GROUP_AZURE_HOST_NAME`, `PROCESS_GROUP_AZURE_SITE_NAME`, `PROCESS_GROUP_CUSTOM_METADATA`, `PROCESS_GROUP_DETECTED_NAME`, `PROCESS_GROUP_ID`, `PROCESS_GROUP_LISTEN_PORT`, `PROCESS_GROUP_NAME`, `PROCESS_GROUP_PREDEFINED_METADATA`, `PROCESS_GROUP_TAGS`, `PROCESS_GROUP_TECHNOLOGY`, `PROCESS_GROUP_TECHNOLOGY_EDITION`, `PROCESS_GROUP_TECHNOLOGY_VERSION`, `QUEUE_NAME`, `QUEUE_TECHNOLOGY`, `QUEUE_VENDOR`, `SERVICE_AKKA_ACTOR_SYSTEM`, `SERVICE_CTG_SERVICE_NAME`, `SERVICE_DATABASE_HOST_NAME`, `SERVICE_DATABASE_NAME`, `SERVICE_DATABASE_TOPOLOGY`, `SERVICE_DATABASE_VENDOR`, `SERVICE_DETECTED_NAME`, `SERVICE_ESB_APPLICATION_NAME`, `SERVICE_IBM_CTG_GATEWAY_URL`, `SERVICE_MESSAGING_LISTENER_CLASS_NAME`, `SERVICE_NAME`, `SERVICE_PORT`, `SERVICE_PUBLIC_DOMAIN_NAME`, `SERVICE_REMOTE_ENDPOINT`, `SERVICE_REMOTE_SERVICE_NAME`, `SERVICE_TAGS`, `SERVICE_TECHNOLOGY`, `SERVICE_TECHNOLOGY_EDITION`, `SERVICE_TECHNOLOGY_VERSION`, `SERVICE_TOPOLOGY`, `SERVICE_TYPE`, `SERVICE_WEB_APPLICATION_ID`, `SERVICE_WEB_CONTEXT_ROOT`, `SERVICE_WEB_SERVER_ENDPOINT`, `SERVICE_WEB_SERVER_NAME`, `SERVICE_WEB_SERVICE_NAME`, `SERVICE_WEB_SERVICE_NAMESPACE`, `VMWARE_DATACENTER_NAME`, `VMWARE_VM_NAME`, `WEB_APPLICATION_NAME`, `WEB_APPLICATION_NAME_PATTERN`, `WEB_APPLICATION_TAGS`, `WEB_APPLICATION_TYPE`\n"
                },
                "operator": {
                    "type": "string",
                    "description": "Possible Values: `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`, `EXISTS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `IS_IP_IN_RANGE`, `LOWER_THAN`, `LOWER_THAN_OR_EQUAL`, `NOT_BEGINS_WITH`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_EXISTS`, `NOT_GREATER_THAN`, `NOT_GREATER_THAN_OR_EQUAL`, `NOT_IS_IP_IN_RANGE`, `NOT_LOWER_THAN`, `NOT_LOWER_THAN_OR_EQUAL`, `NOT_REGEX_MATCHES`, `NOT_TAG_KEY_EQUALS`, `REGEX_MATCHES`, `TAG_KEY_EQUALS`\n"
                },
                "stringValue": {
                    "type": "string",
                    "description": "Value\n"
                },
                "tag": {
                    "type": "string",
                    "description": "Format: `[CONTEXT]tagKey:tagValue`\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "operator"
            ]
        },
        "dynatrace:index/AwsAnomaliesEc2CandidateHighCpuDetection:AwsAnomaliesEc2CandidateHighCpuDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/AwsAnomaliesEc2CandidateHighCpuDetectionCustomThresholds:AwsAnomaliesEc2CandidateHighCpuDetectionCustomThresholds",
                    "description": "Alert if the condition is met in 3 out of 5 samples\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Possible Values: `Auto`, `Custom`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/AwsAnomaliesEc2CandidateHighCpuDetectionCustomThresholds:AwsAnomaliesEc2CandidateHighCpuDetectionCustomThresholds": {
            "properties": {
                "cpuUsage": {
                    "type": "number",
                    "description": "CPU usage is higher than\n"
                }
            },
            "type": "object",
            "required": [
                "cpuUsage"
            ]
        },
        "dynatrace:index/AwsAnomaliesElbHighConnectionErrorsDetection:AwsAnomaliesElbHighConnectionErrorsDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/AwsAnomaliesElbHighConnectionErrorsDetectionCustomThresholds:AwsAnomaliesElbHighConnectionErrorsDetectionCustomThresholds",
                    "description": "Alert if the condition is met in 3 out of 5 samples\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Possible Values: `Auto`, `Custom`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/AwsAnomaliesElbHighConnectionErrorsDetectionCustomThresholds:AwsAnomaliesElbHighConnectionErrorsDetectionCustomThresholds": {
            "properties": {
                "connectionErrorsPerMinute": {
                    "type": "integer",
                    "description": "Number of backend connection errors is higher than\n"
                }
            },
            "type": "object",
            "required": [
                "connectionErrorsPerMinute"
            ]
        },
        "dynatrace:index/AwsAnomaliesLambdaHighErrorRateDetection:AwsAnomaliesLambdaHighErrorRateDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/AwsAnomaliesLambdaHighErrorRateDetectionCustomThresholds:AwsAnomaliesLambdaHighErrorRateDetectionCustomThresholds",
                    "description": "Alert if the condition is met in 3 out of 5 samples\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Possible Values: `Auto`, `Custom`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/AwsAnomaliesLambdaHighErrorRateDetectionCustomThresholds:AwsAnomaliesLambdaHighErrorRateDetectionCustomThresholds": {
            "properties": {
                "failedInvocationsRate": {
                    "type": "integer",
                    "description": "Failed invocations rate is higher than\n"
                }
            },
            "type": "object",
            "required": [
                "failedInvocationsRate"
            ]
        },
        "dynatrace:index/AwsAnomaliesRdsHighCpuDetection:AwsAnomaliesRdsHighCpuDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/AwsAnomaliesRdsHighCpuDetectionCustomThresholds:AwsAnomaliesRdsHighCpuDetectionCustomThresholds",
                    "description": "Alert if the condition is met in 3 out of 5 samples\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Possible Values: `Auto`, `Custom`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/AwsAnomaliesRdsHighCpuDetectionCustomThresholds:AwsAnomaliesRdsHighCpuDetectionCustomThresholds": {
            "properties": {
                "cpuUsage": {
                    "type": "number",
                    "description": "CPU usage is higher than\n"
                }
            },
            "type": "object",
            "required": [
                "cpuUsage"
            ]
        },
        "dynatrace:index/AwsAnomaliesRdsHighMemoryDetection:AwsAnomaliesRdsHighMemoryDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/AwsAnomaliesRdsHighMemoryDetectionCustomThresholds:AwsAnomaliesRdsHighMemoryDetectionCustomThresholds",
                    "description": "Alert if **both** conditions is met in 3 out of 5 samples\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Possible Values: `Auto`, `Custom`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/AwsAnomaliesRdsHighMemoryDetectionCustomThresholds:AwsAnomaliesRdsHighMemoryDetectionCustomThresholds": {
            "properties": {
                "freeMemory": {
                    "type": "number",
                    "description": "Freeable memory is lower than\n"
                },
                "swapUsage": {
                    "type": "number",
                    "description": "Swap usage is higher than\n"
                }
            },
            "type": "object",
            "required": [
                "freeMemory",
                "swapUsage"
            ]
        },
        "dynatrace:index/AwsAnomaliesRdsHighWriteReadLatencyDetection:AwsAnomaliesRdsHighWriteReadLatencyDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/AwsAnomaliesRdsHighWriteReadLatencyDetectionCustomThresholds:AwsAnomaliesRdsHighWriteReadLatencyDetectionCustomThresholds",
                    "description": "Alert if the condition is met in 3 out of 5 samples\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Possible Values: `Auto`, `Custom`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/AwsAnomaliesRdsHighWriteReadLatencyDetectionCustomThresholds:AwsAnomaliesRdsHighWriteReadLatencyDetectionCustomThresholds": {
            "properties": {
                "readWriteLatency": {
                    "type": "integer",
                    "description": "Read/write latency is higher than\n"
                }
            },
            "type": "object",
            "required": [
                "readWriteLatency"
            ]
        },
        "dynatrace:index/AwsAnomaliesRdsLowStorageDetection:AwsAnomaliesRdsLowStorageDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/AwsAnomaliesRdsLowStorageDetectionCustomThresholds:AwsAnomaliesRdsLowStorageDetectionCustomThresholds",
                    "description": "Alert if the condition is met in 3 out of 5 samples\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Possible Values: `Auto`, `Custom`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/AwsAnomaliesRdsLowStorageDetectionCustomThresholds:AwsAnomaliesRdsLowStorageDetectionCustomThresholds": {
            "properties": {
                "freeStoragePercentage": {
                    "type": "integer",
                    "description": "Free storage space divided by allocated storage is lower than\n"
                }
            },
            "type": "object",
            "required": [
                "freeStoragePercentage"
            ]
        },
        "dynatrace:index/AwsAnomaliesRdsRestartsSequenceDetection:AwsAnomaliesRdsRestartsSequenceDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/AwsAnomaliesRdsRestartsSequenceDetectionCustomThresholds:AwsAnomaliesRdsRestartsSequenceDetectionCustomThresholds",
                    "description": "Alert if the condition is met in 2 out of 20 samples\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Possible Values: `Auto`, `Custom`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/AwsAnomaliesRdsRestartsSequenceDetectionCustomThresholds:AwsAnomaliesRdsRestartsSequenceDetectionCustomThresholds": {
            "properties": {
                "restartsPerMinute": {
                    "type": "integer",
                    "description": "Number of restarts per minute is equal or higher than\n"
                }
            },
            "type": "object",
            "required": [
                "restartsPerMinute"
            ]
        },
        "dynatrace:index/AwsCredentialsAuthenticationData:AwsCredentialsAuthenticationData": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "the access key\n"
                },
                "accountId": {
                    "type": "string",
                    "description": "the ID of the Amazon account\n"
                },
                "externalId": {
                    "type": "string",
                    "description": "(Read only) the external ID token for setting an IAM role. You can obtain it with the `GET /aws/iamExternalId` request\n"
                },
                "iamRole": {
                    "type": "string",
                    "description": "the IAM role to be used by Dynatrace to get monitoring data\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "the secret access key\n",
                    "secret": true
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "externalId"
                    ]
                }
            }
        },
        "dynatrace:index/AwsCredentialsSupportingServicesToMonitor:AwsCredentialsSupportingServicesToMonitor": {
            "properties": {
                "monitoredMetrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AwsCredentialsSupportingServicesToMonitorMonitoredMetric:AwsCredentialsSupportingServicesToMonitorMonitoredMetric"
                    },
                    "description": "a list of metrics to be monitored for this service\n"
                },
                "name": {
                    "type": "string",
                    "description": "the name of the supporting service\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AwsCredentialsSupportingServicesToMonitorMonitoredMetric:AwsCredentialsSupportingServicesToMonitorMonitoredMetric": {
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "a list of metric's dimensions names\n"
                },
                "name": {
                    "type": "string",
                    "description": "the name of the metric of the supporting service\n"
                },
                "statistic": {
                    "type": "string",
                    "description": "the statistic (aggregation) to be used for the metric. AVG*MIN*MAX value is 3 statistics at once: AVERAGE, MINIMUM and MAXIMUM\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AwsCredentialsTagsToMonitor:AwsCredentialsTagsToMonitor": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "the key of the AWS tag.\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n"
                },
                "value": {
                    "type": "string",
                    "description": "the value of the AWS tag\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AwsServiceMetric:AwsServiceMetric": {
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "a list of metric's dimensions names\n"
                },
                "name": {
                    "type": "string",
                    "description": "the name of the metric of the supporting service\n"
                },
                "statistic": {
                    "type": "string",
                    "description": "Possible values are `AVERAGE`, `AVG_MIN_MAX`, `MAXIMUM`, `MINIMUM`, `SAMPLE_COUNT` and `SUM`\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "dynatrace:index/AzureCredentialsMonitorOnlyExcludingTagPair:AzureCredentialsMonitorOnlyExcludingTagPair": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the tag.\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the tag.   If set to `null`, then resources with any value of the tag are monitored.\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AzureCredentialsMonitorOnlyTagPair:AzureCredentialsMonitorOnlyTagPair": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the tag.\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the tag.   If set to `null`, then resources with any value of the tag are monitored.\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AzureCredentialsSupportingService:AzureCredentialsSupportingService": {
            "properties": {
                "monitoredMetrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AzureCredentialsSupportingServiceMonitoredMetric:AzureCredentialsSupportingServiceMonitoredMetric"
                    },
                    "description": "A list of Azure tags to be monitored.  You can specify up to 10 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the supporting service.\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AzureCredentialsSupportingServiceMonitoredMetric:AzureCredentialsSupportingServiceMonitoredMetric": {
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "a list of metric's dimensions names\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the tag.\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/AzureServiceMetric:AzureServiceMetric": {
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "a list of metric's dimensions names\n"
                },
                "name": {
                    "type": "string",
                    "description": "the name of the metric of the supporting service\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "dynatrace:index/BrowserMonitorAnomalyDetection:BrowserMonitorAnomalyDetection": {
            "properties": {
                "loadingTimeThresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorAnomalyDetectionLoadingTimeThreshold:BrowserMonitorAnomalyDetectionLoadingTimeThreshold"
                    },
                    "description": "Thresholds for loading times\n"
                },
                "outageHandlings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorAnomalyDetectionOutageHandling:BrowserMonitorAnomalyDetectionOutageHandling"
                    },
                    "description": "Outage handling configuration\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorAnomalyDetectionLoadingTimeThreshold:BrowserMonitorAnomalyDetectionLoadingTimeThreshold": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Performance threshold is enabled (`true`) or disabled (`false`)\n"
                },
                "thresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorAnomalyDetectionLoadingTimeThresholdThreshold:BrowserMonitorAnomalyDetectionLoadingTimeThresholdThreshold"
                    },
                    "description": "The list of performance threshold rules\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorAnomalyDetectionLoadingTimeThresholdThreshold:BrowserMonitorAnomalyDetectionLoadingTimeThresholdThreshold": {
            "properties": {
                "thresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorAnomalyDetectionLoadingTimeThresholdThresholdThreshold:BrowserMonitorAnomalyDetectionLoadingTimeThresholdThresholdThreshold"
                    },
                    "description": "The list of performance threshold rules\n"
                }
            },
            "type": "object",
            "required": [
                "thresholds"
            ]
        },
        "dynatrace:index/BrowserMonitorAnomalyDetectionLoadingTimeThresholdThresholdThreshold:BrowserMonitorAnomalyDetectionLoadingTimeThresholdThresholdThreshold": {
            "properties": {
                "eventIndex": {
                    "type": "integer",
                    "description": "Specify the event to which an ACTION threshold applies\n"
                },
                "requestIndex": {
                    "type": "integer",
                    "description": "Specify the request to which an ACTION threshold applies\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                },
                "valueMs": {
                    "type": "integer",
                    "description": "Notify if monitor takes longer than *X* milliseconds to load\n"
                }
            },
            "type": "object",
            "required": [
                "valueMs"
            ]
        },
        "dynatrace:index/BrowserMonitorAnomalyDetectionOutageHandling:BrowserMonitorAnomalyDetectionOutageHandling": {
            "properties": {
                "globalOutage": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.BrowserMonitorOutage` and `dynatrace.HttpMonitorOutage`) When enabled (`true`), generate a problem and send an alert when the monitor is unavailable at all configured locations\n"
                },
                "globalOutagePolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorAnomalyDetectionOutageHandlingGlobalOutagePolicy:BrowserMonitorAnomalyDetectionOutageHandlingGlobalOutagePolicy"
                    },
                    "description": "(Field has overlap with `dynatrace.BrowserMonitorOutage` and `dynatrace.HttpMonitorOutage`) Global outage handling configuration.\n"
                },
                "localOutage": {
                    "type": "boolean"
                },
                "localOutagePolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorAnomalyDetectionOutageHandlingLocalOutagePolicy:BrowserMonitorAnomalyDetectionOutageHandlingLocalOutagePolicy"
                    }
                },
                "retryOnError": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorAnomalyDetectionOutageHandlingGlobalOutagePolicy:BrowserMonitorAnomalyDetectionOutageHandlingGlobalOutagePolicy": {
            "properties": {
                "consecutiveRuns": {
                    "type": "integer",
                    "description": "The number of consecutive fails to trigger an alert\n"
                }
            },
            "type": "object",
            "required": [
                "consecutiveRuns"
            ]
        },
        "dynatrace:index/BrowserMonitorAnomalyDetectionOutageHandlingLocalOutagePolicy:BrowserMonitorAnomalyDetectionOutageHandlingLocalOutagePolicy": {
            "properties": {
                "affectedLocations": {
                    "type": "integer",
                    "description": "The number of affected locations to trigger an alert\n"
                },
                "consecutiveRuns": {
                    "type": "integer",
                    "description": "The number of consecutive fails to trigger an alert\n"
                }
            },
            "type": "object",
            "required": [
                "affectedLocations",
                "consecutiveRuns"
            ]
        },
        "dynatrace:index/BrowserMonitorKeyPerformanceMetrics:BrowserMonitorKeyPerformanceMetrics": {
            "properties": {
                "loadActionKpm": {
                    "type": "string",
                    "description": "Defines the key performance metric for load actions. Supported values are `VISUALLY_COMPLETE`, `SPEED_INDEX`, `USER_ACTION_DURATION`, `TIME_TO_FIRST_BYTE`, `HTML_DOWNLOADED`, `DOM_INTERACTIVE`, `LOAD_EVENT_START` and `LOAD_EVENT_END`.\n"
                },
                "xhrActionKpm": {
                    "type": "string",
                    "description": "Defines the key performance metric for XHR actions. Supported values are `VISUALLY_COMPLETE`, `USER_ACTION_DURATION`, `TIME_TO_FIRST_BYTE` and `RESPONSE_END`.\n"
                }
            },
            "type": "object",
            "required": [
                "loadActionKpm",
                "xhrActionKpm"
            ]
        },
        "dynatrace:index/BrowserMonitorPerformanceThresholds:BrowserMonitorPerformanceThresholds": {
            "properties": {
                "thresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorPerformanceThresholdsThreshold:BrowserMonitorPerformanceThresholdsThreshold"
                    }
                }
            },
            "type": "object",
            "required": [
                "thresholds"
            ]
        },
        "dynatrace:index/BrowserMonitorPerformanceThresholdsThreshold:BrowserMonitorPerformanceThresholdsThreshold": {
            "properties": {
                "event": {
                    "type": "string",
                    "description": "Synthetic event\n"
                },
                "threshold": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "event",
                "threshold"
            ]
        },
        "dynatrace:index/BrowserMonitorScript:BrowserMonitorScript": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptConfiguration:BrowserMonitorScriptConfiguration",
                    "description": "The setup of the monitor\n"
                },
                "events": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEvents:BrowserMonitorScriptEvents",
                    "description": "Steps of the clickpath—the first step must always be of the `navigate` type\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of monitor. Possible values are `clickpath` for clickpath monitors and `availability` for single-URL browser monitors. These monitors are only allowed to have one event of the `navigate` type\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptConfiguration:BrowserMonitorScriptConfiguration": {
            "properties": {
                "bandwidth": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptConfigurationBandwidth:BrowserMonitorScriptConfigurationBandwidth",
                    "description": "The emulated device of the monitor—holds either the parameters of the custom device or the name and orientation of the preconfigured device.\n"
                },
                "blocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "bypassCsp": {
                    "type": "boolean"
                },
                "cookies": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptConfigurationCookies:BrowserMonitorScriptConfigurationCookies",
                    "description": "Every cookie must be unique within the list. However, you can use the same cookie again in other event\n"
                },
                "device": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptConfigurationDevice:BrowserMonitorScriptConfigurationDevice"
                },
                "disableWebSecurity": {
                    "type": "boolean"
                },
                "headers": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptConfigurationHeaders:BrowserMonitorScriptConfigurationHeaders"
                },
                "ignoredErrorCodes": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptConfigurationIgnoredErrorCodes:BrowserMonitorScriptConfigurationIgnoredErrorCodes"
                },
                "javascriptSetttings": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptConfigurationJavascriptSetttings:BrowserMonitorScriptConfigurationJavascriptSetttings"
                },
                "monitorFrames": {
                    "type": "boolean"
                },
                "userAgent": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptConfigurationBandwidth:BrowserMonitorScriptConfigurationBandwidth": {
            "properties": {
                "download": {
                    "type": "integer",
                    "description": "The download speed of the network, in bytes per second\n"
                },
                "latency": {
                    "type": "integer",
                    "description": "The latency of the network, in milliseconds\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "The type of the preconfigured network—when editing in the browser, press `Crtl+Spacebar` to see the list of available networks\n"
                },
                "upload": {
                    "type": "integer",
                    "description": "The upload speed of the network, in bytes per second\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptConfigurationCookies:BrowserMonitorScriptConfigurationCookies": {
            "properties": {
                "cookies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptConfigurationCookiesCookie:BrowserMonitorScriptConfigurationCookiesCookie"
                    },
                    "description": "A request cookie\n"
                }
            },
            "type": "object",
            "required": [
                "cookies"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptConfigurationCookiesCookie:BrowserMonitorScriptConfigurationCookiesCookie": {
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "The domain of the cookie.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the cookie. The following cookie names are now allowed: `dtCookie`, `dtLatC`, `dtPC`, `rxVisitor`, `rxlatency`, `rxpc`, `rxsession` and `rxvt`\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path of the cookie.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the cookie. The following symbols are not allowed: `;`, `,`, `\\` and `\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "domain",
                "name",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptConfigurationDevice:BrowserMonitorScriptConfigurationDevice": {
            "properties": {
                "height": {
                    "type": "integer",
                    "description": "The height of the screen in pixels.\nThe maximum allowed width is `1080`.\n"
                },
                "mobile": {
                    "type": "boolean",
                    "description": "The flag of the mobile device.\nSet to `true` for mobile devices or `false` for a desktop or laptop.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the cookie. The following cookie names are now allowed: `dtCookie`, `dtLatC`, `dtPC`, `rxVisitor`, `rxlatency`, `rxpc`, `rxsession` and `rxvt`\n"
                },
                "orientation": {
                    "type": "string",
                    "description": "The orientation of the device. Possible values are `portrait` or `landscape`. Desktop and laptop devices are not allowed to use the `portrait` orientation\n"
                },
                "scaleFactor": {
                    "type": "number",
                    "description": "The pixel ratio of the device.\n"
                },
                "touchEnabled": {
                    "type": "boolean",
                    "description": "The flag of the touchscreen.\nSet to `true` if the device uses touchscreen. In that case, use can set interaction event as `tap`.\n"
                },
                "width": {
                    "type": "integer",
                    "description": "The width of the screen in pixels.\nThe maximum allowed width is `1920`.\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptConfigurationHeaders:BrowserMonitorScriptConfigurationHeaders": {
            "properties": {
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptConfigurationHeadersHeader:BrowserMonitorScriptConfigurationHeadersHeader"
                    },
                    "description": "contains an HTTP header of the request\n"
                },
                "restrictions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Restrict applying headers to a set of URLs\n"
                }
            },
            "type": "object",
            "required": [
                "headers"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptConfigurationHeadersHeader:BrowserMonitorScriptConfigurationHeadersHeader": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the cookie. The following cookie names are now allowed: `dtCookie`, `dtLatC`, `dtPC`, `rxVisitor`, `rxlatency`, `rxpc`, `rxsession` and `rxvt`\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the cookie. The following symbols are not allowed: `;`, `,`, `\\` and `\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptConfigurationIgnoredErrorCodes:BrowserMonitorScriptConfigurationIgnoredErrorCodes": {
            "properties": {
                "matchingDocumentRequests": {
                    "type": "string",
                    "description": "Only apply to document request matching this regex\n"
                },
                "statusCodes": {
                    "type": "string",
                    "description": "You can use exact number, range or status class mask. Multiple values can be separated by comma, i.e. 404, 405-410, 5xx\n"
                }
            },
            "type": "object",
            "required": [
                "statusCodes"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptConfigurationJavascriptSetttings:BrowserMonitorScriptConfigurationJavascriptSetttings": {
            "properties": {
                "customProperties": {
                    "type": "string",
                    "description": "Additional Javascript Agent Properties\n"
                },
                "timeoutSettings": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptConfigurationJavascriptSetttingsTimeoutSettings:BrowserMonitorScriptConfigurationJavascriptSetttingsTimeoutSettings",
                    "description": "Custom JavaScript Agent settings\n"
                },
                "visuallyCompleteOptions": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptions:BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptions",
                    "description": "Parameters for Visually complete and Speed index calculation\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptConfigurationJavascriptSetttingsTimeoutSettings:BrowserMonitorScriptConfigurationJavascriptSetttingsTimeoutSettings": {
            "properties": {
                "actionLimit": {
                    "type": "integer",
                    "description": "Track up to n cascading setTimeout calls\n"
                },
                "totalTimeout": {
                    "type": "integer",
                    "description": "Limit cascading timeouts cumulatively to n ms\n"
                }
            },
            "type": "object",
            "required": [
                "actionLimit",
                "totalTimeout"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptions:BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptions": {
            "properties": {
                "excludedElements": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Query CSS selectors to specify mutation nodes (elements that change) to ignore in Visually complete and Speed index calculation\n"
                },
                "excludedUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Parameters for Visually complete and Speed index calculation\n"
                },
                "imageSizeThreshold": {
                    "type": "integer",
                    "description": "Use this setting to define the minimum visible area per element (in pixels) for an element to be counted towards Visually complete and Speed index\n"
                },
                "inactivityTimeout": {
                    "type": "integer",
                    "description": "The time the Visually complete module waits for inactivity and no further mutations on the page after the load action\n"
                },
                "mutationTimeout": {
                    "type": "integer",
                    "description": "The time the Visually complete module waits after an XHR or custom action closes to start the calculation\n"
                }
            },
            "type": "object",
            "required": [
                "imageSizeThreshold",
                "inactivityTimeout",
                "mutationTimeout"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEvents:BrowserMonitorScriptEvents": {
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEvent:BrowserMonitorScriptEventsEvent"
                    },
                    "description": "An event\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEvent:BrowserMonitorScriptEventsEvent": {
            "properties": {
                "click": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClick:BrowserMonitorScriptEventsEventClick",
                    "description": "Properties specified for a click event\n"
                },
                "cookie": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventCookie:BrowserMonitorScriptEventsEventCookie",
                    "description": "A request cookie\n"
                },
                "description": {
                    "type": "string",
                    "description": "A short description of the event to appear in the UI\n"
                },
                "javascript": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventJavascript:BrowserMonitorScriptEventsEventJavascript",
                    "description": "Properties specified for a javascript event\n"
                },
                "keystrokes": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokes:BrowserMonitorScriptEventsEventKeystrokes",
                    "description": "Properties specified for a key strokes event\n"
                },
                "navigate": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigate:BrowserMonitorScriptEventsEventNavigate",
                    "description": "Properties specified for a navigation event\n"
                },
                "select": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelect:BrowserMonitorScriptEventsEventSelect",
                    "description": "Properties specified for a key strokes event.\n"
                },
                "tap": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTap:BrowserMonitorScriptEventsEventTap",
                    "description": "Properties specified for a tap event\n"
                }
            },
            "type": "object",
            "required": [
                "description"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClick:BrowserMonitorScriptEventsEventClick": {
            "properties": {
                "button": {
                    "type": "integer",
                    "description": "the mouse button to be used for the click\n"
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClickTarget:BrowserMonitorScriptEventsEventClickTarget",
                    "description": "The tab on which the page should open\n"
                },
                "validate": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClickValidate:BrowserMonitorScriptEventsEventClickValidate",
                    "description": "The validation rules for the event—helps you verify that your browser monitor loads the expected page content or page element\n"
                },
                "wait": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClickWait:BrowserMonitorScriptEventsEventClickWait",
                    "description": "The wait condition for the event—defines how long Dynatrace should wait before the next action is executed\n"
                }
            },
            "type": "object",
            "required": [
                "button"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClickTarget:BrowserMonitorScriptEventsEventClickTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClickTargetLocator:BrowserMonitorScriptEventsEventClickTargetLocator"
                    },
                    "description": "The list of locators identifying the desired element\n"
                },
                "window": {
                    "type": "string",
                    "description": "The tab of the target\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClickTargetLocator:BrowserMonitorScriptEventsEventClickTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClickTargetLocatorLocator:BrowserMonitorScriptEventsEventClickTargetLocatorLocator"
                    },
                    "description": "A locator dentifyies the desired element\n"
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClickTargetLocatorLocator:BrowserMonitorScriptEventsEventClickTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the cookie. The following symbols are not allowed: `;`, `,`, `\\` and `\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClickValidate:BrowserMonitorScriptEventsEventClickValidate": {
            "properties": {
                "validations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClickValidateValidation:BrowserMonitorScriptEventsEventClickValidateValidation"
                    },
                    "description": "The element to wait for. Required for the `validation` type, not applicable otherwise.\n"
                }
            },
            "type": "object",
            "required": [
                "validations"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClickValidateValidation:BrowserMonitorScriptEventsEventClickValidateValidation": {
            "properties": {
                "failIfFound": {
                    "type": "boolean",
                    "description": "The condition of the validation. `false` means the validation succeeds if the specified content/element is found. `true` means the validation fails if the specified content/element is found\n"
                },
                "match": {
                    "type": "string",
                    "description": "The content to look for on the page.\nRegular expressions are allowed. In that case set `isRegex` as `true`. Required for `content_match`, optional for `element_match`.\n"
                },
                "regex": {
                    "type": "boolean",
                    "description": "Defines whether `match` is plain text (`false`) or a regular expression (`true`)\n"
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClickValidateValidationTarget:BrowserMonitorScriptEventsEventClickValidateValidationTarget",
                    "description": "The tab on which the page should open\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClickValidateValidationTarget:BrowserMonitorScriptEventsEventClickValidateValidationTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClickValidateValidationTargetLocator:BrowserMonitorScriptEventsEventClickValidateValidationTargetLocator"
                    },
                    "description": "The list of locators identifying the desired element\n"
                },
                "window": {
                    "type": "string",
                    "description": "The tab of the target\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClickValidateValidationTargetLocator:BrowserMonitorScriptEventsEventClickValidateValidationTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClickValidateValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventClickValidateValidationTargetLocatorLocator"
                    },
                    "description": "A locator dentifyies the desired element\n"
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClickValidateValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventClickValidateValidationTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the cookie. The following symbols are not allowed: `;`, `,`, `\\` and `\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClickWait:BrowserMonitorScriptEventsEventClickWait": {
            "properties": {
                "milliseconds": {
                    "type": "integer",
                    "description": "The time to wait, in millisencods. The maximum allowed value is `60000`. Required for the type `time`, not applicable otherwise.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "he maximum amount of time to wait for a certain element to appear, in milliseconds—if exceeded, the action is marked as failed.\nThe maximum allowed value is 60000. Required for the type `validation`, not applicable otherwise..\n"
                },
                "validation": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClickWaitValidation:BrowserMonitorScriptEventsEventClickWaitValidation",
                    "description": "The element to wait for. Required for the `validation` type, not applicable otherwise.\n"
                },
                "waitFor": {
                    "type": "string",
                    "description": "The time to wait before the next event is triggered. Possible values are `page_complete` (wait for the page to load completely), `network` (wait for background network activity to complete), `next_action` (wait for the next action), `time` (wait for a specified periodof time) and `validation` (wait for a specific element to appear)\n"
                }
            },
            "type": "object",
            "required": [
                "waitFor"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClickWaitValidation:BrowserMonitorScriptEventsEventClickWaitValidation": {
            "properties": {
                "failIfFound": {
                    "type": "boolean",
                    "description": "The condition of the validation. `false` means the validation succeeds if the specified content/element is found. `true` means the validation fails if the specified content/element is found\n"
                },
                "match": {
                    "type": "string",
                    "description": "The content to look for on the page.\nRegular expressions are allowed. In that case set `isRegex` as `true`. Required for `content_match`, optional for `element_match`.\n"
                },
                "regex": {
                    "type": "boolean",
                    "description": "Defines whether `match` is plain text (`false`) or a regular expression (`true`)\n"
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClickWaitValidationTarget:BrowserMonitorScriptEventsEventClickWaitValidationTarget",
                    "description": "The tab on which the page should open\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClickWaitValidationTarget:BrowserMonitorScriptEventsEventClickWaitValidationTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClickWaitValidationTargetLocator:BrowserMonitorScriptEventsEventClickWaitValidationTargetLocator"
                    },
                    "description": "The list of locators identifying the desired element\n"
                },
                "window": {
                    "type": "string",
                    "description": "The tab of the target\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClickWaitValidationTargetLocator:BrowserMonitorScriptEventsEventClickWaitValidationTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventClickWaitValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventClickWaitValidationTargetLocatorLocator"
                    },
                    "description": "A locator dentifyies the desired element\n"
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventClickWaitValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventClickWaitValidationTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the cookie. The following symbols are not allowed: `;`, `,`, `\\` and `\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventCookie:BrowserMonitorScriptEventsEventCookie": {
            "properties": {
                "cookies": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventCookieCookies:BrowserMonitorScriptEventsEventCookieCookies",
                    "description": "Every cookie must be unique within the list. However, you can use the same cookie again in other event\n"
                }
            },
            "type": "object",
            "required": [
                "cookies"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventCookieCookies:BrowserMonitorScriptEventsEventCookieCookies": {
            "properties": {
                "cookies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventCookieCookiesCookie:BrowserMonitorScriptEventsEventCookieCookiesCookie"
                    },
                    "description": "A request cookie\n"
                }
            },
            "type": "object",
            "required": [
                "cookies"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventCookieCookiesCookie:BrowserMonitorScriptEventsEventCookieCookiesCookie": {
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "The domain of the cookie.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the cookie. The following cookie names are now allowed: `dtCookie`, `dtLatC`, `dtPC`, `rxVisitor`, `rxlatency`, `rxpc`, `rxsession` and `rxvt`\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path of the cookie.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the cookie. The following symbols are not allowed: `;`, `,`, `\\` and `\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "domain",
                "name",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventJavascript:BrowserMonitorScriptEventsEventJavascript": {
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The JavaScript code to be executed in this event\n"
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventJavascriptTarget:BrowserMonitorScriptEventsEventJavascriptTarget",
                    "description": "The tab on which the page should open\n"
                },
                "wait": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventJavascriptWait:BrowserMonitorScriptEventsEventJavascriptWait",
                    "description": "The wait condition for the event—defines how long Dynatrace should wait before the next action is executed\n"
                }
            },
            "type": "object",
            "required": [
                "code"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventJavascriptTarget:BrowserMonitorScriptEventsEventJavascriptTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventJavascriptTargetLocator:BrowserMonitorScriptEventsEventJavascriptTargetLocator"
                    },
                    "description": "The list of locators identifying the desired element\n"
                },
                "window": {
                    "type": "string",
                    "description": "The tab of the target\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventJavascriptTargetLocator:BrowserMonitorScriptEventsEventJavascriptTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventJavascriptTargetLocatorLocator:BrowserMonitorScriptEventsEventJavascriptTargetLocatorLocator"
                    },
                    "description": "A locator dentifyies the desired element\n"
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventJavascriptTargetLocatorLocator:BrowserMonitorScriptEventsEventJavascriptTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the cookie. The following symbols are not allowed: `;`, `,`, `\\` and `\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventJavascriptWait:BrowserMonitorScriptEventsEventJavascriptWait": {
            "properties": {
                "milliseconds": {
                    "type": "integer",
                    "description": "The time to wait, in millisencods. The maximum allowed value is `60000`. Required for the type `time`, not applicable otherwise.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "he maximum amount of time to wait for a certain element to appear, in milliseconds—if exceeded, the action is marked as failed.\nThe maximum allowed value is 60000. Required for the type `validation`, not applicable otherwise..\n"
                },
                "validation": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventJavascriptWaitValidation:BrowserMonitorScriptEventsEventJavascriptWaitValidation",
                    "description": "The element to wait for. Required for the `validation` type, not applicable otherwise.\n"
                },
                "waitFor": {
                    "type": "string",
                    "description": "The time to wait before the next event is triggered. Possible values are `page_complete` (wait for the page to load completely), `network` (wait for background network activity to complete), `next_action` (wait for the next action), `time` (wait for a specified periodof time) and `validation` (wait for a specific element to appear)\n"
                }
            },
            "type": "object",
            "required": [
                "waitFor"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventJavascriptWaitValidation:BrowserMonitorScriptEventsEventJavascriptWaitValidation": {
            "properties": {
                "failIfFound": {
                    "type": "boolean",
                    "description": "The condition of the validation. `false` means the validation succeeds if the specified content/element is found. `true` means the validation fails if the specified content/element is found\n"
                },
                "match": {
                    "type": "string",
                    "description": "The content to look for on the page.\nRegular expressions are allowed. In that case set `isRegex` as `true`. Required for `content_match`, optional for `element_match`.\n"
                },
                "regex": {
                    "type": "boolean",
                    "description": "Defines whether `match` is plain text (`false`) or a regular expression (`true`)\n"
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventJavascriptWaitValidationTarget:BrowserMonitorScriptEventsEventJavascriptWaitValidationTarget",
                    "description": "The tab on which the page should open\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventJavascriptWaitValidationTarget:BrowserMonitorScriptEventsEventJavascriptWaitValidationTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventJavascriptWaitValidationTargetLocator:BrowserMonitorScriptEventsEventJavascriptWaitValidationTargetLocator"
                    },
                    "description": "The list of locators identifying the desired element\n"
                },
                "window": {
                    "type": "string",
                    "description": "The tab of the target\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventJavascriptWaitValidationTargetLocator:BrowserMonitorScriptEventsEventJavascriptWaitValidationTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventJavascriptWaitValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventJavascriptWaitValidationTargetLocatorLocator"
                    },
                    "description": "A locator dentifyies the desired element\n"
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventJavascriptWaitValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventJavascriptWaitValidationTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the cookie. The following symbols are not allowed: `;`, `,`, `\\` and `\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokes:BrowserMonitorScriptEventsEventKeystrokes": {
            "properties": {
                "credential": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesCredential:BrowserMonitorScriptEventsEventKeystrokesCredential",
                    "description": "Credentials for this event\n"
                },
                "masked": {
                    "type": "boolean",
                    "description": "Indicates whether the `textValue` is encrypted (`true`) or not (`false`). Must not be specified if `credentials` from the vault are being used\n"
                },
                "simulateBlurEvent": {
                    "type": "boolean",
                    "description": "Defines whether to blur the text field when it loses focus.\nSet to `true` to trigger the blur the `textValue`\n"
                },
                "simulateReturnKey": {
                    "type": "boolean",
                    "description": "Simulates pressing the 'Return' key after simulating other keystrokes. For example, to submit a form or trigger a login.\n"
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesTarget:BrowserMonitorScriptEventsEventKeystrokesTarget",
                    "description": "The tab on which the page should open\n"
                },
                "text": {
                    "type": "string",
                    "description": "The text to enter. Must not be specified if `credentials` from the vault are being used\n"
                },
                "validate": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesValidate:BrowserMonitorScriptEventsEventKeystrokesValidate",
                    "description": "The validation rules for the event—helps you verify that your browser monitor loads the expected page content or page element\n"
                },
                "wait": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesWait:BrowserMonitorScriptEventsEventKeystrokesWait",
                    "description": "The wait condition for the event—defines how long Dynatrace should wait before the next action is executed\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesCredential:BrowserMonitorScriptEventsEventKeystrokesCredential": {
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Either `username` or `password`\n"
                },
                "vaultId": {
                    "type": "string",
                    "description": "The ID of the credential within the Credentials Vault\n"
                }
            },
            "type": "object",
            "required": [
                "field",
                "vaultId"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesTarget:BrowserMonitorScriptEventsEventKeystrokesTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesTargetLocator:BrowserMonitorScriptEventsEventKeystrokesTargetLocator"
                    },
                    "description": "The list of locators identifying the desired element\n"
                },
                "window": {
                    "type": "string",
                    "description": "The tab of the target\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesTargetLocator:BrowserMonitorScriptEventsEventKeystrokesTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesTargetLocatorLocator:BrowserMonitorScriptEventsEventKeystrokesTargetLocatorLocator"
                    },
                    "description": "A locator dentifyies the desired element\n"
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesTargetLocatorLocator:BrowserMonitorScriptEventsEventKeystrokesTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the cookie. The following symbols are not allowed: `;`, `,`, `\\` and `\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesValidate:BrowserMonitorScriptEventsEventKeystrokesValidate": {
            "properties": {
                "validations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesValidateValidation:BrowserMonitorScriptEventsEventKeystrokesValidateValidation"
                    },
                    "description": "The element to wait for. Required for the `validation` type, not applicable otherwise.\n"
                }
            },
            "type": "object",
            "required": [
                "validations"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesValidateValidation:BrowserMonitorScriptEventsEventKeystrokesValidateValidation": {
            "properties": {
                "failIfFound": {
                    "type": "boolean",
                    "description": "The condition of the validation. `false` means the validation succeeds if the specified content/element is found. `true` means the validation fails if the specified content/element is found\n"
                },
                "match": {
                    "type": "string",
                    "description": "The content to look for on the page.\nRegular expressions are allowed. In that case set `isRegex` as `true`. Required for `content_match`, optional for `element_match`.\n"
                },
                "regex": {
                    "type": "boolean",
                    "description": "Defines whether `match` is plain text (`false`) or a regular expression (`true`)\n"
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesValidateValidationTarget:BrowserMonitorScriptEventsEventKeystrokesValidateValidationTarget",
                    "description": "The tab on which the page should open\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesValidateValidationTarget:BrowserMonitorScriptEventsEventKeystrokesValidateValidationTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesValidateValidationTargetLocator:BrowserMonitorScriptEventsEventKeystrokesValidateValidationTargetLocator"
                    },
                    "description": "The list of locators identifying the desired element\n"
                },
                "window": {
                    "type": "string",
                    "description": "The tab of the target\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesValidateValidationTargetLocator:BrowserMonitorScriptEventsEventKeystrokesValidateValidationTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesValidateValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventKeystrokesValidateValidationTargetLocatorLocator"
                    },
                    "description": "A locator dentifyies the desired element\n"
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesValidateValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventKeystrokesValidateValidationTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the cookie. The following symbols are not allowed: `;`, `,`, `\\` and `\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesWait:BrowserMonitorScriptEventsEventKeystrokesWait": {
            "properties": {
                "milliseconds": {
                    "type": "integer",
                    "description": "The time to wait, in millisencods. The maximum allowed value is `60000`. Required for the type `time`, not applicable otherwise.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "he maximum amount of time to wait for a certain element to appear, in milliseconds—if exceeded, the action is marked as failed.\nThe maximum allowed value is 60000. Required for the type `validation`, not applicable otherwise..\n"
                },
                "validation": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesWaitValidation:BrowserMonitorScriptEventsEventKeystrokesWaitValidation",
                    "description": "The element to wait for. Required for the `validation` type, not applicable otherwise.\n"
                },
                "waitFor": {
                    "type": "string",
                    "description": "The time to wait before the next event is triggered. Possible values are `page_complete` (wait for the page to load completely), `network` (wait for background network activity to complete), `next_action` (wait for the next action), `time` (wait for a specified periodof time) and `validation` (wait for a specific element to appear)\n"
                }
            },
            "type": "object",
            "required": [
                "waitFor"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesWaitValidation:BrowserMonitorScriptEventsEventKeystrokesWaitValidation": {
            "properties": {
                "failIfFound": {
                    "type": "boolean",
                    "description": "The condition of the validation. `false` means the validation succeeds if the specified content/element is found. `true` means the validation fails if the specified content/element is found\n"
                },
                "match": {
                    "type": "string",
                    "description": "The content to look for on the page.\nRegular expressions are allowed. In that case set `isRegex` as `true`. Required for `content_match`, optional for `element_match`.\n"
                },
                "regex": {
                    "type": "boolean",
                    "description": "Defines whether `match` is plain text (`false`) or a regular expression (`true`)\n"
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesWaitValidationTarget:BrowserMonitorScriptEventsEventKeystrokesWaitValidationTarget",
                    "description": "The tab on which the page should open\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesWaitValidationTarget:BrowserMonitorScriptEventsEventKeystrokesWaitValidationTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesWaitValidationTargetLocator:BrowserMonitorScriptEventsEventKeystrokesWaitValidationTargetLocator"
                    },
                    "description": "The list of locators identifying the desired element\n"
                },
                "window": {
                    "type": "string",
                    "description": "The tab of the target\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesWaitValidationTargetLocator:BrowserMonitorScriptEventsEventKeystrokesWaitValidationTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesWaitValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventKeystrokesWaitValidationTargetLocatorLocator"
                    },
                    "description": "A locator dentifyies the desired element\n"
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventKeystrokesWaitValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventKeystrokesWaitValidationTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the cookie. The following symbols are not allowed: `;`, `,`, `\\` and `\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigate:BrowserMonitorScriptEventsEventNavigate": {
            "properties": {
                "authentication": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateAuthentication:BrowserMonitorScriptEventsEventNavigateAuthentication",
                    "description": "The login credentials to bypass the browser login mask\n"
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateTarget:BrowserMonitorScriptEventsEventNavigateTarget",
                    "description": "The tab on which the page should open\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL to navigate to\n"
                },
                "validate": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateValidate:BrowserMonitorScriptEventsEventNavigateValidate",
                    "description": "The validation rules for the event—helps you verify that your browser monitor loads the expected page content or page element\n"
                },
                "wait": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateWait:BrowserMonitorScriptEventsEventNavigateWait",
                    "description": "The wait condition for the event—defines how long Dynatrace should wait before the next action is executed\n"
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateAuthentication:BrowserMonitorScriptEventsEventNavigateAuthentication": {
            "properties": {
                "creds": {
                    "type": "string",
                    "description": "A reference to the entry within the credential vault\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                }
            },
            "type": "object",
            "required": [
                "creds",
                "type"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateTarget:BrowserMonitorScriptEventsEventNavigateTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateTargetLocator:BrowserMonitorScriptEventsEventNavigateTargetLocator"
                    },
                    "description": "The list of locators identifying the desired element\n"
                },
                "window": {
                    "type": "string",
                    "description": "The tab of the target\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateTargetLocator:BrowserMonitorScriptEventsEventNavigateTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateTargetLocatorLocator:BrowserMonitorScriptEventsEventNavigateTargetLocatorLocator"
                    },
                    "description": "A locator dentifyies the desired element\n"
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateTargetLocatorLocator:BrowserMonitorScriptEventsEventNavigateTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the cookie. The following symbols are not allowed: `;`, `,`, `\\` and `\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateValidate:BrowserMonitorScriptEventsEventNavigateValidate": {
            "properties": {
                "validations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateValidateValidation:BrowserMonitorScriptEventsEventNavigateValidateValidation"
                    },
                    "description": "The element to wait for. Required for the `validation` type, not applicable otherwise.\n"
                }
            },
            "type": "object",
            "required": [
                "validations"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateValidateValidation:BrowserMonitorScriptEventsEventNavigateValidateValidation": {
            "properties": {
                "failIfFound": {
                    "type": "boolean",
                    "description": "The condition of the validation. `false` means the validation succeeds if the specified content/element is found. `true` means the validation fails if the specified content/element is found\n"
                },
                "match": {
                    "type": "string",
                    "description": "The content to look for on the page.\nRegular expressions are allowed. In that case set `isRegex` as `true`. Required for `content_match`, optional for `element_match`.\n"
                },
                "regex": {
                    "type": "boolean",
                    "description": "Defines whether `match` is plain text (`false`) or a regular expression (`true`)\n"
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateValidateValidationTarget:BrowserMonitorScriptEventsEventNavigateValidateValidationTarget",
                    "description": "The tab on which the page should open\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateValidateValidationTarget:BrowserMonitorScriptEventsEventNavigateValidateValidationTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateValidateValidationTargetLocator:BrowserMonitorScriptEventsEventNavigateValidateValidationTargetLocator"
                    },
                    "description": "The list of locators identifying the desired element\n"
                },
                "window": {
                    "type": "string",
                    "description": "The tab of the target\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateValidateValidationTargetLocator:BrowserMonitorScriptEventsEventNavigateValidateValidationTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateValidateValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventNavigateValidateValidationTargetLocatorLocator"
                    },
                    "description": "A locator dentifyies the desired element\n"
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateValidateValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventNavigateValidateValidationTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the cookie. The following symbols are not allowed: `;`, `,`, `\\` and `\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateWait:BrowserMonitorScriptEventsEventNavigateWait": {
            "properties": {
                "milliseconds": {
                    "type": "integer",
                    "description": "The time to wait, in millisencods. The maximum allowed value is `60000`. Required for the type `time`, not applicable otherwise.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "he maximum amount of time to wait for a certain element to appear, in milliseconds—if exceeded, the action is marked as failed.\nThe maximum allowed value is 60000. Required for the type `validation`, not applicable otherwise..\n"
                },
                "validation": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateWaitValidation:BrowserMonitorScriptEventsEventNavigateWaitValidation",
                    "description": "The element to wait for. Required for the `validation` type, not applicable otherwise.\n"
                },
                "waitFor": {
                    "type": "string",
                    "description": "The time to wait before the next event is triggered. Possible values are `page_complete` (wait for the page to load completely), `network` (wait for background network activity to complete), `next_action` (wait for the next action), `time` (wait for a specified periodof time) and `validation` (wait for a specific element to appear)\n"
                }
            },
            "type": "object",
            "required": [
                "waitFor"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateWaitValidation:BrowserMonitorScriptEventsEventNavigateWaitValidation": {
            "properties": {
                "failIfFound": {
                    "type": "boolean",
                    "description": "The condition of the validation. `false` means the validation succeeds if the specified content/element is found. `true` means the validation fails if the specified content/element is found\n"
                },
                "match": {
                    "type": "string",
                    "description": "The content to look for on the page.\nRegular expressions are allowed. In that case set `isRegex` as `true`. Required for `content_match`, optional for `element_match`.\n"
                },
                "regex": {
                    "type": "boolean",
                    "description": "Defines whether `match` is plain text (`false`) or a regular expression (`true`)\n"
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateWaitValidationTarget:BrowserMonitorScriptEventsEventNavigateWaitValidationTarget",
                    "description": "The tab on which the page should open\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateWaitValidationTarget:BrowserMonitorScriptEventsEventNavigateWaitValidationTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateWaitValidationTargetLocator:BrowserMonitorScriptEventsEventNavigateWaitValidationTargetLocator"
                    },
                    "description": "The list of locators identifying the desired element\n"
                },
                "window": {
                    "type": "string",
                    "description": "The tab of the target\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateWaitValidationTargetLocator:BrowserMonitorScriptEventsEventNavigateWaitValidationTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventNavigateWaitValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventNavigateWaitValidationTargetLocatorLocator"
                    },
                    "description": "A locator dentifyies the desired element\n"
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventNavigateWaitValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventNavigateWaitValidationTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the cookie. The following symbols are not allowed: `;`, `,`, `\\` and `\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelect:BrowserMonitorScriptEventsEventSelect": {
            "properties": {
                "selections": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectSelections:BrowserMonitorScriptEventsEventSelectSelections",
                    "description": "The options to be selected\n"
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectTarget:BrowserMonitorScriptEventsEventSelectTarget",
                    "description": "The tab on which the page should open\n"
                },
                "validate": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectValidate:BrowserMonitorScriptEventsEventSelectValidate",
                    "description": "The validation rules for the event—helps you verify that your browser monitor loads the expected page content or page element\n"
                },
                "wait": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectWait:BrowserMonitorScriptEventsEventSelectWait",
                    "description": "The wait condition for the event—defines how long Dynatrace should wait before the next action is executed\n"
                }
            },
            "type": "object",
            "required": [
                "selections"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectSelections:BrowserMonitorScriptEventsEventSelectSelections": {
            "properties": {
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectSelectionsOption:BrowserMonitorScriptEventsEventSelectSelectionsOption"
                    },
                    "description": "The option to be selected\n"
                }
            },
            "type": "object",
            "required": [
                "options"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectSelectionsOption:BrowserMonitorScriptEventsEventSelectSelectionsOption": {
            "properties": {
                "index": {
                    "type": "integer",
                    "description": "The index of the option to be selected\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the cookie. The following symbols are not allowed: `;`, `,`, `\\` and `\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "index",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectTarget:BrowserMonitorScriptEventsEventSelectTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectTargetLocator:BrowserMonitorScriptEventsEventSelectTargetLocator"
                    },
                    "description": "The list of locators identifying the desired element\n"
                },
                "window": {
                    "type": "string",
                    "description": "The tab of the target\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectTargetLocator:BrowserMonitorScriptEventsEventSelectTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectTargetLocatorLocator:BrowserMonitorScriptEventsEventSelectTargetLocatorLocator"
                    },
                    "description": "A locator dentifyies the desired element\n"
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectTargetLocatorLocator:BrowserMonitorScriptEventsEventSelectTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the cookie. The following symbols are not allowed: `;`, `,`, `\\` and `\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectValidate:BrowserMonitorScriptEventsEventSelectValidate": {
            "properties": {
                "validations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectValidateValidation:BrowserMonitorScriptEventsEventSelectValidateValidation"
                    },
                    "description": "The element to wait for. Required for the `validation` type, not applicable otherwise.\n"
                }
            },
            "type": "object",
            "required": [
                "validations"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectValidateValidation:BrowserMonitorScriptEventsEventSelectValidateValidation": {
            "properties": {
                "failIfFound": {
                    "type": "boolean",
                    "description": "The condition of the validation. `false` means the validation succeeds if the specified content/element is found. `true` means the validation fails if the specified content/element is found\n"
                },
                "match": {
                    "type": "string",
                    "description": "The content to look for on the page.\nRegular expressions are allowed. In that case set `isRegex` as `true`. Required for `content_match`, optional for `element_match`.\n"
                },
                "regex": {
                    "type": "boolean",
                    "description": "Defines whether `match` is plain text (`false`) or a regular expression (`true`)\n"
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectValidateValidationTarget:BrowserMonitorScriptEventsEventSelectValidateValidationTarget",
                    "description": "The tab on which the page should open\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectValidateValidationTarget:BrowserMonitorScriptEventsEventSelectValidateValidationTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectValidateValidationTargetLocator:BrowserMonitorScriptEventsEventSelectValidateValidationTargetLocator"
                    },
                    "description": "The list of locators identifying the desired element\n"
                },
                "window": {
                    "type": "string",
                    "description": "The tab of the target\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectValidateValidationTargetLocator:BrowserMonitorScriptEventsEventSelectValidateValidationTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectValidateValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventSelectValidateValidationTargetLocatorLocator"
                    },
                    "description": "A locator dentifyies the desired element\n"
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectValidateValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventSelectValidateValidationTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the cookie. The following symbols are not allowed: `;`, `,`, `\\` and `\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectWait:BrowserMonitorScriptEventsEventSelectWait": {
            "properties": {
                "milliseconds": {
                    "type": "integer",
                    "description": "The time to wait, in millisencods. The maximum allowed value is `60000`. Required for the type `time`, not applicable otherwise.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "he maximum amount of time to wait for a certain element to appear, in milliseconds—if exceeded, the action is marked as failed.\nThe maximum allowed value is 60000. Required for the type `validation`, not applicable otherwise..\n"
                },
                "validation": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectWaitValidation:BrowserMonitorScriptEventsEventSelectWaitValidation",
                    "description": "The element to wait for. Required for the `validation` type, not applicable otherwise.\n"
                },
                "waitFor": {
                    "type": "string",
                    "description": "The time to wait before the next event is triggered. Possible values are `page_complete` (wait for the page to load completely), `network` (wait for background network activity to complete), `next_action` (wait for the next action), `time` (wait for a specified periodof time) and `validation` (wait for a specific element to appear)\n"
                }
            },
            "type": "object",
            "required": [
                "waitFor"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectWaitValidation:BrowserMonitorScriptEventsEventSelectWaitValidation": {
            "properties": {
                "failIfFound": {
                    "type": "boolean",
                    "description": "The condition of the validation. `false` means the validation succeeds if the specified content/element is found. `true` means the validation fails if the specified content/element is found\n"
                },
                "match": {
                    "type": "string",
                    "description": "The content to look for on the page.\nRegular expressions are allowed. In that case set `isRegex` as `true`. Required for `content_match`, optional for `element_match`.\n"
                },
                "regex": {
                    "type": "boolean",
                    "description": "Defines whether `match` is plain text (`false`) or a regular expression (`true`)\n"
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectWaitValidationTarget:BrowserMonitorScriptEventsEventSelectWaitValidationTarget",
                    "description": "The tab on which the page should open\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectWaitValidationTarget:BrowserMonitorScriptEventsEventSelectWaitValidationTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectWaitValidationTargetLocator:BrowserMonitorScriptEventsEventSelectWaitValidationTargetLocator"
                    },
                    "description": "The list of locators identifying the desired element\n"
                },
                "window": {
                    "type": "string",
                    "description": "The tab of the target\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectWaitValidationTargetLocator:BrowserMonitorScriptEventsEventSelectWaitValidationTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventSelectWaitValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventSelectWaitValidationTargetLocatorLocator"
                    },
                    "description": "A locator dentifyies the desired element\n"
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventSelectWaitValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventSelectWaitValidationTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the cookie. The following symbols are not allowed: `;`, `,`, `\\` and `\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTap:BrowserMonitorScriptEventsEventTap": {
            "properties": {
                "button": {
                    "type": "integer",
                    "description": "the mouse button to be used for the click\n"
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTapTarget:BrowserMonitorScriptEventsEventTapTarget",
                    "description": "The tab on which the page should open\n"
                },
                "validate": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTapValidate:BrowserMonitorScriptEventsEventTapValidate",
                    "description": "The validation rules for the event—helps you verify that your browser monitor loads the expected page content or page element\n"
                },
                "wait": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTapWait:BrowserMonitorScriptEventsEventTapWait",
                    "description": "The wait condition for the event—defines how long Dynatrace should wait before the next action is executed\n"
                }
            },
            "type": "object",
            "required": [
                "button"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTapTarget:BrowserMonitorScriptEventsEventTapTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTapTargetLocator:BrowserMonitorScriptEventsEventTapTargetLocator"
                    },
                    "description": "The list of locators identifying the desired element\n"
                },
                "window": {
                    "type": "string",
                    "description": "The tab of the target\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTapTargetLocator:BrowserMonitorScriptEventsEventTapTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTapTargetLocatorLocator:BrowserMonitorScriptEventsEventTapTargetLocatorLocator"
                    },
                    "description": "A locator dentifyies the desired element\n"
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTapTargetLocatorLocator:BrowserMonitorScriptEventsEventTapTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the cookie. The following symbols are not allowed: `;`, `,`, `\\` and `\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTapValidate:BrowserMonitorScriptEventsEventTapValidate": {
            "properties": {
                "validations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTapValidateValidation:BrowserMonitorScriptEventsEventTapValidateValidation"
                    },
                    "description": "The element to wait for. Required for the `validation` type, not applicable otherwise.\n"
                }
            },
            "type": "object",
            "required": [
                "validations"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTapValidateValidation:BrowserMonitorScriptEventsEventTapValidateValidation": {
            "properties": {
                "failIfFound": {
                    "type": "boolean",
                    "description": "The condition of the validation. `false` means the validation succeeds if the specified content/element is found. `true` means the validation fails if the specified content/element is found\n"
                },
                "match": {
                    "type": "string",
                    "description": "The content to look for on the page.\nRegular expressions are allowed. In that case set `isRegex` as `true`. Required for `content_match`, optional for `element_match`.\n"
                },
                "regex": {
                    "type": "boolean",
                    "description": "Defines whether `match` is plain text (`false`) or a regular expression (`true`)\n"
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTapValidateValidationTarget:BrowserMonitorScriptEventsEventTapValidateValidationTarget",
                    "description": "The tab on which the page should open\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTapValidateValidationTarget:BrowserMonitorScriptEventsEventTapValidateValidationTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTapValidateValidationTargetLocator:BrowserMonitorScriptEventsEventTapValidateValidationTargetLocator"
                    },
                    "description": "The list of locators identifying the desired element\n"
                },
                "window": {
                    "type": "string",
                    "description": "The tab of the target\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTapValidateValidationTargetLocator:BrowserMonitorScriptEventsEventTapValidateValidationTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTapValidateValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventTapValidateValidationTargetLocatorLocator"
                    },
                    "description": "A locator dentifyies the desired element\n"
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTapValidateValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventTapValidateValidationTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the cookie. The following symbols are not allowed: `;`, `,`, `\\` and `\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTapWait:BrowserMonitorScriptEventsEventTapWait": {
            "properties": {
                "milliseconds": {
                    "type": "integer",
                    "description": "The time to wait, in millisencods. The maximum allowed value is `60000`. Required for the type `time`, not applicable otherwise.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "he maximum amount of time to wait for a certain element to appear, in milliseconds—if exceeded, the action is marked as failed.\nThe maximum allowed value is 60000. Required for the type `validation`, not applicable otherwise..\n"
                },
                "validation": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTapWaitValidation:BrowserMonitorScriptEventsEventTapWaitValidation",
                    "description": "The element to wait for. Required for the `validation` type, not applicable otherwise.\n"
                },
                "waitFor": {
                    "type": "string",
                    "description": "The time to wait before the next event is triggered. Possible values are `page_complete` (wait for the page to load completely), `network` (wait for background network activity to complete), `next_action` (wait for the next action), `time` (wait for a specified periodof time) and `validation` (wait for a specific element to appear)\n"
                }
            },
            "type": "object",
            "required": [
                "waitFor"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTapWaitValidation:BrowserMonitorScriptEventsEventTapWaitValidation": {
            "properties": {
                "failIfFound": {
                    "type": "boolean",
                    "description": "The condition of the validation. `false` means the validation succeeds if the specified content/element is found. `true` means the validation fails if the specified content/element is found\n"
                },
                "match": {
                    "type": "string",
                    "description": "The content to look for on the page.\nRegular expressions are allowed. In that case set `isRegex` as `true`. Required for `content_match`, optional for `element_match`.\n"
                },
                "regex": {
                    "type": "boolean",
                    "description": "Defines whether `match` is plain text (`false`) or a regular expression (`true`)\n"
                },
                "target": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTapWaitValidationTarget:BrowserMonitorScriptEventsEventTapWaitValidationTarget",
                    "description": "The tab on which the page should open\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTapWaitValidationTarget:BrowserMonitorScriptEventsEventTapWaitValidationTarget": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTapWaitValidationTargetLocator:BrowserMonitorScriptEventsEventTapWaitValidationTargetLocator"
                    },
                    "description": "The list of locators identifying the desired element\n"
                },
                "window": {
                    "type": "string",
                    "description": "The tab of the target\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTapWaitValidationTargetLocator:BrowserMonitorScriptEventsEventTapWaitValidationTargetLocator": {
            "properties": {
                "locators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScriptEventsEventTapWaitValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventTapWaitValidationTargetLocatorLocator"
                    },
                    "description": "A locator dentifyies the desired element\n"
                }
            },
            "type": "object",
            "required": [
                "locators"
            ]
        },
        "dynatrace:index/BrowserMonitorScriptEventsEventTapWaitValidationTargetLocatorLocator:BrowserMonitorScriptEventsEventTapWaitValidationTargetLocatorLocator": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the cookie. The following symbols are not allowed: `;`, `,`, `\\` and `\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/BrowserMonitorTag:BrowserMonitorTag": {
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorTagTag:BrowserMonitorTagTag"
                    },
                    "description": "Tag with source of a Dynatrace entity.\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/BrowserMonitorTagTag:BrowserMonitorTagTag": {
            "properties": {
                "context": {
                    "type": "string",
                    "description": "The origin of the tag. Supported values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_CLOUD` and `KUBERNETES`.\n"
                },
                "key": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the cookie. The following symbols are not allowed: `;`, `,`, `\\` and `\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/BusinessEventsOneagentEvent:BusinessEventsOneagentEvent": {
            "properties": {
                "category": {
                    "$ref": "#/types/dynatrace:index/BusinessEventsOneagentEventCategory:BusinessEventsOneagentEventCategory",
                    "description": "Event category\n"
                },
                "data": {
                    "$ref": "#/types/dynatrace:index/BusinessEventsOneagentEventData:BusinessEventsOneagentEventData",
                    "description": "Additional attributes for the business event.\n"
                },
                "provider": {
                    "$ref": "#/types/dynatrace:index/BusinessEventsOneagentEventProvider:BusinessEventsOneagentEventProvider",
                    "description": "Event provider\n"
                },
                "type": {
                    "$ref": "#/types/dynatrace:index/BusinessEventsOneagentEventType:BusinessEventsOneagentEventType",
                    "description": "Event type\n"
                }
            },
            "type": "object",
            "required": [
                "category",
                "provider",
                "type"
            ]
        },
        "dynatrace:index/BusinessEventsOneagentEventCategory:BusinessEventsOneagentEventCategory": {
            "properties": {
                "path": {
                    "type": "string",
                    "description": "[See our documentation](https://dt-url.net/ei034bx)\n"
                },
                "source": {
                    "type": "string",
                    "description": "Fixed value\n"
                },
                "sourceType": {
                    "type": "string",
                    "description": "Possible Values: `Constant_string`, `Request_body`, `Request_headers`, `Request_method`, `Request_parameters`, `Request_path`, `Request_url`, `Response_body`, `Response_headers`, `Response_statusCode`\n"
                }
            },
            "type": "object",
            "required": [
                "sourceType"
            ]
        },
        "dynatrace:index/BusinessEventsOneagentEventData:BusinessEventsOneagentEventData": {
            "properties": {
                "eventDataFieldComplexes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BusinessEventsOneagentEventDataEventDataFieldComplex:BusinessEventsOneagentEventDataEventDataFieldComplex"
                    }
                }
            },
            "type": "object",
            "required": [
                "eventDataFieldComplexes"
            ]
        },
        "dynatrace:index/BusinessEventsOneagentEventDataEventDataFieldComplex:BusinessEventsOneagentEventDataEventDataFieldComplex": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Field name to be added to data.\n"
                },
                "source": {
                    "$ref": "#/types/dynatrace:index/BusinessEventsOneagentEventDataEventDataFieldComplexSource:BusinessEventsOneagentEventDataEventDataFieldComplexSource",
                    "description": "Fixed value\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "source"
            ]
        },
        "dynatrace:index/BusinessEventsOneagentEventDataEventDataFieldComplexSource:BusinessEventsOneagentEventDataEventDataFieldComplexSource": {
            "properties": {
                "path": {
                    "type": "string",
                    "description": "[See our documentation](https://dt-url.net/ei034bx)\n"
                },
                "source": {
                    "type": "string",
                    "description": "Fixed value\n"
                },
                "sourceType": {
                    "type": "string",
                    "description": "Possible Values: `Constant_string`, `Request_body`, `Request_headers`, `Request_method`, `Request_parameters`, `Request_path`, `Request_url`, `Response_body`, `Response_headers`, `Response_statusCode`\n"
                }
            },
            "type": "object",
            "required": [
                "sourceType"
            ]
        },
        "dynatrace:index/BusinessEventsOneagentEventProvider:BusinessEventsOneagentEventProvider": {
            "properties": {
                "path": {
                    "type": "string",
                    "description": "[See our documentation](https://dt-url.net/ei034bx)\n"
                },
                "source": {
                    "type": "string",
                    "description": "Fixed value\n"
                },
                "sourceType": {
                    "type": "string",
                    "description": "Possible Values: `Constant_string`, `Request_body`, `Request_headers`, `Request_method`, `Request_parameters`, `Request_path`, `Request_url`, `Response_body`, `Response_headers`, `Response_statusCode`\n"
                }
            },
            "type": "object",
            "required": [
                "sourceType"
            ]
        },
        "dynatrace:index/BusinessEventsOneagentEventType:BusinessEventsOneagentEventType": {
            "properties": {
                "path": {
                    "type": "string",
                    "description": "[See our documentation](https://dt-url.net/ei034bx)\n"
                },
                "source": {
                    "type": "string",
                    "description": "Fixed value\n"
                },
                "sourceType": {
                    "type": "string",
                    "description": "Possible Values: `Constant_string`, `Request_body`, `Request_headers`, `Request_method`, `Request_parameters`, `Request_path`, `Request_url`, `Response_body`, `Response_headers`, `Response_statusCode`\n"
                }
            },
            "type": "object",
            "required": [
                "sourceType"
            ]
        },
        "dynatrace:index/BusinessEventsOneagentTriggers:BusinessEventsOneagentTriggers": {
            "properties": {
                "triggers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BusinessEventsOneagentTriggersTrigger:BusinessEventsOneagentTriggersTrigger"
                    }
                }
            },
            "type": "object",
            "required": [
                "triggers"
            ]
        },
        "dynatrace:index/BusinessEventsOneagentTriggersTrigger:BusinessEventsOneagentTriggersTrigger": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "description": "Case sensitive\n"
                },
                "source": {
                    "$ref": "#/types/dynatrace:index/BusinessEventsOneagentTriggersTriggerSource:BusinessEventsOneagentTriggersTriggerSource",
                    "description": "Fixed value\n"
                },
                "type": {
                    "type": "string",
                    "description": "Event type\n"
                },
                "value": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "source",
                "type"
            ]
        },
        "dynatrace:index/BusinessEventsOneagentTriggersTriggerSource:BusinessEventsOneagentTriggersTriggerSource": {
            "properties": {
                "dataSource": {
                    "type": "string",
                    "description": "Possible Values: `Request_body`, `Request_headers`, `Request_method`, `Request_parameters`, `Request_path`, `Request_url`, `Response_body`, `Response_headers`, `Response_statusCode`\n"
                },
                "path": {
                    "type": "string",
                    "description": "[See our documentation](https://dt-url.net/ei034bx)\n"
                }
            },
            "type": "object",
            "required": [
                "dataSource"
            ]
        },
        "dynatrace:index/BusinessEventsProcessingRuleTesting:BusinessEventsProcessingRuleTesting": {
            "properties": {
                "sampleEvent": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sampleEvent"
            ]
        },
        "dynatrace:index/BusinessEventsProcessingTransformationFields:BusinessEventsProcessingTransformationFields": {
            "properties": {
                "transformationFields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BusinessEventsProcessingTransformationFieldsTransformationField:BusinessEventsProcessingTransformationFieldsTransformationField"
                    }
                }
            },
            "type": "object",
            "required": [
                "transformationFields"
            ]
        },
        "dynatrace:index/BusinessEventsProcessingTransformationFieldsTransformationField:BusinessEventsProcessingTransformationFieldsTransformationField": {
            "properties": {
                "array": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "optional": {
                    "type": "boolean"
                },
                "readonly": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "array",
                "name",
                "optional",
                "readonly",
                "type"
            ]
        },
        "dynatrace:index/BusinessEventsSecurityContextSecurityContextRule:BusinessEventsSecurityContextSecurityContextRule": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Matcher\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Rule name\n"
                },
                "value": {
                    "type": "string",
                    "description": "Literal value to be set\n"
                },
                "valueSource": {
                    "type": "string",
                    "description": "Possible Values: `FIELD`, `LITERAL`\n"
                },
                "valueSourceField": {
                    "type": "string",
                    "description": "Name of field used to copy value\n"
                }
            },
            "type": "object",
            "required": [
                "query",
                "ruleName",
                "valueSource"
            ]
        },
        "dynatrace:index/CalculatedMobileMetricDimension:CalculatedMobileMetricDimension": {
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CalculatedMobileMetricDimensionDimension:CalculatedMobileMetricDimensionDimension"
                    },
                    "description": "A dimensions for the metric usage\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedMobileMetricDimensionDimension:CalculatedMobileMetricDimensionDimension": {
            "properties": {
                "dimension": {
                    "type": "string",
                    "description": "A dimensions for the metric usage\n"
                },
                "topX": {
                    "type": "integer",
                    "description": "The number of top values to be calculated\n"
                }
            },
            "type": "object",
            "required": [
                "dimension",
                "topX"
            ]
        },
        "dynatrace:index/CalculatedMobileMetricUserActionFilter:CalculatedMobileMetricUserActionFilter": {
            "properties": {
                "actionDurationFromMilliseconds": {
                    "type": "integer",
                    "description": "Only actions with a duration more than or equal to this value (in milliseconds) are included in the metric calculation.\n"
                },
                "actionDurationToMilliseconds": {
                    "type": "integer",
                    "description": "Only actions with a duration less than or equal to this value (in milliseconds) are included in the metric calculation.\n"
                },
                "apdex": {
                    "type": "string",
                    "description": "Only actions with the specified Apdex score are included in the metric calculation. Possible values: [ Frustrated, Satisfied, Tolerating, Unknown ]\n"
                },
                "appVersion": {
                    "type": "string",
                    "description": "Only actions coming from this app version are included in the metric calculation.\n"
                },
                "carrier": {
                    "type": "string",
                    "description": "Only actions coming from this carrier type are included in the metric calculation.\n"
                },
                "city": {
                    "type": "string",
                    "description": "Only actions of users from this city are included in the metric calculation. Specify geolocation ID here.\n"
                },
                "connectionType": {
                    "type": "string",
                    "description": "Only actions coming from this connection type are included in the metric calculation. Possible values: [ LAN, MOBILE, OFFLINE, UNKNOWN, WIFI ]\n"
                },
                "continent": {
                    "type": "string",
                    "description": "Only actions of users from this continent are included in the metric calculation. Specify geolocation ID here.\n"
                },
                "country": {
                    "type": "string",
                    "description": "Only actions of users from this country are included in the metric calculation. Specify geolocation ID here.\n"
                },
                "device": {
                    "type": "string",
                    "description": "Only actions coming from this app version are included in the metric calculation.\n"
                },
                "hasHttpError": {
                    "type": "boolean",
                    "description": "The request error status of the actions to be included in the metric calculation: `true` or `false`\n"
                },
                "hasReportedError": {
                    "type": "boolean",
                    "description": "The error status of the actions to be included in the metric calculation: `true` or `false`\n"
                },
                "isp": {
                    "type": "string",
                    "description": "Only actions coming from this internet service provider are included in the metric calculation.\n"
                },
                "manufacturer": {
                    "type": "string",
                    "description": "Only actions coming from devices of this manufacturer are included in the metric calculation.\n"
                },
                "networkTechnology": {
                    "type": "string",
                    "description": "Filter by network technology\n"
                },
                "orientation": {
                    "type": "string",
                    "description": "Only actions coming from devices with this display orientation are included in the metric calculation. Possible values: [ LANDSCAPE, PORTRAIT, UNKNOWN ]\n"
                },
                "osFamily": {
                    "type": "string",
                    "description": "Only actions coming from this OS family are included in the metric calculation.\n"
                },
                "osVersion": {
                    "type": "string",
                    "description": "Only actions coming from this OS version are included in the metric calculation.\n"
                },
                "region": {
                    "type": "string",
                    "description": "Only actions of users from this region are included in the metric calculation. Specify geolocation ID here.\n"
                },
                "resolution": {
                    "type": "string",
                    "description": "Only actions coming from devices with this display resolution are included in the metric calculation. Possible values: [ CGA, DCI2K, DCI4K, DVGA, FHD, FWVGA, FWXGA, GHDPlus, HD, HQVGA, HQVGA2, HSXGA, HUXGA, HVGA, HXGA, NTSC, PAL, QHD, QQVGA, QSXGA, QUXGA, QVGA, QWXGA, QXGA, SVGA, SXGA, SXGAMinus, SXGAPlus, UGA, UHD16K, UHD4K, UHD8K, UHDPlus, UNKNOWN, UWQHD, UXGA, VGA, WHSXGA, WHUXGA, WHXGA, WQSXGA, WQUXGA, WQVGA, WQVGA2, WQVGA3, WQXGA, WQXGA2, WSVGA, WSVGA2, WSXGA, WSXGAPlus, WUXGA, WVGA, WVGA2, WXGA, WXGA2, WXGA3, WXGAPlus, XGA, XGAPLUS, _1280x854, nHD, qHD ]\n"
                },
                "userActionName": {
                    "type": "string",
                    "description": "Only actions with this name are included in the metric calculation.\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricCondition:CalculatedServiceMetricCondition": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionCondition:CalculatedServiceMetricConditionCondition"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionCondition:CalculatedServiceMetricConditionCondition": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "comparison": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparison:CalculatedServiceMetricConditionConditionComparison"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "comparison"
            ]
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparison:CalculatedServiceMetricConditionConditionComparison": {
            "properties": {
                "boolean": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonBoolean:CalculatedServiceMetricConditionConditionComparisonBoolean"
                },
                "esbInputNodeType": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonEsbInputNodeType:CalculatedServiceMetricConditionConditionComparisonEsbInputNodeType"
                },
                "failedState": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonFailedState:CalculatedServiceMetricConditionConditionComparisonFailedState"
                },
                "failureReason": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonFailureReason:CalculatedServiceMetricConditionConditionComparisonFailureReason"
                },
                "fastString": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonFastString:CalculatedServiceMetricConditionConditionComparisonFastString"
                },
                "flawState": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonFlawState:CalculatedServiceMetricConditionConditionComparisonFlawState"
                },
                "generic": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonGeneric:CalculatedServiceMetricConditionConditionComparisonGeneric"
                },
                "httpMethod": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonHttpMethod:CalculatedServiceMetricConditionConditionComparisonHttpMethod"
                },
                "httpStatusClass": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonHttpStatusClass:CalculatedServiceMetricConditionConditionComparisonHttpStatusClass"
                },
                "iibInputNodeType": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonIibInputNodeType:CalculatedServiceMetricConditionConditionComparisonIibInputNodeType"
                },
                "negate": {
                    "type": "boolean"
                },
                "number": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonNumber:CalculatedServiceMetricConditionConditionComparisonNumber"
                },
                "numberRequestAttribute": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonNumberRequestAttribute:CalculatedServiceMetricConditionConditionComparisonNumberRequestAttribute"
                },
                "serviceType": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonServiceType:CalculatedServiceMetricConditionConditionComparisonServiceType"
                },
                "string": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonString:CalculatedServiceMetricConditionConditionComparisonString"
                },
                "stringRequestAttribute": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonStringRequestAttribute:CalculatedServiceMetricConditionConditionComparisonStringRequestAttribute"
                },
                "tag": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonTag:CalculatedServiceMetricConditionConditionComparisonTag"
                },
                "zosCallType": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonZosCallType:CalculatedServiceMetricConditionConditionComparisonZosCallType"
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonBoolean:CalculatedServiceMetricConditionConditionComparisonBoolean": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "boolean"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    }
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonEsbInputNodeType:CalculatedServiceMetricConditionConditionComparisonEsbInputNodeType": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonFailedState:CalculatedServiceMetricConditionConditionComparisonFailedState": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonFailureReason:CalculatedServiceMetricConditionConditionComparisonFailureReason": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonFastString:CalculatedServiceMetricConditionConditionComparisonFastString": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonFlawState:CalculatedServiceMetricConditionConditionComparisonFlawState": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonGeneric:CalculatedServiceMetricConditionConditionComparisonGeneric": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonHttpMethod:CalculatedServiceMetricConditionConditionComparisonHttpMethod": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonHttpStatusClass:CalculatedServiceMetricConditionConditionComparisonHttpStatusClass": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonIibInputNodeType:CalculatedServiceMetricConditionConditionComparisonIibInputNodeType": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonNumber:CalculatedServiceMetricConditionConditionComparisonNumber": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonNumberRequestAttribute:CalculatedServiceMetricConditionConditionComparisonNumberRequestAttribute": {
            "properties": {
                "matchOnChildCalls": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "requestAttribute": {
                    "type": "string"
                },
                "source": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSource:CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSource"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                }
            },
            "type": "object",
            "required": [
                "requestAttribute"
            ]
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSource:CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSource": {
            "properties": {
                "managementZone": {
                    "type": "string"
                },
                "serviceTag": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSourceServiceTag:CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSourceServiceTag"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSourceServiceTag:CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSourceServiceTag": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "tagKey": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSourceServiceTagTagKey:CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSourceServiceTagTagKey"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSourceServiceTagTagKey:CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSourceServiceTagTagKey": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonServiceType:CalculatedServiceMetricConditionConditionComparisonServiceType": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonString:CalculatedServiceMetricConditionConditionComparisonString": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonStringRequestAttribute:CalculatedServiceMetricConditionConditionComparisonStringRequestAttribute": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "matchOnChildCalls": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "requestAttribute": {
                    "type": "string"
                },
                "source": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSource:CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSource"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "requestAttribute"
            ]
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSource:CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSource": {
            "properties": {
                "managementZone": {
                    "type": "string"
                },
                "serviceTag": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSourceServiceTag:CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSourceServiceTag"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSourceServiceTag:CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSourceServiceTag": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "tagKey": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSourceServiceTagTagKey:CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSourceServiceTagTagKey"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSourceServiceTagTagKey:CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSourceServiceTagTagKey": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonTag:CalculatedServiceMetricConditionConditionComparisonTag": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonTagValue:CalculatedServiceMetricConditionConditionComparisonTagValue"
                },
                "values": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonTagValues:CalculatedServiceMetricConditionConditionComparisonTagValues"
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonTagValue:CalculatedServiceMetricConditionConditionComparisonTagValue": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonTagValues:CalculatedServiceMetricConditionConditionComparisonTagValues": {
            "properties": {
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CalculatedServiceMetricConditionConditionComparisonTagValuesValue:CalculatedServiceMetricConditionConditionComparisonTagValuesValue"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonTagValuesValue:CalculatedServiceMetricConditionConditionComparisonTagValuesValue": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/CalculatedServiceMetricConditionConditionComparisonZosCallType:CalculatedServiceMetricConditionConditionComparisonZosCallType": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricDimensionDefinition:CalculatedServiceMetricDimensionDefinition": {
            "properties": {
                "dimension": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "placeholders": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricDimensionDefinitionPlaceholders:CalculatedServiceMetricDimensionDefinitionPlaceholders"
                },
                "topX": {
                    "type": "integer"
                },
                "topXAggregation": {
                    "type": "string"
                },
                "topXDirection": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dimension",
                "name",
                "topX",
                "topXAggregation",
                "topXDirection"
            ]
        },
        "dynatrace:index/CalculatedServiceMetricDimensionDefinitionPlaceholders:CalculatedServiceMetricDimensionDefinitionPlaceholders": {
            "properties": {
                "placeholders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholder:CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholder"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholder:CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholder": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "attribute": {
                    "type": "string"
                },
                "delimiterOrRegex": {
                    "type": "string"
                },
                "endDelimiter": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "normalization": {
                    "type": "string"
                },
                "requestAttribute": {
                    "type": "string"
                },
                "source": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSource:CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSource"
                },
                "unknowns": {
                    "type": "string"
                },
                "useFromChildCalls": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "kind",
                "name"
            ]
        },
        "dynatrace:index/CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSource:CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSource": {
            "properties": {
                "managementZone": {
                    "type": "string"
                },
                "serviceTag": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSourceServiceTag:CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSourceServiceTag"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSourceServiceTag:CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSourceServiceTag": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "tagKey": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSourceServiceTagTagKey:CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSourceServiceTagTagKey"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "dynatrace:index/CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSourceServiceTagTagKey:CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSourceServiceTagTagKey": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedServiceMetricMetricDefinition:CalculatedServiceMetricMetricDefinition": {
            "properties": {
                "metric": {
                    "type": "string"
                },
                "requestAttribute": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "dynatrace:index/CalculatedSyntheticMetricDimension:CalculatedSyntheticMetricDimension": {
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CalculatedSyntheticMetricDimensionDimension:CalculatedSyntheticMetricDimensionDimension"
                    },
                    "description": "A dimensions for the metric usage\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedSyntheticMetricDimensionDimension:CalculatedSyntheticMetricDimensionDimension": {
            "properties": {
                "dimension": {
                    "type": "string",
                    "description": "A dimensions for the metric usage\n"
                },
                "topX": {
                    "type": "integer",
                    "description": "The number of top values to be calculated\n"
                }
            },
            "type": "object",
            "required": [
                "dimension"
            ]
        },
        "dynatrace:index/CalculatedSyntheticMetricFilter:CalculatedSyntheticMetricFilter": {
            "properties": {
                "actionType": {
                    "type": "string",
                    "description": "Only user actions of the specified type are included in the metric calculation\n"
                },
                "errorCode": {
                    "type": "integer",
                    "description": "Only executions finished with the specified error code are included in the metric calculation.\n"
                },
                "event": {
                    "type": "string",
                    "description": "Only the specified browser clickpath event is included in the metric calculation. Specify the Dynatrace entity ID of the event here.\n"
                },
                "hasError": {
                    "type": "boolean",
                    "description": "The execution status of the monitors to be included in the metric calculation: `true` or `false`\n"
                },
                "location": {
                    "type": "string",
                    "description": "Only executions from the specified location are included in the metric calculation. Specify the Dynatrace entity ID of the location here.\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedWebMetricDimension:CalculatedWebMetricDimension": {
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CalculatedWebMetricDimensionDimension:CalculatedWebMetricDimensionDimension"
                    },
                    "description": "A dimensions for the metric usage\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedWebMetricDimensionDimension:CalculatedWebMetricDimensionDimension": {
            "properties": {
                "dimension": {
                    "type": "string",
                    "description": "A dimensions for the metric usage\n"
                },
                "propertyKey": {
                    "type": "string",
                    "description": "The key of the user action property. Only applicable for the StringProperty dimension.\n"
                },
                "topX": {
                    "type": "integer",
                    "description": "The number of top values to be calculated\n"
                }
            },
            "type": "object",
            "required": [
                "dimension",
                "topX"
            ]
        },
        "dynatrace:index/CalculatedWebMetricMetricDefinition:CalculatedWebMetricMetricDefinition": {
            "properties": {
                "metric": {
                    "type": "string",
                    "description": "The metric to be captured. Possible values are `Apdex`, `ApplicationCache`, `Callback`, `CumulativeLayoutShift`, `DNSLookup`, `DOMComplete`, `DOMContentLoaded`, `DOMInteractive`, `DoubleProperty`, `ErrorCount`, `FirstContentfulPaint`, `FirstInputDelay`, `FirstInputStart`, `FirstPaint`, `HTMLDownloaded`, `LargestContentfulPaint`, `LoadEventEnd`, `LoadEventStart`, `LongProperty`, `LongTasksTime`, `NavigationStart`, `OnDOMContentLoaded`, `OnLoad`, `Processing`, `RedirectTime`, `Request`, `RequestStart`, `Response`, `SecureConnect`, `SpeedIndex`, `TCPConnect`, `TimeToFirstByte`, `UserActionDuration`, `VisuallyComplete`\n"
                },
                "propertyKey": {
                    "type": "string",
                    "description": "The key of the user action property. Only applicable for DoubleProperty and LongProperty metrics.\n"
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "dynatrace:index/CalculatedWebMetricUserActionFilter:CalculatedWebMetricUserActionFilter": {
            "properties": {
                "actionDurationFromMilliseconds": {
                    "type": "integer",
                    "description": "Only actions with a duration more than or equal to this value (in milliseconds) are included in the metric calculation.\n"
                },
                "actionDurationToMilliseconds": {
                    "type": "integer",
                    "description": "Only actions with a duration less than or equal to this value (in milliseconds) are included in the metric calculation.\n"
                },
                "apdex": {
                    "type": "string",
                    "description": "Only actions with the specified Apdex score are included in the metric calculation. Possible values: [ Frustrated, Satisfied, Tolerating, Unknown ]\n"
                },
                "browserFamily": {
                    "type": "string",
                    "description": "Only user actions coming from the specified browser family are included in the metric calculation.\n"
                },
                "browserType": {
                    "type": "string",
                    "description": "Only user actions coming from the specified browser type are included in the metric calculation.\n"
                },
                "browserVersion": {
                    "type": "string",
                    "description": "Only user actions coming from the specified browser version are included in the metric calculation.\n"
                },
                "city": {
                    "type": "string",
                    "description": "Only actions of users from this city are included in the metric calculation. Specify geolocation ID here.\n"
                },
                "continent": {
                    "type": "string",
                    "description": "Only actions of users from this continent are included in the metric calculation. Specify geolocation ID here.\n"
                },
                "country": {
                    "type": "string",
                    "description": "Only actions of users from this country are included in the metric calculation. Specify geolocation ID here.\n"
                },
                "customAction": {
                    "type": "boolean",
                    "description": "The status of custom actions in the metric calculation: `true` or `false`\n"
                },
                "customErrorName": {
                    "type": "string",
                    "description": "The custom error name of the actions to be included in the metric calculation.\n"
                },
                "customErrorType": {
                    "type": "string",
                    "description": "The custom error type of the actions to be included in the metric calculation.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Only user actions coming from the specified domain are included in the metric calculation.\n"
                },
                "hasAnyError": {
                    "type": "boolean",
                    "description": "The error status of the actions to be included in the metric calculation: `true` or `false`\n"
                },
                "hasCustomErrors": {
                    "type": "boolean",
                    "description": "The custom error status of the actions to be included in the metric calculation: `true` or `false`\n"
                },
                "hasHttpErrors": {
                    "type": "boolean",
                    "description": "The request error status of the actions to be included in the metric calculation: `true` or `false`\n"
                },
                "hasJavascriptErrors": {
                    "type": "boolean",
                    "description": "The JavaScript error status of the actions to be included in the metric calculation: `true` or `false`\n"
                },
                "httpErrorCode": {
                    "type": "integer",
                    "description": "The HTTP error status code of the actions to be included in the metric calculation.\n"
                },
                "httpErrorCodeTo": {
                    "type": "integer",
                    "description": "Can be used in combination with httpErrorCode to define a range of error codes that will be included in the metric calculation.\n"
                },
                "httpPath": {
                    "type": "string",
                    "description": "The request path that has been determined to be the origin of an HTTP error of the actions to be included in the metric calculation.\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Only actions coming from this IP address are included in the metric calculation.\n"
                },
                "ipV6Traffic": {
                    "type": "boolean",
                    "description": "The IPv6 status of the actions to be included in the metric calculation: `true` or `false`\n"
                },
                "loadAction": {
                    "type": "boolean",
                    "description": "The status of load actions in the metric calculation: `true` or `false`\n"
                },
                "osFamily": {
                    "type": "string",
                    "description": "Only actions coming from this OS family are included in the metric calculation.\n"
                },
                "osVersion": {
                    "type": "string",
                    "description": "Only actions coming from this OS version are included in the metric calculation.\n"
                },
                "realUser": {
                    "type": "boolean",
                    "description": "The status of actions coming from real users in the metric calculation: `true` or `false`\n"
                },
                "region": {
                    "type": "string",
                    "description": "Only actions of users from this region are included in the metric calculation. Specify geolocation ID here.\n"
                },
                "robot": {
                    "type": "boolean",
                    "description": "The status of actions coming from robots in the metric calculation: `true` or `false`\n"
                },
                "synthetic": {
                    "type": "boolean",
                    "description": "The status of actions coming from synthetic monitors in the metric calculation: `true` or `false`\n"
                },
                "targetViewGroup": {
                    "type": "string",
                    "description": "Only actions on the specified group of views are included in the metric calculation.\n"
                },
                "targetViewGroupNameMatchType": {
                    "type": "string",
                    "description": "Specifies the match type of the view group filter, e.g. using Contains or Equals. Defaults to Equals.\n"
                },
                "targetViewName": {
                    "type": "string",
                    "description": "Only actions on the specified view are included in the metric calculation.\n"
                },
                "targetViewNameMatchType": {
                    "type": "string",
                    "description": "Specifies the match type of the view name filter, e.g. using Contains or Equals. Defaults to Equals.\n"
                },
                "userActionName": {
                    "type": "string",
                    "description": "Only actions with this name are included in the metric calculation.\n"
                },
                "userActionProperties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CalculatedWebMetricUserActionFilterUserActionProperty:CalculatedWebMetricUserActionFilterUserActionProperty"
                    },
                    "description": "The definition of a calculated web metric.\n"
                },
                "xhrAction": {
                    "type": "boolean",
                    "description": "The status of xhr actions in the metric calculation: `true` or `false`\n"
                },
                "xhrRouteChangeAction": {
                    "type": "boolean",
                    "description": "The status of route actions in the metric calculation: `true` or `false`\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedWebMetricUserActionFilterUserActionProperty:CalculatedWebMetricUserActionFilterUserActionProperty": {
            "properties": {
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CalculatedWebMetricUserActionFilterUserActionPropertyProperty:CalculatedWebMetricUserActionFilterUserActionPropertyProperty"
                    },
                    "description": "User Action Property\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/CalculatedWebMetricUserActionFilterUserActionPropertyProperty:CalculatedWebMetricUserActionFilterUserActionPropertyProperty": {
            "properties": {
                "from": {
                    "type": "number",
                    "description": "Only actions that have a value greater than or equal to this are included in the metric calculation.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The key of the action property we're checking.\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "Specifies the match type of a string filter, e.g. using Contains or Equals.\n"
                },
                "to": {
                    "type": "number",
                    "description": "Only actions that have a value less than or equal to this are included in the metric calculation.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Only actions that have this value in the specified property are included in the metric calculation.\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/CloudappWorkloaddetectionCloudFoundry:CloudappWorkloaddetectionCloudFoundry": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/CloudappWorkloaddetectionDocker:CloudappWorkloaddetectionDocker": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/CloudappWorkloaddetectionKubernetes:CloudappWorkloaddetectionKubernetes": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "filters": {
                    "$ref": "#/types/dynatrace:index/CloudappWorkloaddetectionKubernetesFilters:CloudappWorkloaddetectionKubernetesFilters"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/CloudappWorkloaddetectionKubernetesFilters:CloudappWorkloaddetectionKubernetesFilters": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CloudappWorkloaddetectionKubernetesFiltersFilter:CloudappWorkloaddetectionKubernetesFiltersFilter"
                    }
                }
            },
            "type": "object",
            "required": [
                "filters"
            ]
        },
        "dynatrace:index/CloudappWorkloaddetectionKubernetesFiltersFilter:CloudappWorkloaddetectionKubernetesFiltersFilter": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "inclusionToggles": {
                    "$ref": "#/types/dynatrace:index/CloudappWorkloaddetectionKubernetesFiltersFilterInclusionToggles:CloudappWorkloaddetectionKubernetesFiltersFilterInclusionToggles"
                },
                "matchFilter": {
                    "$ref": "#/types/dynatrace:index/CloudappWorkloaddetectionKubernetesFiltersFilterMatchFilter:CloudappWorkloaddetectionKubernetesFiltersFilterMatchFilter"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "inclusionToggles",
                "matchFilter"
            ]
        },
        "dynatrace:index/CloudappWorkloaddetectionKubernetesFiltersFilterInclusionToggles:CloudappWorkloaddetectionKubernetesFiltersFilterInclusionToggles": {
            "properties": {
                "incBasepod": {
                    "type": "boolean"
                },
                "incContainer": {
                    "type": "boolean"
                },
                "incNamespace": {
                    "type": "boolean"
                },
                "incProduct": {
                    "type": "boolean"
                },
                "incStage": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "incBasepod",
                "incContainer",
                "incNamespace",
                "incProduct",
                "incStage"
            ]
        },
        "dynatrace:index/CloudappWorkloaddetectionKubernetesFiltersFilterMatchFilter:CloudappWorkloaddetectionKubernetesFiltersFilterMatchFilter": {
            "properties": {
                "matchOperator": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "matchOperator"
            ]
        },
        "dynatrace:index/CredentialsCredentialUsageSummary:CredentialsCredentialUsageSummary": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of uses\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of usage, `HTTP_MONITOR` or `BROWSER_MONITOR`\n"
                }
            },
            "type": "object",
            "required": [
                "count",
                "type"
            ]
        },
        "dynatrace:index/CredentialsExternal:CredentialsExternal": {
            "properties": {
                "certificate": {
                    "type": "string",
                    "description": "Required for Hashicorp Certificate. The ID of Credentials within the Certificate Vault holding the certificate\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Required for Azure Client Secret. No further documentation available\n"
                },
                "clientid": {
                    "type": "string",
                    "description": "Required for Azure Client Secret. No further documentation available\n"
                },
                "credentialsUsedForExternalSynchronizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "No documentation available\n"
                },
                "passwordSecretName": {
                    "type": "string",
                    "description": "No documentation available\n"
                },
                "pathToCredentials": {
                    "type": "string",
                    "description": "Required for Hashicorp App Role or Hashicorp Certificate. No further documentation available\n"
                },
                "roleid": {
                    "type": "string",
                    "description": "Required for Hashicorp App Role. No further documentation available\n"
                },
                "secretid": {
                    "type": "string",
                    "description": "Required for Hashicorp App Role. The ID of Credentials within the Certificate Vault holding the secret id\n"
                },
                "tenantid": {
                    "type": "string",
                    "description": "Required for Azure Client Secret. No further documentation available\n"
                },
                "tokenSecretName": {
                    "type": "string",
                    "description": "No documentation available\n"
                },
                "usernameSecretName": {
                    "type": "string",
                    "description": "No documentation available\n"
                },
                "vaultNamespace": {
                    "type": "string",
                    "description": "Required for Hashicorp App Role. No further documentation available\n"
                },
                "vaultUrl": {
                    "type": "string",
                    "description": "No documentation available\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/CustomAnomaliesDimension:CustomAnomaliesDimension": {
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesDimensionDimension:CustomAnomaliesDimensionDimension"
                    },
                    "description": "A generic definition for a filter\n"
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesDimensionEntity:CustomAnomaliesDimensionEntity"
                    },
                    "description": "A filter for the metrics entity dimensions\n"
                },
                "strings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesDimensionString:CustomAnomaliesDimensionString"
                    },
                    "description": "A filter for the metrics string dimensions\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/CustomAnomaliesDimensionDimension:CustomAnomaliesDimensionDimension": {
            "properties": {
                "index": {
                    "type": "integer",
                    "description": "No documentation available\n"
                },
                "key": {
                    "type": "string",
                    "description": "The dimensions key on the metric\n"
                },
                "name": {
                    "type": "string",
                    "description": "No documentation available\n"
                },
                "type": {
                    "type": "string",
                    "description": "Defines the actual set of fields depending on the value\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/CustomAnomaliesDimensionEntity:CustomAnomaliesDimensionEntity": {
            "properties": {
                "filter": {
                    "$ref": "#/types/dynatrace:index/CustomAnomaliesDimensionEntityFilter:CustomAnomaliesDimensionEntityFilter",
                    "description": "A filter for a string value based on the given operator\n"
                },
                "key": {
                    "type": "string",
                    "description": "The dimensions key on the metric\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "filter"
            ]
        },
        "dynatrace:index/CustomAnomaliesDimensionEntityFilter:CustomAnomaliesDimensionEntityFilter": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "The operator to match on\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value to match on\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/CustomAnomaliesDimensionString:CustomAnomaliesDimensionString": {
            "properties": {
                "filter": {
                    "$ref": "#/types/dynatrace:index/CustomAnomaliesDimensionStringFilter:CustomAnomaliesDimensionStringFilter",
                    "description": "A filter for a string value based on the given operator\n"
                },
                "index": {
                    "type": "integer",
                    "description": "No documentation available\n"
                },
                "key": {
                    "type": "string",
                    "description": "The dimensions key on the metric\n"
                },
                "name": {
                    "type": "string",
                    "description": "No documentation available\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "filter"
            ]
        },
        "dynatrace:index/CustomAnomaliesDimensionStringFilter:CustomAnomaliesDimensionStringFilter": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "The operator to match on\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value to match on\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/CustomAnomaliesScope:CustomAnomaliesScope": {
            "properties": {
                "customDeviceGroupNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeCustomDeviceGroupName:CustomAnomaliesScopeCustomDeviceGroupName"
                    },
                    "description": "A scope filter for the related custom device group name\n"
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeEntity:CustomAnomaliesScopeEntity"
                    },
                    "description": "A scope filter for a monitored entity identifier\n"
                },
                "hostGroupNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeHostGroupName:CustomAnomaliesScopeHostGroupName"
                    },
                    "description": "A scope filter for the related host group name\n"
                },
                "hostNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeHostName:CustomAnomaliesScopeHostName"
                    },
                    "description": "A scope filter for the related host name\n"
                },
                "managementZones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeManagementZone:CustomAnomaliesScopeManagementZone"
                    },
                    "description": "A scope filter for a management zone identifier\n"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeName:CustomAnomaliesScopeName"
                    },
                    "description": "A scope filter for a monitored entity name\n"
                },
                "processGroupIds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeProcessGroupId:CustomAnomaliesScopeProcessGroupId"
                    },
                    "description": "A scope filter for a process group identifier\n"
                },
                "processGroupNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeProcessGroupName:CustomAnomaliesScopeProcessGroupName"
                    },
                    "description": "A scope filter for the related process group name\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeScope:CustomAnomaliesScopeScope"
                    },
                    "description": "A generic scope filter\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeTag:CustomAnomaliesScopeTag"
                    },
                    "description": "A scope filter for tags on entities\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/CustomAnomaliesScopeCustomDeviceGroupName:CustomAnomaliesScopeCustomDeviceGroupName": {
            "properties": {
                "filter": {
                    "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeCustomDeviceGroupNameFilter:CustomAnomaliesScopeCustomDeviceGroupNameFilter",
                    "description": "A filter for a string value based on the given operator\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "filter"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeCustomDeviceGroupNameFilter:CustomAnomaliesScopeCustomDeviceGroupNameFilter": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "The operator to match on\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value to match on\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeEntity:CustomAnomaliesScopeEntity": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The monitored entities id to match on\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeHostGroupName:CustomAnomaliesScopeHostGroupName": {
            "properties": {
                "filter": {
                    "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeHostGroupNameFilter:CustomAnomaliesScopeHostGroupNameFilter",
                    "description": "A filter for a string value based on the given operator\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "filter"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeHostGroupNameFilter:CustomAnomaliesScopeHostGroupNameFilter": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "The operator to match on\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value to match on\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeHostName:CustomAnomaliesScopeHostName": {
            "properties": {
                "filter": {
                    "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeHostNameFilter:CustomAnomaliesScopeHostNameFilter",
                    "description": "A filter for a string value based on the given operator\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "filter"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeHostNameFilter:CustomAnomaliesScopeHostNameFilter": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "The operator to match on\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value to match on\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeManagementZone:CustomAnomaliesScopeManagementZone": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The monitored entities id to match on\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/CustomAnomaliesScopeName:CustomAnomaliesScopeName": {
            "properties": {
                "filter": {
                    "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeNameFilter:CustomAnomaliesScopeNameFilter",
                    "description": "A filter for a string value based on the given operator\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "filter"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeNameFilter:CustomAnomaliesScopeNameFilter": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "The operator to match on\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value to match on\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeProcessGroupId:CustomAnomaliesScopeProcessGroupId": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The monitored entities id to match on\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeProcessGroupName:CustomAnomaliesScopeProcessGroupName": {
            "properties": {
                "filter": {
                    "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeProcessGroupNameFilter:CustomAnomaliesScopeProcessGroupNameFilter",
                    "description": "A filter for a string value based on the given operator\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "filter"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeProcessGroupNameFilter:CustomAnomaliesScopeProcessGroupNameFilter": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "The operator to match on\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value to match on\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeScope:CustomAnomaliesScopeScope": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Defines the actual set of fields depending on the value\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeTag:CustomAnomaliesScopeTag": {
            "properties": {
                "filter": {
                    "$ref": "#/types/dynatrace:index/CustomAnomaliesScopeTagFilter:CustomAnomaliesScopeTagFilter",
                    "description": "A filter for a string value based on the given operator\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "filter"
            ]
        },
        "dynatrace:index/CustomAnomaliesScopeTagFilter:CustomAnomaliesScopeTagFilter": {
            "properties": {
                "context": {
                    "type": "string",
                    "description": "The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value\n"
                },
                "key": {
                    "type": "string",
                    "description": "The dimensions key on the metric\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value to match on\n"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/CustomAnomaliesStrategy:CustomAnomaliesStrategy": {
            "properties": {
                "auto": {
                    "$ref": "#/types/dynatrace:index/CustomAnomaliesStrategyAuto:CustomAnomaliesStrategyAuto",
                    "description": "An auto-adaptive baseline strategy to detect anomalies within metrics that show a regular change over time, as the baseline is also updated automatically. An example is to detect an anomaly in the number of received network packets or within the number of user actions over time\n"
                },
                "generics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesStrategyGeneric:CustomAnomaliesStrategyGeneric"
                    },
                    "description": "A generic monitoring strategy\n"
                },
                "static": {
                    "$ref": "#/types/dynatrace:index/CustomAnomaliesStrategyStatic:CustomAnomaliesStrategyStatic",
                    "description": "A static threshold monitoring strategy to alert on hard limits within a given metric. An example is the violation of a critical memory limit\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/CustomAnomaliesStrategyAuto:CustomAnomaliesStrategyAuto": {
            "properties": {
                "alertCondition": {
                    "type": "string",
                    "description": "The condition for the **threshold** value check: `ABOVE` or `BELOW`\n"
                },
                "alertingOnMissingData": {
                    "type": "boolean",
                    "description": "If true, also one-minute samples without data are counted as violating samples\n"
                },
                "dealertingSamples": {
                    "type": "integer",
                    "description": "The number of one-minute samples within the evaluation window that must go back to normal to close the event\n"
                },
                "samples": {
                    "type": "integer",
                    "description": "The number of one-minute samples that form the sliding evaluation window\n"
                },
                "signalFluctuations": {
                    "type": "number",
                    "description": "Defines the factor of how many signal fluctuations are valid. Values above the baseline plus the signal fluctuation times the number of tolerated signal fluctuations are alerted\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "violatingSamples": {
                    "type": "integer",
                    "description": "The number of one-minute samples within the evaluation window that must violate the threshold to trigger an event\n"
                }
            },
            "type": "object",
            "required": [
                "alertCondition",
                "dealertingSamples",
                "samples",
                "signalFluctuations",
                "violatingSamples"
            ]
        },
        "dynatrace:index/CustomAnomaliesStrategyGeneric:CustomAnomaliesStrategyGeneric": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Defines the actual set of fields depending on the value\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/CustomAnomaliesStrategyStatic:CustomAnomaliesStrategyStatic": {
            "properties": {
                "alertCondition": {
                    "type": "string",
                    "description": "The condition for the **threshold** value check: `ABOVE` or `BELOW`\n"
                },
                "alertingOnMissingData": {
                    "type": "boolean",
                    "description": "If true, also one-minute samples without data are counted as violating samples\n"
                },
                "dealertingSamples": {
                    "type": "integer",
                    "description": "The number of one-minute samples within the evaluation window that must go back to normal to close the event\n"
                },
                "samples": {
                    "type": "integer",
                    "description": "The number of one-minute samples that form the sliding evaluation window\n"
                },
                "threshold": {
                    "type": "number",
                    "description": "The value of the static threshold based on the specified unit\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit of the threshold, matching the metric definition\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "violatingSamples": {
                    "type": "integer",
                    "description": "The number of one-minute samples within the evaluation window that must violate the threshold to trigger an event\n"
                }
            },
            "type": "object",
            "required": [
                "alertCondition",
                "dealertingSamples",
                "samples",
                "threshold",
                "unit",
                "violatingSamples"
            ]
        },
        "dynatrace:index/CustomAppAnomaliesErrorRateIncrease:CustomAppAnomaliesErrorRateIncrease": {
            "properties": {
                "detectionMode": {
                    "type": "string",
                    "description": "Possible Values: `Auto`, `Fixed`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "errorRateIncreaseAuto": {
                    "$ref": "#/types/dynatrace:index/CustomAppAnomaliesErrorRateIncreaseErrorRateIncreaseAuto:CustomAppAnomaliesErrorRateIncreaseErrorRateIncreaseAuto",
                    "description": "Alert if the percentage of user actions affected by reported errors exceeds **both** the absolute threshold and the relative threshold\n"
                },
                "errorRateIncreaseFixed": {
                    "$ref": "#/types/dynatrace:index/CustomAppAnomaliesErrorRateIncreaseErrorRateIncreaseFixed:CustomAppAnomaliesErrorRateIncreaseErrorRateIncreaseFixed",
                    "description": "Alert if the custom reported error rate threshold is exceeded during any 5-minute period\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/CustomAppAnomaliesErrorRateIncreaseErrorRateIncreaseAuto:CustomAppAnomaliesErrorRateIncreaseErrorRateIncreaseAuto": {
            "properties": {
                "thresholdAbsolute": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                },
                "thresholdRelative": {
                    "type": "number",
                    "description": "Relative threshold\n"
                }
            },
            "type": "object",
            "required": [
                "thresholdAbsolute",
                "thresholdRelative"
            ]
        },
        "dynatrace:index/CustomAppAnomaliesErrorRateIncreaseErrorRateIncreaseFixed:CustomAppAnomaliesErrorRateIncreaseErrorRateIncreaseFixed": {
            "properties": {
                "sensitivity": {
                    "type": "string",
                    "description": "Possible Values: `Low`, `Medium`, `High`\n"
                },
                "thresholdAbsolute": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                }
            },
            "type": "object",
            "required": [
                "sensitivity",
                "thresholdAbsolute"
            ]
        },
        "dynatrace:index/CustomAppAnomaliesSlowUserActions:CustomAppAnomaliesSlowUserActions": {
            "properties": {
                "detectionMode": {
                    "type": "string",
                    "description": "Possible Values: `Auto`, `Fixed`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "slowUserActionsAuto": {
                    "$ref": "#/types/dynatrace:index/CustomAppAnomaliesSlowUserActionsSlowUserActionsAuto:CustomAppAnomaliesSlowUserActionsSlowUserActionsAuto",
                    "description": "no documentation available\n"
                },
                "slowUserActionsFixed": {
                    "$ref": "#/types/dynatrace:index/CustomAppAnomaliesSlowUserActionsSlowUserActionsFixed:CustomAppAnomaliesSlowUserActionsSlowUserActionsFixed",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/CustomAppAnomaliesSlowUserActionsSlowUserActionsAuto:CustomAppAnomaliesSlowUserActionsSlowUserActionsAuto": {
            "properties": {
                "durationAvoidOveralerting": {
                    "$ref": "#/types/dynatrace:index/CustomAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationAvoidOveralerting:CustomAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationAvoidOveralerting",
                    "description": "To avoid over-alerting do not alert for low traffic applications with less than\n"
                },
                "durationThresholdAll": {
                    "$ref": "#/types/dynatrace:index/CustomAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationThresholdAll:CustomAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationThresholdAll",
                    "description": "Alert if the action duration of all user actions degrades beyond **both** the absolute and relative threshold:\n"
                },
                "durationThresholdSlowest": {
                    "$ref": "#/types/dynatrace:index/CustomAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationThresholdSlowest:CustomAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationThresholdSlowest",
                    "description": "Alert if the action duration of the slowest 10% of user actions degrades beyond **both** the absolute and relative threshold:\n"
                }
            },
            "type": "object",
            "required": [
                "durationAvoidOveralerting",
                "durationThresholdAll",
                "durationThresholdSlowest"
            ]
        },
        "dynatrace:index/CustomAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationAvoidOveralerting:CustomAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationAvoidOveralerting": {
            "properties": {
                "minActionRate": {
                    "type": "integer",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "minActionRate"
            ]
        },
        "dynatrace:index/CustomAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationThresholdAll:CustomAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationThresholdAll": {
            "properties": {
                "durationThreshold": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                },
                "slowdownPercentage": {
                    "type": "number",
                    "description": "Relative threshold\n"
                }
            },
            "type": "object",
            "required": [
                "durationThreshold",
                "slowdownPercentage"
            ]
        },
        "dynatrace:index/CustomAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationThresholdSlowest:CustomAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationThresholdSlowest": {
            "properties": {
                "durationThreshold": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                },
                "slowdownPercentage": {
                    "type": "number",
                    "description": "Relative threshold\n"
                }
            },
            "type": "object",
            "required": [
                "durationThreshold",
                "slowdownPercentage"
            ]
        },
        "dynatrace:index/CustomAppAnomaliesSlowUserActionsSlowUserActionsFixed:CustomAppAnomaliesSlowUserActionsSlowUserActionsFixed": {
            "properties": {
                "durationAvoidOveralerting": {
                    "$ref": "#/types/dynatrace:index/CustomAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationAvoidOveralerting:CustomAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationAvoidOveralerting",
                    "description": "To avoid over-alerting do not alert for low traffic applications with less than\n"
                },
                "durationThresholdAllFixed": {
                    "$ref": "#/types/dynatrace:index/CustomAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationThresholdAllFixed:CustomAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationThresholdAllFixed",
                    "description": "Alert if the action duration of all user actions degrades beyond the absolute threshold:\n"
                },
                "durationThresholdSlowest": {
                    "$ref": "#/types/dynatrace:index/CustomAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationThresholdSlowest:CustomAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationThresholdSlowest",
                    "description": "Alert if the action duration of the slowest 10% of user actions degrades beyond **both** the absolute and relative threshold:\n"
                },
                "sensitivity": {
                    "type": "string",
                    "description": "Possible Values: `Low`, `Medium`, `High`\n"
                }
            },
            "type": "object",
            "required": [
                "durationAvoidOveralerting",
                "durationThresholdAllFixed",
                "durationThresholdSlowest",
                "sensitivity"
            ]
        },
        "dynatrace:index/CustomAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationAvoidOveralerting:CustomAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationAvoidOveralerting": {
            "properties": {
                "minActionRate": {
                    "type": "integer",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "minActionRate"
            ]
        },
        "dynatrace:index/CustomAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationThresholdAllFixed:CustomAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationThresholdAllFixed": {
            "properties": {
                "durationThreshold": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                }
            },
            "type": "object",
            "required": [
                "durationThreshold"
            ]
        },
        "dynatrace:index/CustomAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationThresholdSlowest:CustomAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationThresholdSlowest": {
            "properties": {
                "durationThreshold": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                }
            },
            "type": "object",
            "required": [
                "durationThreshold"
            ]
        },
        "dynatrace:index/CustomAppAnomaliesUnexpectedHighLoad:CustomAppAnomaliesUnexpectedHighLoad": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "thresholdPercentage": {
                    "type": "number",
                    "description": "Dynatrace learns your typical application traffic over an observation period of one week. Depending on this expected value Dynatrace detects abnormal traffic spikes within your application.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/CustomAppAnomaliesUnexpectedLowLoad:CustomAppAnomaliesUnexpectedLowLoad": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "thresholdPercentage": {
                    "type": "number",
                    "description": "Dynatrace learns your typical application traffic over an observation period of one week. Depending on this expected value Dynatrace detects abnormal traffic drops within your application.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/CustomAppCrashRateCrashRateIncrease:CustomAppCrashRateCrashRateIncrease": {
            "properties": {
                "crashRateIncreaseAuto": {
                    "$ref": "#/types/dynatrace:index/CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseAuto:CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseAuto",
                    "description": "Alert crash rate increases when auto-detected baseline is exceeded by a certain number of users\n"
                },
                "crashRateIncreaseFixed": {
                    "$ref": "#/types/dynatrace:index/CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseFixed:CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseFixed",
                    "description": "Alert crash rate increases when the defined threshold is exceeded by a certain number of users\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Possible Values: `Auto`, `Fixed`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseAuto:CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseAuto": {
            "properties": {
                "baselineViolationPercentage": {
                    "type": "number",
                    "description": "Dynatrace learns the typical crash rate for all app versions and will create an alert if the baseline is violated by more than a specified threshold. Analysis happens based on a sliding window of 10 minutes.\n"
                },
                "concurrentUsers": {
                    "type": "number",
                    "description": "Amount of users\n"
                },
                "sensitivity": {
                    "type": "string",
                    "description": "Possible Values: `Low`, `Medium`, `High`\n"
                }
            },
            "type": "object",
            "required": [
                "baselineViolationPercentage",
                "concurrentUsers",
                "sensitivity"
            ]
        },
        "dynatrace:index/CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseFixed:CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseFixed": {
            "properties": {
                "absoluteCrashRate": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                },
                "concurrentUsers": {
                    "type": "integer",
                    "description": "Amount of users\n"
                }
            },
            "type": "object",
            "required": [
                "absoluteCrashRate",
                "concurrentUsers"
            ]
        },
        "dynatrace:index/CustomAppEnablementRum:CustomAppEnablementRum": {
            "properties": {
                "costAndTrafficControl": {
                    "type": "integer",
                    "description": "(Field has overlap with `dynatrace.MobileApplication`) Percentage of user sessions captured and analyzed. By default, Dynatrace captures all user actions and user sessions for analysis. This approach ensures complete insight into your application’s performance and customer experience. You can optionally reduce the granularity of user-action and user-session analysis by capturing a lower percentage of user sessions. While this approach can reduce monitoring costs, it also results in lower visibility into how your customers are using your applications. For example, a setting of 10% results in Dynatrace analyzing only every tenth user session.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "costAndTrafficControl",
                "enabled"
            ]
        },
        "dynatrace:index/CustomServiceRule:CustomServiceRule": {
            "properties": {
                "annotations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Additional annotations filter of the rule. Only classes where all listed annotations are available in the class itself or any of its superclasses are instrumented. Not applicable to PHP\n"
                },
                "class": {
                    "$ref": "#/types/dynatrace:index/CustomServiceRuleClass:CustomServiceRuleClass",
                    "description": "The fully qualified class or interface to instrument (or a substring if matching to a string). Required for Java and .NET custom services. Not applicable to PHP\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Rule enabled/disabled\n"
                },
                "file": {
                    "$ref": "#/types/dynatrace:index/CustomServiceRuleFile:CustomServiceRuleFile",
                    "description": "The PHP file containing the class or methods to instrument. Required for PHP custom service. Not applicable to Java and .NET\n"
                },
                "methods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomServiceRuleMethod:CustomServiceRuleMethod"
                    },
                    "description": "methods to instrument\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "methods"
            ]
        },
        "dynatrace:index/CustomServiceRuleClass:CustomServiceRuleClass": {
            "properties": {
                "match": {
                    "type": "string",
                    "description": "Matcher applying to the class name (ENDS*WITH, EQUALS or STARTS*WITH). STARTS_WITH can only be used if there is at least one annotation defined. Default value is EQUALS\n"
                },
                "name": {
                    "type": "string",
                    "description": "The full name of the class / the name to match the class name with\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "dynatrace:index/CustomServiceRuleFile:CustomServiceRuleFile": {
            "properties": {
                "match": {
                    "type": "string",
                    "description": "Matcher applying to the class name (ENDS*WITH, EQUALS or STARTS*WITH). STARTS_WITH can only be used if there is at least one annotation defined. Default value is EQUALS\n"
                },
                "name": {
                    "type": "string",
                    "description": "The full name of the class / the name to match the class name with\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "dynatrace:index/CustomServiceRuleMethod:CustomServiceRuleMethod": {
            "properties": {
                "arguments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Fully qualified types of argument the method expects\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the method rule\n"
                },
                "modifiers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The modifiers of the method rule. Possible values are `ABSTRACT`, `EXTERN`, `FINAL`, `NATIVE` and `STATIC`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The full name of the class / the name to match the class name with\n"
                },
                "returns": {
                    "type": "string",
                    "description": "Fully qualified type the method returns\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "visibility": {
                    "type": "string",
                    "description": "The visibility of the method rule. Possible values are `INTERNAL`, `PACKAGE_PROTECTED`, `PRIVATE`, `PROTECTED` and `PUBLIC`\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name"
                    ]
                }
            }
        },
        "dynatrace:index/CustomTagsTags:CustomTagsTags": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomTagsTagsFilter:CustomTagsTagsFilter"
                    },
                    "description": "A Tag Filter\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/CustomTagsTagsFilter:CustomTagsTagsFilter": {
            "properties": {
                "context": {
                    "type": "string",
                    "description": "The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value\n"
                },
                "key": {
                    "type": "string",
                    "description": "The key of the tag. Custom tags have the tag value here\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the tag. Not applicable to custom tags\n"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/DashboardDashboardMetadata:DashboardDashboardMetadata": {
            "properties": {
                "consistentColors": {
                    "type": "boolean",
                    "description": "The tile uses consistent colors when rendering its content\n"
                },
                "dynamicFilters": {
                    "$ref": "#/types/dynatrace:index/DashboardDashboardMetadataDynamicFilters:DashboardDashboardMetadataDynamicFilters",
                    "description": "Dashboard filter configuration of a dashboard\n"
                },
                "filter": {
                    "$ref": "#/types/dynatrace:index/DashboardDashboardMetadataFilter:DashboardDashboardMetadataFilter",
                    "description": "Global filter Settings for the Dashboard\n"
                },
                "name": {
                    "type": "string",
                    "description": "the name of the dashboard\n"
                },
                "owner": {
                    "type": "string",
                    "description": "the owner of the dashboard\n"
                },
                "preset": {
                    "type": "boolean",
                    "description": "the dashboard is a preset (`true`) or not (`false`). Default is `false`.\n"
                },
                "shared": {
                    "type": "boolean",
                    "description": "the dashboard is shared (`true`) or private (`false`)\n",
                    "deprecationMessage": "Please use the resource `dynatrace_dashboard_sharing` to configure share settings"
                },
                "sharingDetails": {
                    "$ref": "#/types/dynatrace:index/DashboardDashboardMetadataSharingDetails:DashboardDashboardMetadataSharingDetails",
                    "description": "represents sharing configuration of a dashboard\n",
                    "deprecationMessage": "Please use the resource `dynatrace_dashboard_sharing` to configure share settings"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "a set of tags assigned to the dashboard\n"
                },
                "tilesNameSize": {
                    "type": "string",
                    "description": "No documentation available\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "validFilterKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "a set of all possible global dashboard filters that can be applied to dashboard\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "owner"
            ]
        },
        "dynatrace:index/DashboardDashboardMetadataDynamicFilters:DashboardDashboardMetadataDynamicFilters": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of all possible global dashboard filters that can be applied to a dashboard\n"
                },
                "genericTagFilters": {
                    "$ref": "#/types/dynatrace:index/DashboardDashboardMetadataDynamicFiltersGenericTagFilters:DashboardDashboardMetadataDynamicFiltersGenericTagFilters"
                },
                "tagSuggestionTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "filters"
            ]
        },
        "dynatrace:index/DashboardDashboardMetadataDynamicFiltersGenericTagFilters:DashboardDashboardMetadataDynamicFiltersGenericTagFilters": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DashboardDashboardMetadataDynamicFiltersGenericTagFiltersFilter:DashboardDashboardMetadataDynamicFiltersGenericTagFiltersFilter"
                    }
                }
            },
            "type": "object",
            "required": [
                "filters"
            ]
        },
        "dynatrace:index/DashboardDashboardMetadataDynamicFiltersGenericTagFiltersFilter:DashboardDashboardMetadataDynamicFiltersGenericTagFiltersFilter": {
            "properties": {
                "entityTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Entity types affected by tag\n"
                },
                "name": {
                    "type": "string",
                    "description": "The display name used to identify this generic filter\n"
                },
                "suggestionsFromEntityType": {
                    "type": "string",
                    "description": "The entity type for which the suggestions should be provided.\n"
                },
                "tagKey": {
                    "type": "string",
                    "description": "The tag key for this filter\n"
                }
            },
            "type": "object",
            "required": [
                "entityTypes"
            ]
        },
        "dynatrace:index/DashboardDashboardMetadataFilter:DashboardDashboardMetadataFilter": {
            "properties": {
                "managementZones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DashboardDashboardMetadataFilterManagementZone:DashboardDashboardMetadataFilterManagementZone"
                    },
                    "description": "the management zone this dashboard applies to\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "the default timeframe of the dashboard\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/DashboardDashboardMetadataFilterManagementZone:DashboardDashboardMetadataFilterManagementZone": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "a short description of the Dynatrace entity\n"
                },
                "id": {
                    "type": "string",
                    "description": "the ID of the Dynatrace entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "The display name used to identify this generic filter\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "dynatrace:index/DashboardDashboardMetadataSharingDetails:DashboardDashboardMetadataSharingDetails": {
            "properties": {
                "linkShared": {
                    "type": "boolean",
                    "description": "If `true`, the dashboard is shared via link and authenticated users with the link can view\n"
                },
                "published": {
                    "type": "boolean",
                    "description": "If `true`, the dashboard is published to anyone on this environment\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/DashboardMetadata:DashboardMetadata": {
            "properties": {
                "clusterVersion": {
                    "type": "string",
                    "description": "Dynatrace server version\n"
                },
                "configurationVersions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A Sorted list of the version numbers of the configuration\n"
                },
                "currentConfigurationVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A Sorted list of the version numbers of the configuration\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/DashboardSharingPermissions:DashboardSharingPermissions": {
            "properties": {
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DashboardSharingPermissionsPermission:DashboardSharingPermissionsPermission"
                    },
                    "description": "Access permissions of the dashboard\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/DashboardSharingPermissionsPermission:DashboardSharingPermissionsPermission": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the user or group to whom the permission is granted.\n"
                },
                "level": {
                    "type": "string",
                    "description": "The level of the permission:\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the permission:\n"
                }
            },
            "type": "object",
            "required": [
                "level",
                "type"
            ]
        },
        "dynatrace:index/DashboardSharingPublic:DashboardSharingPublic": {
            "properties": {
                "managementZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of management zones that can display data on the publicly shared dashboard.\n"
                },
                "urls": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "managementZones"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "managementZones",
                        "urls"
                    ]
                }
            }
        },
        "dynatrace:index/DashboardTile:DashboardTile": {
            "properties": {
                "assignedEntities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Dynatrace entities, assigned to the tile\n"
                },
                "autoRefreshDisabled": {
                    "type": "boolean",
                    "description": "Auto Refresh is disabled (`true`)\n"
                },
                "bounds": {
                    "$ref": "#/types/dynatrace:index/DashboardTileBounds:DashboardTileBounds",
                    "description": "the position and size of a tile\n"
                },
                "chartVisible": {
                    "type": "boolean"
                },
                "configured": {
                    "type": "boolean",
                    "description": "The tile is configured and ready to use (`true`) or just placed on the dashboard (`false`)\n"
                },
                "customName": {
                    "type": "string",
                    "description": "The name of the tile, set by user\n"
                },
                "excludeMaintenanceWindows": {
                    "type": "boolean",
                    "description": "Include (`false') or exclude (`true`) maintenance windows from availability calculations\n"
                },
                "filter": {
                    "$ref": "#/types/dynatrace:index/DashboardTileFilter:DashboardTileFilter",
                    "description": "is filter applied to a tile. It overrides dashboard's filter\n"
                },
                "filterConfig": {
                    "$ref": "#/types/dynatrace:index/DashboardTileFilterConfig:DashboardTileFilterConfig",
                    "description": "the position and size of a tile\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "The limit of the results, if not set will use the default value of the system\n"
                },
                "markdown": {
                    "type": "string",
                    "description": "The markdown-formatted content of the tile\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric assigned to the tile\n"
                },
                "name": {
                    "type": "string",
                    "description": "the name of the tile\n"
                },
                "nameSize": {
                    "type": "string",
                    "description": "The size of the tile name. Possible values are `small`, `medium` and `large`.\n"
                },
                "query": {
                    "type": "string",
                    "description": "A [user session query](https://www.dynatrace.com/support/help/shortlink/usql-info) executed by the tile\n"
                },
                "tileType": {
                    "type": "string",
                    "description": "the type of the tile. Must be either `APPLICATION_WORLDMAP`, `RESOURCES`, `THIRD_PARTY_MOST_ACTIVE`, `UEM_CONVERSIONS_PER_GOAL`, `PROCESS_GROUPS_ONE` or `HOST` .\n"
                },
                "timeFrameShift": {
                    "type": "string",
                    "description": "The comparison timeframe of the query. If specified, you additionally get the results of the same query with the specified time shift\n"
                },
                "type": {
                    "type": "string",
                    "description": "The attribute `type` exists for backwards compatibilty. Usage is discouraged. You should use `visualization` instead.\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "visualization": {
                    "type": "string",
                    "description": "The visualization of the tile. Possible values are: `COLUMN_CHART`, `FUNNEL`, `LINE_CHART`, `PIE_CHART`, `SINGLE_VALUE`, `TABLE`\n"
                },
                "visualizationConfig": {
                    "$ref": "#/types/dynatrace:index/DashboardTileVisualizationConfig:DashboardTileVisualizationConfig",
                    "description": "Configuration of a User session query visualization tile\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "tileType"
            ]
        },
        "dynatrace:index/DashboardTileBounds:DashboardTileBounds": {
            "properties": {
                "height": {
                    "type": "integer",
                    "description": "the height of the tile, in pixels\n"
                },
                "left": {
                    "type": "integer",
                    "description": "the horizontal distance from the top left corner of the dashboard to the top left corner of the tile, in pixels\n"
                },
                "top": {
                    "type": "integer",
                    "description": "the vertical distance from the top left corner of the dashboard to the top left corner of the tile, in pixels\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "width": {
                    "type": "integer",
                    "description": "the width of the tile, in pixels\n"
                }
            },
            "type": "object",
            "required": [
                "height",
                "left",
                "top",
                "width"
            ]
        },
        "dynatrace:index/DashboardTileFilter:DashboardTileFilter": {
            "properties": {
                "managementZones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DashboardTileFilterManagementZone:DashboardTileFilterManagementZone"
                    },
                    "description": "the management zone this dashboard applies to\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "the default timeframe of the dashboard\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/DashboardTileFilterConfig:DashboardTileFilterConfig": {
            "properties": {
                "chartConfig": {
                    "$ref": "#/types/dynatrace:index/DashboardTileFilterConfigChartConfig:DashboardTileFilterConfigChartConfig",
                    "description": "Configuration of a custom chart\n"
                },
                "customName": {
                    "type": "string",
                    "description": "The name of the tile, set by user\n"
                },
                "defaultName": {
                    "type": "string",
                    "description": "The default name of the tile\n"
                },
                "filters": {
                    "$ref": "#/types/dynatrace:index/DashboardTileFilterConfigFilters:DashboardTileFilterConfigFilters",
                    "description": "A set of all possible global dashboard filters that can be applied to a dashboard\n"
                },
                "type": {
                    "type": "string",
                    "description": "The visualization of the timeseries chart. Possible values are `AREA`, `BAR` and `LINE`.\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "customName",
                "defaultName",
                "type"
            ]
        },
        "dynatrace:index/DashboardTileFilterConfigChartConfig:DashboardTileFilterConfigChartConfig": {
            "properties": {
                "axisLimits": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "description": "The optional custom y-axis limits\n"
                },
                "leftAxisCustomUnit": {
                    "type": "string",
                    "description": "Either one of `Bit`, `BitPerHour`, `BitPerMinute`, `BitPerSecond`, `Byte`, `BytePerHour`, `BytePerMinute`, `BytePerSecond`, `Cores`, `Count`, `Day`, `DecibelMilliWatt`, `GibiByte`, `Giga`, `GigaByte`, `Hour`, `KibiByte`, `KibiBytePerHour`, `KibiBytePerMinute`, `KibiBytePerSecond`, `Kilo`, `KiloByte`, `KiloBytePerHour`, `KiloBytePerMinute`, `KiloBytePerSecond`, `MebiByte`, `MebiBytePerHour`, `MebiBytePerMinute`, `MebiBytePerSecond`, `Mega`, `MegaByte`, `MegaBytePerHour`, `MegaBytePerMinute`, `MegaBytePerSecond`, `MicroSecond`, `MilliCores`, `MilliSecond`, `MilliSecondPerMinute`, `Minute`, `Month`, `NanoSecond`, `NanoSecondPerMinute`, `NotApplicable`, `PerHour`, `PerMinute`, `PerSecond`, `Percent`, `Pixel`, `Promille`, `Ratio`, `Second`, `State`, `Unspecified`, `Week`, `Year`\n"
                },
                "legend": {
                    "type": "boolean",
                    "description": "Defines if a legend should be shown\n"
                },
                "resultMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DashboardTileFilterConfigChartConfigResultMetadata:DashboardTileFilterConfigChartConfigResultMetadata"
                    },
                    "description": "Additional information about charted metric\n"
                },
                "rightAxisCustomUnit": {
                    "type": "string",
                    "description": "Either one of `Bit`, `BitPerHour`, `BitPerMinute`, `BitPerSecond`, `Byte`, `BytePerHour`, `BytePerMinute`, `BytePerSecond`, `Cores`, `Count`, `Day`, `DecibelMilliWatt`, `GibiByte`, `Giga`, `GigaByte`, `Hour`, `KibiByte`, `KibiBytePerHour`, `KibiBytePerMinute`, `KibiBytePerSecond`, `Kilo`, `KiloByte`, `KiloBytePerHour`, `KiloBytePerMinute`, `KiloBytePerSecond`, `MebiByte`, `MebiBytePerHour`, `MebiBytePerMinute`, `MebiBytePerSecond`, `Mega`, `MegaByte`, `MegaBytePerHour`, `MegaBytePerMinute`, `MegaBytePerSecond`, `MicroSecond`, `MilliCores`, `MilliSecond`, `MilliSecondPerMinute`, `Minute`, `Month`, `NanoSecond`, `NanoSecondPerMinute`, `NotApplicable`, `PerHour`, `PerMinute`, `PerSecond`, `Percent`, `Pixel`, `Promille`, `Ratio`, `Second`, `State`, `Unspecified`, `Week`, `Year`\n"
                },
                "series": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DashboardTileFilterConfigChartConfigSeries:DashboardTileFilterConfigChartConfigSeries"
                    },
                    "description": "A list of charted metrics\n"
                },
                "type": {
                    "type": "string",
                    "description": "The visualization of the timeseries chart. Possible values are `AREA`, `BAR` and `LINE`.\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/DashboardTileFilterConfigChartConfigResultMetadata:DashboardTileFilterConfigChartConfigResultMetadata": {
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DashboardTileFilterConfigChartConfigResultMetadataConfig:DashboardTileFilterConfigChartConfigResultMetadataConfig"
                    },
                    "description": "Additional metadata for charted metric\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/DashboardTileFilterConfigChartConfigResultMetadataConfig:DashboardTileFilterConfigChartConfigResultMetadataConfig": {
            "properties": {
                "customColor": {
                    "type": "string",
                    "description": "The color of the metric in the chart, hex format\n"
                },
                "key": {
                    "type": "string",
                    "description": "A generated key by the Dynatrace Server\n"
                },
                "lastModified": {
                    "type": "integer",
                    "description": "The timestamp of the last metadata modification, in UTC milliseconds\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/DashboardTileFilterConfigChartConfigSeries:DashboardTileFilterConfigChartConfigSeries": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The charted aggregation of the metric\n"
                },
                "aggregationRate": {
                    "type": "string"
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DashboardTileFilterConfigChartConfigSeriesDimension:DashboardTileFilterConfigChartConfigSeriesDimension"
                    },
                    "description": "Configuration of the charted metric splitting\n"
                },
                "entityType": {
                    "type": "string",
                    "description": "The visualization of the timeseries chart\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The name of the charted metric\n"
                },
                "percentile": {
                    "type": "integer",
                    "description": "The charted percentile. Only applicable if the **aggregation** is set to `PERCENTILE`\n"
                },
                "sortAscending": {
                    "type": "boolean",
                    "description": "Sort ascending (`true`) or descending (`false`)\n"
                },
                "sortColumn": {
                    "type": "boolean",
                    "description": "Sort the column (`true`) or (`false`)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The visualization of the timeseries chart. Possible values are `AREA`, `BAR` and `LINE`.\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "entityType",
                "metric",
                "type"
            ]
        },
        "dynatrace:index/DashboardTileFilterConfigChartConfigSeriesDimension:DashboardTileFilterConfigChartConfigSeriesDimension": {
            "properties": {
                "entityDimension": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string",
                    "description": "the ID of the Dynatrace entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "The display name used to identify this generic filter\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The splitting value\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "dynatrace:index/DashboardTileFilterConfigFilters:DashboardTileFilterConfigFilters": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DashboardTileFilterConfigFiltersFilter:DashboardTileFilterConfigFiltersFilter"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/DashboardTileFilterConfigFiltersFilter:DashboardTileFilterConfigFiltersFilter": {
            "properties": {
                "entityType": {
                    "type": "string",
                    "description": "The visualization of the timeseries chart\n"
                },
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DashboardTileFilterConfigFiltersFilterMatch:DashboardTileFilterConfigFiltersFilterMatch"
                    },
                    "description": "the tiles this Dashboard consist of\n"
                }
            },
            "type": "object",
            "required": [
                "entityType"
            ]
        },
        "dynatrace:index/DashboardTileFilterConfigFiltersFilterMatch:DashboardTileFilterConfigFiltersFilterMatch": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "A generated key by the Dynatrace Server\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The splitting value\n"
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "dynatrace:index/DashboardTileFilterManagementZone:DashboardTileFilterManagementZone": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "a short description of the Dynatrace entity\n"
                },
                "id": {
                    "type": "string",
                    "description": "the ID of the Dynatrace entity\n"
                },
                "name": {
                    "type": "string",
                    "description": "The display name used to identify this generic filter\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "dynatrace:index/DashboardTileVisualizationConfig:DashboardTileVisualizationConfig": {
            "properties": {
                "hasAxisBucketing": {
                    "type": "boolean",
                    "description": "The axis bucketing when enabled groups similar series in the same virtual axis\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/DashboardsAllowlistAllowlist:DashboardsAllowlistAllowlist": {
            "properties": {
                "urlpatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DashboardsAllowlistAllowlistUrlpattern:DashboardsAllowlistAllowlistUrlpattern"
                    }
                }
            },
            "type": "object",
            "required": [
                "urlpatterns"
            ]
        },
        "dynatrace:index/DashboardsAllowlistAllowlistUrlpattern:DashboardsAllowlistAllowlistUrlpattern": {
            "properties": {
                "rule": {
                    "type": "string",
                    "description": "Possible Values: `Equals`, `StartsWith`\n"
                },
                "template": {
                    "type": "string",
                    "description": "Pattern\n"
                }
            },
            "type": "object",
            "required": [
                "rule",
                "template"
            ]
        },
        "dynatrace:index/DashboardsGeneralDefaultDashboardList:DashboardsGeneralDefaultDashboardList": {
            "properties": {
                "defaultDashboards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DashboardsGeneralDefaultDashboardListDefaultDashboard:DashboardsGeneralDefaultDashboardListDefaultDashboard"
                    }
                }
            },
            "type": "object",
            "required": [
                "defaultDashboards"
            ]
        },
        "dynatrace:index/DashboardsGeneralDefaultDashboardListDefaultDashboard:DashboardsGeneralDefaultDashboardListDefaultDashboard": {
            "properties": {
                "dashboard": {
                    "type": "string",
                    "description": "Preset dashboard to show as default landing page\n"
                },
                "userGroup": {
                    "type": "string",
                    "description": "Show selected dashboard by default for this user group\n"
                }
            },
            "type": "object",
            "required": [
                "dashboard",
                "userGroup"
            ]
        },
        "dynatrace:index/DashboardsPresetsDashboardPresetsList:DashboardsPresetsDashboardPresetsList": {
            "properties": {
                "dashboardPresets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DashboardsPresetsDashboardPresetsListDashboardPreset:DashboardsPresetsDashboardPresetsListDashboardPreset"
                    }
                }
            },
            "type": "object",
            "required": [
                "dashboardPresets"
            ]
        },
        "dynatrace:index/DashboardsPresetsDashboardPresetsListDashboardPreset:DashboardsPresetsDashboardPresetsListDashboardPreset": {
            "properties": {
                "dashboardPreset": {
                    "type": "string",
                    "description": "Dashboard preset to limit visibility for\n"
                },
                "userGroup": {
                    "type": "string",
                    "description": "User group to show selected dashboard preset to\n"
                }
            },
            "type": "object",
            "required": [
                "dashboardPreset",
                "userGroup"
            ]
        },
        "dynatrace:index/DataPrivacyDataCollection:DataPrivacyDataCollection": {
            "properties": {
                "optInModeEnabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "optInModeEnabled"
            ]
        },
        "dynatrace:index/DataPrivacyDoNotTrack:DataPrivacyDoNotTrack": {
            "properties": {
                "complyWithDoNotTrack": {
                    "type": "boolean"
                },
                "doNotTrack": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "complyWithDoNotTrack"
            ]
        },
        "dynatrace:index/DataPrivacyMasking:DataPrivacyMasking": {
            "properties": {
                "ipAddressMasking": {
                    "type": "string",
                    "deprecationMessage": "This property is not supported anymore by the Dynatrace REST API (since schema version 4)"
                },
                "ipAddressMaskingEnabled": {
                    "type": "boolean",
                    "deprecationMessage": "This property is not supported anymore by the Dynatrace REST API (since schema version 4)"
                },
                "personalDataUriMaskingEnabled": {
                    "type": "boolean"
                },
                "userActionMaskingEnabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "personalDataUriMaskingEnabled",
                "userActionMaskingEnabled"
            ]
        },
        "dynatrace:index/DataPrivacyUserTracking:DataPrivacyUserTracking": {
            "properties": {
                "persistentCookieEnabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "persistentCookieEnabled"
            ]
        },
        "dynatrace:index/DatabaseAnomaliesDbConnectFailures:DatabaseAnomaliesDbConnectFailures": {
            "properties": {
                "connectionFailsCount": {
                    "type": "integer",
                    "description": "Number of failed database connections during any **eval_period** minutes period to trigger an alert\n"
                },
                "evalPeriod": {
                    "type": "integer",
                    "description": "The *X* minutes time period during which the **connection*fails*count** is evaluated\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/DatabaseAnomaliesFailureRate:DatabaseAnomaliesFailureRate": {
            "properties": {
                "auto": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesFailureRateAuto:DatabaseAnomaliesFailureRateAuto",
                    "description": "Parameters of failure rate increase auto-detection. Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + **1%** = 2.5%  Relative: 1.5% + 1.5% * **50%** = 2.25%\n"
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesFailureRateThresholds:DatabaseAnomaliesFailureRateThresholds",
                    "description": "Fixed thresholds for failure rate increase detection\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/DatabaseAnomaliesFailureRateAuto:DatabaseAnomaliesFailureRateAuto": {
            "properties": {
                "absolute": {
                    "type": "integer",
                    "description": "Absolute increase of failing service calls to trigger an alert, %\n"
                },
                "relative": {
                    "type": "integer",
                    "description": "Relative increase of failing service calls to trigger an alert, %\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "absolute",
                "relative"
            ]
        },
        "dynatrace:index/DatabaseAnomaliesFailureRateThresholds:DatabaseAnomaliesFailureRateThresholds": {
            "properties": {
                "sensitivity": {
                    "type": "string",
                    "description": "Sensitivity of the threshold.  With `low` sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With `high` sensitivity, no statistical confidence is used. Each violation triggers alert\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "Failure rate during any 5-minute period to trigger an alert, %\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "sensitivity",
                "threshold"
            ]
        },
        "dynatrace:index/DatabaseAnomaliesLoad:DatabaseAnomaliesLoad": {
            "properties": {
                "drops": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesLoadDrops:DatabaseAnomaliesLoadDrops",
                    "description": "The configuration of traffic drops detection\n"
                },
                "spikes": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesLoadSpikes:DatabaseAnomaliesLoadSpikes",
                    "description": "The configuration of traffic spikes detection\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/DatabaseAnomaliesLoadDrops:DatabaseAnomaliesLoadDrops": {
            "properties": {
                "minutes": {
                    "type": "integer",
                    "description": "Alert if the service stays in abnormal state for at least *X* minutes\n"
                },
                "percent": {
                    "type": "integer",
                    "description": "Alert if the observed load is more than *X* % of the expected value\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/DatabaseAnomaliesLoadSpikes:DatabaseAnomaliesLoadSpikes": {
            "properties": {
                "minutes": {
                    "type": "integer",
                    "description": "Alert if the service stays in abnormal state for at least *X* minutes\n"
                },
                "percent": {
                    "type": "integer",
                    "description": "Alert if the observed load is more than *X* % of the expected value\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/DatabaseAnomaliesResponseTime:DatabaseAnomaliesResponseTime": {
            "properties": {
                "auto": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesResponseTimeAuto:DatabaseAnomaliesResponseTimeAuto",
                    "description": "Parameters of the response time degradation auto-detection. Violation of **any** criterion triggers an alert\n"
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesResponseTimeThresholds:DatabaseAnomaliesResponseTimeThresholds",
                    "description": "Fixed thresholds for response time degradation detection\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/DatabaseAnomaliesResponseTimeAuto:DatabaseAnomaliesResponseTimeAuto": {
            "properties": {
                "load": {
                    "type": "string",
                    "description": "Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are `FIFTEEN_REQUESTS_PER_MINUTE`, `FIVE_REQUESTS_PER_MINUTE`, `ONE_REQUEST_PER_MINUTE` and `TEN_REQUESTS_PER_MINUTE`\n"
                },
                "milliseconds": {
                    "type": "integer",
                    "description": "Alert if the response time degrades by more than *X* milliseconds\n"
                },
                "percent": {
                    "type": "integer",
                    "description": "Alert if the observed load is more than *X* % of the expected value\n"
                },
                "slowestMilliseconds": {
                    "type": "integer",
                    "description": "Alert if the response time of the slowest 10% degrades by more than *X* milliseconds\n"
                },
                "slowestPercent": {
                    "type": "integer",
                    "description": "Alert if the response time of the slowest 10% degrades by more than *X* milliseconds\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "load",
                "milliseconds",
                "percent",
                "slowestMilliseconds",
                "slowestPercent"
            ]
        },
        "dynatrace:index/DatabaseAnomaliesResponseTimeThresholds:DatabaseAnomaliesResponseTimeThresholds": {
            "properties": {
                "load": {
                    "type": "string",
                    "description": "Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are `FIFTEEN_REQUESTS_PER_MINUTE`, `FIVE_REQUESTS_PER_MINUTE`, `ONE_REQUEST_PER_MINUTE` and `TEN_REQUESTS_PER_MINUTE`\n"
                },
                "milliseconds": {
                    "type": "integer",
                    "description": "Alert if the response time degrades by more than *X* milliseconds\n"
                },
                "sensitivity": {
                    "type": "string",
                    "description": "Sensitivity of the threshold.  With `low` sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With `high` sensitivity, no statistical confidence is used. Each violation triggers alert\n"
                },
                "slowestMilliseconds": {
                    "type": "integer",
                    "description": "Alert if the response time of the slowest 10% degrades by more than *X* milliseconds\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "load",
                "milliseconds",
                "sensitivity",
                "slowestMilliseconds"
            ]
        },
        "dynatrace:index/DatabaseAnomaliesV2DatabaseConnections:DatabaseAnomaliesV2DatabaseConnections": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Detect failed database connects\n"
                },
                "maxFailedConnects": {
                    "type": "integer",
                    "description": "Threshold\n"
                },
                "timePeriod": {
                    "type": "integer",
                    "description": "Time span\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/DatabaseAnomaliesV2FailureRate:DatabaseAnomaliesV2FailureRate": {
            "properties": {
                "autoDetection": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2FailureRateAutoDetection:DatabaseAnomaliesV2FailureRateAutoDetection",
                    "description": "Alert if the percentage of failing service calls increases by **both** the absolute and relative thresholds:\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Detection mode for increases in failure rate\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Detect increases in failure rate\n"
                },
                "fixedDetection": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2FailureRateFixedDetection:DatabaseAnomaliesV2FailureRateFixedDetection",
                    "description": "Alert if a given failure rate is exceeded during any 5-minute-period\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/DatabaseAnomaliesV2FailureRateAutoDetection:DatabaseAnomaliesV2FailureRateAutoDetection": {
            "properties": {
                "absoluteIncrease": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                },
                "overAlertingProtection": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2FailureRateAutoDetectionOverAlertingProtection:DatabaseAnomaliesV2FailureRateAutoDetectionOverAlertingProtection",
                    "description": "Avoid over-alerting\n"
                },
                "relativeIncrease": {
                    "type": "number",
                    "description": "Relative threshold\n"
                }
            },
            "type": "object",
            "required": [
                "absoluteIncrease",
                "overAlertingProtection",
                "relativeIncrease"
            ]
        },
        "dynatrace:index/DatabaseAnomaliesV2FailureRateAutoDetectionOverAlertingProtection:DatabaseAnomaliesV2FailureRateAutoDetectionOverAlertingProtection": {
            "properties": {
                "minutesAbnormalState": {
                    "type": "integer",
                    "description": "Only alert if the abnormal state remains for at least\n"
                },
                "requestsPerMinute": {
                    "type": "number",
                    "description": "Only alert if there are at least\n"
                }
            },
            "type": "object",
            "required": [
                "minutesAbnormalState",
                "requestsPerMinute"
            ]
        },
        "dynatrace:index/DatabaseAnomaliesV2FailureRateFixedDetection:DatabaseAnomaliesV2FailureRateFixedDetection": {
            "properties": {
                "overAlertingProtection": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2FailureRateFixedDetectionOverAlertingProtection:DatabaseAnomaliesV2FailureRateFixedDetectionOverAlertingProtection",
                    "description": "Avoid over-alerting\n"
                },
                "sensitivity": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "threshold": {
                    "type": "number",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "overAlertingProtection",
                "sensitivity",
                "threshold"
            ]
        },
        "dynatrace:index/DatabaseAnomaliesV2FailureRateFixedDetectionOverAlertingProtection:DatabaseAnomaliesV2FailureRateFixedDetectionOverAlertingProtection": {
            "properties": {
                "minutesAbnormalState": {
                    "type": "integer",
                    "description": "Only alert if the abnormal state remains for at least\n"
                },
                "requestsPerMinute": {
                    "type": "number",
                    "description": "Only alert if there are at least\n"
                }
            },
            "type": "object",
            "required": [
                "minutesAbnormalState",
                "requestsPerMinute"
            ]
        },
        "dynatrace:index/DatabaseAnomaliesV2LoadDrops:DatabaseAnomaliesV2LoadDrops": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Detect service load drops\n"
                },
                "loadDropPercent": {
                    "type": "number",
                    "description": "Threshold\n"
                },
                "minutesAbnormalState": {
                    "type": "integer",
                    "description": "Time span\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/DatabaseAnomaliesV2LoadSpikes:DatabaseAnomaliesV2LoadSpikes": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Detect service load spikes\n"
                },
                "loadSpikePercent": {
                    "type": "number",
                    "description": "Threshold\n"
                },
                "minutesAbnormalState": {
                    "type": "integer",
                    "description": "Time span\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/DatabaseAnomaliesV2ResponseTime:DatabaseAnomaliesV2ResponseTime": {
            "properties": {
                "autoDetection": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2ResponseTimeAutoDetection:DatabaseAnomaliesV2ResponseTimeAutoDetection",
                    "description": "no documentation available\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Detection mode for response time degradations\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Detect response time degradations\n"
                },
                "fixedDetection": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2ResponseTimeFixedDetection:DatabaseAnomaliesV2ResponseTimeFixedDetection",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/DatabaseAnomaliesV2ResponseTimeAutoDetection:DatabaseAnomaliesV2ResponseTimeAutoDetection": {
            "properties": {
                "overAlertingProtection": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2ResponseTimeAutoDetectionOverAlertingProtection:DatabaseAnomaliesV2ResponseTimeAutoDetectionOverAlertingProtection",
                    "description": "Avoid over-alerting\n"
                },
                "responseTimeAll": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2ResponseTimeAutoDetectionResponseTimeAll:DatabaseAnomaliesV2ResponseTimeAutoDetectionResponseTimeAll",
                    "description": "Alert if the median response time of all requests degrades beyond **both** the absolute and relative thresholds:\n"
                },
                "responseTimeSlowest": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2ResponseTimeAutoDetectionResponseTimeSlowest:DatabaseAnomaliesV2ResponseTimeAutoDetectionResponseTimeSlowest",
                    "description": "Alert if the response time of the slowest 10% of requests degrades beyond **both** the absolute and relative thresholds:\n"
                }
            },
            "type": "object",
            "required": [
                "overAlertingProtection",
                "responseTimeAll",
                "responseTimeSlowest"
            ]
        },
        "dynatrace:index/DatabaseAnomaliesV2ResponseTimeAutoDetectionOverAlertingProtection:DatabaseAnomaliesV2ResponseTimeAutoDetectionOverAlertingProtection": {
            "properties": {
                "minutesAbnormalState": {
                    "type": "integer",
                    "description": "Only alert if the abnormal state remains for at least\n"
                },
                "requestsPerMinute": {
                    "type": "number",
                    "description": "Only alert if there are at least\n"
                }
            },
            "type": "object",
            "required": [
                "minutesAbnormalState",
                "requestsPerMinute"
            ]
        },
        "dynatrace:index/DatabaseAnomaliesV2ResponseTimeAutoDetectionResponseTimeAll:DatabaseAnomaliesV2ResponseTimeAutoDetectionResponseTimeAll": {
            "properties": {
                "degradationMilliseconds": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                },
                "degradationPercent": {
                    "type": "number",
                    "description": "Relative threshold\n"
                }
            },
            "type": "object",
            "required": [
                "degradationMilliseconds",
                "degradationPercent"
            ]
        },
        "dynatrace:index/DatabaseAnomaliesV2ResponseTimeAutoDetectionResponseTimeSlowest:DatabaseAnomaliesV2ResponseTimeAutoDetectionResponseTimeSlowest": {
            "properties": {
                "slowestDegradationMilliseconds": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                },
                "slowestDegradationPercent": {
                    "type": "number",
                    "description": "Relative threshold\n"
                }
            },
            "type": "object",
            "required": [
                "slowestDegradationMilliseconds",
                "slowestDegradationPercent"
            ]
        },
        "dynatrace:index/DatabaseAnomaliesV2ResponseTimeFixedDetection:DatabaseAnomaliesV2ResponseTimeFixedDetection": {
            "properties": {
                "overAlertingProtection": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2ResponseTimeFixedDetectionOverAlertingProtection:DatabaseAnomaliesV2ResponseTimeFixedDetectionOverAlertingProtection",
                    "description": "Avoid over-alerting\n"
                },
                "responseTimeAll": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2ResponseTimeFixedDetectionResponseTimeAll:DatabaseAnomaliesV2ResponseTimeFixedDetectionResponseTimeAll",
                    "description": "Alert if the median response time of all requests degrades beyond **both** the absolute and relative thresholds:\n"
                },
                "responseTimeSlowest": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2ResponseTimeFixedDetectionResponseTimeSlowest:DatabaseAnomaliesV2ResponseTimeFixedDetectionResponseTimeSlowest",
                    "description": "Alert if the response time of the slowest 10% of requests degrades beyond **both** the absolute and relative thresholds:\n"
                },
                "sensitivity": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "overAlertingProtection",
                "responseTimeAll",
                "responseTimeSlowest",
                "sensitivity"
            ]
        },
        "dynatrace:index/DatabaseAnomaliesV2ResponseTimeFixedDetectionOverAlertingProtection:DatabaseAnomaliesV2ResponseTimeFixedDetectionOverAlertingProtection": {
            "properties": {
                "minutesAbnormalState": {
                    "type": "integer",
                    "description": "Only alert if the abnormal state remains for at least\n"
                },
                "requestsPerMinute": {
                    "type": "number",
                    "description": "Only alert if there are at least\n"
                }
            },
            "type": "object",
            "required": [
                "minutesAbnormalState",
                "requestsPerMinute"
            ]
        },
        "dynatrace:index/DatabaseAnomaliesV2ResponseTimeFixedDetectionResponseTimeAll:DatabaseAnomaliesV2ResponseTimeFixedDetectionResponseTimeAll": {
            "properties": {
                "degradationMilliseconds": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                }
            },
            "type": "object",
            "required": [
                "degradationMilliseconds"
            ]
        },
        "dynatrace:index/DatabaseAnomaliesV2ResponseTimeFixedDetectionResponseTimeSlowest:DatabaseAnomaliesV2ResponseTimeFixedDetectionResponseTimeSlowest": {
            "properties": {
                "slowestDegradationMilliseconds": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                }
            },
            "type": "object",
            "required": [
                "slowestDegradationMilliseconds"
            ]
        },
        "dynatrace:index/DduPoolEvents:DduPoolEvents": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Is the limit configuration enabled\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the limit applied: MONTHLY or ANNUAL\n"
                },
                "value": {
                    "type": "integer",
                    "description": "Value of the DDU limit applied for provided timerange\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/DduPoolLogMonitoring:DduPoolLogMonitoring": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Is the limit configuration enabled\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the limit applied: MONTHLY or ANNUAL\n"
                },
                "value": {
                    "type": "integer",
                    "description": "Value of the DDU limit applied for provided timerange\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/DduPoolMetrics:DduPoolMetrics": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Is the limit configuration enabled\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the limit applied: MONTHLY or ANNUAL\n"
                },
                "value": {
                    "type": "integer",
                    "description": "Value of the DDU limit applied for provided timerange\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/DduPoolServerless:DduPoolServerless": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Is the limit configuration enabled\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the limit applied: MONTHLY or ANNUAL\n"
                },
                "value": {
                    "type": "integer",
                    "description": "Value of the DDU limit applied for provided timerange\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/DduPoolTraces:DduPoolTraces": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Is the limit configuration enabled\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the limit applied: MONTHLY or ANNUAL\n"
                },
                "value": {
                    "type": "integer",
                    "description": "Value of the DDU limit applied for provided timerange\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/DeclarativeGroupingDetection:DeclarativeGroupingDetection": {
            "properties": {
                "processDefinitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DeclarativeGroupingDetectionProcessDefinition:DeclarativeGroupingDetectionProcessDefinition"
                    }
                }
            },
            "type": "object",
            "required": [
                "processDefinitions"
            ]
        },
        "dynatrace:index/DeclarativeGroupingDetectionProcessDefinition:DeclarativeGroupingDetectionProcessDefinition": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "processGroupName": {
                    "type": "string"
                },
                "report": {
                    "type": "string"
                },
                "rules": {
                    "$ref": "#/types/dynatrace:index/DeclarativeGroupingDetectionProcessDefinitionRules:DeclarativeGroupingDetectionProcessDefinitionRules"
                }
            },
            "type": "object",
            "required": [
                "id",
                "processGroupName",
                "report"
            ]
        },
        "dynatrace:index/DeclarativeGroupingDetectionProcessDefinitionRules:DeclarativeGroupingDetectionProcessDefinitionRules": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DeclarativeGroupingDetectionProcessDefinitionRulesRule:DeclarativeGroupingDetectionProcessDefinitionRulesRule"
                    }
                }
            },
            "type": "object",
            "required": [
                "rules"
            ]
        },
        "dynatrace:index/DeclarativeGroupingDetectionProcessDefinitionRulesRule:DeclarativeGroupingDetectionProcessDefinitionRulesRule": {
            "properties": {
                "condition": {
                    "type": "string"
                },
                "property": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "condition",
                "property"
            ]
        },
        "dynatrace:index/DirectSharesRecipients:DirectSharesRecipients": {
            "properties": {
                "recipients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DirectSharesRecipientsRecipient:DirectSharesRecipientsRecipient"
                    },
                    "description": "Recipient of the direct share\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/DirectSharesRecipientsRecipient:DirectSharesRecipientsRecipient": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of the recipient\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the recipient. Possible values are `group' and`user'\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "dynatrace:index/DiskAnomaliesDiskName:DiskAnomaliesDiskName": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "Possible values are: `CONTAINS`, `DOES_NOT_CONTAIN`, `DOES_NOT_EQUAL`, `DOES_NOT_START_WITH`, `EQUALS` and `STARTS_WITH`\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value to compare to\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/DiskAnomaliesTags:DiskAnomaliesTags": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DiskAnomaliesTagsFilter:DiskAnomaliesTagsFilter"
                    },
                    "description": "A Tag Filter\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/DiskAnomaliesTagsFilter:DiskAnomaliesTagsFilter": {
            "properties": {
                "context": {
                    "type": "string",
                    "description": "The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value\n"
                },
                "key": {
                    "type": "string",
                    "description": "The key of the tag. Custom tags have the tag value here\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value to compare to\n"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/DiskAnomaliesV2Disk:DiskAnomaliesV2Disk": {
            "properties": {
                "diskLowInodesDetection": {
                    "$ref": "#/types/dynatrace:index/DiskAnomaliesV2DiskDiskLowInodesDetection:DiskAnomaliesV2DiskDiskLowInodesDetection",
                    "description": "no documentation available\n"
                },
                "diskLowSpaceDetection": {
                    "$ref": "#/types/dynatrace:index/DiskAnomaliesV2DiskDiskLowSpaceDetection:DiskAnomaliesV2DiskDiskLowSpaceDetection",
                    "description": "no documentation available\n"
                },
                "diskSlowWritesAndReadsDetection": {
                    "$ref": "#/types/dynatrace:index/DiskAnomaliesV2DiskDiskSlowWritesAndReadsDetection:DiskAnomaliesV2DiskDiskSlowWritesAndReadsDetection",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "diskLowInodesDetection",
                "diskLowSpaceDetection",
                "diskSlowWritesAndReadsDetection"
            ]
        },
        "dynatrace:index/DiskAnomaliesV2DiskDiskLowInodesDetection:DiskAnomaliesV2DiskDiskLowInodesDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/DiskAnomaliesV2DiskDiskLowInodesDetectionCustomThresholds:DiskAnomaliesV2DiskDiskLowInodesDetectionCustomThresholds",
                    "description": "no documentation available\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Detection mode for low inodes number available\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Detect low inodes number available\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/DiskAnomaliesV2DiskDiskLowInodesDetectionCustomThresholds:DiskAnomaliesV2DiskDiskLowInodesDetectionCustomThresholds": {
            "properties": {
                "freeInodesPercentage": {
                    "type": "integer",
                    "description": "Alert if the percentage of available inodes is lower than this threshold in 3 out of 5 samples\n"
                }
            },
            "type": "object",
            "required": [
                "freeInodesPercentage"
            ]
        },
        "dynatrace:index/DiskAnomaliesV2DiskDiskLowSpaceDetection:DiskAnomaliesV2DiskDiskLowSpaceDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/DiskAnomaliesV2DiskDiskLowSpaceDetectionCustomThresholds:DiskAnomaliesV2DiskDiskLowSpaceDetectionCustomThresholds",
                    "description": "no documentation available\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Detection mode for low inodes number available\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Detect low inodes number available\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/DiskAnomaliesV2DiskDiskLowSpaceDetectionCustomThresholds:DiskAnomaliesV2DiskDiskLowSpaceDetectionCustomThresholds": {
            "properties": {
                "freeSpacePercentage": {
                    "type": "integer",
                    "description": "Alert if free disk space is lower than this percentage in 3 out of 5 samples\n"
                }
            },
            "type": "object",
            "required": [
                "freeSpacePercentage"
            ]
        },
        "dynatrace:index/DiskAnomaliesV2DiskDiskSlowWritesAndReadsDetection:DiskAnomaliesV2DiskDiskSlowWritesAndReadsDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/DiskAnomaliesV2DiskDiskSlowWritesAndReadsDetectionCustomThresholds:DiskAnomaliesV2DiskDiskSlowWritesAndReadsDetectionCustomThresholds",
                    "description": "no documentation available\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Detection mode for low inodes number available\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Detect low inodes number available\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/DiskAnomaliesV2DiskDiskSlowWritesAndReadsDetectionCustomThresholds:DiskAnomaliesV2DiskDiskSlowWritesAndReadsDetectionCustomThresholds": {
            "properties": {
                "writeAndReadTime": {
                    "type": "integer",
                    "description": "Alert if disk read time or write time is higher than this threshold in 3 out of 5 samples\n"
                }
            },
            "type": "object",
            "required": [
                "writeAndReadTime"
            ]
        },
        "dynatrace:index/DiskAnomalyRulesDiskNameFilter:DiskAnomalyRulesDiskNameFilter": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "Possible Values: `CONTAINS`, `DOES_NOT_CONTAIN`, `DOES_NOT_EQUAL`, `DOES_NOT_START_WITH`, `EQUALS`, `STARTS_WITH`\n"
                },
                "value": {
                    "type": "string",
                    "description": "Matching text\n"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/DiskAnomalyRulesSampleLimit:DiskAnomalyRulesSampleLimit": {
            "properties": {
                "samples": {
                    "type": "integer",
                    "description": ".. within the last\n"
                },
                "violatingSamples": {
                    "type": "integer",
                    "description": "Minimum number of violating samples\n"
                }
            },
            "type": "object",
            "required": [
                "samples",
                "violatingSamples"
            ]
        },
        "dynatrace:index/DiskOptionsExclusions:DiskOptionsExclusions": {
            "properties": {
                "exclusions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DiskOptionsExclusionsExclusion:DiskOptionsExclusionsExclusion"
                    }
                }
            },
            "type": "object",
            "required": [
                "exclusions"
            ]
        },
        "dynatrace:index/DiskOptionsExclusionsExclusion:DiskOptionsExclusionsExclusion": {
            "properties": {
                "filesystem": {
                    "type": "string"
                },
                "mountpoint": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "os"
            ]
        },
        "dynatrace:index/DiskSpecificAnomaliesV2DiskLowInodesDetection:DiskSpecificAnomaliesV2DiskLowInodesDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/DiskSpecificAnomaliesV2DiskLowInodesDetectionCustomThresholds:DiskSpecificAnomaliesV2DiskLowInodesDetectionCustomThresholds",
                    "description": "no documentation available\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Detection mode for low inodes number available\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Detect low inodes number available\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/DiskSpecificAnomaliesV2DiskLowInodesDetectionCustomThresholds:DiskSpecificAnomaliesV2DiskLowInodesDetectionCustomThresholds": {
            "properties": {
                "freeInodesPercentage": {
                    "type": "integer",
                    "description": "Alert if the percentage of available inodes is lower than this threshold in 3 out of 5 samples\n"
                }
            },
            "type": "object",
            "required": [
                "freeInodesPercentage"
            ]
        },
        "dynatrace:index/DiskSpecificAnomaliesV2DiskLowSpaceDetection:DiskSpecificAnomaliesV2DiskLowSpaceDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/DiskSpecificAnomaliesV2DiskLowSpaceDetectionCustomThresholds:DiskSpecificAnomaliesV2DiskLowSpaceDetectionCustomThresholds",
                    "description": "no documentation available\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Detection mode for low disk space\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Detect low disk space\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/DiskSpecificAnomaliesV2DiskLowSpaceDetectionCustomThresholds:DiskSpecificAnomaliesV2DiskLowSpaceDetectionCustomThresholds": {
            "properties": {
                "freeSpacePercentage": {
                    "type": "integer",
                    "description": "Alert if free disk space is lower than this percentage in 3 out of 5 samples\n"
                }
            },
            "type": "object",
            "required": [
                "freeSpacePercentage"
            ]
        },
        "dynatrace:index/DiskSpecificAnomaliesV2DiskSlowWritesAndReadsDetection:DiskSpecificAnomaliesV2DiskSlowWritesAndReadsDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/DiskSpecificAnomaliesV2DiskSlowWritesAndReadsDetectionCustomThresholds:DiskSpecificAnomaliesV2DiskSlowWritesAndReadsDetectionCustomThresholds",
                    "description": "no documentation available\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Detection mode for slow running disks\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Detect slow-running disks\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/DiskSpecificAnomaliesV2DiskSlowWritesAndReadsDetectionCustomThresholds:DiskSpecificAnomaliesV2DiskSlowWritesAndReadsDetectionCustomThresholds": {
            "properties": {
                "writeAndReadTime": {
                    "type": "integer",
                    "description": "Alert if disk read time or write time is higher than this threshold in 3 out of 5 samples\n"
                }
            },
            "type": "object",
            "required": [
                "writeAndReadTime"
            ]
        },
        "dynatrace:index/EnvironmentQuotas:EnvironmentQuotas": {
            "properties": {
                "ddus": {
                    "$ref": "#/types/dynatrace:index/EnvironmentQuotasDdus:EnvironmentQuotasDdus",
                    "description": "Davis Data Units consumption and quota information on environment level. Not set (and not editable) if Davis data units is not enabled\n"
                },
                "demUnits": {
                    "$ref": "#/types/dynatrace:index/EnvironmentQuotasDemUnits:EnvironmentQuotasDemUnits",
                    "description": "DEM units consumption and quota information on environment level\n"
                },
                "hostUnits": {
                    "type": "integer",
                    "description": "Host units consumption and quota information on environment level\n"
                },
                "logs": {
                    "$ref": "#/types/dynatrace:index/EnvironmentQuotasLogs:EnvironmentQuotasLogs",
                    "description": "Log Monitoring consumption and quota information on environment level. Not set (and not editable) if Log monitoring is not enabled. Not set (and not editable) if Log monitoring is migrated to Davis data on license level\n"
                },
                "synthetic": {
                    "$ref": "#/types/dynatrace:index/EnvironmentQuotasSynthetic:EnvironmentQuotasSynthetic",
                    "description": "Synthetic monitors consumption and quota information on environment level. Not set (and not editable) if neither Synthetic nor DEM units is enabled\n"
                },
                "userSessions": {
                    "$ref": "#/types/dynatrace:index/EnvironmentQuotasUserSessions:EnvironmentQuotasUserSessions",
                    "description": "User sessions consumption and quota information on environment level\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/EnvironmentQuotasDdus:EnvironmentQuotasDdus": {
            "properties": {
                "annual": {
                    "type": "integer",
                    "description": "Annual environment quota. Not set if unlimited\n"
                },
                "monthly": {
                    "type": "integer",
                    "description": "Monthly environment quota. Not set if unlimited\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/EnvironmentQuotasDemUnits:EnvironmentQuotasDemUnits": {
            "properties": {
                "annual": {
                    "type": "integer",
                    "description": "Annual environment quota. Not set if unlimited\n"
                },
                "monthly": {
                    "type": "integer",
                    "description": "Monthly environment quota. Not set if unlimited\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/EnvironmentQuotasLogs:EnvironmentQuotasLogs": {
            "properties": {
                "annual": {
                    "type": "integer",
                    "description": "Annual environment quota. Not set if unlimited\n"
                },
                "monthly": {
                    "type": "integer",
                    "description": "Monthly environment quota. Not set if unlimited\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/EnvironmentQuotasSynthetic:EnvironmentQuotasSynthetic": {
            "properties": {
                "annual": {
                    "type": "integer",
                    "description": "Annual environment quota. Not set if unlimited\n"
                },
                "monthly": {
                    "type": "integer",
                    "description": "Monthly environment quota. Not set if unlimited\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/EnvironmentQuotasUserSessions:EnvironmentQuotasUserSessions": {
            "properties": {
                "annual": {
                    "type": "integer",
                    "description": "Annual environment quota. Not set if unlimited\n"
                },
                "monthly": {
                    "type": "integer",
                    "description": "Monthly environment quota. Not set if unlimited\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/EnvironmentStorage:EnvironmentStorage": {
            "properties": {
                "limits": {
                    "$ref": "#/types/dynatrace:index/EnvironmentStorageLimits:EnvironmentStorageLimits"
                },
                "retention": {
                    "$ref": "#/types/dynatrace:index/EnvironmentStorageRetention:EnvironmentStorageRetention"
                },
                "transactions": {
                    "type": "integer",
                    "description": "Maximum number of newly monitored entry point PurePaths captured per process/minute on environment level. Can be set to any value from 100 to 100000\n"
                },
                "userActions": {
                    "type": "integer",
                    "description": "Maximum number of user actions generated per minute on environment level. Can be set to any value from 1 to 2147483646 or left unlimited by omitting this property\n"
                }
            },
            "type": "object",
            "required": [
                "transactions"
            ]
        },
        "dynatrace:index/EnvironmentStorageLimits:EnvironmentStorageLimits": {
            "properties": {
                "logs": {
                    "type": "integer",
                    "description": "Log Monitoring consumption and quota information on environment level. Not set (and not editable) if Log monitoring is not enabled. Not set (and not editable) if Log monitoring is migrated to Davis data on license level\n"
                },
                "sessionReplay": {
                    "type": "integer",
                    "description": "Session replay storage usage and limit information on environment level in bytes. 0 for unlimited.\n"
                },
                "symbolFiles": {
                    "type": "integer",
                    "description": "Session replay storage usage and limit information on environment level in bytes. 0 for unlimited.\n"
                },
                "transactions": {
                    "type": "integer",
                    "description": "Transaction storage usage and limit information on environment level in bytes. 0 for unlimited.\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/EnvironmentStorageRetention:EnvironmentStorageRetention": {
            "properties": {
                "logs": {
                    "type": "integer",
                    "description": "Log Monitoring consumption and quota information on environment level. Not set (and not editable) if Log monitoring is not enabled. Not set (and not editable) if Log monitoring is migrated to Davis data on license level\n"
                },
                "rum": {
                    "type": "integer",
                    "description": "Real user monitoring retention settings on environment level in days. Can be set to any value from 1 to 35 days\n"
                },
                "serviceCodeLevel": {
                    "type": "integer",
                    "description": "Service code level retention settings on environment level in days. Service code level retention time can't be greater than service request level retention time and both can't exceed one year\n"
                },
                "serviceRequestLevel": {
                    "type": "integer",
                    "description": "Service request level retention settings on environment level in days. Service code level retention time can't be greater than service request level retention time and both can't exceed one year\n"
                },
                "sessionReplay": {
                    "type": "integer",
                    "description": "Session replay storage usage and limit information on environment level in bytes. 0 for unlimited.\n"
                },
                "synthetic": {
                    "type": "integer",
                    "description": "Synthetic monitors consumption and quota information on environment level. Not set (and not editable) if neither Synthetic nor DEM units is enabled\n"
                }
            },
            "type": "object",
            "required": [
                "rum",
                "serviceCodeLevel",
                "serviceRequestLevel",
                "sessionReplay",
                "synthetic"
            ]
        },
        "dynatrace:index/FailureDetectionParametersBrokenLinks:FailureDetectionParametersBrokenLinks": {
            "properties": {
                "brokenLinkDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "If your application relies on other hosts at other domains, add the associated domain names here. Once configured, Dynatrace will consider 404s thrown by hosts at these domains to be service failures related to your application.\n"
                },
                "http404NotFoundFailures": {
                    "type": "boolean",
                    "description": "Consider 404 HTTP response codes as failures\n"
                }
            },
            "type": "object",
            "required": [
                "http404NotFoundFailures"
            ]
        },
        "dynatrace:index/FailureDetectionParametersExceptionRules:FailureDetectionParametersExceptionRules": {
            "properties": {
                "customErrorRules": {
                    "$ref": "#/types/dynatrace:index/FailureDetectionParametersExceptionRulesCustomErrorRules:FailureDetectionParametersExceptionRulesCustomErrorRules",
                    "description": "Some custom error situations are only detectable via a return value or other means. To support such cases, [define a request attribute](https://dt-url.net/ys5k0p4y) that captures the required data. Then define a custom error rule that determines if the request has failed based on the value of the request attribute.\n"
                },
                "customHandledExceptions": {
                    "$ref": "#/types/dynatrace:index/FailureDetectionParametersExceptionRulesCustomHandledExceptions:FailureDetectionParametersExceptionRulesCustomHandledExceptions",
                    "description": "There may be situations where your application code handles exceptions gracefully in a manner that these failures aren't detected by Dynatrace. Use this setting to define specific gracefully-handled exceptions that should be treated as service failures.\n"
                },
                "ignoreAllExceptions": {
                    "type": "boolean",
                    "description": "Ignore all exceptions\n"
                },
                "ignoreSpanFailureDetection": {
                    "type": "boolean",
                    "description": "Ignore span failure detection\n"
                },
                "ignoredExceptions": {
                    "$ref": "#/types/dynatrace:index/FailureDetectionParametersExceptionRulesIgnoredExceptions:FailureDetectionParametersExceptionRulesIgnoredExceptions",
                    "description": "Some exceptions that are thrown by legacy or 3rd-party code indicate a specific response, not an error. Use this setting to instruct Dynatrace to treat such exceptions as non-failed requests.. If an exception matching any of the defined patterns occurs in a request, it will not be considered as a failure. Other exceptions occurring at the same request might still mark the request as failed.\n"
                },
                "successForcingExceptions": {
                    "$ref": "#/types/dynatrace:index/FailureDetectionParametersExceptionRulesSuccessForcingExceptions:FailureDetectionParametersExceptionRulesSuccessForcingExceptions",
                    "description": "Define exceptions which indicate that a service call should not be considered as failed. E.g. an exception indicating that the client aborted the operation.. If an exception matching any of the defined patterns occurs on the entry node of the service, it will be considered successful. Compared to ignored exceptions, the request will be considered successful even if other exceptions occur in the same request.\n"
                }
            },
            "type": "object",
            "required": [
                "ignoreAllExceptions",
                "ignoreSpanFailureDetection"
            ]
        },
        "dynatrace:index/FailureDetectionParametersExceptionRulesCustomErrorRules:FailureDetectionParametersExceptionRulesCustomErrorRules": {
            "properties": {
                "customErrorRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/FailureDetectionParametersExceptionRulesCustomErrorRulesCustomErrorRule:FailureDetectionParametersExceptionRulesCustomErrorRulesCustomErrorRule"
                    }
                }
            },
            "type": "object",
            "required": [
                "customErrorRules"
            ]
        },
        "dynatrace:index/FailureDetectionParametersExceptionRulesCustomErrorRulesCustomErrorRule:FailureDetectionParametersExceptionRulesCustomErrorRulesCustomErrorRule": {
            "properties": {
                "condition": {
                    "$ref": "#/types/dynatrace:index/FailureDetectionParametersExceptionRulesCustomErrorRulesCustomErrorRuleCondition:FailureDetectionParametersExceptionRulesCustomErrorRulesCustomErrorRuleCondition",
                    "description": "Request attribute condition\n"
                },
                "requestAttribute": {
                    "type": "string",
                    "description": "Request attribute\n"
                }
            },
            "type": "object",
            "required": [
                "condition",
                "requestAttribute"
            ]
        },
        "dynatrace:index/FailureDetectionParametersExceptionRulesCustomErrorRulesCustomErrorRuleCondition:FailureDetectionParametersExceptionRulesCustomErrorRulesCustomErrorRuleCondition": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "description": "Case sensitive\n"
                },
                "compareOperationType": {
                    "type": "string",
                    "description": "Apply this comparison\n"
                },
                "doubleValue": {
                    "type": "number",
                    "description": "Value\n"
                },
                "intValue": {
                    "type": "integer",
                    "description": "Value\n"
                },
                "textValue": {
                    "type": "string",
                    "description": "Value\n"
                }
            },
            "type": "object",
            "required": [
                "compareOperationType"
            ]
        },
        "dynatrace:index/FailureDetectionParametersExceptionRulesCustomHandledExceptions:FailureDetectionParametersExceptionRulesCustomHandledExceptions": {
            "properties": {
                "customHandledExceptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/FailureDetectionParametersExceptionRulesCustomHandledExceptionsCustomHandledException:FailureDetectionParametersExceptionRulesCustomHandledExceptionsCustomHandledException"
                    }
                }
            },
            "type": "object",
            "required": [
                "customHandledExceptions"
            ]
        },
        "dynatrace:index/FailureDetectionParametersExceptionRulesCustomHandledExceptionsCustomHandledException:FailureDetectionParametersExceptionRulesCustomHandledExceptionsCustomHandledException": {
            "properties": {
                "classPattern": {
                    "type": "string",
                    "description": "The pattern will match if it is contained within the actual class name.\n"
                },
                "messagePattern": {
                    "type": "string",
                    "description": "Optionally, define an exception message pattern. The pattern will match if the actual exception message contains the pattern.\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/FailureDetectionParametersExceptionRulesIgnoredExceptions:FailureDetectionParametersExceptionRulesIgnoredExceptions": {
            "properties": {
                "customHandledExceptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/FailureDetectionParametersExceptionRulesIgnoredExceptionsCustomHandledException:FailureDetectionParametersExceptionRulesIgnoredExceptionsCustomHandledException"
                    }
                }
            },
            "type": "object",
            "required": [
                "customHandledExceptions"
            ]
        },
        "dynatrace:index/FailureDetectionParametersExceptionRulesIgnoredExceptionsCustomHandledException:FailureDetectionParametersExceptionRulesIgnoredExceptionsCustomHandledException": {
            "properties": {
                "classPattern": {
                    "type": "string",
                    "description": "The pattern will match if it is contained within the actual class name.\n"
                },
                "messagePattern": {
                    "type": "string",
                    "description": "Optionally, define an exception message pattern. The pattern will match if the actual exception message contains the pattern.\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/FailureDetectionParametersExceptionRulesSuccessForcingExceptions:FailureDetectionParametersExceptionRulesSuccessForcingExceptions": {
            "properties": {
                "customHandledExceptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/FailureDetectionParametersExceptionRulesSuccessForcingExceptionsCustomHandledException:FailureDetectionParametersExceptionRulesSuccessForcingExceptionsCustomHandledException"
                    }
                }
            },
            "type": "object",
            "required": [
                "customHandledExceptions"
            ]
        },
        "dynatrace:index/FailureDetectionParametersExceptionRulesSuccessForcingExceptionsCustomHandledException:FailureDetectionParametersExceptionRulesSuccessForcingExceptionsCustomHandledException": {
            "properties": {
                "classPattern": {
                    "type": "string",
                    "description": "The pattern will match if it is contained within the actual class name.\n"
                },
                "messagePattern": {
                    "type": "string",
                    "description": "Optionally, define an exception message pattern. The pattern will match if the actual exception message contains the pattern.\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/FailureDetectionParametersHttpResponseCodes:FailureDetectionParametersHttpResponseCodes": {
            "properties": {
                "clientSideErrors": {
                    "type": "string",
                    "description": "HTTP response codes which indicate client side errors\n"
                },
                "failOnMissingResponseCodeClientSide": {
                    "type": "boolean",
                    "description": "Treat missing HTTP response code as client side error\n"
                },
                "failOnMissingResponseCodeServerSide": {
                    "type": "boolean",
                    "description": "Treat missing HTTP response code as server side errors\n"
                },
                "serverSideErrors": {
                    "type": "string",
                    "description": "HTTP response codes which indicate an error on the server side\n"
                }
            },
            "type": "object",
            "required": [
                "clientSideErrors",
                "failOnMissingResponseCodeClientSide",
                "failOnMissingResponseCodeServerSide",
                "serverSideErrors"
            ]
        },
        "dynatrace:index/FailureDetectionRulesConditions:FailureDetectionRulesConditions": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/FailureDetectionRulesConditionsCondition:FailureDetectionRulesConditionsCondition"
                    }
                }
            },
            "type": "object",
            "required": [
                "conditions"
            ]
        },
        "dynatrace:index/FailureDetectionRulesConditionsCondition:FailureDetectionRulesConditionsCondition": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "description": "Possible Values: `PG_NAME`, `PG_TAG`, `SERVICE_MANAGEMENT_ZONE`, `SERVICE_NAME`, `SERVICE_TAG`, `SERVICE_TYPE`\n"
                },
                "predicate": {
                    "$ref": "#/types/dynatrace:index/FailureDetectionRulesConditionsConditionPredicate:FailureDetectionRulesConditionsConditionPredicate",
                    "description": "Condition to check the attribute against\n"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "predicate"
            ]
        },
        "dynatrace:index/FailureDetectionRulesConditionsConditionPredicate:FailureDetectionRulesConditionsConditionPredicate": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "description": "Case sensitive\n"
                },
                "managementZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Management zones\n"
                },
                "predicateType": {
                    "type": "string",
                    "description": "Predicate type\n"
                },
                "serviceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Service types\n"
                },
                "tagKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tag keys\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags (exact match)\n"
                },
                "textValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Names\n"
                }
            },
            "type": "object",
            "required": [
                "predicateType"
            ]
        },
        "dynatrace:index/GenericRelationshipsSources:GenericRelationshipsSources": {
            "properties": {
                "sources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/GenericRelationshipsSourcesSource:GenericRelationshipsSourcesSource"
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "dynatrace:index/GenericRelationshipsSourcesSource:GenericRelationshipsSourcesSource": {
            "properties": {
                "condition": {
                    "type": "string",
                    "description": "Specify a filter that needs to match in order for the extraction to happen.. Two different filters are supported: `$eq(value)` will ensure that the source matches exactly 'value', while `$prefix(value)` will ensure that the source begins with exactly 'value'.\nIf your value contains the characters '(', ')' or '~', you need to escape them by adding a '~' in front of them.\n"
                },
                "mappingRules": {
                    "$ref": "#/types/dynatrace:index/GenericRelationshipsSourcesSourceMappingRules:GenericRelationshipsSourcesSourceMappingRules",
                    "description": "Specify all properties which should be compared. If all mapping rules match a relationship between entities will be created.\n"
                },
                "sourceType": {
                    "type": "string",
                    "description": "Possible Values: `BusinessEvents`, `Entities`, `Events`, `Logs`, `Metrics`, `Spans`, `Topology`\n"
                }
            },
            "type": "object",
            "required": [
                "sourceType"
            ]
        },
        "dynatrace:index/GenericRelationshipsSourcesSourceMappingRules:GenericRelationshipsSourcesSourceMappingRules": {
            "properties": {
                "mappingRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/GenericRelationshipsSourcesSourceMappingRulesMappingRule:GenericRelationshipsSourcesSourceMappingRulesMappingRule"
                    }
                }
            },
            "type": "object",
            "required": [
                "mappingRules"
            ]
        },
        "dynatrace:index/GenericRelationshipsSourcesSourceMappingRulesMappingRule:GenericRelationshipsSourcesSourceMappingRulesMappingRule": {
            "properties": {
                "destinationProperty": {
                    "type": "string",
                    "description": "The case-sensitive name of a property of the destination type.\n"
                },
                "destinationTransformation": {
                    "type": "string",
                    "description": "Possible Values: `Leavetextas_is`, `Tolowercase`, `Touppercase`\n"
                },
                "sourceProperty": {
                    "type": "string",
                    "description": "The case-sensitive name of a property of the source type.\n"
                },
                "sourceTransformation": {
                    "type": "string",
                    "description": "Possible Values: `Leavetextas_is`, `Tolowercase`, `Touppercase`\n"
                }
            },
            "type": "object",
            "required": [
                "destinationProperty",
                "destinationTransformation",
                "sourceProperty",
                "sourceTransformation"
            ]
        },
        "dynatrace:index/GenericTypesRules:GenericTypesRules": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/GenericTypesRulesRule:GenericTypesRulesRule"
                    }
                }
            },
            "type": "object",
            "required": [
                "rules"
            ]
        },
        "dynatrace:index/GenericTypesRulesRule:GenericTypesRulesRule": {
            "properties": {
                "attributes": {
                    "$ref": "#/types/dynatrace:index/GenericTypesRulesRuleAttributes:GenericTypesRulesRuleAttributes"
                },
                "iconPattern": {
                    "type": "string"
                },
                "idPattern": {
                    "type": "string",
                    "description": "ID patterns are comprised of static text and placeholders referring to dimensions in the ingest data. An ID pattern **must** contain at least one placeholder to ensure that different entities will be created.. Take care that the pattern results in the same ID for the same entity. For example, using timestamp or counter-like dimensions as part of the ID would lead to the creation of new entities for each ingest data and is strongly discouraged!\n"
                },
                "instanceNamePattern": {
                    "type": "string"
                },
                "requiredDimensions": {
                    "$ref": "#/types/dynatrace:index/GenericTypesRulesRuleRequiredDimensions:GenericTypesRulesRuleRequiredDimensions"
                },
                "role": {
                    "type": "string"
                },
                "sources": {
                    "$ref": "#/types/dynatrace:index/GenericTypesRulesRuleSources:GenericTypesRulesRuleSources"
                }
            },
            "type": "object",
            "required": [
                "idPattern",
                "sources"
            ]
        },
        "dynatrace:index/GenericTypesRulesRuleAttributes:GenericTypesRulesRuleAttributes": {
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/GenericTypesRulesRuleAttributesAttribute:GenericTypesRulesRuleAttributesAttribute"
                    }
                }
            },
            "type": "object",
            "required": [
                "attributes"
            ]
        },
        "dynatrace:index/GenericTypesRulesRuleAttributesAttribute:GenericTypesRulesRuleAttributesAttribute": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "The human readable attribute name for this extraction rule. Leave blank to use the key as the display name.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The attribute key is the unique name of the attribute.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Pattern for specifying the value for the extracted attribute. Can be a static value, placeholders or a combination of both.\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "pattern"
            ]
        },
        "dynatrace:index/GenericTypesRulesRuleRequiredDimensions:GenericTypesRulesRuleRequiredDimensions": {
            "properties": {
                "requiredDimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/GenericTypesRulesRuleRequiredDimensionsRequiredDimension:GenericTypesRulesRuleRequiredDimensionsRequiredDimension"
                    }
                }
            },
            "type": "object",
            "required": [
                "requiredDimensions"
            ]
        },
        "dynatrace:index/GenericTypesRulesRuleRequiredDimensionsRequiredDimension:GenericTypesRulesRuleRequiredDimensionsRequiredDimension": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The attribute key is the unique name of the attribute.\n"
                },
                "valuePattern": {
                    "type": "string",
                    "description": "A dimension value pattern which needs to exist in the ingest data to match this filter.\n"
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "dynatrace:index/GenericTypesRulesRuleSources:GenericTypesRulesRuleSources": {
            "properties": {
                "sources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/GenericTypesRulesRuleSourcesSource:GenericTypesRulesRuleSourcesSource"
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "dynatrace:index/GenericTypesRulesRuleSourcesSource:GenericTypesRulesRuleSourcesSource": {
            "properties": {
                "condition": {
                    "type": "string",
                    "description": "Specify a filter that needs to match in order for the extraction to happen.. Three different filters are supported: `$eq(value)` will ensure that the source matches exactly 'value', `$prefix(value)` will ensure that the source begins with exactly 'value', '$exists()' will ensure that any source with matching dimension filter exists.\nIf your value contains the characters '(', ')' or '~', you need to escape them by adding a '~' in front of them.\n"
                },
                "sourceType": {
                    "type": "string",
                    "description": "Possible Values: `BusinessEvents`, `Entities`, `Events`, `Logs`, `Metrics`, `Spans`, `Topology`\n"
                }
            },
            "type": "object",
            "required": [
                "sourceType"
            ]
        },
        "dynatrace:index/GrailMetricsAllowlistAllowRules:GrailMetricsAllowlistAllowRules": {
            "properties": {
                "allowRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/GrailMetricsAllowlistAllowRulesAllowRule:GrailMetricsAllowlistAllowRulesAllowRule"
                    }
                }
            },
            "type": "object",
            "required": [
                "allowRules"
            ]
        },
        "dynatrace:index/GrailMetricsAllowlistAllowRulesAllowRule:GrailMetricsAllowlistAllowRulesAllowRule": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "metricKey": {
                    "type": "string",
                    "description": "Metric key\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Possible Values: `CONTAINS`, `EQUALS`, `STARTSWITH`\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "metricKey",
                "pattern"
            ]
        },
        "dynatrace:index/HostAnomaliesConnections:HostAnomaliesConnections": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "The detection is enabled (`true`) or disabled (`false`)\n"
                },
                "enabledOnGracefulShutdowns": {
                    "type": "boolean",
                    "description": "Alert (`true`) on graceful host shutdowns\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "enabledOnGracefulShutdowns"
            ]
        },
        "dynatrace:index/HostAnomaliesCpu:HostAnomaliesCpu": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "The detection is enabled (`true`) or disabled (`false`)\n"
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesCpuThresholds:HostAnomaliesCpuThresholds",
                    "description": "Custom thresholds for high CPU saturation. If not set then the automatic mode is used\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesCpuThresholds:HostAnomaliesCpuThresholds": {
            "properties": {
                "saturation": {
                    "type": "integer",
                    "description": "Alert if CPU usage is higher than *X*% in 3 out of 5 samples\n"
                }
            },
            "type": "object",
            "required": [
                "saturation"
            ]
        },
        "dynatrace:index/HostAnomaliesDisks:HostAnomaliesDisks": {
            "properties": {
                "inodes": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesDisksInodes:HostAnomaliesDisksInodes",
                    "description": "Configuration of low disk inodes number detection\n"
                },
                "space": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesDisksSpace:HostAnomaliesDisksSpace",
                    "description": "Configuration of low disk space detection\n"
                },
                "speed": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesDisksSpeed:HostAnomaliesDisksSpeed",
                    "description": "Configuration of slow running disks detection\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/HostAnomaliesDisksInodes:HostAnomaliesDisksInodes": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "The detection is enabled (`true`) or disabled (`false`)\n"
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesDisksInodesThresholds:HostAnomaliesDisksInodesThresholds",
                    "description": "Custom thresholds for high CPU saturation. If not set then the automatic mode is used\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesDisksInodesThresholds:HostAnomaliesDisksInodesThresholds": {
            "properties": {
                "percentage": {
                    "type": "integer",
                    "description": "Alert if percentage of available inodes is lower than *X*% in 3 out of 5 samples\n"
                }
            },
            "type": "object",
            "required": [
                "percentage"
            ]
        },
        "dynatrace:index/HostAnomaliesDisksSpace:HostAnomaliesDisksSpace": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "The detection is enabled (`true`) or disabled (`false`)\n"
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesDisksSpaceThresholds:HostAnomaliesDisksSpaceThresholds",
                    "description": "Custom thresholds for high CPU saturation. If not set then the automatic mode is used\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesDisksSpaceThresholds:HostAnomaliesDisksSpaceThresholds": {
            "properties": {
                "percentage": {
                    "type": "integer",
                    "description": "Alert if percentage of available inodes is lower than *X*% in 3 out of 5 samples\n"
                }
            },
            "type": "object",
            "required": [
                "percentage"
            ]
        },
        "dynatrace:index/HostAnomaliesDisksSpeed:HostAnomaliesDisksSpeed": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "The detection is enabled (`true`) or disabled (`false`)\n"
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesDisksSpeedThresholds:HostAnomaliesDisksSpeedThresholds",
                    "description": "Custom thresholds for high CPU saturation. If not set then the automatic mode is used\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesDisksSpeedThresholds:HostAnomaliesDisksSpeedThresholds": {
            "properties": {
                "writeAndReadTime": {
                    "type": "integer",
                    "description": "Alert if disk read/write time is higher than *X* milliseconds in 3 out of 5 samples\n"
                }
            },
            "type": "object",
            "required": [
                "writeAndReadTime"
            ]
        },
        "dynatrace:index/HostAnomaliesGc:HostAnomaliesGc": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "The detection is enabled (`true`) or disabled (`false`)\n"
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesGcThresholds:HostAnomaliesGcThresholds",
                    "description": "Custom thresholds for high GC activity. If not set, automatic mode is used.   Meeting **any** of these conditions triggers an alert\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesGcThresholds:HostAnomaliesGcThresholds": {
            "properties": {
                "suspensionPercentage": {
                    "type": "integer",
                    "description": "GC suspension is higher than *X*% in 3 out of 5 samples\n"
                },
                "timePercentage": {
                    "type": "integer",
                    "description": "GC time is higher than *X*% in 3 out of 5 samples\n"
                }
            },
            "type": "object",
            "required": [
                "suspensionPercentage",
                "timePercentage"
            ]
        },
        "dynatrace:index/HostAnomaliesJava:HostAnomaliesJava": {
            "properties": {
                "outOfMemory": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesJavaOutOfMemory:HostAnomaliesJavaOutOfMemory",
                    "description": "Configuration of Java out of memory problems detection\n"
                },
                "outOfThreads": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesJavaOutOfThreads:HostAnomaliesJavaOutOfThreads",
                    "description": "Configuration of Java out of threads problems detection\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/HostAnomaliesJavaOutOfMemory:HostAnomaliesJavaOutOfMemory": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "The detection is enabled (`true`) or disabled (`false`)\n"
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesJavaOutOfMemoryThresholds:HostAnomaliesJavaOutOfMemoryThresholds",
                    "description": "Custom thresholds for high CPU saturation. If not set then the automatic mode is used\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesJavaOutOfMemoryThresholds:HostAnomaliesJavaOutOfMemoryThresholds": {
            "properties": {
                "exceptionCount": {
                    "type": "integer",
                    "description": "Alert if the number of Java out of memory exceptions is *X* per minute or higher\n"
                }
            },
            "type": "object",
            "required": [
                "exceptionCount"
            ]
        },
        "dynatrace:index/HostAnomaliesJavaOutOfThreads:HostAnomaliesJavaOutOfThreads": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "The detection is enabled (`true`) or disabled (`false`)\n"
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesJavaOutOfThreadsThresholds:HostAnomaliesJavaOutOfThreadsThresholds",
                    "description": "Custom thresholds for high CPU saturation. If not set then the automatic mode is used\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesJavaOutOfThreadsThresholds:HostAnomaliesJavaOutOfThreadsThresholds": {
            "properties": {
                "exceptionCount": {
                    "type": "integer",
                    "description": "Alert if the number of Java out of memory exceptions is *X* per minute or higher\n"
                }
            },
            "type": "object",
            "required": [
                "exceptionCount"
            ]
        },
        "dynatrace:index/HostAnomaliesMemory:HostAnomaliesMemory": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "The detection is enabled (`true`) or disabled (`false`)\n"
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesMemoryThresholds:HostAnomaliesMemoryThresholds",
                    "description": "Custom thresholds for high memory usage. If not set then the automatic mode is used. **Both** conditions must be met to trigger an alert\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesMemoryThresholds:HostAnomaliesMemoryThresholds": {
            "properties": {
                "linux": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesMemoryThresholdsLinux:HostAnomaliesMemoryThresholdsLinux",
                    "description": "Custom thresholds for Linux\n"
                },
                "windows": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesMemoryThresholdsWindows:HostAnomaliesMemoryThresholdsWindows",
                    "description": "Custom thresholds for Windows\n"
                }
            },
            "type": "object",
            "required": [
                "linux",
                "windows"
            ]
        },
        "dynatrace:index/HostAnomaliesMemoryThresholdsLinux:HostAnomaliesMemoryThresholdsLinux": {
            "properties": {
                "pageFaults": {
                    "type": "integer",
                    "description": "Memory page fault rate is higher than *X* faults per second\n"
                },
                "usage": {
                    "type": "integer",
                    "description": "Memory usage is higher than *X*%\n"
                }
            },
            "type": "object",
            "required": [
                "pageFaults",
                "usage"
            ]
        },
        "dynatrace:index/HostAnomaliesMemoryThresholdsWindows:HostAnomaliesMemoryThresholdsWindows": {
            "properties": {
                "pageFaults": {
                    "type": "integer",
                    "description": "Memory page fault rate is higher than *X* faults per second\n"
                },
                "usage": {
                    "type": "integer",
                    "description": "Memory usage is higher than *X*%\n"
                }
            },
            "type": "object",
            "required": [
                "pageFaults",
                "usage"
            ]
        },
        "dynatrace:index/HostAnomaliesNetwork:HostAnomaliesNetwork": {
            "properties": {
                "connectivity": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesNetworkConnectivity:HostAnomaliesNetworkConnectivity",
                    "description": "Configuration of TCP connectivity problems detection\n"
                },
                "droppedPackets": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesNetworkDroppedPackets:HostAnomaliesNetworkDroppedPackets",
                    "description": "Configuration of high number of dropped packets detection\n"
                },
                "errors": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesNetworkErrors:HostAnomaliesNetworkErrors",
                    "description": "Configuration of high number of network errors detection\n"
                },
                "retransmission": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesNetworkRetransmission:HostAnomaliesNetworkRetransmission",
                    "description": "Configuration of high retransmission rate detection\n"
                },
                "utilization": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesNetworkUtilization:HostAnomaliesNetworkUtilization",
                    "description": "Configuration of high network utilization detection\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/HostAnomaliesNetworkConnectivity:HostAnomaliesNetworkConnectivity": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "The detection is enabled (`true`) or disabled (`false`)\n"
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesNetworkConnectivityThresholds:HostAnomaliesNetworkConnectivityThresholds",
                    "description": "Custom thresholds for high CPU saturation. If not set then the automatic mode is used\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesNetworkConnectivityThresholds:HostAnomaliesNetworkConnectivityThresholds": {
            "properties": {
                "failedConnections": {
                    "type": "integer",
                    "description": "Number of failed connections is higher than *X* connections per minute in 3 out of 5 samples\n"
                },
                "newConnectionFailures": {
                    "type": "integer",
                    "description": "Percentage of new connection failures is higher than *X*% in 3 out of 5 samples\n"
                }
            },
            "type": "object",
            "required": [
                "failedConnections",
                "newConnectionFailures"
            ]
        },
        "dynatrace:index/HostAnomaliesNetworkDroppedPackets:HostAnomaliesNetworkDroppedPackets": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "The detection is enabled (`true`) or disabled (`false`)\n"
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesNetworkDroppedPacketsThresholds:HostAnomaliesNetworkDroppedPacketsThresholds",
                    "description": "Custom thresholds for high CPU saturation. If not set then the automatic mode is used\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesNetworkDroppedPacketsThresholds:HostAnomaliesNetworkDroppedPacketsThresholds": {
            "properties": {
                "droppedPackets": {
                    "type": "integer",
                    "description": "Configuration of high number of dropped packets detection\n"
                },
                "totalPacketsRate": {
                    "type": "integer",
                    "description": "Total receive/transmit packets rate is higher than *X* packets per second in 3 out of 5 samples\n"
                }
            },
            "type": "object",
            "required": [
                "droppedPackets",
                "totalPacketsRate"
            ]
        },
        "dynatrace:index/HostAnomaliesNetworkErrors:HostAnomaliesNetworkErrors": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "The detection is enabled (`true`) or disabled (`false`)\n"
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesNetworkErrorsThresholds:HostAnomaliesNetworkErrorsThresholds",
                    "description": "Custom thresholds for high CPU saturation. If not set then the automatic mode is used\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesNetworkErrorsThresholds:HostAnomaliesNetworkErrorsThresholds": {
            "properties": {
                "errorsPercentage": {
                    "type": "integer",
                    "description": "Receive/transmit error packet percentage is higher than *X*% in 3 out of 5 samples\n"
                },
                "totalPacketsRate": {
                    "type": "integer",
                    "description": "Total receive/transmit packets rate is higher than *X* packets per second in 3 out of 5 samples\n"
                }
            },
            "type": "object",
            "required": [
                "errorsPercentage",
                "totalPacketsRate"
            ]
        },
        "dynatrace:index/HostAnomaliesNetworkRetransmission:HostAnomaliesNetworkRetransmission": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "The detection is enabled (`true`) or disabled (`false`)\n"
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesNetworkRetransmissionThresholds:HostAnomaliesNetworkRetransmissionThresholds",
                    "description": "Custom thresholds for high CPU saturation. If not set then the automatic mode is used\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesNetworkRetransmissionThresholds:HostAnomaliesNetworkRetransmissionThresholds": {
            "properties": {
                "retransmissionRate": {
                    "type": "integer",
                    "description": "Retransmission rate is higher than *X*% in 3 out of 5 samples\n"
                },
                "retransmittedPackets": {
                    "type": "integer",
                    "description": "Number of retransmitted packets is higher than *X* packets per minute in 3 out of 5 samples\n"
                }
            },
            "type": "object",
            "required": [
                "retransmissionRate",
                "retransmittedPackets"
            ]
        },
        "dynatrace:index/HostAnomaliesNetworkUtilization:HostAnomaliesNetworkUtilization": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "The detection is enabled (`true`) or disabled (`false`)\n"
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesNetworkUtilizationThresholds:HostAnomaliesNetworkUtilizationThresholds",
                    "description": "Custom thresholds for high CPU saturation. If not set then the automatic mode is used\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesNetworkUtilizationThresholds:HostAnomaliesNetworkUtilizationThresholds": {
            "properties": {
                "utilization": {
                    "type": "integer",
                    "description": "Configuration of high network utilization detection\n"
                }
            },
            "type": "object",
            "required": [
                "utilization"
            ]
        },
        "dynatrace:index/HostAnomaliesV2Host:HostAnomaliesV2Host": {
            "properties": {
                "connectionLostDetection": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2HostConnectionLostDetection:HostAnomaliesV2HostConnectionLostDetection",
                    "description": "no documentation available\n"
                },
                "highCpuSaturationDetection": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2HostHighCpuSaturationDetection:HostAnomaliesV2HostHighCpuSaturationDetection",
                    "description": "no documentation available\n"
                },
                "highGcActivityDetection": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2HostHighGcActivityDetection:HostAnomaliesV2HostHighGcActivityDetection",
                    "description": "no documentation available\n"
                },
                "highMemoryDetection": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2HostHighMemoryDetection:HostAnomaliesV2HostHighMemoryDetection",
                    "description": "no documentation available\n"
                },
                "highSystemLoadDetection": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2HostHighSystemLoadDetection:HostAnomaliesV2HostHighSystemLoadDetection",
                    "description": "no documentation available\n"
                },
                "outOfMemoryDetection": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2HostOutOfMemoryDetection:HostAnomaliesV2HostOutOfMemoryDetection",
                    "description": "no documentation available\n"
                },
                "outOfThreadsDetection": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2HostOutOfThreadsDetection:HostAnomaliesV2HostOutOfThreadsDetection",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "connectionLostDetection",
                "highCpuSaturationDetection",
                "highGcActivityDetection",
                "highMemoryDetection",
                "highSystemLoadDetection",
                "outOfMemoryDetection",
                "outOfThreadsDetection"
            ]
        },
        "dynatrace:index/HostAnomaliesV2HostConnectionLostDetection:HostAnomaliesV2HostConnectionLostDetection": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Detect host or monitoring connection lost problems\n"
                },
                "onGracefulShutdowns": {
                    "type": "string",
                    "description": "Graceful host shutdowns\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesV2HostHighCpuSaturationDetection:HostAnomaliesV2HostHighCpuSaturationDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2HostHighCpuSaturationDetectionCustomThresholds:HostAnomaliesV2HostHighCpuSaturationDetectionCustomThresholds",
                    "description": "no documentation available\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Detection mode for CPU saturation\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Detect host or monitoring connection lost problems\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesV2HostHighCpuSaturationDetectionCustomThresholds:HostAnomaliesV2HostHighCpuSaturationDetectionCustomThresholds": {
            "properties": {
                "cpuSaturation": {
                    "type": "integer",
                    "description": "Alert if the CPU usage is higher than this threshold for the defined amount of samples\n"
                },
                "eventThresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2HostHighCpuSaturationDetectionCustomThresholdsEventThresholds:HostAnomaliesV2HostHighCpuSaturationDetectionCustomThresholdsEventThresholds",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "cpuSaturation",
                "eventThresholds"
            ]
        },
        "dynatrace:index/HostAnomaliesV2HostHighCpuSaturationDetectionCustomThresholdsEventThresholds:HostAnomaliesV2HostHighCpuSaturationDetectionCustomThresholdsEventThresholds": {
            "properties": {
                "dealertingEvaluationWindow": {
                    "type": "integer",
                    "description": "The number of **10-second samples** that form the sliding evaluation window for dealerting.\n"
                },
                "dealertingSamples": {
                    "type": "integer",
                    "description": "The number of **10-second samples** within the evaluation window that must be lower the threshold to close an event\n"
                },
                "violatingEvaluationWindow": {
                    "type": "integer",
                    "description": "The number of **10-second samples** that form the sliding evaluation window to detect violating samples.\n"
                },
                "violatingSamples": {
                    "type": "integer",
                    "description": "The number of **10-second samples** within the evaluation window that must exceed the threshold to trigger an event\n"
                }
            },
            "type": "object",
            "required": [
                "dealertingEvaluationWindow",
                "dealertingSamples",
                "violatingEvaluationWindow",
                "violatingSamples"
            ]
        },
        "dynatrace:index/HostAnomaliesV2HostHighGcActivityDetection:HostAnomaliesV2HostHighGcActivityDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2HostHighGcActivityDetectionCustomThresholds:HostAnomaliesV2HostHighGcActivityDetectionCustomThresholds",
                    "description": "no documentation available\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Detection mode for CPU saturation\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Detect host or monitoring connection lost problems\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesV2HostHighGcActivityDetectionCustomThresholds:HostAnomaliesV2HostHighGcActivityDetectionCustomThresholds": {
            "properties": {
                "eventThresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2HostHighGcActivityDetectionCustomThresholdsEventThresholds:HostAnomaliesV2HostHighGcActivityDetectionCustomThresholdsEventThresholds",
                    "description": "no documentation available\n"
                },
                "gcSuspensionPercentage": {
                    "type": "integer",
                    "description": "Alert if the GC suspension is higher than this threshold\n"
                },
                "gcTimePercentage": {
                    "type": "integer",
                    "description": "Alert if GC time is higher than this threshold\n"
                }
            },
            "type": "object",
            "required": [
                "eventThresholds",
                "gcSuspensionPercentage",
                "gcTimePercentage"
            ]
        },
        "dynatrace:index/HostAnomaliesV2HostHighGcActivityDetectionCustomThresholdsEventThresholds:HostAnomaliesV2HostHighGcActivityDetectionCustomThresholdsEventThresholds": {
            "properties": {
                "dealertingEvaluationWindow": {
                    "type": "integer",
                    "description": "The number of **10-second samples** that form the sliding evaluation window for dealerting.\n"
                },
                "dealertingSamples": {
                    "type": "integer",
                    "description": "The number of **10-second samples** within the evaluation window that must be lower the threshold to close an event\n"
                },
                "violatingEvaluationWindow": {
                    "type": "integer",
                    "description": "The number of **10-second samples** that form the sliding evaluation window to detect violating samples.\n"
                },
                "violatingSamples": {
                    "type": "integer",
                    "description": "The number of **10-second samples** within the evaluation window that must exceed the threshold to trigger an event\n"
                }
            },
            "type": "object",
            "required": [
                "dealertingEvaluationWindow",
                "dealertingSamples",
                "violatingEvaluationWindow",
                "violatingSamples"
            ]
        },
        "dynatrace:index/HostAnomaliesV2HostHighMemoryDetection:HostAnomaliesV2HostHighMemoryDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2HostHighMemoryDetectionCustomThresholds:HostAnomaliesV2HostHighMemoryDetectionCustomThresholds",
                    "description": "no documentation available\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Detection mode for CPU saturation\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Detect host or monitoring connection lost problems\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesV2HostHighMemoryDetectionCustomThresholds:HostAnomaliesV2HostHighMemoryDetectionCustomThresholds": {
            "properties": {
                "eventThresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2HostHighMemoryDetectionCustomThresholdsEventThresholds:HostAnomaliesV2HostHighMemoryDetectionCustomThresholdsEventThresholds",
                    "description": "no documentation available\n"
                },
                "pageFaultsPerSecondNonWindows": {
                    "type": "integer",
                    "description": "Alert if the memory page fault rate on Unix systems is higher than this threshold for the defined amount of samples\n"
                },
                "pageFaultsPerSecondWindows": {
                    "type": "integer",
                    "description": "Alert if the memory page fault rate on Windows is higher than this threshold for the defined amount of samples\n"
                },
                "usedMemoryPercentageNonWindows": {
                    "type": "integer",
                    "description": "Alert if the memory usage on Unix systems is higher than this threshold\n"
                },
                "usedMemoryPercentageWindows": {
                    "type": "integer",
                    "description": "Alert if the memory usage on Windows is higher than this threshold\n"
                }
            },
            "type": "object",
            "required": [
                "eventThresholds",
                "pageFaultsPerSecondNonWindows",
                "pageFaultsPerSecondWindows",
                "usedMemoryPercentageNonWindows",
                "usedMemoryPercentageWindows"
            ]
        },
        "dynatrace:index/HostAnomaliesV2HostHighMemoryDetectionCustomThresholdsEventThresholds:HostAnomaliesV2HostHighMemoryDetectionCustomThresholdsEventThresholds": {
            "properties": {
                "dealertingEvaluationWindow": {
                    "type": "integer",
                    "description": "The number of **10-second samples** that form the sliding evaluation window for dealerting.\n"
                },
                "dealertingSamples": {
                    "type": "integer",
                    "description": "The number of **10-second samples** within the evaluation window that must be lower the threshold to close an event\n"
                },
                "violatingEvaluationWindow": {
                    "type": "integer",
                    "description": "The number of **10-second samples** that form the sliding evaluation window to detect violating samples.\n"
                },
                "violatingSamples": {
                    "type": "integer",
                    "description": "The number of **10-second samples** within the evaluation window that must exceed the threshold to trigger an event\n"
                }
            },
            "type": "object",
            "required": [
                "dealertingEvaluationWindow",
                "dealertingSamples",
                "violatingEvaluationWindow",
                "violatingSamples"
            ]
        },
        "dynatrace:index/HostAnomaliesV2HostHighSystemLoadDetection:HostAnomaliesV2HostHighSystemLoadDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2HostHighSystemLoadDetectionCustomThresholds:HostAnomaliesV2HostHighSystemLoadDetectionCustomThresholds",
                    "description": "no documentation available\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Detection mode for CPU saturation\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Detect host or monitoring connection lost problems\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesV2HostHighSystemLoadDetectionCustomThresholds:HostAnomaliesV2HostHighSystemLoadDetectionCustomThresholds": {
            "properties": {
                "eventThresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2HostHighSystemLoadDetectionCustomThresholdsEventThresholds:HostAnomaliesV2HostHighSystemLoadDetectionCustomThresholdsEventThresholds",
                    "description": "no documentation available\n"
                },
                "systemLoad": {
                    "type": "number",
                    "description": "Alert if the System Load / Logical cpu core is higher than this threshold for the defined amount of samples\n"
                }
            },
            "type": "object",
            "required": [
                "eventThresholds",
                "systemLoad"
            ]
        },
        "dynatrace:index/HostAnomaliesV2HostHighSystemLoadDetectionCustomThresholdsEventThresholds:HostAnomaliesV2HostHighSystemLoadDetectionCustomThresholdsEventThresholds": {
            "properties": {
                "dealertingEvaluationWindow": {
                    "type": "integer",
                    "description": "The number of **10-second samples** that form the sliding evaluation window for dealerting.\n"
                },
                "dealertingSamples": {
                    "type": "integer",
                    "description": "The number of **10-second samples** within the evaluation window that must be lower the threshold to close an event\n"
                },
                "violatingEvaluationWindow": {
                    "type": "integer",
                    "description": "The number of **10-second samples** that form the sliding evaluation window to detect violating samples.\n"
                },
                "violatingSamples": {
                    "type": "integer",
                    "description": "The number of **10-second samples** within the evaluation window that must exceed the threshold to trigger an event\n"
                }
            },
            "type": "object",
            "required": [
                "dealertingEvaluationWindow",
                "dealertingSamples",
                "violatingEvaluationWindow",
                "violatingSamples"
            ]
        },
        "dynatrace:index/HostAnomaliesV2HostOutOfMemoryDetection:HostAnomaliesV2HostOutOfMemoryDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2HostOutOfMemoryDetectionCustomThresholds:HostAnomaliesV2HostOutOfMemoryDetectionCustomThresholds",
                    "description": "no documentation available\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Detection mode for CPU saturation\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Detect host or monitoring connection lost problems\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesV2HostOutOfMemoryDetectionCustomThresholds:HostAnomaliesV2HostOutOfMemoryDetectionCustomThresholds": {
            "properties": {
                "eventThresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2HostOutOfMemoryDetectionCustomThresholdsEventThresholds:HostAnomaliesV2HostOutOfMemoryDetectionCustomThresholdsEventThresholds",
                    "description": "no documentation available\n"
                },
                "outOfMemoryExceptionsNumber": {
                    "type": "integer",
                    "description": "Alert if the number of Java out-of-memory exceptions is at least this value\n"
                }
            },
            "type": "object",
            "required": [
                "eventThresholds",
                "outOfMemoryExceptionsNumber"
            ]
        },
        "dynatrace:index/HostAnomaliesV2HostOutOfMemoryDetectionCustomThresholdsEventThresholds:HostAnomaliesV2HostOutOfMemoryDetectionCustomThresholdsEventThresholds": {
            "properties": {
                "dealertingEvaluationWindow": {
                    "type": "integer",
                    "description": "The number of **10-second samples** that form the sliding evaluation window for dealerting.\n"
                },
                "dealertingSamples": {
                    "type": "integer",
                    "description": "The number of **10-second samples** within the evaluation window that must be lower the threshold to close an event\n"
                },
                "violatingEvaluationWindow": {
                    "type": "integer",
                    "description": "The number of **10-second samples** that form the sliding evaluation window to detect violating samples.\n"
                },
                "violatingSamples": {
                    "type": "integer",
                    "description": "The number of **10-second samples** within the evaluation window that must exceed the threshold to trigger an event\n"
                }
            },
            "type": "object",
            "required": [
                "dealertingEvaluationWindow",
                "dealertingSamples",
                "violatingEvaluationWindow",
                "violatingSamples"
            ]
        },
        "dynatrace:index/HostAnomaliesV2HostOutOfThreadsDetection:HostAnomaliesV2HostOutOfThreadsDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2HostOutOfThreadsDetectionCustomThresholds:HostAnomaliesV2HostOutOfThreadsDetectionCustomThresholds",
                    "description": "no documentation available\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Detection mode for CPU saturation\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Detect host or monitoring connection lost problems\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesV2HostOutOfThreadsDetectionCustomThresholds:HostAnomaliesV2HostOutOfThreadsDetectionCustomThresholds": {
            "properties": {
                "eventThresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2HostOutOfThreadsDetectionCustomThresholdsEventThresholds:HostAnomaliesV2HostOutOfThreadsDetectionCustomThresholdsEventThresholds",
                    "description": "no documentation available\n"
                },
                "outOfThreadsExceptionsNumber": {
                    "type": "integer",
                    "description": "Alert if the number of Java out-of-threads exceptions is at least this value\n"
                }
            },
            "type": "object",
            "required": [
                "eventThresholds",
                "outOfThreadsExceptionsNumber"
            ]
        },
        "dynatrace:index/HostAnomaliesV2HostOutOfThreadsDetectionCustomThresholdsEventThresholds:HostAnomaliesV2HostOutOfThreadsDetectionCustomThresholdsEventThresholds": {
            "properties": {
                "dealertingEvaluationWindow": {
                    "type": "integer",
                    "description": "The number of **10-second samples** that form the sliding evaluation window for dealerting.\n"
                },
                "dealertingSamples": {
                    "type": "integer",
                    "description": "The number of **10-second samples** within the evaluation window that must be lower the threshold to close an event\n"
                },
                "violatingEvaluationWindow": {
                    "type": "integer",
                    "description": "The number of **10-second samples** that form the sliding evaluation window to detect violating samples.\n"
                },
                "violatingSamples": {
                    "type": "integer",
                    "description": "The number of **10-second samples** within the evaluation window that must exceed the threshold to trigger an event\n"
                }
            },
            "type": "object",
            "required": [
                "dealertingEvaluationWindow",
                "dealertingSamples",
                "violatingEvaluationWindow",
                "violatingSamples"
            ]
        },
        "dynatrace:index/HostAnomaliesV2Network:HostAnomaliesV2Network": {
            "properties": {
                "highNetworkDetection": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2NetworkHighNetworkDetection:HostAnomaliesV2NetworkHighNetworkDetection",
                    "description": "no documentation available\n"
                },
                "networkDroppedPacketsDetection": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2NetworkNetworkDroppedPacketsDetection:HostAnomaliesV2NetworkNetworkDroppedPacketsDetection",
                    "description": "no documentation available\n"
                },
                "networkErrorsDetection": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2NetworkNetworkErrorsDetection:HostAnomaliesV2NetworkNetworkErrorsDetection",
                    "description": "no documentation available\n"
                },
                "networkHighRetransmissionDetection": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2NetworkNetworkHighRetransmissionDetection:HostAnomaliesV2NetworkNetworkHighRetransmissionDetection",
                    "description": "no documentation available\n"
                },
                "networkTcpProblemsDetection": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2NetworkNetworkTcpProblemsDetection:HostAnomaliesV2NetworkNetworkTcpProblemsDetection",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "highNetworkDetection",
                "networkDroppedPacketsDetection",
                "networkErrorsDetection",
                "networkHighRetransmissionDetection",
                "networkTcpProblemsDetection"
            ]
        },
        "dynatrace:index/HostAnomaliesV2NetworkHighNetworkDetection:HostAnomaliesV2NetworkHighNetworkDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2NetworkHighNetworkDetectionCustomThresholds:HostAnomaliesV2NetworkHighNetworkDetectionCustomThresholds",
                    "description": "no documentation available\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Detection mode for CPU saturation\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Detect host or monitoring connection lost problems\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesV2NetworkHighNetworkDetectionCustomThresholds:HostAnomaliesV2NetworkHighNetworkDetectionCustomThresholds": {
            "properties": {
                "errorsPercentage": {
                    "type": "integer",
                    "description": "Alert if sent/received traffic utilization is higher than this threshold for the defined amount of samples\n"
                },
                "eventThresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2NetworkHighNetworkDetectionCustomThresholdsEventThresholds:HostAnomaliesV2NetworkHighNetworkDetectionCustomThresholdsEventThresholds",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "errorsPercentage",
                "eventThresholds"
            ]
        },
        "dynatrace:index/HostAnomaliesV2NetworkHighNetworkDetectionCustomThresholdsEventThresholds:HostAnomaliesV2NetworkHighNetworkDetectionCustomThresholdsEventThresholds": {
            "properties": {
                "dealertingEvaluationWindow": {
                    "type": "integer",
                    "description": "The number of **10-second samples** that form the sliding evaluation window for dealerting.\n"
                },
                "dealertingSamples": {
                    "type": "integer",
                    "description": "The number of **10-second samples** within the evaluation window that must be lower the threshold to close an event\n"
                },
                "violatingEvaluationWindow": {
                    "type": "integer",
                    "description": "The number of **10-second samples** that form the sliding evaluation window to detect violating samples.\n"
                },
                "violatingSamples": {
                    "type": "integer",
                    "description": "The number of **10-second samples** within the evaluation window that must exceed the threshold to trigger an event\n"
                }
            },
            "type": "object",
            "required": [
                "dealertingEvaluationWindow",
                "dealertingSamples",
                "violatingEvaluationWindow",
                "violatingSamples"
            ]
        },
        "dynatrace:index/HostAnomaliesV2NetworkNetworkDroppedPacketsDetection:HostAnomaliesV2NetworkNetworkDroppedPacketsDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2NetworkNetworkDroppedPacketsDetectionCustomThresholds:HostAnomaliesV2NetworkNetworkDroppedPacketsDetectionCustomThresholds",
                    "description": "no documentation available\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Detection mode for CPU saturation\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Detect host or monitoring connection lost problems\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesV2NetworkNetworkDroppedPacketsDetectionCustomThresholds:HostAnomaliesV2NetworkNetworkDroppedPacketsDetectionCustomThresholds": {
            "properties": {
                "droppedPacketsPercentage": {
                    "type": "integer",
                    "description": "Receive/transmit dropped packet percentage threshold\n"
                },
                "eventThresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2NetworkNetworkDroppedPacketsDetectionCustomThresholdsEventThresholds:HostAnomaliesV2NetworkNetworkDroppedPacketsDetectionCustomThresholdsEventThresholds",
                    "description": "no documentation available\n"
                },
                "totalPacketsRate": {
                    "type": "integer",
                    "description": "Total packets rate threshold\n"
                }
            },
            "type": "object",
            "required": [
                "droppedPacketsPercentage",
                "eventThresholds",
                "totalPacketsRate"
            ]
        },
        "dynatrace:index/HostAnomaliesV2NetworkNetworkDroppedPacketsDetectionCustomThresholdsEventThresholds:HostAnomaliesV2NetworkNetworkDroppedPacketsDetectionCustomThresholdsEventThresholds": {
            "properties": {
                "dealertingEvaluationWindow": {
                    "type": "integer",
                    "description": "The number of **10-second samples** that form the sliding evaluation window for dealerting.\n"
                },
                "dealertingSamples": {
                    "type": "integer",
                    "description": "The number of **10-second samples** within the evaluation window that must be lower the threshold to close an event\n"
                },
                "violatingEvaluationWindow": {
                    "type": "integer",
                    "description": "The number of **10-second samples** that form the sliding evaluation window to detect violating samples.\n"
                },
                "violatingSamples": {
                    "type": "integer",
                    "description": "The number of **10-second samples** within the evaluation window that must exceed the threshold to trigger an event\n"
                }
            },
            "type": "object",
            "required": [
                "dealertingEvaluationWindow",
                "dealertingSamples",
                "violatingEvaluationWindow",
                "violatingSamples"
            ]
        },
        "dynatrace:index/HostAnomaliesV2NetworkNetworkErrorsDetection:HostAnomaliesV2NetworkNetworkErrorsDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2NetworkNetworkErrorsDetectionCustomThresholds:HostAnomaliesV2NetworkNetworkErrorsDetectionCustomThresholds",
                    "description": "no documentation available\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Detection mode for CPU saturation\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Detect host or monitoring connection lost problems\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesV2NetworkNetworkErrorsDetectionCustomThresholds:HostAnomaliesV2NetworkNetworkErrorsDetectionCustomThresholds": {
            "properties": {
                "errorsPercentage": {
                    "type": "integer",
                    "description": "Alert if sent/received traffic utilization is higher than this threshold for the defined amount of samples\n"
                },
                "eventThresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2NetworkNetworkErrorsDetectionCustomThresholdsEventThresholds:HostAnomaliesV2NetworkNetworkErrorsDetectionCustomThresholdsEventThresholds",
                    "description": "no documentation available\n"
                },
                "totalPacketsRate": {
                    "type": "integer",
                    "description": "Total packets rate threshold\n"
                }
            },
            "type": "object",
            "required": [
                "errorsPercentage",
                "eventThresholds",
                "totalPacketsRate"
            ]
        },
        "dynatrace:index/HostAnomaliesV2NetworkNetworkErrorsDetectionCustomThresholdsEventThresholds:HostAnomaliesV2NetworkNetworkErrorsDetectionCustomThresholdsEventThresholds": {
            "properties": {
                "dealertingEvaluationWindow": {
                    "type": "integer",
                    "description": "The number of **10-second samples** that form the sliding evaluation window for dealerting.\n"
                },
                "dealertingSamples": {
                    "type": "integer",
                    "description": "The number of **10-second samples** within the evaluation window that must be lower the threshold to close an event\n"
                },
                "violatingEvaluationWindow": {
                    "type": "integer",
                    "description": "The number of **10-second samples** that form the sliding evaluation window to detect violating samples.\n"
                },
                "violatingSamples": {
                    "type": "integer",
                    "description": "The number of **10-second samples** within the evaluation window that must exceed the threshold to trigger an event\n"
                }
            },
            "type": "object",
            "required": [
                "dealertingEvaluationWindow",
                "dealertingSamples",
                "violatingEvaluationWindow",
                "violatingSamples"
            ]
        },
        "dynatrace:index/HostAnomaliesV2NetworkNetworkHighRetransmissionDetection:HostAnomaliesV2NetworkNetworkHighRetransmissionDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2NetworkNetworkHighRetransmissionDetectionCustomThresholds:HostAnomaliesV2NetworkNetworkHighRetransmissionDetectionCustomThresholds",
                    "description": "no documentation available\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Detection mode for CPU saturation\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Detect host or monitoring connection lost problems\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesV2NetworkNetworkHighRetransmissionDetectionCustomThresholds:HostAnomaliesV2NetworkNetworkHighRetransmissionDetectionCustomThresholds": {
            "properties": {
                "eventThresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2NetworkNetworkHighRetransmissionDetectionCustomThresholdsEventThresholds:HostAnomaliesV2NetworkNetworkHighRetransmissionDetectionCustomThresholdsEventThresholds",
                    "description": "no documentation available\n"
                },
                "retransmissionRatePercentage": {
                    "type": "integer",
                    "description": "Retransmission rate threshold\n"
                },
                "retransmittedPacketsNumberPerMinute": {
                    "type": "integer",
                    "description": "Number of retransmitted packets threshold\n"
                }
            },
            "type": "object",
            "required": [
                "eventThresholds",
                "retransmissionRatePercentage",
                "retransmittedPacketsNumberPerMinute"
            ]
        },
        "dynatrace:index/HostAnomaliesV2NetworkNetworkHighRetransmissionDetectionCustomThresholdsEventThresholds:HostAnomaliesV2NetworkNetworkHighRetransmissionDetectionCustomThresholdsEventThresholds": {
            "properties": {
                "dealertingEvaluationWindow": {
                    "type": "integer",
                    "description": "The number of **10-second samples** that form the sliding evaluation window for dealerting.\n"
                },
                "dealertingSamples": {
                    "type": "integer",
                    "description": "The number of **10-second samples** within the evaluation window that must be lower the threshold to close an event\n"
                },
                "violatingEvaluationWindow": {
                    "type": "integer",
                    "description": "The number of **10-second samples** that form the sliding evaluation window to detect violating samples.\n"
                },
                "violatingSamples": {
                    "type": "integer",
                    "description": "The number of **10-second samples** within the evaluation window that must exceed the threshold to trigger an event\n"
                }
            },
            "type": "object",
            "required": [
                "dealertingEvaluationWindow",
                "dealertingSamples",
                "violatingEvaluationWindow",
                "violatingSamples"
            ]
        },
        "dynatrace:index/HostAnomaliesV2NetworkNetworkTcpProblemsDetection:HostAnomaliesV2NetworkNetworkTcpProblemsDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholds:HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholds",
                    "description": "no documentation available\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Detection mode for CPU saturation\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Detect host or monitoring connection lost problems\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholds:HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholds": {
            "properties": {
                "eventThresholds": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholdsEventThresholds:HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholdsEventThresholds",
                    "description": "no documentation available\n"
                },
                "failedConnectionsNumberPerMinute": {
                    "type": "integer",
                    "description": "Number of failed connections threshold\n"
                },
                "newConnectionFailuresPercentage": {
                    "type": "integer",
                    "description": "New connection failure threshold\n"
                }
            },
            "type": "object",
            "required": [
                "eventThresholds",
                "failedConnectionsNumberPerMinute",
                "newConnectionFailuresPercentage"
            ]
        },
        "dynatrace:index/HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholdsEventThresholds:HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholdsEventThresholds": {
            "properties": {
                "dealertingEvaluationWindow": {
                    "type": "integer",
                    "description": "The number of **10-second samples** that form the sliding evaluation window for dealerting.\n"
                },
                "dealertingSamples": {
                    "type": "integer",
                    "description": "The number of **10-second samples** within the evaluation window that must be lower the threshold to close an event\n"
                },
                "violatingEvaluationWindow": {
                    "type": "integer",
                    "description": "The number of **10-second samples** that form the sliding evaluation window to detect violating samples.\n"
                },
                "violatingSamples": {
                    "type": "integer",
                    "description": "The number of **10-second samples** within the evaluation window that must exceed the threshold to trigger an event\n"
                }
            },
            "type": "object",
            "required": [
                "dealertingEvaluationWindow",
                "dealertingSamples",
                "violatingEvaluationWindow",
                "violatingSamples"
            ]
        },
        "dynatrace:index/HostNamingCondition:HostNamingCondition": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionCondition:HostNamingConditionCondition"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/HostNamingConditionCondition:HostNamingConditionCondition": {
            "properties": {
                "applicationTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionApplicationTypeComparison:HostNamingConditionConditionApplicationTypeComparison"
                    },
                    "deprecationMessage": "You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "applicationTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionApplicationType:HostNamingConditionConditionApplicationType"
                    }
                },
                "azureComputeModeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionAzureComputeModeComparison:HostNamingConditionConditionAzureComputeModeComparison"
                    }
                },
                "azureComputeModes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionAzureComputeMode:HostNamingConditionConditionAzureComputeMode"
                    },
                    "deprecationMessage": "You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility."
                },
                "azureSkuComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionAzureSkuComparision:HostNamingConditionConditionAzureSkuComparision"
                    },
                    "deprecationMessage": "You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility."
                },
                "azureSkus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionAzureSkus:HostNamingConditionConditionAzureSkus"
                    }
                },
                "baseComparisonBasics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionBaseComparisonBasic:HostNamingConditionConditionBaseComparisonBasic"
                    },
                    "deprecationMessage": "You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility."
                },
                "baseConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionBaseConditionKey:HostNamingConditionConditionBaseConditionKey"
                    },
                    "deprecationMessage": "'base_condition_key' is deprecated. You should use 'key'"
                },
                "bitnessComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionBitnessComparision:HostNamingConditionConditionBitnessComparision"
                    },
                    "deprecationMessage": "You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility."
                },
                "bitnesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionBitness:HostNamingConditionConditionBitness"
                    }
                },
                "cloudTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionCloudTypeComparison:HostNamingConditionConditionCloudTypeComparison"
                    },
                    "deprecationMessage": "You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "cloudTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionCloudType:HostNamingConditionConditionCloudType"
                    }
                },
                "comparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionComparison:HostNamingConditionConditionComparison"
                    }
                },
                "customApplicationTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionCustomApplicationTypeComparison:HostNamingConditionConditionCustomApplicationTypeComparison"
                    },
                    "deprecationMessage": "You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "customApplicationTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionCustomApplicationType:HostNamingConditionConditionCustomApplicationType"
                    }
                },
                "customHostMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionCustomHostMetadataConditionKey:HostNamingConditionConditionCustomHostMetadataConditionKey"
                    },
                    "deprecationMessage": "'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'"
                },
                "customHostMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionCustomHostMetadata:HostNamingConditionConditionCustomHostMetadata"
                    }
                },
                "customProcessMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionCustomProcessMetadataConditionKey:HostNamingConditionConditionCustomProcessMetadataConditionKey"
                    },
                    "deprecationMessage": "'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'"
                },
                "customProcessMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionCustomProcessMetadata:HostNamingConditionConditionCustomProcessMetadata"
                    }
                },
                "databaseTopologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionDatabaseTopology:HostNamingConditionConditionDatabaseTopology"
                    }
                },
                "databaseTopologyComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionDatabaseTopologyComparison:HostNamingConditionConditionDatabaseTopologyComparison"
                    },
                    "deprecationMessage": "You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility."
                },
                "dcrumDecoderComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionDcrumDecoderComparison:HostNamingConditionConditionDcrumDecoderComparison"
                    },
                    "deprecationMessage": "You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility."
                },
                "dcrumDecoders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionDcrumDecoder:HostNamingConditionConditionDcrumDecoder"
                    }
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionEntity:HostNamingConditionConditionEntity"
                    }
                },
                "entityIdComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionEntityIdComparison:HostNamingConditionConditionEntityIdComparison"
                    },
                    "deprecationMessage": "You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility."
                },
                "hostTeches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionHostTech:HostNamingConditionConditionHostTech"
                    }
                },
                "hypervisorTypeComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionHypervisorTypeComparision:HostNamingConditionConditionHypervisorTypeComparision"
                    },
                    "deprecationMessage": "`hypervisor_type_comparision` is deprecated. Use `hypervisor` instead"
                },
                "hypervisors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionHypervisor:HostNamingConditionConditionHypervisor"
                    }
                },
                "indexedNameComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionIndexedNameComparison:HostNamingConditionConditionIndexedNameComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility."
                },
                "indexedNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionIndexedName:HostNamingConditionConditionIndexedName"
                    }
                },
                "indexedStringComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionIndexedStringComparison:HostNamingConditionConditionIndexedStringComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility."
                },
                "indexedStrings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionIndexedString:HostNamingConditionConditionIndexedString"
                    }
                },
                "indexedTagComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionIndexedTagComparison:HostNamingConditionConditionIndexedTagComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility."
                },
                "indexedTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionIndexedTag:HostNamingConditionConditionIndexedTag"
                    }
                },
                "integerComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionIntegerComparison:HostNamingConditionConditionIntegerComparison"
                    },
                    "deprecationMessage": "You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility."
                },
                "integers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionInteger:HostNamingConditionConditionInteger"
                    }
                },
                "ipaddressComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionIpaddressComparison:HostNamingConditionConditionIpaddressComparison"
                    },
                    "deprecationMessage": "You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility."
                },
                "ipaddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionIpaddress:HostNamingConditionConditionIpaddress"
                    }
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionKey:HostNamingConditionConditionKey"
                    }
                },
                "mobilePlatformComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionMobilePlatformComparison:HostNamingConditionConditionMobilePlatformComparison"
                    },
                    "deprecationMessage": "You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility."
                },
                "mobilePlatforms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionMobilePlatform:HostNamingConditionConditionMobilePlatform"
                    }
                },
                "osArches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionOsArch:HostNamingConditionConditionOsArch"
                    }
                },
                "osTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionOsType:HostNamingConditionConditionOsType"
                    }
                },
                "osarchitectureComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionOsarchitectureComparison:HostNamingConditionConditionOsarchitectureComparison"
                    },
                    "deprecationMessage": "You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility."
                },
                "ostypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionOstypeComparison:HostNamingConditionConditionOstypeComparison"
                    },
                    "deprecationMessage": "You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility."
                },
                "paasTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionPaasTypeComparison:HostNamingConditionConditionPaasTypeComparison"
                    },
                    "deprecationMessage": "You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "paasTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionPaasType:HostNamingConditionConditionPaasType"
                    }
                },
                "processMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionProcessMetadataConditionKey:HostNamingConditionConditionProcessMetadataConditionKey"
                    },
                    "deprecationMessage": "'process_metadata_condition_key' is deprecated. You should use 'process_metadata'"
                },
                "processMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionProcessMetadata:HostNamingConditionConditionProcessMetadata"
                    }
                },
                "serviceTopologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionServiceTopology:HostNamingConditionConditionServiceTopology"
                    }
                },
                "serviceTopologyComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionServiceTopologyComparison:HostNamingConditionConditionServiceTopologyComparison"
                    },
                    "deprecationMessage": "You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility."
                },
                "serviceTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionServiceTypeComparison:HostNamingConditionConditionServiceTypeComparison"
                    },
                    "deprecationMessage": "You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "serviceTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionServiceType:HostNamingConditionConditionServiceType"
                    }
                },
                "simpleHostTechComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionSimpleHostTechComparison:HostNamingConditionConditionSimpleHostTechComparison"
                    },
                    "deprecationMessage": "You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility."
                },
                "simpleTechComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionSimpleTechComparison:HostNamingConditionConditionSimpleTechComparison"
                    },
                    "deprecationMessage": "You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility."
                },
                "stringComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionStringComparison:HostNamingConditionConditionStringComparison"
                    },
                    "deprecationMessage": "You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility."
                },
                "stringConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionStringConditionKey:HostNamingConditionConditionStringConditionKey"
                    },
                    "deprecationMessage": "'string_condition_key' is deprecated. You should use 'string_key'"
                },
                "stringKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionStringKey:HostNamingConditionConditionStringKey"
                    }
                },
                "strings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionString:HostNamingConditionConditionString"
                    }
                },
                "syntheticEngineTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionSyntheticEngineTypeComparison:HostNamingConditionConditionSyntheticEngineTypeComparison"
                    },
                    "deprecationMessage": "You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "syntheticEngines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionSyntheticEngine:HostNamingConditionConditionSyntheticEngine"
                    }
                },
                "tagComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionTagComparison:HostNamingConditionConditionTagComparison"
                    },
                    "deprecationMessage": "You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionTag:HostNamingConditionConditionTag"
                    }
                },
                "teches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingConditionConditionTech:HostNamingConditionConditionTech"
                    }
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/HostNamingConditionConditionApplicationType:HostNamingConditionConditionApplicationType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionApplicationTypeComparison:HostNamingConditionConditionApplicationTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionAzureComputeMode:HostNamingConditionConditionAzureComputeMode": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionAzureComputeModeComparison:HostNamingConditionConditionAzureComputeModeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionAzureSkuComparision:HostNamingConditionConditionAzureSkuComparision": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionAzureSkus:HostNamingConditionConditionAzureSkus": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionBaseComparisonBasic:HostNamingConditionConditionBaseComparisonBasic": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionBaseConditionKey:HostNamingConditionConditionBaseConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionBitness:HostNamingConditionConditionBitness": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionBitnessComparision:HostNamingConditionConditionBitnessComparision": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionCloudType:HostNamingConditionConditionCloudType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionCloudTypeComparison:HostNamingConditionConditionCloudTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionComparison:HostNamingConditionConditionComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionCustomApplicationType:HostNamingConditionConditionCustomApplicationType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionCustomApplicationTypeComparison:HostNamingConditionConditionCustomApplicationTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionCustomHostMetadata:HostNamingConditionConditionCustomHostMetadata": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/HostNamingConditionConditionCustomHostMetadataDynamicKey:HostNamingConditionConditionCustomHostMetadataDynamicKey"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionCustomHostMetadataConditionKey:HostNamingConditionConditionCustomHostMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/HostNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey:HostNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey:HostNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionCustomHostMetadataDynamicKey:HostNamingConditionConditionCustomHostMetadataDynamicKey": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionCustomProcessMetadata:HostNamingConditionConditionCustomProcessMetadata": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/HostNamingConditionConditionCustomProcessMetadataDynamicKey:HostNamingConditionConditionCustomProcessMetadataDynamicKey"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionCustomProcessMetadataConditionKey:HostNamingConditionConditionCustomProcessMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/HostNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey:HostNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey:HostNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionCustomProcessMetadataDynamicKey:HostNamingConditionConditionCustomProcessMetadataDynamicKey": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionDatabaseTopology:HostNamingConditionConditionDatabaseTopology": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionDatabaseTopologyComparison:HostNamingConditionConditionDatabaseTopologyComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionDcrumDecoder:HostNamingConditionConditionDcrumDecoder": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionDcrumDecoderComparison:HostNamingConditionConditionDcrumDecoderComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionEntity:HostNamingConditionConditionEntity": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionEntityIdComparison:HostNamingConditionConditionEntityIdComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionHostTech:HostNamingConditionConditionHostTech": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/HostNamingConditionConditionHostTechValue:HostNamingConditionConditionHostTechValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionHostTechValue:HostNamingConditionConditionHostTechValue": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "verbatimType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/HostNamingConditionConditionHypervisor:HostNamingConditionConditionHypervisor": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionHypervisorTypeComparision:HostNamingConditionConditionHypervisorTypeComparision": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionIndexedName:HostNamingConditionConditionIndexedName": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionIndexedNameComparison:HostNamingConditionConditionIndexedNameComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionIndexedString:HostNamingConditionConditionIndexedString": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionIndexedStringComparison:HostNamingConditionConditionIndexedStringComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionIndexedTag:HostNamingConditionConditionIndexedTag": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/HostNamingConditionConditionIndexedTagValue:HostNamingConditionConditionIndexedTagValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionIndexedTagComparison:HostNamingConditionConditionIndexedTagComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/HostNamingConditionConditionIndexedTagComparisonValue:HostNamingConditionConditionIndexedTagComparisonValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionIndexedTagComparisonValue:HostNamingConditionConditionIndexedTagComparisonValue": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionIndexedTagValue:HostNamingConditionConditionIndexedTagValue": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionInteger:HostNamingConditionConditionInteger": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionIntegerComparison:HostNamingConditionConditionIntegerComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionIpaddress:HostNamingConditionConditionIpaddress": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionIpaddressComparison:HostNamingConditionConditionIpaddressComparison": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionKey:HostNamingConditionConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionMobilePlatform:HostNamingConditionConditionMobilePlatform": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionMobilePlatformComparison:HostNamingConditionConditionMobilePlatformComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionOsArch:HostNamingConditionConditionOsArch": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionOsType:HostNamingConditionConditionOsType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionOsarchitectureComparison:HostNamingConditionConditionOsarchitectureComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionOstypeComparison:HostNamingConditionConditionOstypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionPaasType:HostNamingConditionConditionPaasType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionPaasTypeComparison:HostNamingConditionConditionPaasTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionProcessMetadata:HostNamingConditionConditionProcessMetadata": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionProcessMetadataConditionKey:HostNamingConditionConditionProcessMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionServiceTopology:HostNamingConditionConditionServiceTopology": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionServiceTopologyComparison:HostNamingConditionConditionServiceTopologyComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionServiceType:HostNamingConditionConditionServiceType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionServiceTypeComparison:HostNamingConditionConditionServiceTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionSimpleHostTechComparison:HostNamingConditionConditionSimpleHostTechComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/HostNamingConditionConditionSimpleHostTechComparisonValue:HostNamingConditionConditionSimpleHostTechComparisonValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionSimpleHostTechComparisonValue:HostNamingConditionConditionSimpleHostTechComparisonValue": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "verbatimType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/HostNamingConditionConditionSimpleTechComparison:HostNamingConditionConditionSimpleTechComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/HostNamingConditionConditionSimpleTechComparisonValue:HostNamingConditionConditionSimpleTechComparisonValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionSimpleTechComparisonValue:HostNamingConditionConditionSimpleTechComparisonValue": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "verbatimType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/HostNamingConditionConditionString:HostNamingConditionConditionString": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionStringComparison:HostNamingConditionConditionStringComparison": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionStringConditionKey:HostNamingConditionConditionStringConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionStringKey:HostNamingConditionConditionStringKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionSyntheticEngine:HostNamingConditionConditionSyntheticEngine": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionSyntheticEngineTypeComparison:HostNamingConditionConditionSyntheticEngineTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionTag:HostNamingConditionConditionTag": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/HostNamingConditionConditionTagValue:HostNamingConditionConditionTagValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionTagComparison:HostNamingConditionConditionTagComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/HostNamingConditionConditionTagComparisonValue:HostNamingConditionConditionTagComparisonValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionTagComparisonValue:HostNamingConditionConditionTagComparisonValue": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionTagValue:HostNamingConditionConditionTagValue": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionTech:HostNamingConditionConditionTech": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/HostNamingConditionConditionTechValue:HostNamingConditionConditionTechValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/HostNamingConditionConditionTechValue:HostNamingConditionConditionTechValue": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "verbatimType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/HttpMonitorAnomalyDetection:HttpMonitorAnomalyDetection": {
            "properties": {
                "loadingTimeThresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorAnomalyDetectionLoadingTimeThreshold:HttpMonitorAnomalyDetectionLoadingTimeThreshold"
                    },
                    "description": "Thresholds for loading times\n"
                },
                "outageHandlings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorAnomalyDetectionOutageHandling:HttpMonitorAnomalyDetectionOutageHandling"
                    },
                    "description": "Outage handling configuration\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/HttpMonitorAnomalyDetectionLoadingTimeThreshold:HttpMonitorAnomalyDetectionLoadingTimeThreshold": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Performance threshold is enabled (`true`) or disabled (`false`)\n"
                },
                "thresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorAnomalyDetectionLoadingTimeThresholdThreshold:HttpMonitorAnomalyDetectionLoadingTimeThresholdThreshold"
                    },
                    "description": "The list of performance threshold rules\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/HttpMonitorAnomalyDetectionLoadingTimeThresholdThreshold:HttpMonitorAnomalyDetectionLoadingTimeThresholdThreshold": {
            "properties": {
                "thresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorAnomalyDetectionLoadingTimeThresholdThresholdThreshold:HttpMonitorAnomalyDetectionLoadingTimeThresholdThresholdThreshold"
                    },
                    "description": "The list of performance threshold rules\n"
                }
            },
            "type": "object",
            "required": [
                "thresholds"
            ]
        },
        "dynatrace:index/HttpMonitorAnomalyDetectionLoadingTimeThresholdThresholdThreshold:HttpMonitorAnomalyDetectionLoadingTimeThresholdThresholdThreshold": {
            "properties": {
                "eventIndex": {
                    "type": "integer",
                    "description": "Specify the event to which an ACTION threshold applies\n"
                },
                "requestIndex": {
                    "type": "integer",
                    "description": "Specify the request to which an ACTION threshold applies\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                },
                "valueMs": {
                    "type": "integer",
                    "description": "Notify if monitor takes longer than *X* milliseconds to load\n"
                }
            },
            "type": "object",
            "required": [
                "valueMs"
            ]
        },
        "dynatrace:index/HttpMonitorAnomalyDetectionOutageHandling:HttpMonitorAnomalyDetectionOutageHandling": {
            "properties": {
                "globalOutage": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.BrowserMonitorOutage` and `dynatrace.HttpMonitorOutage`) When enabled (`true`), generate a problem and send an alert when the monitor is unavailable at all configured locations\n"
                },
                "globalOutagePolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorAnomalyDetectionOutageHandlingGlobalOutagePolicy:HttpMonitorAnomalyDetectionOutageHandlingGlobalOutagePolicy"
                    },
                    "description": "(Field has overlap with `dynatrace.BrowserMonitorOutage` and `dynatrace.HttpMonitorOutage`) Global outage handling configuration.\n"
                },
                "localOutage": {
                    "type": "boolean"
                },
                "localOutagePolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorAnomalyDetectionOutageHandlingLocalOutagePolicy:HttpMonitorAnomalyDetectionOutageHandlingLocalOutagePolicy"
                    }
                },
                "retryOnError": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "dynatrace:index/HttpMonitorAnomalyDetectionOutageHandlingGlobalOutagePolicy:HttpMonitorAnomalyDetectionOutageHandlingGlobalOutagePolicy": {
            "properties": {
                "consecutiveRuns": {
                    "type": "integer",
                    "description": "The number of consecutive fails to trigger an alert\n"
                }
            },
            "type": "object",
            "required": [
                "consecutiveRuns"
            ]
        },
        "dynatrace:index/HttpMonitorAnomalyDetectionOutageHandlingLocalOutagePolicy:HttpMonitorAnomalyDetectionOutageHandlingLocalOutagePolicy": {
            "properties": {
                "affectedLocations": {
                    "type": "integer",
                    "description": "The number of affected locations to trigger an alert\n"
                },
                "consecutiveRuns": {
                    "type": "integer",
                    "description": "The number of consecutive fails to trigger an alert\n"
                }
            },
            "type": "object",
            "required": [
                "affectedLocations",
                "consecutiveRuns"
            ]
        },
        "dynatrace:index/HttpMonitorCookiesCookies:HttpMonitorCookiesCookies": {
            "properties": {
                "cookies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorCookiesCookiesCookie:HttpMonitorCookiesCookiesCookie"
                    }
                }
            },
            "type": "object",
            "required": [
                "cookies"
            ]
        },
        "dynatrace:index/HttpMonitorCookiesCookiesCookie:HttpMonitorCookiesCookiesCookie": {
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "Enclose placeholder values in brackets, for example {email}\n"
                },
                "name": {
                    "type": "string",
                    "description": "Enclose placeholder values in brackets, for example {email}\n"
                },
                "path": {
                    "type": "string",
                    "description": "Enclose placeholder values in brackets, for example {email}\n"
                },
                "value": {
                    "type": "string",
                    "description": "Enclose placeholder values in brackets, for example {email}\n"
                }
            },
            "type": "object",
            "required": [
                "domain",
                "name",
                "value"
            ]
        },
        "dynatrace:index/HttpMonitorPerformanceThresholds:HttpMonitorPerformanceThresholds": {
            "properties": {
                "thresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorPerformanceThresholdsThreshold:HttpMonitorPerformanceThresholdsThreshold"
                    }
                }
            },
            "type": "object",
            "required": [
                "thresholds"
            ]
        },
        "dynatrace:index/HttpMonitorPerformanceThresholdsThreshold:HttpMonitorPerformanceThresholdsThreshold": {
            "properties": {
                "event": {
                    "type": "string",
                    "description": "Request\n"
                },
                "threshold": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "event",
                "threshold"
            ]
        },
        "dynatrace:index/HttpMonitorScript:HttpMonitorScript": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorScriptRequest:HttpMonitorScriptRequest"
                    },
                    "description": "A HTTP request to be performed by the monitor.\n"
                }
            },
            "type": "object",
            "required": [
                "requests"
            ]
        },
        "dynatrace:index/HttpMonitorScriptRequest:HttpMonitorScriptRequest": {
            "properties": {
                "authentication": {
                    "$ref": "#/types/dynatrace:index/HttpMonitorScriptRequestAuthentication:HttpMonitorScriptRequestAuthentication",
                    "description": "Authentication options for this request\n"
                },
                "body": {
                    "type": "string",
                    "description": "The body of the HTTP request.\n"
                },
                "configuration": {
                    "$ref": "#/types/dynatrace:index/HttpMonitorScriptRequestConfiguration:HttpMonitorScriptRequestConfiguration",
                    "description": "The setup of the monitor\n"
                },
                "description": {
                    "type": "string",
                    "description": "A short description of the event to appear in the web UI.\n"
                },
                "method": {
                    "type": "string",
                    "description": "The HTTP method of the request.\n"
                },
                "postProcessing": {
                    "type": "string",
                    "description": "Javascript code to execute after sending the request.\n"
                },
                "preProcessing": {
                    "type": "string",
                    "description": "Javascript code to execute before sending the request.\n"
                },
                "requestTimeout": {
                    "type": "integer",
                    "description": "Adapt request timeout option - the maximum time this request is allowed to consume. Keep in mind the maximum timeout of the complete monitor is 60 seconds\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL to check.\n"
                },
                "validation": {
                    "$ref": "#/types/dynatrace:index/HttpMonitorScriptRequestValidation:HttpMonitorScriptRequestValidation",
                    "description": "Validation helps you verify that your HTTP monitor loads the expected content\n"
                }
            },
            "type": "object",
            "required": [
                "method",
                "url"
            ]
        },
        "dynatrace:index/HttpMonitorScriptRequestAuthentication:HttpMonitorScriptRequestAuthentication": {
            "properties": {
                "credentials": {
                    "type": "string",
                    "description": "The ID of the credentials within the Dynatrace Credentials Vault.\n"
                },
                "kdcIp": {
                    "type": "string",
                    "description": "The KDC IP. Valid and required only if the type of authentication is `KERBEROS`.\n"
                },
                "realmName": {
                    "type": "string",
                    "description": "The Realm Name. Valid and required only if the type of authentication is `KERBEROS`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "type"
            ]
        },
        "dynatrace:index/HttpMonitorScriptRequestConfiguration:HttpMonitorScriptRequestConfiguration": {
            "properties": {
                "acceptAnyCertificate": {
                    "type": "boolean",
                    "description": "If set to `false`, then the monitor fails with invalid SSL certificates.\n"
                },
                "clientCertificate": {
                    "type": "string",
                    "secret": true
                },
                "followRedirects": {
                    "type": "boolean"
                },
                "headers": {
                    "$ref": "#/types/dynatrace:index/HttpMonitorScriptRequestConfigurationHeaders:HttpMonitorScriptRequestConfigurationHeaders"
                },
                "sensitiveData": {
                    "type": "boolean"
                },
                "userAgent": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/HttpMonitorScriptRequestConfigurationHeaders:HttpMonitorScriptRequestConfigurationHeaders": {
            "properties": {
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorScriptRequestConfigurationHeadersHeader:HttpMonitorScriptRequestConfigurationHeadersHeader"
                    },
                    "description": "contains an HTTP header of the request\n"
                }
            },
            "type": "object",
            "required": [
                "headers"
            ]
        },
        "dynatrace:index/HttpMonitorScriptRequestConfigurationHeadersHeader:HttpMonitorScriptRequestConfigurationHeadersHeader": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The key of the header\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the header\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "dynatrace:index/HttpMonitorScriptRequestValidation:HttpMonitorScriptRequestValidation": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorScriptRequestValidationRule:HttpMonitorScriptRequestValidationRule"
                    },
                    "description": "A list of validation rules\n"
                }
            },
            "type": "object",
            "required": [
                "rules"
            ]
        },
        "dynatrace:index/HttpMonitorScriptRequestValidationRule:HttpMonitorScriptRequestValidationRule": {
            "properties": {
                "passIfFound": {
                    "type": "boolean",
                    "description": "The validation condition. `true` means validation succeeds if the specified content/element is found. `false` means validation fails if the specified content/element is found. Always specify `false` for `certificateExpiryDateConstraint` to fail the monitor if SSL certificate expiry is within the specified number of days\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the header\n"
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/HttpMonitorScriptScript:HttpMonitorScriptScript": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorScriptScriptRequest:HttpMonitorScriptScriptRequest"
                    },
                    "description": "A HTTP request to be performed by the monitor.\n"
                }
            },
            "type": "object",
            "required": [
                "requests"
            ]
        },
        "dynatrace:index/HttpMonitorScriptScriptRequest:HttpMonitorScriptScriptRequest": {
            "properties": {
                "authentication": {
                    "$ref": "#/types/dynatrace:index/HttpMonitorScriptScriptRequestAuthentication:HttpMonitorScriptScriptRequestAuthentication",
                    "description": "Authentication options for this request\n"
                },
                "body": {
                    "type": "string",
                    "description": "The body of the HTTP request.\n"
                },
                "configuration": {
                    "$ref": "#/types/dynatrace:index/HttpMonitorScriptScriptRequestConfiguration:HttpMonitorScriptScriptRequestConfiguration",
                    "description": "The setup of the monitor\n"
                },
                "description": {
                    "type": "string",
                    "description": "A short description of the event to appear in the web UI.\n"
                },
                "method": {
                    "type": "string",
                    "description": "The HTTP method of the request.\n"
                },
                "postProcessing": {
                    "type": "string",
                    "description": "Javascript code to execute after sending the request.\n"
                },
                "preProcessing": {
                    "type": "string",
                    "description": "Javascript code to execute before sending the request.\n"
                },
                "requestTimeout": {
                    "type": "integer",
                    "description": "Adapt request timeout option - the maximum time this request is allowed to consume. Keep in mind the maximum timeout of the complete monitor is 60 seconds\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL to check.\n"
                },
                "validation": {
                    "$ref": "#/types/dynatrace:index/HttpMonitorScriptScriptRequestValidation:HttpMonitorScriptScriptRequestValidation",
                    "description": "Validation helps you verify that your HTTP monitor loads the expected content\n"
                }
            },
            "type": "object",
            "required": [
                "method",
                "url"
            ]
        },
        "dynatrace:index/HttpMonitorScriptScriptRequestAuthentication:HttpMonitorScriptScriptRequestAuthentication": {
            "properties": {
                "credentials": {
                    "type": "string",
                    "description": "The ID of the credentials within the Dynatrace Credentials Vault.\n"
                },
                "kdcIp": {
                    "type": "string",
                    "description": "The KDC IP. Valid and required only if the type of authentication is `KERBEROS`.\n"
                },
                "realmName": {
                    "type": "string",
                    "description": "The Realm Name. Valid and required only if the type of authentication is `KERBEROS`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of authentication. Possible values are `BASIC_AUTHENTICATION`, `NTLM` and `KERBEROS`.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "type"
            ]
        },
        "dynatrace:index/HttpMonitorScriptScriptRequestConfiguration:HttpMonitorScriptScriptRequestConfiguration": {
            "properties": {
                "acceptAnyCertificate": {
                    "type": "boolean",
                    "description": "If set to `false`, then the monitor fails with invalid SSL certificates.\n"
                },
                "clientCertificate": {
                    "type": "string",
                    "secret": true
                },
                "followRedirects": {
                    "type": "boolean"
                },
                "headers": {
                    "$ref": "#/types/dynatrace:index/HttpMonitorScriptScriptRequestConfigurationHeaders:HttpMonitorScriptScriptRequestConfigurationHeaders"
                },
                "sensitiveData": {
                    "type": "boolean"
                },
                "userAgent": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/HttpMonitorScriptScriptRequestConfigurationHeaders:HttpMonitorScriptScriptRequestConfigurationHeaders": {
            "properties": {
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorScriptScriptRequestConfigurationHeadersHeader:HttpMonitorScriptScriptRequestConfigurationHeadersHeader"
                    },
                    "description": "contains an HTTP header of the request\n"
                }
            },
            "type": "object",
            "required": [
                "headers"
            ]
        },
        "dynatrace:index/HttpMonitorScriptScriptRequestConfigurationHeadersHeader:HttpMonitorScriptScriptRequestConfigurationHeadersHeader": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The key of the header\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the header\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "dynatrace:index/HttpMonitorScriptScriptRequestValidation:HttpMonitorScriptScriptRequestValidation": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorScriptScriptRequestValidationRule:HttpMonitorScriptScriptRequestValidationRule"
                    },
                    "description": "A list of validation rules\n"
                }
            },
            "type": "object",
            "required": [
                "rules"
            ]
        },
        "dynatrace:index/HttpMonitorScriptScriptRequestValidationRule:HttpMonitorScriptScriptRequestValidationRule": {
            "properties": {
                "passIfFound": {
                    "type": "boolean",
                    "description": "The validation condition. `true` means validation succeeds if the specified content/element is found. `false` means validation fails if the specified content/element is found. Always specify `false` for `certificateExpiryDateConstraint` to fail the monitor if SSL certificate expiry is within the specified number of days\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of authentication. Possible values are `BASIC_AUTHENTICATION`, `NTLM` and `KERBEROS`.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the header\n"
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "dynatrace:index/HttpMonitorTag:HttpMonitorTag": {
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorTagTag:HttpMonitorTagTag"
                    },
                    "description": "Tag with source of a Dynatrace entity.\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/HttpMonitorTagTag:HttpMonitorTagTag": {
            "properties": {
                "context": {
                    "type": "string",
                    "description": "The origin of the tag. Supported values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_CLOUD` and `KUBERNETES`.\n"
                },
                "key": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the header\n"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/HubSubscriptionsTokenSubscriptions:HubSubscriptionsTokenSubscriptions": {
            "properties": {
                "tokenSubscriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HubSubscriptionsTokenSubscriptionsTokenSubscription:HubSubscriptionsTokenSubscriptionsTokenSubscription"
                    }
                }
            },
            "type": "object",
            "required": [
                "tokenSubscriptions"
            ]
        },
        "dynatrace:index/HubSubscriptionsTokenSubscriptionsTokenSubscription:HubSubscriptionsTokenSubscriptionsTokenSubscription": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of subscription\n"
                },
                "token": {
                    "type": "string",
                    "description": "Subscription token\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "name",
                "token"
            ]
        },
        "dynatrace:index/IamGroupPermissions:IamGroupPermissions": {
            "properties": {
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/IamGroupPermissionsPermission:IamGroupPermissionsPermission"
                    },
                    "description": "A Permission\n"
                }
            },
            "type": "object",
            "required": [
                "permissions"
            ]
        },
        "dynatrace:index/IamGroupPermissionsPermission:IamGroupPermissionsPermission": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Possible values: `account-company-info`, `account-user-management`, `account-viewer`, `account-saml-flexible-federation`, `tenant-viewer`, `tenant-manage-settings`, `tenant-agent-install`, `tenant-logviewer`, `tenant-view-sensitive-request-data`, `tenant-configure-request-capture-data`, `tenant-replay-sessions-with-masking`, `tenant-replay-sessions-without-masking`, `tenant-manage-security-problems`, `tenant-view-security-problems`, `tenant-manage-support-tickets`\n"
                },
                "scope": {
                    "type": "string",
                    "description": "If `type` is `account` this attribute should hold the UUID of the account. If `type` is 'tenant`this attribute should hold the ID of the environment (`https://\\n\\n.live.dynatrace.com`). If`type`is`management-zone`this attribute should hold a value like`\\n\\n:\\n\\n. You need to use the attribute `legacy_id` when referring to a resource `dynatrace.ManagementZoneV2` or a data source `dynatrace.ManagementZone`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of this permission. Possible values are `account`, `tenant`, `management-zone`\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "scope",
                "type"
            ]
        },
        "dynatrace:index/IamPolicyBindingsV2Policy:IamPolicyBindingsV2Policy": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The id of the policy\n",
                    "willReplaceOnChanges": true
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "dynatrace:index/ImsBridgesQueueManager:ImsBridgesQueueManager": {
            "properties": {
                "queueManagers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ImsBridgesQueueManagerQueueManager:ImsBridgesQueueManagerQueueManager"
                    },
                    "description": "Queue manager definition for IMS bridge\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ImsBridgesQueueManagerQueueManager:ImsBridgesQueueManagerQueueManager": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the queue manager\n"
                },
                "queueManagerQueues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Queue(s) that belong to the queue manager\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "dynatrace:index/K8sClusterAnomaliesCpuRequestsSaturation:K8sClusterAnomaliesCpuRequestsSaturation": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/K8sClusterAnomaliesCpuRequestsSaturationConfiguration:K8sClusterAnomaliesCpuRequestsSaturationConfiguration",
                    "description": "Alert if\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sClusterAnomaliesCpuRequestsSaturationConfiguration:K8sClusterAnomaliesCpuRequestsSaturationConfiguration": {
            "properties": {
                "observationPeriodInMinutes": {
                    "type": "integer",
                    "description": "within the last\n"
                },
                "samplePeriodInMinutes": {
                    "type": "integer",
                    "description": "of cluster CPU capacity for at least\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "amount of requested CPU is above\n"
                }
            },
            "type": "object",
            "required": [
                "observationPeriodInMinutes",
                "samplePeriodInMinutes",
                "threshold"
            ]
        },
        "dynatrace:index/K8sClusterAnomaliesMemoryRequestsSaturation:K8sClusterAnomaliesMemoryRequestsSaturation": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/K8sClusterAnomaliesMemoryRequestsSaturationConfiguration:K8sClusterAnomaliesMemoryRequestsSaturationConfiguration",
                    "description": "Alert if\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sClusterAnomaliesMemoryRequestsSaturationConfiguration:K8sClusterAnomaliesMemoryRequestsSaturationConfiguration": {
            "properties": {
                "observationPeriodInMinutes": {
                    "type": "integer",
                    "description": "within the last\n"
                },
                "samplePeriodInMinutes": {
                    "type": "integer",
                    "description": "of cluster CPU capacity for at least\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "amount of requested CPU is above\n"
                }
            },
            "type": "object",
            "required": [
                "observationPeriodInMinutes",
                "samplePeriodInMinutes",
                "threshold"
            ]
        },
        "dynatrace:index/K8sClusterAnomaliesMonitoringIssues:K8sClusterAnomaliesMonitoringIssues": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/K8sClusterAnomaliesMonitoringIssuesConfiguration:K8sClusterAnomaliesMonitoringIssuesConfiguration",
                    "description": "Alert if\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sClusterAnomaliesMonitoringIssuesConfiguration:K8sClusterAnomaliesMonitoringIssuesConfiguration": {
            "properties": {
                "observationPeriodInMinutes": {
                    "type": "integer",
                    "description": "within the last\n"
                },
                "samplePeriodInMinutes": {
                    "type": "integer",
                    "description": "of cluster CPU capacity for at least\n"
                }
            },
            "type": "object",
            "required": [
                "observationPeriodInMinutes",
                "samplePeriodInMinutes"
            ]
        },
        "dynatrace:index/K8sClusterAnomaliesPodsSaturation:K8sClusterAnomaliesPodsSaturation": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/K8sClusterAnomaliesPodsSaturationConfiguration:K8sClusterAnomaliesPodsSaturationConfiguration",
                    "description": "Alert if\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sClusterAnomaliesPodsSaturationConfiguration:K8sClusterAnomaliesPodsSaturationConfiguration": {
            "properties": {
                "observationPeriodInMinutes": {
                    "type": "integer",
                    "description": "within the last\n"
                },
                "samplePeriodInMinutes": {
                    "type": "integer",
                    "description": "of cluster CPU capacity for at least\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "amount of requested CPU is above\n"
                }
            },
            "type": "object",
            "required": [
                "observationPeriodInMinutes",
                "samplePeriodInMinutes",
                "threshold"
            ]
        },
        "dynatrace:index/K8sClusterAnomaliesReadinessIssues:K8sClusterAnomaliesReadinessIssues": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/K8sClusterAnomaliesReadinessIssuesConfiguration:K8sClusterAnomaliesReadinessIssuesConfiguration",
                    "description": "Alert if\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sClusterAnomaliesReadinessIssuesConfiguration:K8sClusterAnomaliesReadinessIssuesConfiguration": {
            "properties": {
                "observationPeriodInMinutes": {
                    "type": "integer",
                    "description": "within the last\n"
                },
                "samplePeriodInMinutes": {
                    "type": "integer",
                    "description": "of cluster CPU capacity for at least\n"
                }
            },
            "type": "object",
            "required": [
                "observationPeriodInMinutes",
                "samplePeriodInMinutes"
            ]
        },
        "dynatrace:index/K8sCredentialsEventsFieldSelector:K8sCredentialsEventsFieldSelector": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether subscription to this events field selector is enabled (value set to `true`). If disabled (value set to `false`), Dynatrace will stop fetching events from the Kubernetes API for this events field selector\n"
                },
                "fieldSelector": {
                    "type": "string",
                    "description": "The field selector string (url decoding is applied) when storing it.\n"
                },
                "label": {
                    "type": "string",
                    "description": "A label of the events field selector.\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n"
                }
            },
            "type": "object",
            "required": [
                "active",
                "fieldSelector",
                "label"
            ]
        },
        "dynatrace:index/K8sMonitoringEventPatterns:K8sMonitoringEventPatterns": {
            "properties": {
                "eventPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/K8sMonitoringEventPatternsEventPattern:K8sMonitoringEventPatternsEventPattern"
                    }
                }
            },
            "type": "object",
            "required": [
                "eventPatterns"
            ]
        },
        "dynatrace:index/K8sMonitoringEventPatternsEventPattern:K8sMonitoringEventPatternsEventPattern": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Activate\n"
                },
                "label": {
                    "type": "string",
                    "description": "Field selector name\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The set of allowed characters for this field has been extended with ActiveGate version 1.259. For more details, see the [documentation](https://dt-url.net/7h23wuk#set-up-event-field-selectors).\n"
                }
            },
            "type": "object",
            "required": [
                "active",
                "label",
                "pattern"
            ]
        },
        "dynatrace:index/K8sNamespaceAnomaliesCpuLimitsQuotaSaturation:K8sNamespaceAnomaliesCpuLimitsQuotaSaturation": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/K8sNamespaceAnomaliesCpuLimitsQuotaSaturationConfiguration:K8sNamespaceAnomaliesCpuLimitsQuotaSaturationConfiguration",
                    "description": "Alert if\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sNamespaceAnomaliesCpuLimitsQuotaSaturationConfiguration:K8sNamespaceAnomaliesCpuLimitsQuotaSaturationConfiguration": {
            "properties": {
                "observationPeriodInMinutes": {
                    "type": "integer",
                    "description": "within the last\n"
                },
                "samplePeriodInMinutes": {
                    "type": "integer",
                    "description": "of quota for at least\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "amount of utilized namespace CPU is above\n"
                }
            },
            "type": "object",
            "required": [
                "observationPeriodInMinutes",
                "samplePeriodInMinutes",
                "threshold"
            ]
        },
        "dynatrace:index/K8sNamespaceAnomaliesCpuRequestsQuotaSaturation:K8sNamespaceAnomaliesCpuRequestsQuotaSaturation": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/K8sNamespaceAnomaliesCpuRequestsQuotaSaturationConfiguration:K8sNamespaceAnomaliesCpuRequestsQuotaSaturationConfiguration",
                    "description": "Alert if\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sNamespaceAnomaliesCpuRequestsQuotaSaturationConfiguration:K8sNamespaceAnomaliesCpuRequestsQuotaSaturationConfiguration": {
            "properties": {
                "observationPeriodInMinutes": {
                    "type": "integer",
                    "description": "within the last\n"
                },
                "samplePeriodInMinutes": {
                    "type": "integer",
                    "description": "of quota for at least\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "amount of utilized namespace CPU is above\n"
                }
            },
            "type": "object",
            "required": [
                "observationPeriodInMinutes",
                "samplePeriodInMinutes",
                "threshold"
            ]
        },
        "dynatrace:index/K8sNamespaceAnomaliesMemoryLimitsQuotaSaturation:K8sNamespaceAnomaliesMemoryLimitsQuotaSaturation": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/K8sNamespaceAnomaliesMemoryLimitsQuotaSaturationConfiguration:K8sNamespaceAnomaliesMemoryLimitsQuotaSaturationConfiguration",
                    "description": "Alert if\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sNamespaceAnomaliesMemoryLimitsQuotaSaturationConfiguration:K8sNamespaceAnomaliesMemoryLimitsQuotaSaturationConfiguration": {
            "properties": {
                "observationPeriodInMinutes": {
                    "type": "integer",
                    "description": "within the last\n"
                },
                "samplePeriodInMinutes": {
                    "type": "integer",
                    "description": "of quota for at least\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "amount of utilized namespace CPU is above\n"
                }
            },
            "type": "object",
            "required": [
                "observationPeriodInMinutes",
                "samplePeriodInMinutes",
                "threshold"
            ]
        },
        "dynatrace:index/K8sNamespaceAnomaliesMemoryRequestsQuotaSaturation:K8sNamespaceAnomaliesMemoryRequestsQuotaSaturation": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/K8sNamespaceAnomaliesMemoryRequestsQuotaSaturationConfiguration:K8sNamespaceAnomaliesMemoryRequestsQuotaSaturationConfiguration",
                    "description": "Alert if\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sNamespaceAnomaliesMemoryRequestsQuotaSaturationConfiguration:K8sNamespaceAnomaliesMemoryRequestsQuotaSaturationConfiguration": {
            "properties": {
                "observationPeriodInMinutes": {
                    "type": "integer",
                    "description": "within the last\n"
                },
                "samplePeriodInMinutes": {
                    "type": "integer",
                    "description": "of quota for at least\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "amount of utilized namespace CPU is above\n"
                }
            },
            "type": "object",
            "required": [
                "observationPeriodInMinutes",
                "samplePeriodInMinutes",
                "threshold"
            ]
        },
        "dynatrace:index/K8sNamespaceAnomaliesPodsQuotaSaturation:K8sNamespaceAnomaliesPodsQuotaSaturation": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/K8sNamespaceAnomaliesPodsQuotaSaturationConfiguration:K8sNamespaceAnomaliesPodsQuotaSaturationConfiguration",
                    "description": "Alert if\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sNamespaceAnomaliesPodsQuotaSaturationConfiguration:K8sNamespaceAnomaliesPodsQuotaSaturationConfiguration": {
            "properties": {
                "observationPeriodInMinutes": {
                    "type": "integer",
                    "description": "within the last\n"
                },
                "samplePeriodInMinutes": {
                    "type": "integer",
                    "description": "of quota for at least\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "amount of utilized namespace CPU is above\n"
                }
            },
            "type": "object",
            "required": [
                "observationPeriodInMinutes",
                "samplePeriodInMinutes",
                "threshold"
            ]
        },
        "dynatrace:index/K8sNodeAnomaliesCpuRequestsSaturation:K8sNodeAnomaliesCpuRequestsSaturation": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/K8sNodeAnomaliesCpuRequestsSaturationConfiguration:K8sNodeAnomaliesCpuRequestsSaturationConfiguration",
                    "description": "Alert if\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sNodeAnomaliesCpuRequestsSaturationConfiguration:K8sNodeAnomaliesCpuRequestsSaturationConfiguration": {
            "properties": {
                "observationPeriodInMinutes": {
                    "type": "integer",
                    "description": "within the last\n"
                },
                "samplePeriodInMinutes": {
                    "type": "integer",
                    "description": "of node CPU capacity for at least\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "amount of requested CPU is higher than\n"
                }
            },
            "type": "object",
            "required": [
                "observationPeriodInMinutes",
                "samplePeriodInMinutes",
                "threshold"
            ]
        },
        "dynatrace:index/K8sNodeAnomaliesMemoryRequestsSaturation:K8sNodeAnomaliesMemoryRequestsSaturation": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/K8sNodeAnomaliesMemoryRequestsSaturationConfiguration:K8sNodeAnomaliesMemoryRequestsSaturationConfiguration",
                    "description": "Alert if\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sNodeAnomaliesMemoryRequestsSaturationConfiguration:K8sNodeAnomaliesMemoryRequestsSaturationConfiguration": {
            "properties": {
                "observationPeriodInMinutes": {
                    "type": "integer",
                    "description": "within the last\n"
                },
                "samplePeriodInMinutes": {
                    "type": "integer",
                    "description": "of node CPU capacity for at least\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "amount of requested CPU is higher than\n"
                }
            },
            "type": "object",
            "required": [
                "observationPeriodInMinutes",
                "samplePeriodInMinutes",
                "threshold"
            ]
        },
        "dynatrace:index/K8sNodeAnomaliesNodeProblematicCondition:K8sNodeAnomaliesNodeProblematicCondition": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/K8sNodeAnomaliesNodeProblematicConditionConfiguration:K8sNodeAnomaliesNodeProblematicConditionConfiguration",
                    "description": "Alert if\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sNodeAnomaliesNodeProblematicConditionConfiguration:K8sNodeAnomaliesNodeProblematicConditionConfiguration": {
            "properties": {
                "observationPeriodInMinutes": {
                    "type": "integer",
                    "description": "within the last\n"
                },
                "samplePeriodInMinutes": {
                    "type": "integer",
                    "description": "of node CPU capacity for at least\n"
                }
            },
            "type": "object",
            "required": [
                "observationPeriodInMinutes",
                "samplePeriodInMinutes"
            ]
        },
        "dynatrace:index/K8sNodeAnomaliesPodsSaturation:K8sNodeAnomaliesPodsSaturation": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/K8sNodeAnomaliesPodsSaturationConfiguration:K8sNodeAnomaliesPodsSaturationConfiguration",
                    "description": "Alert if\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sNodeAnomaliesPodsSaturationConfiguration:K8sNodeAnomaliesPodsSaturationConfiguration": {
            "properties": {
                "observationPeriodInMinutes": {
                    "type": "integer",
                    "description": "within the last\n"
                },
                "samplePeriodInMinutes": {
                    "type": "integer",
                    "description": "of node CPU capacity for at least\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "amount of requested CPU is higher than\n"
                }
            },
            "type": "object",
            "required": [
                "observationPeriodInMinutes",
                "samplePeriodInMinutes",
                "threshold"
            ]
        },
        "dynatrace:index/K8sNodeAnomaliesReadinessIssues:K8sNodeAnomaliesReadinessIssues": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/K8sNodeAnomaliesReadinessIssuesConfiguration:K8sNodeAnomaliesReadinessIssuesConfiguration",
                    "description": "Alert if\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sNodeAnomaliesReadinessIssuesConfiguration:K8sNodeAnomaliesReadinessIssuesConfiguration": {
            "properties": {
                "observationPeriodInMinutes": {
                    "type": "integer",
                    "description": "within the last\n"
                },
                "samplePeriodInMinutes": {
                    "type": "integer",
                    "description": "of node CPU capacity for at least\n"
                }
            },
            "type": "object",
            "required": [
                "observationPeriodInMinutes",
                "samplePeriodInMinutes"
            ]
        },
        "dynatrace:index/K8sPvcAnomaliesLowDiskSpaceCritical:K8sPvcAnomaliesLowDiskSpaceCritical": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/K8sPvcAnomaliesLowDiskSpaceCriticalConfiguration:K8sPvcAnomaliesLowDiskSpaceCriticalConfiguration",
                    "description": "Alert if\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sPvcAnomaliesLowDiskSpaceCriticalConfiguration:K8sPvcAnomaliesLowDiskSpaceCriticalConfiguration": {
            "properties": {
                "observationPeriodInMinutes": {
                    "type": "integer",
                    "description": "within the last\n"
                },
                "samplePeriodInMinutes": {
                    "type": "integer",
                    "description": "for at least\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "the available disk space is below\n"
                }
            },
            "type": "object",
            "required": [
                "observationPeriodInMinutes",
                "samplePeriodInMinutes",
                "threshold"
            ]
        },
        "dynatrace:index/K8sPvcAnomaliesLowDiskSpaceCriticalPercentage:K8sPvcAnomaliesLowDiskSpaceCriticalPercentage": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/K8sPvcAnomaliesLowDiskSpaceCriticalPercentageConfiguration:K8sPvcAnomaliesLowDiskSpaceCriticalPercentageConfiguration",
                    "description": "Alert if\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sPvcAnomaliesLowDiskSpaceCriticalPercentageConfiguration:K8sPvcAnomaliesLowDiskSpaceCriticalPercentageConfiguration": {
            "properties": {
                "observationPeriodInMinutes": {
                    "type": "integer",
                    "description": "within the last\n"
                },
                "samplePeriodInMinutes": {
                    "type": "integer",
                    "description": "for at least\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "the available disk space is below\n"
                }
            },
            "type": "object",
            "required": [
                "observationPeriodInMinutes",
                "samplePeriodInMinutes",
                "threshold"
            ]
        },
        "dynatrace:index/K8sWorkloadAnomaliesContainerRestarts:K8sWorkloadAnomaliesContainerRestarts": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesContainerRestartsConfiguration:K8sWorkloadAnomaliesContainerRestartsConfiguration",
                    "description": "Alert if\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sWorkloadAnomaliesContainerRestartsConfiguration:K8sWorkloadAnomaliesContainerRestartsConfiguration": {
            "properties": {
                "observationPeriodInMinutes": {
                    "type": "integer",
                    "description": "within the last\n"
                },
                "samplePeriodInMinutes": {
                    "type": "integer",
                    "description": "per minute, for any\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "there is at least\n"
                }
            },
            "type": "object",
            "required": [
                "observationPeriodInMinutes",
                "samplePeriodInMinutes",
                "threshold"
            ]
        },
        "dynatrace:index/K8sWorkloadAnomaliesDeploymentStuck:K8sWorkloadAnomaliesDeploymentStuck": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesDeploymentStuckConfiguration:K8sWorkloadAnomaliesDeploymentStuckConfiguration",
                    "description": "Alert if\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sWorkloadAnomaliesDeploymentStuckConfiguration:K8sWorkloadAnomaliesDeploymentStuckConfiguration": {
            "properties": {
                "observationPeriodInMinutes": {
                    "type": "integer",
                    "description": "within the last\n"
                },
                "samplePeriodInMinutes": {
                    "type": "integer",
                    "description": "per minute, for any\n"
                }
            },
            "type": "object",
            "required": [
                "observationPeriodInMinutes",
                "samplePeriodInMinutes"
            ]
        },
        "dynatrace:index/K8sWorkloadAnomaliesHighCpuThrottling:K8sWorkloadAnomaliesHighCpuThrottling": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesHighCpuThrottlingConfiguration:K8sWorkloadAnomaliesHighCpuThrottlingConfiguration",
                    "description": "Alert if\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sWorkloadAnomaliesHighCpuThrottlingConfiguration:K8sWorkloadAnomaliesHighCpuThrottlingConfiguration": {
            "properties": {
                "observationPeriodInMinutes": {
                    "type": "integer",
                    "description": "within the last\n"
                },
                "samplePeriodInMinutes": {
                    "type": "integer",
                    "description": "per minute, for any\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "there is at least\n"
                }
            },
            "type": "object",
            "required": [
                "observationPeriodInMinutes",
                "samplePeriodInMinutes",
                "threshold"
            ]
        },
        "dynatrace:index/K8sWorkloadAnomaliesHighCpuUsage:K8sWorkloadAnomaliesHighCpuUsage": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesHighCpuUsageConfiguration:K8sWorkloadAnomaliesHighCpuUsageConfiguration",
                    "description": "Alert if\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sWorkloadAnomaliesHighCpuUsageConfiguration:K8sWorkloadAnomaliesHighCpuUsageConfiguration": {
            "properties": {
                "observationPeriodInMinutes": {
                    "type": "integer",
                    "description": "within the last\n"
                },
                "samplePeriodInMinutes": {
                    "type": "integer",
                    "description": "per minute, for any\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "there is at least\n"
                }
            },
            "type": "object",
            "required": [
                "observationPeriodInMinutes",
                "samplePeriodInMinutes",
                "threshold"
            ]
        },
        "dynatrace:index/K8sWorkloadAnomaliesHighMemoryUsage:K8sWorkloadAnomaliesHighMemoryUsage": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesHighMemoryUsageConfiguration:K8sWorkloadAnomaliesHighMemoryUsageConfiguration",
                    "description": "Alert if\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sWorkloadAnomaliesHighMemoryUsageConfiguration:K8sWorkloadAnomaliesHighMemoryUsageConfiguration": {
            "properties": {
                "observationPeriodInMinutes": {
                    "type": "integer",
                    "description": "within the last\n"
                },
                "samplePeriodInMinutes": {
                    "type": "integer",
                    "description": "per minute, for any\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "there is at least\n"
                }
            },
            "type": "object",
            "required": [
                "observationPeriodInMinutes",
                "samplePeriodInMinutes",
                "threshold"
            ]
        },
        "dynatrace:index/K8sWorkloadAnomaliesJobFailureEvents:K8sWorkloadAnomaliesJobFailureEvents": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sWorkloadAnomaliesNotAllPodsReady:K8sWorkloadAnomaliesNotAllPodsReady": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesNotAllPodsReadyConfiguration:K8sWorkloadAnomaliesNotAllPodsReadyConfiguration",
                    "description": "Alert if\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sWorkloadAnomaliesNotAllPodsReadyConfiguration:K8sWorkloadAnomaliesNotAllPodsReadyConfiguration": {
            "properties": {
                "observationPeriodInMinutes": {
                    "type": "integer",
                    "description": "within the last\n"
                },
                "samplePeriodInMinutes": {
                    "type": "integer",
                    "description": "per minute, for any\n"
                }
            },
            "type": "object",
            "required": [
                "observationPeriodInMinutes",
                "samplePeriodInMinutes"
            ]
        },
        "dynatrace:index/K8sWorkloadAnomaliesOomKills:K8sWorkloadAnomaliesOomKills": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sWorkloadAnomaliesPendingPods:K8sWorkloadAnomaliesPendingPods": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesPendingPodsConfiguration:K8sWorkloadAnomaliesPendingPodsConfiguration",
                    "description": "Alert if\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sWorkloadAnomaliesPendingPodsConfiguration:K8sWorkloadAnomaliesPendingPodsConfiguration": {
            "properties": {
                "observationPeriodInMinutes": {
                    "type": "integer",
                    "description": "within the last\n"
                },
                "samplePeriodInMinutes": {
                    "type": "integer",
                    "description": "per minute, for any\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "there is at least\n"
                }
            },
            "type": "object",
            "required": [
                "observationPeriodInMinutes",
                "samplePeriodInMinutes",
                "threshold"
            ]
        },
        "dynatrace:index/K8sWorkloadAnomaliesPodBackoffEvents:K8sWorkloadAnomaliesPodBackoffEvents": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sWorkloadAnomaliesPodEvictionEvents:K8sWorkloadAnomaliesPodEvictionEvents": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sWorkloadAnomaliesPodPreemptionEvents:K8sWorkloadAnomaliesPodPreemptionEvents": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sWorkloadAnomaliesPodStuckInTerminating:K8sWorkloadAnomaliesPodStuckInTerminating": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesPodStuckInTerminatingConfiguration:K8sWorkloadAnomaliesPodStuckInTerminatingConfiguration",
                    "description": "Alert if\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sWorkloadAnomaliesPodStuckInTerminatingConfiguration:K8sWorkloadAnomaliesPodStuckInTerminatingConfiguration": {
            "properties": {
                "observationPeriodInMinutes": {
                    "type": "integer",
                    "description": "within the last\n"
                },
                "samplePeriodInMinutes": {
                    "type": "integer",
                    "description": "per minute, for any\n"
                }
            },
            "type": "object",
            "required": [
                "observationPeriodInMinutes",
                "samplePeriodInMinutes"
            ]
        },
        "dynatrace:index/K8sWorkloadAnomaliesWorkloadWithoutReadyPods:K8sWorkloadAnomaliesWorkloadWithoutReadyPods": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesWorkloadWithoutReadyPodsConfiguration:K8sWorkloadAnomaliesWorkloadWithoutReadyPodsConfiguration",
                    "description": "Alert if\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/K8sWorkloadAnomaliesWorkloadWithoutReadyPodsConfiguration:K8sWorkloadAnomaliesWorkloadWithoutReadyPodsConfiguration": {
            "properties": {
                "observationPeriodInMinutes": {
                    "type": "integer",
                    "description": "within the last\n"
                },
                "samplePeriodInMinutes": {
                    "type": "integer",
                    "description": "per minute, for any\n"
                }
            },
            "type": "object",
            "required": [
                "observationPeriodInMinutes",
                "samplePeriodInMinutes"
            ]
        },
        "dynatrace:index/KubernetesAppKubernetesAppOptions:KubernetesAppKubernetesAppOptions": {
            "properties": {
                "enableKubernetesApp": {
                    "type": "boolean",
                    "description": "New Kubernetes experience\n"
                }
            },
            "type": "object",
            "required": [
                "enableKubernetesApp"
            ]
        },
        "dynatrace:index/KubernetesEventPatterns:KubernetesEventPatterns": {
            "properties": {
                "eventPatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/KubernetesEventPatternsEventPattern:KubernetesEventPatternsEventPattern"
                    }
                }
            },
            "type": "object",
            "required": [
                "eventPatterns"
            ]
        },
        "dynatrace:index/KubernetesEventPatternsEventPattern:KubernetesEventPatternsEventPattern": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Activate\n"
                },
                "label": {
                    "type": "string",
                    "description": "Field selector name\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The set of allowed characters for this field has been extended with ActiveGate version 1.259. For more details, see the [documentation](https://dt-url.net/7h23wuk#set-up-event-field-selectors).\n"
                }
            },
            "type": "object",
            "required": [
                "active",
                "label",
                "pattern"
            ]
        },
        "dynatrace:index/LimitOutboundConnectionsAllowedOutboundConnections:LimitOutboundConnectionsAllowedOutboundConnections": {
            "properties": {
                "enforced": {
                    "type": "boolean",
                    "description": "If enabled, the Dynatrace JavaScript runtime will only be able to connect to the specified hosts.\n"
                },
                "hostLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The Dynatrace JavaScript runtime will only be to connect to these hosts.\n"
                }
            },
            "type": "object",
            "required": [
                "enforced"
            ]
        },
        "dynatrace:index/LogCustomSourceContext:LogCustomSourceContext": {
            "properties": {
                "contexts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/LogCustomSourceContextContext:LogCustomSourceContextContext"
                    }
                }
            },
            "type": "object",
            "required": [
                "contexts"
            ]
        },
        "dynatrace:index/LogCustomSourceContextContext:LogCustomSourceContextContext": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "description": "Possible Values: `Dt_entity_process_group`\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "values"
            ]
        },
        "dynatrace:index/LogCustomSourceCustomLogSource:LogCustomSourceCustomLogSource": {
            "properties": {
                "acceptBinary": {
                    "type": "boolean",
                    "description": "Accept binary content\n"
                },
                "type": {
                    "type": "string",
                    "description": "Possible Values: `LOG_PATH_PATTERN`, `WINDOWS_EVENT_LOG`\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "It might be either an absolute path to log(s) with optional wildcards or Windows Event Log name.\n"
                }
            },
            "type": "object",
            "required": [
                "type",
                "values"
            ]
        },
        "dynatrace:index/LogEventsEventTemplate:LogEventsEventTemplate": {
            "properties": {
                "davisMerge": {
                    "type": "boolean",
                    "description": "Davis® AI will try to merge this event into existing problems, otherwise a new problem will always be created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the event to trigger.\n"
                },
                "eventType": {
                    "type": "string",
                    "description": "Possible Values: `AVAILABILITY`, `CUSTOM_ALERT`, `CUSTOM_ANNOTATION`, `CUSTOM_CONFIGURATION`, `CUSTOM_DEPLOYMENT`, `ERROR`, `INFO`, `MARKED_FOR_TERMINATION`, `RESOURCE`, `SLOWDOWN`\n"
                },
                "metadata": {
                    "$ref": "#/types/dynatrace:index/LogEventsEventTemplateMetadata:LogEventsEventTemplateMetadata",
                    "description": "Set of additional key-value properties to be attached to the triggered event.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the event to trigger.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "eventType",
                "title"
            ]
        },
        "dynatrace:index/LogEventsEventTemplateMetadata:LogEventsEventTemplateMetadata": {
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/LogEventsEventTemplateMetadataItem:LogEventsEventTemplateMetadataItem"
                    }
                }
            },
            "type": "object",
            "required": [
                "items"
            ]
        },
        "dynatrace:index/LogEventsEventTemplateMetadataItem:LogEventsEventTemplateMetadataItem": {
            "properties": {
                "metadataKey": {
                    "type": "string",
                    "description": "Type 'dt.' for key hints.\n"
                },
                "metadataValue": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "metadataKey",
                "metadataValue"
            ]
        },
        "dynatrace:index/LogProcessingProcessorDefinition:LogProcessingProcessorDefinition": {
            "properties": {
                "rule": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "rule"
            ]
        },
        "dynatrace:index/LogProcessingRuleTesting:LogProcessingRuleTesting": {
            "properties": {
                "sampleLog": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sampleLog"
            ]
        },
        "dynatrace:index/LogSecurityContextSecurityContextRule:LogSecurityContextSecurityContextRule": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Matcher\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Rule name\n"
                },
                "value": {
                    "type": "string",
                    "description": "Literal value to be set\n"
                },
                "valueSource": {
                    "type": "string",
                    "description": "Possible Values: `FIELD`, `LITERAL`\n"
                },
                "valueSourceField": {
                    "type": "string",
                    "description": "Name of field used to copy value\n"
                }
            },
            "type": "object",
            "required": [
                "query",
                "ruleName",
                "valueSource"
            ]
        },
        "dynatrace:index/LogSensitiveDataMaskingMasking:LogSensitiveDataMaskingMasking": {
            "properties": {
                "expression": {
                    "type": "string",
                    "description": "Maximum one capture group is allowed. If none was given, the whole expression will be treated as a capture group.\n"
                },
                "replacement": {
                    "type": "string",
                    "description": "The string to replace the masked expression with. Irrelevant if `type` is `SHA1`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Possible Values: `SHA1`, `STRING`\n"
                }
            },
            "type": "object",
            "required": [
                "expression",
                "type"
            ]
        },
        "dynatrace:index/LogSensitiveDataMaskingMatchers:LogSensitiveDataMaskingMatchers": {
            "properties": {
                "matchers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/LogSensitiveDataMaskingMatchersMatcher:LogSensitiveDataMaskingMatchersMatcher"
                    }
                }
            },
            "type": "object",
            "required": [
                "matchers"
            ]
        },
        "dynatrace:index/LogSensitiveDataMaskingMatchersMatcher:LogSensitiveDataMaskingMatchersMatcher": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "description": "Possible Values: `Container_name`, `Dt_entity_container_group`, `Dt_entity_process_group`, `K8s_container_name`, `K8s_deployment_name`, `K8s_namespace_name`, `Log_source`, `Process_technology`\n"
                },
                "operator": {
                    "type": "string",
                    "description": "Possible Values: `MATCHES`\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "operator",
                "values"
            ]
        },
        "dynatrace:index/LogStorageMatchers:LogStorageMatchers": {
            "properties": {
                "matchers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/LogStorageMatchersMatcher:LogStorageMatchersMatcher"
                    }
                }
            },
            "type": "object",
            "required": [
                "matchers"
            ]
        },
        "dynatrace:index/LogStorageMatchersMatcher:LogStorageMatchersMatcher": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "description": "Possible Values: `Container_name`, `Dt_entity_container_group`, `Dt_entity_process_group`, `Host_tag`, `K8s_container_name`, `K8s_deployment_name`, `K8s_namespace_name`, `Log_content`, `Log_source`, `Loglevel`, `Process_technology`, `Winlog_eventid`, `Winlog_opcode`, `Winlog_provider`, `Winlog_task`\n"
                },
                "operator": {
                    "type": "string",
                    "description": "Possible Values: `MATCHES`\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "operator",
                "values"
            ]
        },
        "dynatrace:index/LogTimestampMatchers:LogTimestampMatchers": {
            "properties": {
                "matchers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/LogTimestampMatchersMatcher:LogTimestampMatchersMatcher"
                    }
                }
            },
            "type": "object",
            "required": [
                "matchers"
            ]
        },
        "dynatrace:index/LogTimestampMatchersMatcher:LogTimestampMatchersMatcher": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "description": "Possible Values: `Container_name`, `Dt_entity_container_group`, `Dt_entity_process_group`, `K8s_container_name`, `K8s_deployment_name`, `K8s_namespace_name`, `Log_source`, `Process_technology`\n"
                },
                "operator": {
                    "type": "string",
                    "description": "Possible Values: `MATCHES`\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "operator",
                "values"
            ]
        },
        "dynatrace:index/MaintenanceFilters:MaintenanceFilters": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/MaintenanceFiltersFilter:MaintenanceFiltersFilter"
                    }
                }
            },
            "type": "object",
            "required": [
                "filters"
            ]
        },
        "dynatrace:index/MaintenanceFiltersFilter:MaintenanceFiltersFilter": {
            "properties": {
                "entityId": {
                    "type": "string",
                    "description": "A specific entity that should match this maintenance window.. **Note**: If an entity type filter value is set, it must be equal to the type of the selected entity. Otherwise this maintenance window will not match.\n"
                },
                "entityTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Entities which contain all of the configured tags will match this maintenance window.\n"
                },
                "entityType": {
                    "type": "string",
                    "description": "Type of entities this maintenance window should match.. If no entity type is selected all entities regardless of the type will match.\n"
                },
                "managementZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Entities which are part of all the configured management zones will match this maintenance window.\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/MaintenanceGeneralProperties:MaintenanceGeneralProperties": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A short description of the maintenance purpose.\n"
                },
                "disableSynthetic": {
                    "type": "boolean",
                    "description": "Disables the execution of the synthetic monitors that are within [the scope of this maintenance window](https://dt-url.net/0e0341m).\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the maintenance window, displayed in the UI\n"
                },
                "suppression": {
                    "type": "string",
                    "description": "The type of suppression of alerting and problem detection during the maintenance. Possible Values: `DETECT_PROBLEMS_AND_ALERT`, `DETECT_PROBLEMS_DONT_ALERT`, `DONT_DETECT_PROBLEMS`\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the maintenance, possible values: `PLANNED` or `UNPLANNED`\n"
                }
            },
            "type": "object",
            "required": [
                "disableSynthetic",
                "name",
                "suppression",
                "type"
            ]
        },
        "dynatrace:index/MaintenanceSchedule:MaintenanceSchedule": {
            "properties": {
                "dailyRecurrence": {
                    "$ref": "#/types/dynatrace:index/MaintenanceScheduleDailyRecurrence:MaintenanceScheduleDailyRecurrence",
                    "description": "The configuration for maintenance windows occuring daily\n"
                },
                "monthlyRecurrence": {
                    "$ref": "#/types/dynatrace:index/MaintenanceScheduleMonthlyRecurrence:MaintenanceScheduleMonthlyRecurrence",
                    "description": "The configuration for maintenance windows occuring monthly\n"
                },
                "onceRecurrence": {
                    "$ref": "#/types/dynatrace:index/MaintenanceScheduleOnceRecurrence:MaintenanceScheduleOnceRecurrence",
                    "description": "The configuration for maintenance windows occuring once\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type maintenance window, possible values: `DAILY`, `MONTHLY`, `ONCE`, `WEEKLY`\n"
                },
                "weeklyRecurrence": {
                    "$ref": "#/types/dynatrace:index/MaintenanceScheduleWeeklyRecurrence:MaintenanceScheduleWeeklyRecurrence",
                    "description": "The configuration for maintenance windows occuring weekly\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/MaintenanceScheduleDailyRecurrence:MaintenanceScheduleDailyRecurrence": {
            "properties": {
                "recurrenceRange": {
                    "$ref": "#/types/dynatrace:index/MaintenanceScheduleDailyRecurrenceRecurrenceRange:MaintenanceScheduleDailyRecurrenceRecurrenceRange",
                    "description": "The recurrence date range of the maintenance window\n"
                },
                "timeWindow": {
                    "$ref": "#/types/dynatrace:index/MaintenanceScheduleDailyRecurrenceTimeWindow:MaintenanceScheduleDailyRecurrenceTimeWindow",
                    "description": "The time window of the maintenance window\n"
                }
            },
            "type": "object",
            "required": [
                "recurrenceRange",
                "timeWindow"
            ]
        },
        "dynatrace:index/MaintenanceScheduleDailyRecurrenceRecurrenceRange:MaintenanceScheduleDailyRecurrenceRecurrenceRange": {
            "properties": {
                "endDate": {
                    "type": "string",
                    "description": "The end date of the recurrence range in YYYY-MM-DD format\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The start date of the recurrence range in YYYY-MM-DD format\n"
                }
            },
            "type": "object",
            "required": [
                "endDate",
                "startDate"
            ]
        },
        "dynatrace:index/MaintenanceScheduleDailyRecurrenceTimeWindow:MaintenanceScheduleDailyRecurrenceTimeWindow": {
            "properties": {
                "endTime": {
                    "type": "string",
                    "description": "The end time of the maintenance window validity period in hh:mm:ss format\n"
                },
                "startTime": {
                    "type": "string",
                    "description": "The start time of the maintenance window validity period in hh:mm:ss format\n"
                },
                "timeZone": {
                    "type": "string",
                    "description": "The time zone of the start and end time. Default time zone is UTC. You can use either UTC offset `UTC+01:00` format or the IANA Time Zone Database format (for example, `Europe/Vienna`)\n"
                }
            },
            "type": "object",
            "required": [
                "endTime",
                "startTime",
                "timeZone"
            ]
        },
        "dynatrace:index/MaintenanceScheduleMonthlyRecurrence:MaintenanceScheduleMonthlyRecurrence": {
            "properties": {
                "dayOfMonth": {
                    "type": "integer",
                    "description": "The day of the month for monthly maintenance. If the selected day does not fall within the month, the maintenance window will be active on the last day of the month.\n"
                },
                "recurrenceRange": {
                    "$ref": "#/types/dynatrace:index/MaintenanceScheduleMonthlyRecurrenceRecurrenceRange:MaintenanceScheduleMonthlyRecurrenceRecurrenceRange",
                    "description": "The recurrence date range of the maintenance window\n"
                },
                "timeWindow": {
                    "$ref": "#/types/dynatrace:index/MaintenanceScheduleMonthlyRecurrenceTimeWindow:MaintenanceScheduleMonthlyRecurrenceTimeWindow",
                    "description": "The time window of the maintenance window\n"
                }
            },
            "type": "object",
            "required": [
                "dayOfMonth",
                "recurrenceRange",
                "timeWindow"
            ]
        },
        "dynatrace:index/MaintenanceScheduleMonthlyRecurrenceRecurrenceRange:MaintenanceScheduleMonthlyRecurrenceRecurrenceRange": {
            "properties": {
                "endDate": {
                    "type": "string",
                    "description": "The end date of the recurrence range in YYYY-MM-DD format\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The start date of the recurrence range in YYYY-MM-DD format\n"
                }
            },
            "type": "object",
            "required": [
                "endDate",
                "startDate"
            ]
        },
        "dynatrace:index/MaintenanceScheduleMonthlyRecurrenceTimeWindow:MaintenanceScheduleMonthlyRecurrenceTimeWindow": {
            "properties": {
                "endTime": {
                    "type": "string",
                    "description": "The end time of the maintenance window validity period in hh:mm:ss format\n"
                },
                "startTime": {
                    "type": "string",
                    "description": "The start time of the maintenance window validity period in hh:mm:ss format\n"
                },
                "timeZone": {
                    "type": "string",
                    "description": "The time zone of the start and end time. Default time zone is UTC. You can use either UTC offset `UTC+01:00` format or the IANA Time Zone Database format (for example, `Europe/Vienna`)\n"
                }
            },
            "type": "object",
            "required": [
                "endTime",
                "startTime",
                "timeZone"
            ]
        },
        "dynatrace:index/MaintenanceScheduleOnceRecurrence:MaintenanceScheduleOnceRecurrence": {
            "properties": {
                "endTime": {
                    "type": "string",
                    "description": "The end time of the maintenance window validity period in hh:mm:ss format\n"
                },
                "startTime": {
                    "type": "string",
                    "description": "The start time of the maintenance window validity period in hh:mm:ss format\n"
                },
                "timeZone": {
                    "type": "string",
                    "description": "The time zone of the start and end time. Default time zone is UTC. You can use either UTC offset `UTC+01:00` format or the IANA Time Zone Database format (for example, `Europe/Vienna`)\n"
                }
            },
            "type": "object",
            "required": [
                "endTime",
                "startTime",
                "timeZone"
            ]
        },
        "dynatrace:index/MaintenanceScheduleWeeklyRecurrence:MaintenanceScheduleWeeklyRecurrence": {
            "properties": {
                "dayOfWeek": {
                    "type": "string",
                    "description": "The day of the week for weekly maintenance, possible values: `FRIDAY`, `MONDAY`, `SATURDAY`, `SUNDAY`, `THURSDAY`, `TUESDAY`, `WEDNESDAY`\n"
                },
                "recurrenceRange": {
                    "$ref": "#/types/dynatrace:index/MaintenanceScheduleWeeklyRecurrenceRecurrenceRange:MaintenanceScheduleWeeklyRecurrenceRecurrenceRange",
                    "description": "The recurrence date range of the maintenance window\n"
                },
                "timeWindow": {
                    "$ref": "#/types/dynatrace:index/MaintenanceScheduleWeeklyRecurrenceTimeWindow:MaintenanceScheduleWeeklyRecurrenceTimeWindow",
                    "description": "The time window of the maintenance window\n"
                }
            },
            "type": "object",
            "required": [
                "dayOfWeek",
                "recurrenceRange",
                "timeWindow"
            ]
        },
        "dynatrace:index/MaintenanceScheduleWeeklyRecurrenceRecurrenceRange:MaintenanceScheduleWeeklyRecurrenceRecurrenceRange": {
            "properties": {
                "endDate": {
                    "type": "string",
                    "description": "The end date of the recurrence range in YYYY-MM-DD format\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "The start date of the recurrence range in YYYY-MM-DD format\n"
                }
            },
            "type": "object",
            "required": [
                "endDate",
                "startDate"
            ]
        },
        "dynatrace:index/MaintenanceScheduleWeeklyRecurrenceTimeWindow:MaintenanceScheduleWeeklyRecurrenceTimeWindow": {
            "properties": {
                "endTime": {
                    "type": "string",
                    "description": "The end time of the maintenance window validity period in hh:mm:ss format\n"
                },
                "startTime": {
                    "type": "string",
                    "description": "The start time of the maintenance window validity period in hh:mm:ss format\n"
                },
                "timeZone": {
                    "type": "string",
                    "description": "The time zone of the start and end time. Default time zone is UTC. You can use either UTC offset `UTC+01:00` format or the IANA Time Zone Database format (for example, `Europe/Vienna`)\n"
                }
            },
            "type": "object",
            "required": [
                "endTime",
                "startTime",
                "timeZone"
            ]
        },
        "dynatrace:index/MaintenanceWindowSchedule:MaintenanceWindowSchedule": {
            "properties": {
                "end": {
                    "type": "string",
                    "description": "The end date and time of the maintenance window validity period in yyyy-mm-dd HH:mm format\n"
                },
                "recurrence": {
                    "$ref": "#/types/dynatrace:index/MaintenanceWindowScheduleRecurrence:MaintenanceWindowScheduleRecurrence",
                    "description": "The recurrence of the maintenance window\n"
                },
                "recurrenceType": {
                    "type": "string",
                    "description": "The type of the schedule recurrence. Possible values are `DAILY`, `MONTHLY`, `ONCE` and `WEEKLY`\n"
                },
                "start": {
                    "type": "string",
                    "description": "The start date and time of the maintenance window validity period in yyyy-mm-dd HH:mm format\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The time zone of the start and end time. Default time zone is UTC. You can use either UTC offset `UTC+01:00` format or the IANA Time Zone Database format (for example, `Europe/Vienna`)\n"
                }
            },
            "type": "object",
            "required": [
                "end",
                "recurrenceType",
                "start",
                "zoneId"
            ]
        },
        "dynatrace:index/MaintenanceWindowScheduleRecurrence:MaintenanceWindowScheduleRecurrence": {
            "properties": {
                "dayOfMonth": {
                    "type": "integer",
                    "description": "The day of the month for monthly maintenance.  The value of `31` is treated as the last day of the month for months that don't have a 31st day. The value of `30` is also treated as the last day of the month for February\n"
                },
                "dayOfWeek": {
                    "type": "string",
                    "description": "The day of the week for weekly maintenance.  The format is the full name of the day in upper case, for example `THURSDAY`\n"
                },
                "durationMinutes": {
                    "type": "integer",
                    "description": "The duration of the maintenance window in minutes\n"
                },
                "startTime": {
                    "type": "string",
                    "description": "The start time of the maintenance window in HH:mm format\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "durationMinutes",
                "startTime"
            ]
        },
        "dynatrace:index/MaintenanceWindowScope:MaintenanceWindowScope": {
            "properties": {
                "entities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of Dynatrace entities (for example, hosts or services) to be included in the scope.  Allowed values are Dynatrace entity IDs\n"
                },
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/MaintenanceWindowScopeMatch:MaintenanceWindowScopeMatch"
                    },
                    "description": "A list of matching rules for dynamic scope formation.  If several rules are set, the OR logic applies\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/MaintenanceWindowScopeMatch:MaintenanceWindowScopeMatch": {
            "properties": {
                "mzId": {
                    "type": "string",
                    "description": "The ID of a management zone to which the matched entities must belong\n"
                },
                "tagCombination": {
                    "type": "string",
                    "description": "The logic that applies when several tags are specified: AND/OR.  If not set, the OR logic is used\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/MaintenanceWindowScopeMatchTag:MaintenanceWindowScopeMatchTag"
                    },
                    "description": "The tag you want to use for matching.  You can use custom tags from the UI, AWS tags, Cloud Foundry tags, OpenShift/Kubernetes, and tags based on environment variables\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the Dynatrace entities (for example, hosts or services) you want to pick up by matching\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/MaintenanceWindowScopeMatchTag:MaintenanceWindowScopeMatchTag": {
            "properties": {
                "context": {
                    "type": "string",
                    "description": "The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value\n"
                },
                "key": {
                    "type": "string",
                    "description": "The key of the tag. Custom tags have the tag value here\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the tag. Not applicable to custom tags\n"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ManagementZoneDimensionalRule:ManagementZoneDimensionalRule": {
            "properties": {
                "appliesTo": {
                    "type": "string"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneDimensionalRuleCondition:ManagementZoneDimensionalRuleCondition"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "appliesTo"
            ]
        },
        "dynatrace:index/ManagementZoneDimensionalRuleCondition:ManagementZoneDimensionalRuleCondition": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "match": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "match",
                "type"
            ]
        },
        "dynatrace:index/ManagementZoneEntitySelectorBasedRule:ManagementZoneEntitySelectorBasedRule": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "selector": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ManagementZoneRule:ManagementZoneRule": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleCondition:ManagementZoneRuleCondition"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "propagationTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/ManagementZoneRuleCondition:ManagementZoneRuleCondition": {
            "properties": {
                "applicationTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionApplicationTypeComparison:ManagementZoneRuleConditionApplicationTypeComparison"
                    },
                    "deprecationMessage": "You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "applicationTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionApplicationType:ManagementZoneRuleConditionApplicationType"
                    }
                },
                "azureComputeModeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionAzureComputeModeComparison:ManagementZoneRuleConditionAzureComputeModeComparison"
                    }
                },
                "azureComputeModes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionAzureComputeMode:ManagementZoneRuleConditionAzureComputeMode"
                    },
                    "deprecationMessage": "You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility."
                },
                "azureSkuComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionAzureSkuComparision:ManagementZoneRuleConditionAzureSkuComparision"
                    },
                    "deprecationMessage": "You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility."
                },
                "azureSkus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionAzureSkus:ManagementZoneRuleConditionAzureSkus"
                    }
                },
                "baseComparisonBasics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionBaseComparisonBasic:ManagementZoneRuleConditionBaseComparisonBasic"
                    },
                    "deprecationMessage": "You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility."
                },
                "baseConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionBaseConditionKey:ManagementZoneRuleConditionBaseConditionKey"
                    },
                    "deprecationMessage": "'base_condition_key' is deprecated. You should use 'key'"
                },
                "bitnessComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionBitnessComparision:ManagementZoneRuleConditionBitnessComparision"
                    },
                    "deprecationMessage": "You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility."
                },
                "bitnesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionBitness:ManagementZoneRuleConditionBitness"
                    }
                },
                "cloudTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionCloudTypeComparison:ManagementZoneRuleConditionCloudTypeComparison"
                    },
                    "deprecationMessage": "You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "cloudTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionCloudType:ManagementZoneRuleConditionCloudType"
                    }
                },
                "comparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionComparison:ManagementZoneRuleConditionComparison"
                    }
                },
                "customApplicationTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionCustomApplicationTypeComparison:ManagementZoneRuleConditionCustomApplicationTypeComparison"
                    },
                    "deprecationMessage": "You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "customApplicationTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionCustomApplicationType:ManagementZoneRuleConditionCustomApplicationType"
                    }
                },
                "customHostMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionCustomHostMetadataConditionKey:ManagementZoneRuleConditionCustomHostMetadataConditionKey"
                    },
                    "deprecationMessage": "'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'"
                },
                "customHostMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionCustomHostMetadata:ManagementZoneRuleConditionCustomHostMetadata"
                    }
                },
                "customProcessMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionCustomProcessMetadataConditionKey:ManagementZoneRuleConditionCustomProcessMetadataConditionKey"
                    },
                    "deprecationMessage": "'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'"
                },
                "customProcessMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionCustomProcessMetadata:ManagementZoneRuleConditionCustomProcessMetadata"
                    }
                },
                "databaseTopologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionDatabaseTopology:ManagementZoneRuleConditionDatabaseTopology"
                    }
                },
                "databaseTopologyComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionDatabaseTopologyComparison:ManagementZoneRuleConditionDatabaseTopologyComparison"
                    },
                    "deprecationMessage": "You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility."
                },
                "dcrumDecoderComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionDcrumDecoderComparison:ManagementZoneRuleConditionDcrumDecoderComparison"
                    },
                    "deprecationMessage": "You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility."
                },
                "dcrumDecoders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionDcrumDecoder:ManagementZoneRuleConditionDcrumDecoder"
                    }
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionEntity:ManagementZoneRuleConditionEntity"
                    }
                },
                "entityIdComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionEntityIdComparison:ManagementZoneRuleConditionEntityIdComparison"
                    },
                    "deprecationMessage": "You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility."
                },
                "hostTeches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionHostTech:ManagementZoneRuleConditionHostTech"
                    }
                },
                "hypervisorTypeComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionHypervisorTypeComparision:ManagementZoneRuleConditionHypervisorTypeComparision"
                    },
                    "deprecationMessage": "`hypervisor_type_comparision` is deprecated. Use `hypervisor` instead"
                },
                "hypervisors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionHypervisor:ManagementZoneRuleConditionHypervisor"
                    }
                },
                "indexedNameComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionIndexedNameComparison:ManagementZoneRuleConditionIndexedNameComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility."
                },
                "indexedNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionIndexedName:ManagementZoneRuleConditionIndexedName"
                    }
                },
                "indexedStringComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionIndexedStringComparison:ManagementZoneRuleConditionIndexedStringComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility."
                },
                "indexedStrings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionIndexedString:ManagementZoneRuleConditionIndexedString"
                    }
                },
                "indexedTagComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionIndexedTagComparison:ManagementZoneRuleConditionIndexedTagComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility."
                },
                "indexedTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionIndexedTag:ManagementZoneRuleConditionIndexedTag"
                    }
                },
                "integerComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionIntegerComparison:ManagementZoneRuleConditionIntegerComparison"
                    },
                    "deprecationMessage": "You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility."
                },
                "integers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionInteger:ManagementZoneRuleConditionInteger"
                    }
                },
                "ipaddressComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionIpaddressComparison:ManagementZoneRuleConditionIpaddressComparison"
                    },
                    "deprecationMessage": "You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility."
                },
                "ipaddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionIpaddress:ManagementZoneRuleConditionIpaddress"
                    }
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionKey:ManagementZoneRuleConditionKey"
                    }
                },
                "mobilePlatformComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionMobilePlatformComparison:ManagementZoneRuleConditionMobilePlatformComparison"
                    },
                    "deprecationMessage": "You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility."
                },
                "mobilePlatforms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionMobilePlatform:ManagementZoneRuleConditionMobilePlatform"
                    }
                },
                "osArches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionOsArch:ManagementZoneRuleConditionOsArch"
                    }
                },
                "osTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionOsType:ManagementZoneRuleConditionOsType"
                    }
                },
                "osarchitectureComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionOsarchitectureComparison:ManagementZoneRuleConditionOsarchitectureComparison"
                    },
                    "deprecationMessage": "You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility."
                },
                "ostypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionOstypeComparison:ManagementZoneRuleConditionOstypeComparison"
                    },
                    "deprecationMessage": "You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility."
                },
                "paasTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionPaasTypeComparison:ManagementZoneRuleConditionPaasTypeComparison"
                    },
                    "deprecationMessage": "You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "paasTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionPaasType:ManagementZoneRuleConditionPaasType"
                    }
                },
                "processMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionProcessMetadataConditionKey:ManagementZoneRuleConditionProcessMetadataConditionKey"
                    },
                    "deprecationMessage": "'process_metadata_condition_key' is deprecated. You should use 'process_metadata'"
                },
                "processMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionProcessMetadata:ManagementZoneRuleConditionProcessMetadata"
                    }
                },
                "serviceTopologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionServiceTopology:ManagementZoneRuleConditionServiceTopology"
                    }
                },
                "serviceTopologyComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionServiceTopologyComparison:ManagementZoneRuleConditionServiceTopologyComparison"
                    },
                    "deprecationMessage": "You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility."
                },
                "serviceTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionServiceTypeComparison:ManagementZoneRuleConditionServiceTypeComparison"
                    },
                    "deprecationMessage": "You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "serviceTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionServiceType:ManagementZoneRuleConditionServiceType"
                    }
                },
                "simpleHostTechComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionSimpleHostTechComparison:ManagementZoneRuleConditionSimpleHostTechComparison"
                    },
                    "deprecationMessage": "You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility."
                },
                "simpleTechComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionSimpleTechComparison:ManagementZoneRuleConditionSimpleTechComparison"
                    },
                    "deprecationMessage": "You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility."
                },
                "stringComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionStringComparison:ManagementZoneRuleConditionStringComparison"
                    },
                    "deprecationMessage": "You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility."
                },
                "stringConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionStringConditionKey:ManagementZoneRuleConditionStringConditionKey"
                    },
                    "deprecationMessage": "'string_condition_key' is deprecated. You should use 'string_key'"
                },
                "stringKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionStringKey:ManagementZoneRuleConditionStringKey"
                    }
                },
                "strings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionString:ManagementZoneRuleConditionString"
                    }
                },
                "syntheticEngineTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionSyntheticEngineTypeComparison:ManagementZoneRuleConditionSyntheticEngineTypeComparison"
                    },
                    "deprecationMessage": "You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "syntheticEngines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionSyntheticEngine:ManagementZoneRuleConditionSyntheticEngine"
                    }
                },
                "tagComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionTagComparison:ManagementZoneRuleConditionTagComparison"
                    },
                    "deprecationMessage": "You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionTag:ManagementZoneRuleConditionTag"
                    }
                },
                "teches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionTech:ManagementZoneRuleConditionTech"
                    }
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ManagementZoneRuleConditionApplicationType:ManagementZoneRuleConditionApplicationType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionApplicationTypeComparison:ManagementZoneRuleConditionApplicationTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionAzureComputeMode:ManagementZoneRuleConditionAzureComputeMode": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionAzureComputeModeComparison:ManagementZoneRuleConditionAzureComputeModeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionAzureSkuComparision:ManagementZoneRuleConditionAzureSkuComparision": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionAzureSkus:ManagementZoneRuleConditionAzureSkus": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionBaseComparisonBasic:ManagementZoneRuleConditionBaseComparisonBasic": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionBaseConditionKey:ManagementZoneRuleConditionBaseConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionBitness:ManagementZoneRuleConditionBitness": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionBitnessComparision:ManagementZoneRuleConditionBitnessComparision": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionCloudType:ManagementZoneRuleConditionCloudType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionCloudTypeComparison:ManagementZoneRuleConditionCloudTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionComparison:ManagementZoneRuleConditionComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionCustomApplicationType:ManagementZoneRuleConditionCustomApplicationType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionCustomApplicationTypeComparison:ManagementZoneRuleConditionCustomApplicationTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionCustomHostMetadata:ManagementZoneRuleConditionCustomHostMetadata": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionCustomHostMetadataDynamicKey:ManagementZoneRuleConditionCustomHostMetadataDynamicKey"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionCustomHostMetadataConditionKey:ManagementZoneRuleConditionCustomHostMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKey:ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKey"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKey:ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKey": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionCustomHostMetadataDynamicKey:ManagementZoneRuleConditionCustomHostMetadataDynamicKey": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionCustomProcessMetadata:ManagementZoneRuleConditionCustomProcessMetadata": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionCustomProcessMetadataDynamicKey:ManagementZoneRuleConditionCustomProcessMetadataDynamicKey"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionCustomProcessMetadataConditionKey:ManagementZoneRuleConditionCustomProcessMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKey:ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKey"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKey:ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKey": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionCustomProcessMetadataDynamicKey:ManagementZoneRuleConditionCustomProcessMetadataDynamicKey": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionDatabaseTopology:ManagementZoneRuleConditionDatabaseTopology": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionDatabaseTopologyComparison:ManagementZoneRuleConditionDatabaseTopologyComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionDcrumDecoder:ManagementZoneRuleConditionDcrumDecoder": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionDcrumDecoderComparison:ManagementZoneRuleConditionDcrumDecoderComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionEntity:ManagementZoneRuleConditionEntity": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionEntityIdComparison:ManagementZoneRuleConditionEntityIdComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionHostTech:ManagementZoneRuleConditionHostTech": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionHostTechValue:ManagementZoneRuleConditionHostTechValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionHostTechValue:ManagementZoneRuleConditionHostTechValue": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "verbatimType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ManagementZoneRuleConditionHypervisor:ManagementZoneRuleConditionHypervisor": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionHypervisorTypeComparision:ManagementZoneRuleConditionHypervisorTypeComparision": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionIndexedName:ManagementZoneRuleConditionIndexedName": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionIndexedNameComparison:ManagementZoneRuleConditionIndexedNameComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionIndexedString:ManagementZoneRuleConditionIndexedString": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionIndexedStringComparison:ManagementZoneRuleConditionIndexedStringComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionIndexedTag:ManagementZoneRuleConditionIndexedTag": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionIndexedTagValue:ManagementZoneRuleConditionIndexedTagValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionIndexedTagComparison:ManagementZoneRuleConditionIndexedTagComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionIndexedTagComparisonValue:ManagementZoneRuleConditionIndexedTagComparisonValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionIndexedTagComparisonValue:ManagementZoneRuleConditionIndexedTagComparisonValue": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionIndexedTagValue:ManagementZoneRuleConditionIndexedTagValue": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionInteger:ManagementZoneRuleConditionInteger": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionIntegerComparison:ManagementZoneRuleConditionIntegerComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionIpaddress:ManagementZoneRuleConditionIpaddress": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionIpaddressComparison:ManagementZoneRuleConditionIpaddressComparison": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionKey:ManagementZoneRuleConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionMobilePlatform:ManagementZoneRuleConditionMobilePlatform": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionMobilePlatformComparison:ManagementZoneRuleConditionMobilePlatformComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionOsArch:ManagementZoneRuleConditionOsArch": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionOsType:ManagementZoneRuleConditionOsType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionOsarchitectureComparison:ManagementZoneRuleConditionOsarchitectureComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionOstypeComparison:ManagementZoneRuleConditionOstypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionPaasType:ManagementZoneRuleConditionPaasType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionPaasTypeComparison:ManagementZoneRuleConditionPaasTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionProcessMetadata:ManagementZoneRuleConditionProcessMetadata": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionProcessMetadataConditionKey:ManagementZoneRuleConditionProcessMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionServiceTopology:ManagementZoneRuleConditionServiceTopology": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionServiceTopologyComparison:ManagementZoneRuleConditionServiceTopologyComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionServiceType:ManagementZoneRuleConditionServiceType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionServiceTypeComparison:ManagementZoneRuleConditionServiceTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionSimpleHostTechComparison:ManagementZoneRuleConditionSimpleHostTechComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionSimpleHostTechComparisonValue:ManagementZoneRuleConditionSimpleHostTechComparisonValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionSimpleHostTechComparisonValue:ManagementZoneRuleConditionSimpleHostTechComparisonValue": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "verbatimType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ManagementZoneRuleConditionSimpleTechComparison:ManagementZoneRuleConditionSimpleTechComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionSimpleTechComparisonValue:ManagementZoneRuleConditionSimpleTechComparisonValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionSimpleTechComparisonValue:ManagementZoneRuleConditionSimpleTechComparisonValue": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "verbatimType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ManagementZoneRuleConditionString:ManagementZoneRuleConditionString": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionStringComparison:ManagementZoneRuleConditionStringComparison": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionStringConditionKey:ManagementZoneRuleConditionStringConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionStringKey:ManagementZoneRuleConditionStringKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionSyntheticEngine:ManagementZoneRuleConditionSyntheticEngine": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionSyntheticEngineTypeComparison:ManagementZoneRuleConditionSyntheticEngineTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionTag:ManagementZoneRuleConditionTag": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionTagValue:ManagementZoneRuleConditionTagValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionTagComparison:ManagementZoneRuleConditionTagComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionTagComparisonValue:ManagementZoneRuleConditionTagComparisonValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionTagComparisonValue:ManagementZoneRuleConditionTagComparisonValue": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionTagValue:ManagementZoneRuleConditionTagValue": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionTech:ManagementZoneRuleConditionTech": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneRuleConditionTechValue:ManagementZoneRuleConditionTechValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneRuleConditionTechValue:ManagementZoneRuleConditionTechValue": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "verbatimType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ManagementZoneV2Rules:ManagementZoneV2Rules": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneV2RulesRule:ManagementZoneV2RulesRule"
                    },
                    "description": "A management zone rule\n"
                }
            },
            "type": "object",
            "required": [
                "rules"
            ]
        },
        "dynatrace:index/ManagementZoneV2RulesRule:ManagementZoneV2RulesRule": {
            "properties": {
                "attributeRule": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneV2RulesRuleAttributeRule:ManagementZoneV2RulesRuleAttributeRule",
                    "description": "no documentation available\n"
                },
                "dimensionRule": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneV2RulesRuleDimensionRule:ManagementZoneV2RulesRuleDimensionRule",
                    "description": "no documentation available\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "entitySelector": {
                    "type": "string",
                    "description": "The documentation of the entity selector can be found [here](https://dt-url.net/apientityselector).\n"
                },
                "type": {
                    "type": "string",
                    "description": "Possible Values: `DIMENSION`, `ME`, `SELECTOR`\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "type"
            ]
        },
        "dynatrace:index/ManagementZoneV2RulesRuleAttributeRule:ManagementZoneV2RulesRuleAttributeRule": {
            "properties": {
                "attributeConditions": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneV2RulesRuleAttributeRuleAttributeConditions:ManagementZoneV2RulesRuleAttributeRuleAttributeConditions",
                    "description": "no documentation available\n"
                },
                "azureToPgpropagation": {
                    "type": "boolean",
                    "description": "Apply to process groups connected to matching Azure entities\n"
                },
                "azureToServicePropagation": {
                    "type": "boolean",
                    "description": "Apply to services provided by matching Azure entities\n"
                },
                "customDeviceGroupToCustomDevicePropagation": {
                    "type": "boolean",
                    "description": "Apply to custom devices in a custom device group\n"
                },
                "entityType": {
                    "type": "string",
                    "description": "Possible Values: `APPMON_SERVER`, `APPMON_SYSTEM_PROFILE`, `AWS_ACCOUNT`, `AWS_APPLICATION_LOAD_BALANCER`, `AWS_AUTO_SCALING_GROUP`, `AWS_CLASSIC_LOAD_BALANCER`, `AWS_NETWORK_LOAD_BALANCER`, `AWS_RELATIONAL_DATABASE_SERVICE`, `AZURE`, `BROWSER_MONITOR`, `CLOUD_APPLICATION`, `CLOUD_APPLICATION_NAMESPACE`, `CLOUD_FOUNDRY_FOUNDATION`, `CUSTOM_APPLICATION`, `CUSTOM_DEVICE`, `CUSTOM_DEVICE_GROUP`, `DATA_CENTER_SERVICE`, `ENTERPRISE_APPLICATION`, `ESXI_HOST`, `EXTERNAL_MONITOR`, `HOST`, `HOST_GROUP`, `HTTP_MONITOR`, `KUBERNETES_CLUSTER`, `KUBERNETES_SERVICE`, `MOBILE_APPLICATION`, `OPENSTACK_ACCOUNT`, `PROCESS_GROUP`, `QUEUE`, `SERVICE`, `WEB_APPLICATION`\n"
                },
                "hostToPgpropagation": {
                    "type": "boolean",
                    "description": "Apply to processes running on matching hosts\n"
                },
                "pgToHostPropagation": {
                    "type": "boolean",
                    "description": "Apply to underlying hosts of matching process groups\n"
                },
                "pgToServicePropagation": {
                    "type": "boolean",
                    "description": "Apply to all services provided by the process groups\n"
                },
                "serviceToHostPropagation": {
                    "type": "boolean",
                    "description": "Apply to underlying hosts of matching services\n"
                },
                "serviceToPgpropagation": {
                    "type": "boolean",
                    "description": "Apply to underlying process groups of matching services\n"
                }
            },
            "type": "object",
            "required": [
                "attributeConditions",
                "entityType"
            ]
        },
        "dynatrace:index/ManagementZoneV2RulesRuleAttributeRuleAttributeConditions:ManagementZoneV2RulesRuleAttributeRuleAttributeConditions": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneV2RulesRuleAttributeRuleAttributeConditionsCondition:ManagementZoneV2RulesRuleAttributeRuleAttributeConditionsCondition"
                    },
                    "description": "Attribute conditions\n"
                }
            },
            "type": "object",
            "required": [
                "conditions"
            ]
        },
        "dynatrace:index/ManagementZoneV2RulesRuleAttributeRuleAttributeConditionsCondition:ManagementZoneV2RulesRuleAttributeRuleAttributeConditionsCondition": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "description": "Case sensitive\n"
                },
                "dynamicKey": {
                    "type": "string",
                    "description": "Dynamic key\n"
                },
                "dynamicKeySource": {
                    "type": "string",
                    "description": "Key source\n"
                },
                "entityId": {
                    "type": "string",
                    "description": "Value\n"
                },
                "enumValue": {
                    "type": "string",
                    "description": "Value\n"
                },
                "integerValue": {
                    "type": "integer",
                    "description": "Value\n"
                },
                "key": {
                    "type": "string",
                    "description": "Possible Values: `APPMON_SERVER_NAME`, `APPMON_SYSTEM_PROFILE_NAME`, `AWS_ACCOUNT_ID`, `AWS_ACCOUNT_NAME`, `AWS_APPLICATION_LOAD_BALANCER_NAME`, `AWS_APPLICATION_LOAD_BALANCER_TAGS`, `AWS_AUTO_SCALING_GROUP_NAME`, `AWS_AUTO_SCALING_GROUP_TAGS`, `AWS_AVAILABILITY_ZONE_NAME`, `AWS_CLASSIC_LOAD_BALANCER_FRONTEND_PORTS`, `AWS_CLASSIC_LOAD_BALANCER_NAME`, `AWS_CLASSIC_LOAD_BALANCER_TAGS`, `AWS_NETWORK_LOAD_BALANCER_NAME`, `AWS_NETWORK_LOAD_BALANCER_TAGS`, `AWS_RELATIONAL_DATABASE_SERVICE_DB_NAME`, `AWS_RELATIONAL_DATABASE_SERVICE_ENDPOINT`, `AWS_RELATIONAL_DATABASE_SERVICE_ENGINE`, `AWS_RELATIONAL_DATABASE_SERVICE_INSTANCE_CLASS`, `AWS_RELATIONAL_DATABASE_SERVICE_NAME`, `AWS_RELATIONAL_DATABASE_SERVICE_PORT`, `AWS_RELATIONAL_DATABASE_SERVICE_TAGS`, `AZURE_ENTITY_NAME`, `AZURE_ENTITY_TAGS`, `AZURE_MGMT_GROUP_NAME`, `AZURE_MGMT_GROUP_UUID`, `AZURE_REGION_NAME`, `AZURE_SCALE_SET_NAME`, `AZURE_SUBSCRIPTION_NAME`, `AZURE_SUBSCRIPTION_UUID`, `AZURE_TENANT_NAME`, `AZURE_TENANT_UUID`, `AZURE_VM_NAME`, `BROWSER_MONITOR_NAME`, `BROWSER_MONITOR_TAGS`, `CLOUD_APPLICATION_LABELS`, `CLOUD_APPLICATION_NAME`, `CLOUD_APPLICATION_NAMESPACE_LABELS`, `CLOUD_APPLICATION_NAMESPACE_NAME`, `CLOUD_FOUNDRY_FOUNDATION_NAME`, `CLOUD_FOUNDRY_ORG_NAME`, `CUSTOM_APPLICATION_NAME`, `CUSTOM_APPLICATION_PLATFORM`, `CUSTOM_APPLICATION_TAGS`, `CUSTOM_APPLICATION_TYPE`, `CUSTOM_DEVICE_DNS_ADDRESS`, `CUSTOM_DEVICE_GROUP_NAME`, `CUSTOM_DEVICE_GROUP_TAGS`, `CUSTOM_DEVICE_IP_ADDRESS`, `CUSTOM_DEVICE_METADATA`, `CUSTOM_DEVICE_NAME`, `CUSTOM_DEVICE_PORT`, `CUSTOM_DEVICE_TAGS`, `CUSTOM_DEVICE_TECHNOLOGY`, `DATA_CENTER_SERVICE_DECODER_TYPE`, `DATA_CENTER_SERVICE_IP_ADDRESS`, `DATA_CENTER_SERVICE_METADATA`, `DATA_CENTER_SERVICE_NAME`, `DATA_CENTER_SERVICE_PORT`, `DATA_CENTER_SERVICE_TAGS`, `DOCKER_CONTAINER_NAME`, `DOCKER_FULL_IMAGE_NAME`, `DOCKER_IMAGE_VERSION`, `EC2_INSTANCE_AMI_ID`, `EC2_INSTANCE_AWS_INSTANCE_TYPE`, `EC2_INSTANCE_AWS_SECURITY_GROUP`, `EC2_INSTANCE_BEANSTALK_ENV_NAME`, `EC2_INSTANCE_ID`, `EC2_INSTANCE_NAME`, `EC2_INSTANCE_PRIVATE_HOST_NAME`, `EC2_INSTANCE_PUBLIC_HOST_NAME`, `EC2_INSTANCE_TAGS`, `ENTERPRISE_APPLICATION_DECODER_TYPE`, `ENTERPRISE_APPLICATION_IP_ADDRESS`, `ENTERPRISE_APPLICATION_METADATA`, `ENTERPRISE_APPLICATION_NAME`, `ENTERPRISE_APPLICATION_PORT`, `ENTERPRISE_APPLICATION_TAGS`, `ESXI_HOST_CLUSTER_NAME`, `ESXI_HOST_HARDWARE_MODEL`, `ESXI_HOST_HARDWARE_VENDOR`, `ESXI_HOST_NAME`, `ESXI_HOST_PRODUCT_NAME`, `ESXI_HOST_PRODUCT_VERSION`, `ESXI_HOST_TAGS`, `EXTERNAL_MONITOR_ENGINE_DESCRIPTION`, `EXTERNAL_MONITOR_ENGINE_NAME`, `EXTERNAL_MONITOR_ENGINE_TYPE`, `EXTERNAL_MONITOR_NAME`, `EXTERNAL_MONITOR_TAGS`, `GEOLOCATION_SITE_NAME`, `GOOGLE_CLOUD_PLATFORM_ZONE_NAME`, `GOOGLE_COMPUTE_INSTANCE_ID`, `GOOGLE_COMPUTE_INSTANCE_MACHINE_TYPE`, `GOOGLE_COMPUTE_INSTANCE_NAME`, `GOOGLE_COMPUTE_INSTANCE_PROJECT`, `GOOGLE_COMPUTE_INSTANCE_PROJECT_ID`, `GOOGLE_COMPUTE_INSTANCE_PUBLIC_IP_ADDRESSES`, `HOST_AIX_LOGICAL_CPU_COUNT`, `HOST_AIX_SIMULTANEOUS_THREADS`, `HOST_AIX_VIRTUAL_CPU_COUNT`, `HOST_ARCHITECTURE`, `HOST_AWS_NAME_TAG`, `HOST_AZURE_COMPUTE_MODE`, `HOST_AZURE_SKU`, `HOST_AZURE_WEB_APPLICATION_HOST_NAMES`, `HOST_AZURE_WEB_APPLICATION_SITE_NAMES`, `HOST_BITNESS`, `HOST_BOSH_AVAILABILITY_ZONE`, `HOST_BOSH_DEPLOYMENT_ID`, `HOST_BOSH_INSTANCE_ID`, `HOST_BOSH_INSTANCE_NAME`, `HOST_BOSH_NAME`, `HOST_BOSH_STEMCELL_VERSION`, `HOST_CLOUD_TYPE`, `HOST_CPU_CORES`, `HOST_CUSTOM_METADATA`, `HOST_DETECTED_NAME`, `HOST_GROUP_ID`, `HOST_GROUP_NAME`, `HOST_HYPERVISOR_TYPE`, `HOST_IP_ADDRESS`, `HOST_KUBERNETES_LABELS`, `HOST_LOGICAL_CPU_CORES`, `HOST_NAME`, `HOST_ONEAGENT_CUSTOM_HOST_NAME`, `HOST_OS_TYPE`, `HOST_OS_VERSION`, `HOST_PAAS_MEMORY_LIMIT`, `HOST_PAAS_TYPE`, `HOST_TAGS`, `HOST_TECHNOLOGY`, `HTTP_MONITOR_NAME`, `HTTP_MONITOR_TAGS`, `KUBERNETES_CLUSTER_NAME`, `KUBERNETES_NODE_NAME`, `KUBERNETES_SERVICE_NAME`, `MOBILE_APPLICATION_NAME`, `MOBILE_APPLICATION_PLATFORM`, `MOBILE_APPLICATION_TAGS`, `NAME_OF_COMPUTE_NODE`, `OPENSTACK_ACCOUNT_NAME`, `OPENSTACK_ACCOUNT_PROJECT_NAME`, `OPENSTACK_AVAILABILITY_ZONE_NAME`, `OPENSTACK_PROJECT_NAME`, `OPENSTACK_REGION_NAME`, `OPENSTACK_VM_INSTANCE_TYPE`, `OPENSTACK_VM_NAME`, `OPENSTACK_VM_SECURITY_GROUP`, `PROCESS_GROUP_AZURE_HOST_NAME`, `PROCESS_GROUP_AZURE_SITE_NAME`, `PROCESS_GROUP_CUSTOM_METADATA`, `PROCESS_GROUP_DETECTED_NAME`, `PROCESS_GROUP_ID`, `PROCESS_GROUP_LISTEN_PORT`, `PROCESS_GROUP_NAME`, `PROCESS_GROUP_PREDEFINED_METADATA`, `PROCESS_GROUP_TAGS`, `PROCESS_GROUP_TECHNOLOGY`, `PROCESS_GROUP_TECHNOLOGY_EDITION`, `PROCESS_GROUP_TECHNOLOGY_VERSION`, `QUEUE_NAME`, `QUEUE_TECHNOLOGY`, `QUEUE_VENDOR`, `SERVICE_AKKA_ACTOR_SYSTEM`, `SERVICE_CTG_SERVICE_NAME`, `SERVICE_DATABASE_HOST_NAME`, `SERVICE_DATABASE_NAME`, `SERVICE_DATABASE_TOPOLOGY`, `SERVICE_DATABASE_VENDOR`, `SERVICE_DETECTED_NAME`, `SERVICE_ESB_APPLICATION_NAME`, `SERVICE_IBM_CTG_GATEWAY_URL`, `SERVICE_MESSAGING_LISTENER_CLASS_NAME`, `SERVICE_NAME`, `SERVICE_PORT`, `SERVICE_PUBLIC_DOMAIN_NAME`, `SERVICE_REMOTE_ENDPOINT`, `SERVICE_REMOTE_SERVICE_NAME`, `SERVICE_TAGS`, `SERVICE_TECHNOLOGY`, `SERVICE_TECHNOLOGY_EDITION`, `SERVICE_TECHNOLOGY_VERSION`, `SERVICE_TOPOLOGY`, `SERVICE_TYPE`, `SERVICE_WEB_APPLICATION_ID`, `SERVICE_WEB_CONTEXT_ROOT`, `SERVICE_WEB_SERVER_ENDPOINT`, `SERVICE_WEB_SERVER_NAME`, `SERVICE_WEB_SERVICE_NAME`, `SERVICE_WEB_SERVICE_NAMESPACE`, `VMWARE_DATACENTER_NAME`, `VMWARE_VM_NAME`, `WEB_APPLICATION_NAME`, `WEB_APPLICATION_NAME_PATTERN`, `WEB_APPLICATION_TAGS`, `WEB_APPLICATION_TYPE`\n"
                },
                "operator": {
                    "type": "string",
                    "description": "Possible Values: `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`, `EXISTS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `IS_IP_IN_RANGE`, `LOWER_THAN`, `LOWER_THAN_OR_EQUAL`, `NOT_BEGINS_WITH`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_EXISTS`, `NOT_GREATER_THAN`, `NOT_GREATER_THAN_OR_EQUAL`, `NOT_IS_IP_IN_RANGE`, `NOT_LOWER_THAN`, `NOT_LOWER_THAN_OR_EQUAL`, `NOT_REGEX_MATCHES`, `NOT_TAG_KEY_EQUALS`, `REGEX_MATCHES`, `TAG_KEY_EQUALS`\n"
                },
                "stringValue": {
                    "type": "string",
                    "description": "Value\n"
                },
                "tag": {
                    "type": "string",
                    "description": "Format: `[CONTEXT]tagKey:tagValue`\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "operator"
            ]
        },
        "dynatrace:index/ManagementZoneV2RulesRuleDimensionRule:ManagementZoneV2RulesRuleDimensionRule": {
            "properties": {
                "appliesTo": {
                    "type": "string",
                    "description": "Possible Values: `ANY`, `LOG`, `METRIC`\n"
                },
                "dimensionConditions": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneV2RulesRuleDimensionRuleDimensionConditions:ManagementZoneV2RulesRuleDimensionRuleDimensionConditions",
                    "description": "Conditions\n"
                }
            },
            "type": "object",
            "required": [
                "appliesTo"
            ]
        },
        "dynatrace:index/ManagementZoneV2RulesRuleDimensionRuleDimensionConditions:ManagementZoneV2RulesRuleDimensionRuleDimensionConditions": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneV2RulesRuleDimensionRuleDimensionConditionsCondition:ManagementZoneV2RulesRuleDimensionRuleDimensionConditionsCondition"
                    },
                    "description": "Attribute conditions\n"
                }
            },
            "type": "object",
            "required": [
                "conditions"
            ]
        },
        "dynatrace:index/ManagementZoneV2RulesRuleDimensionRuleDimensionConditionsCondition:ManagementZoneV2RulesRuleDimensionRuleDimensionConditionsCondition": {
            "properties": {
                "conditionType": {
                    "type": "string",
                    "description": "Possible Values: `DIMENSION`, `LOG_FILE_NAME`, `METRIC_KEY`\n"
                },
                "key": {
                    "type": "string",
                    "description": "Possible Values: `APPMON_SERVER_NAME`, `APPMON_SYSTEM_PROFILE_NAME`, `AWS_ACCOUNT_ID`, `AWS_ACCOUNT_NAME`, `AWS_APPLICATION_LOAD_BALANCER_NAME`, `AWS_APPLICATION_LOAD_BALANCER_TAGS`, `AWS_AUTO_SCALING_GROUP_NAME`, `AWS_AUTO_SCALING_GROUP_TAGS`, `AWS_AVAILABILITY_ZONE_NAME`, `AWS_CLASSIC_LOAD_BALANCER_FRONTEND_PORTS`, `AWS_CLASSIC_LOAD_BALANCER_NAME`, `AWS_CLASSIC_LOAD_BALANCER_TAGS`, `AWS_NETWORK_LOAD_BALANCER_NAME`, `AWS_NETWORK_LOAD_BALANCER_TAGS`, `AWS_RELATIONAL_DATABASE_SERVICE_DB_NAME`, `AWS_RELATIONAL_DATABASE_SERVICE_ENDPOINT`, `AWS_RELATIONAL_DATABASE_SERVICE_ENGINE`, `AWS_RELATIONAL_DATABASE_SERVICE_INSTANCE_CLASS`, `AWS_RELATIONAL_DATABASE_SERVICE_NAME`, `AWS_RELATIONAL_DATABASE_SERVICE_PORT`, `AWS_RELATIONAL_DATABASE_SERVICE_TAGS`, `AZURE_ENTITY_NAME`, `AZURE_ENTITY_TAGS`, `AZURE_MGMT_GROUP_NAME`, `AZURE_MGMT_GROUP_UUID`, `AZURE_REGION_NAME`, `AZURE_SCALE_SET_NAME`, `AZURE_SUBSCRIPTION_NAME`, `AZURE_SUBSCRIPTION_UUID`, `AZURE_TENANT_NAME`, `AZURE_TENANT_UUID`, `AZURE_VM_NAME`, `BROWSER_MONITOR_NAME`, `BROWSER_MONITOR_TAGS`, `CLOUD_APPLICATION_LABELS`, `CLOUD_APPLICATION_NAME`, `CLOUD_APPLICATION_NAMESPACE_LABELS`, `CLOUD_APPLICATION_NAMESPACE_NAME`, `CLOUD_FOUNDRY_FOUNDATION_NAME`, `CLOUD_FOUNDRY_ORG_NAME`, `CUSTOM_APPLICATION_NAME`, `CUSTOM_APPLICATION_PLATFORM`, `CUSTOM_APPLICATION_TAGS`, `CUSTOM_APPLICATION_TYPE`, `CUSTOM_DEVICE_DNS_ADDRESS`, `CUSTOM_DEVICE_GROUP_NAME`, `CUSTOM_DEVICE_GROUP_TAGS`, `CUSTOM_DEVICE_IP_ADDRESS`, `CUSTOM_DEVICE_METADATA`, `CUSTOM_DEVICE_NAME`, `CUSTOM_DEVICE_PORT`, `CUSTOM_DEVICE_TAGS`, `CUSTOM_DEVICE_TECHNOLOGY`, `DATA_CENTER_SERVICE_DECODER_TYPE`, `DATA_CENTER_SERVICE_IP_ADDRESS`, `DATA_CENTER_SERVICE_METADATA`, `DATA_CENTER_SERVICE_NAME`, `DATA_CENTER_SERVICE_PORT`, `DATA_CENTER_SERVICE_TAGS`, `DOCKER_CONTAINER_NAME`, `DOCKER_FULL_IMAGE_NAME`, `DOCKER_IMAGE_VERSION`, `EC2_INSTANCE_AMI_ID`, `EC2_INSTANCE_AWS_INSTANCE_TYPE`, `EC2_INSTANCE_AWS_SECURITY_GROUP`, `EC2_INSTANCE_BEANSTALK_ENV_NAME`, `EC2_INSTANCE_ID`, `EC2_INSTANCE_NAME`, `EC2_INSTANCE_PRIVATE_HOST_NAME`, `EC2_INSTANCE_PUBLIC_HOST_NAME`, `EC2_INSTANCE_TAGS`, `ENTERPRISE_APPLICATION_DECODER_TYPE`, `ENTERPRISE_APPLICATION_IP_ADDRESS`, `ENTERPRISE_APPLICATION_METADATA`, `ENTERPRISE_APPLICATION_NAME`, `ENTERPRISE_APPLICATION_PORT`, `ENTERPRISE_APPLICATION_TAGS`, `ESXI_HOST_CLUSTER_NAME`, `ESXI_HOST_HARDWARE_MODEL`, `ESXI_HOST_HARDWARE_VENDOR`, `ESXI_HOST_NAME`, `ESXI_HOST_PRODUCT_NAME`, `ESXI_HOST_PRODUCT_VERSION`, `ESXI_HOST_TAGS`, `EXTERNAL_MONITOR_ENGINE_DESCRIPTION`, `EXTERNAL_MONITOR_ENGINE_NAME`, `EXTERNAL_MONITOR_ENGINE_TYPE`, `EXTERNAL_MONITOR_NAME`, `EXTERNAL_MONITOR_TAGS`, `GEOLOCATION_SITE_NAME`, `GOOGLE_CLOUD_PLATFORM_ZONE_NAME`, `GOOGLE_COMPUTE_INSTANCE_ID`, `GOOGLE_COMPUTE_INSTANCE_MACHINE_TYPE`, `GOOGLE_COMPUTE_INSTANCE_NAME`, `GOOGLE_COMPUTE_INSTANCE_PROJECT`, `GOOGLE_COMPUTE_INSTANCE_PROJECT_ID`, `GOOGLE_COMPUTE_INSTANCE_PUBLIC_IP_ADDRESSES`, `HOST_AIX_LOGICAL_CPU_COUNT`, `HOST_AIX_SIMULTANEOUS_THREADS`, `HOST_AIX_VIRTUAL_CPU_COUNT`, `HOST_ARCHITECTURE`, `HOST_AWS_NAME_TAG`, `HOST_AZURE_COMPUTE_MODE`, `HOST_AZURE_SKU`, `HOST_AZURE_WEB_APPLICATION_HOST_NAMES`, `HOST_AZURE_WEB_APPLICATION_SITE_NAMES`, `HOST_BITNESS`, `HOST_BOSH_AVAILABILITY_ZONE`, `HOST_BOSH_DEPLOYMENT_ID`, `HOST_BOSH_INSTANCE_ID`, `HOST_BOSH_INSTANCE_NAME`, `HOST_BOSH_NAME`, `HOST_BOSH_STEMCELL_VERSION`, `HOST_CLOUD_TYPE`, `HOST_CPU_CORES`, `HOST_CUSTOM_METADATA`, `HOST_DETECTED_NAME`, `HOST_GROUP_ID`, `HOST_GROUP_NAME`, `HOST_HYPERVISOR_TYPE`, `HOST_IP_ADDRESS`, `HOST_KUBERNETES_LABELS`, `HOST_LOGICAL_CPU_CORES`, `HOST_NAME`, `HOST_ONEAGENT_CUSTOM_HOST_NAME`, `HOST_OS_TYPE`, `HOST_OS_VERSION`, `HOST_PAAS_MEMORY_LIMIT`, `HOST_PAAS_TYPE`, `HOST_TAGS`, `HOST_TECHNOLOGY`, `HTTP_MONITOR_NAME`, `HTTP_MONITOR_TAGS`, `KUBERNETES_CLUSTER_NAME`, `KUBERNETES_NODE_NAME`, `KUBERNETES_SERVICE_NAME`, `MOBILE_APPLICATION_NAME`, `MOBILE_APPLICATION_PLATFORM`, `MOBILE_APPLICATION_TAGS`, `NAME_OF_COMPUTE_NODE`, `OPENSTACK_ACCOUNT_NAME`, `OPENSTACK_ACCOUNT_PROJECT_NAME`, `OPENSTACK_AVAILABILITY_ZONE_NAME`, `OPENSTACK_PROJECT_NAME`, `OPENSTACK_REGION_NAME`, `OPENSTACK_VM_INSTANCE_TYPE`, `OPENSTACK_VM_NAME`, `OPENSTACK_VM_SECURITY_GROUP`, `PROCESS_GROUP_AZURE_HOST_NAME`, `PROCESS_GROUP_AZURE_SITE_NAME`, `PROCESS_GROUP_CUSTOM_METADATA`, `PROCESS_GROUP_DETECTED_NAME`, `PROCESS_GROUP_ID`, `PROCESS_GROUP_LISTEN_PORT`, `PROCESS_GROUP_NAME`, `PROCESS_GROUP_PREDEFINED_METADATA`, `PROCESS_GROUP_TAGS`, `PROCESS_GROUP_TECHNOLOGY`, `PROCESS_GROUP_TECHNOLOGY_EDITION`, `PROCESS_GROUP_TECHNOLOGY_VERSION`, `QUEUE_NAME`, `QUEUE_TECHNOLOGY`, `QUEUE_VENDOR`, `SERVICE_AKKA_ACTOR_SYSTEM`, `SERVICE_CTG_SERVICE_NAME`, `SERVICE_DATABASE_HOST_NAME`, `SERVICE_DATABASE_NAME`, `SERVICE_DATABASE_TOPOLOGY`, `SERVICE_DATABASE_VENDOR`, `SERVICE_DETECTED_NAME`, `SERVICE_ESB_APPLICATION_NAME`, `SERVICE_IBM_CTG_GATEWAY_URL`, `SERVICE_MESSAGING_LISTENER_CLASS_NAME`, `SERVICE_NAME`, `SERVICE_PORT`, `SERVICE_PUBLIC_DOMAIN_NAME`, `SERVICE_REMOTE_ENDPOINT`, `SERVICE_REMOTE_SERVICE_NAME`, `SERVICE_TAGS`, `SERVICE_TECHNOLOGY`, `SERVICE_TECHNOLOGY_EDITION`, `SERVICE_TECHNOLOGY_VERSION`, `SERVICE_TOPOLOGY`, `SERVICE_TYPE`, `SERVICE_WEB_APPLICATION_ID`, `SERVICE_WEB_CONTEXT_ROOT`, `SERVICE_WEB_SERVER_ENDPOINT`, `SERVICE_WEB_SERVER_NAME`, `SERVICE_WEB_SERVICE_NAME`, `SERVICE_WEB_SERVICE_NAMESPACE`, `VMWARE_DATACENTER_NAME`, `VMWARE_VM_NAME`, `WEB_APPLICATION_NAME`, `WEB_APPLICATION_NAME_PATTERN`, `WEB_APPLICATION_TAGS`, `WEB_APPLICATION_TYPE`\n"
                },
                "ruleMatcher": {
                    "type": "string",
                    "description": "Possible Values: `BEGINS_WITH`, `EQUALS`\n"
                },
                "value": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "conditionType",
                "ruleMatcher",
                "value"
            ]
        },
        "dynatrace:index/MetricEventsEventTemplate:MetricEventsEventTemplate": {
            "properties": {
                "davisMerge": {
                    "type": "boolean",
                    "description": "Davis® AI will try to merge this event into existing problems, otherwise a new problem will always be created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the event to trigger.\n"
                },
                "eventType": {
                    "type": "string",
                    "description": "Possible Values: `AVAILABILITY`, `CUSTOM_ALERT`, `CUSTOM_ANNOTATION`, `CUSTOM_CONFIGURATION`, `CUSTOM_DEPLOYMENT`, `ERROR`, `INFO`, `MARKED_FOR_TERMINATION`, `RESOURCE`, `SLOWDOWN`\n"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/MetricEventsEventTemplateMetadata:MetricEventsEventTemplateMetadata"
                    },
                    "description": "Set of additional key-value properties to be attached to the triggered event.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the event to trigger.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "eventType",
                "title"
            ]
        },
        "dynatrace:index/MetricEventsEventTemplateMetadata:MetricEventsEventTemplateMetadata": {
            "properties": {
                "metadataKey": {
                    "type": "string",
                    "description": "Type 'dt.' for key hints.\n"
                },
                "metadataValue": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "metadataKey",
                "metadataValue"
            ]
        },
        "dynatrace:index/MetricEventsModelProperties:MetricEventsModelProperties": {
            "properties": {
                "alertCondition": {
                    "type": "string",
                    "description": "Possible Values: `ABOVE`, `BELOW`, `OUTSIDE`\n"
                },
                "alertOnNoData": {
                    "type": "boolean",
                    "description": "The ability to set an alert on missing data in a metric. When enabled, missing data samples will contribute as violating samples defined in advanced model properties. We recommend to not alert on missing data for sparse timeseries as this leads to alert spam.\n"
                },
                "dealertingSamples": {
                    "type": "integer",
                    "description": "The number of one-minute samples within the evaluation window that must go back to normal to close the event.\n"
                },
                "samples": {
                    "type": "integer",
                    "description": "The number of one-minute samples that form the sliding evaluation window.\n"
                },
                "signalFluctuation": {
                    "type": "number",
                    "description": "Controls how many times the signal fluctuation is added to the baseline to produce the actual threshold for alerting\n"
                },
                "threshold": {
                    "type": "number",
                    "description": "Raise an event if this value is violated\n"
                },
                "tolerance": {
                    "type": "number",
                    "description": "Controls the width of the confidence band and larger values lead to a less sensitive model\n"
                },
                "type": {
                    "type": "string",
                    "description": "Possible Values: `AUTO_ADAPTIVE_THRESHOLD`, `SEASONAL_BASELINE`, `STATIC_THRESHOLD`\n"
                },
                "violatingSamples": {
                    "type": "integer",
                    "description": "The number of one-minute samples within the evaluation window that must violate to trigger an event.\n"
                }
            },
            "type": "object",
            "required": [
                "alertCondition",
                "alertOnNoData",
                "dealertingSamples",
                "samples",
                "type",
                "violatingSamples"
            ]
        },
        "dynatrace:index/MetricEventsQueryDefinition:MetricEventsQueryDefinition": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Possible Values: `AVG`, `COUNT`, `MAX`, `MEDIAN`, `MIN`, `PERCENTILE90`, `SUM`, `VALUE`\n"
                },
                "dimensionFilter": {
                    "$ref": "#/types/dynatrace:index/MetricEventsQueryDefinitionDimensionFilter:MetricEventsQueryDefinitionDimensionFilter",
                    "description": "Dimension filter\n"
                },
                "entityFilter": {
                    "$ref": "#/types/dynatrace:index/MetricEventsQueryDefinitionEntityFilter:MetricEventsQueryDefinitionEntityFilter",
                    "description": "Use rule-based filters to define the scope this event monitors.\n"
                },
                "managementZone": {
                    "type": "string",
                    "description": "The `legacy_id` of a Management Zone (as provided by the resource `dynatrace.ManagementZoneV2` or the data source `dynatrace.ManagementZone`)\n"
                },
                "metricKey": {
                    "type": "string",
                    "description": "Metric key\n"
                },
                "metricSelector": {
                    "type": "string",
                    "description": "To learn more, visit [Metric Selector](https://dt-url.net/metselad)\n"
                },
                "queryOffset": {
                    "type": "integer",
                    "description": "Minute offset of sliding evaluation window for metrics with latency\n"
                },
                "type": {
                    "type": "string",
                    "description": "Possible Values: `METRIC_KEY`, `METRIC_SELECTOR`\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/MetricEventsQueryDefinitionDimensionFilter:MetricEventsQueryDefinitionDimensionFilter": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/MetricEventsQueryDefinitionDimensionFilterFilter:MetricEventsQueryDefinitionDimensionFilterFilter"
                    }
                }
            },
            "type": "object",
            "required": [
                "filters"
            ]
        },
        "dynatrace:index/MetricEventsQueryDefinitionDimensionFilterFilter:MetricEventsQueryDefinitionDimensionFilterFilter": {
            "properties": {
                "dimensionKey": {
                    "type": "string",
                    "description": "Dimension key\n"
                },
                "dimensionValue": {
                    "type": "string",
                    "description": "Dimension value\n"
                },
                "operator": {
                    "type": "string",
                    "description": "Possible Values: `CONTAINS_CASE_SENSITIVE`, `DOES_NOT_CONTAIN_CASE_SENSITIVE`, `DOES_NOT_EQUAL`, `DOES_NOT_START_WITH`, `EQUALS`, `STARTS_WITH`\n"
                }
            },
            "type": "object",
            "required": [
                "dimensionKey",
                "dimensionValue"
            ]
        },
        "dynatrace:index/MetricEventsQueryDefinitionEntityFilter:MetricEventsQueryDefinitionEntityFilter": {
            "properties": {
                "conditions": {
                    "$ref": "#/types/dynatrace:index/MetricEventsQueryDefinitionEntityFilterConditions:MetricEventsQueryDefinitionEntityFilterConditions",
                    "description": "no documentation available\n"
                },
                "dimensionKey": {
                    "type": "string",
                    "description": "Dimension key\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/MetricEventsQueryDefinitionEntityFilterConditions:MetricEventsQueryDefinitionEntityFilterConditions": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/MetricEventsQueryDefinitionEntityFilterConditionsCondition:MetricEventsQueryDefinitionEntityFilterConditionsCondition"
                    }
                }
            },
            "type": "object",
            "required": [
                "conditions"
            ]
        },
        "dynatrace:index/MetricEventsQueryDefinitionEntityFilterConditionsCondition:MetricEventsQueryDefinitionEntityFilterConditionsCondition": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "Possible Values: `CONTAINS_CASE_SENSITIVE`, `DOES_NOT_CONTAIN_CASE_SENSITIVE`, `DOES_NOT_EQUAL`, `DOES_NOT_START_WITH`, `EQUALS`, `STARTS_WITH`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Possible Values: `AUTO_ADAPTIVE_THRESHOLD`, `SEASONAL_BASELINE`, `STATIC_THRESHOLD`\n"
                },
                "value": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "type",
                "value"
            ]
        },
        "dynatrace:index/MetricMetadataDimensions:MetricMetadataDimensions": {
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/MetricMetadataDimensionsDimension:MetricMetadataDimensionsDimension"
                    }
                }
            },
            "type": "object",
            "required": [
                "dimensions"
            ]
        },
        "dynatrace:index/MetricMetadataDimensionsDimension:MetricMetadataDimensionsDimension": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Display name\n"
                },
                "key": {
                    "type": "string",
                    "description": "Dimension key\n"
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "dynatrace:index/MetricMetadataMetricProperties:MetricMetadataMetricProperties": {
            "properties": {
                "impactRelevant": {
                    "type": "boolean",
                    "description": "Whether (true or false) the metric is relevant to a problem's impact.\n"
                },
                "latency": {
                    "type": "integer"
                },
                "maxValue": {
                    "type": "number"
                },
                "minValue": {
                    "type": "number"
                },
                "rootCauseRelevant": {
                    "type": "boolean"
                },
                "valueType": {
                    "type": "string",
                    "description": "Possible Values: `Error`, `Score`, `Unknown`\n"
                }
            },
            "type": "object",
            "required": [
                "valueType"
            ]
        },
        "dynatrace:index/MobileAppAnomaliesErrorRateIncrease:MobileAppAnomaliesErrorRateIncrease": {
            "properties": {
                "detectionMode": {
                    "type": "string",
                    "description": "Possible Values: `Auto`, `Fixed`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "errorRateIncreaseAuto": {
                    "$ref": "#/types/dynatrace:index/MobileAppAnomaliesErrorRateIncreaseErrorRateIncreaseAuto:MobileAppAnomaliesErrorRateIncreaseErrorRateIncreaseAuto",
                    "description": "Alert if the percentage of user actions affected by reported errors exceeds **both** the absolute threshold and the relative threshold\n"
                },
                "errorRateIncreaseFixed": {
                    "$ref": "#/types/dynatrace:index/MobileAppAnomaliesErrorRateIncreaseErrorRateIncreaseFixed:MobileAppAnomaliesErrorRateIncreaseErrorRateIncreaseFixed",
                    "description": "Alert if the custom reported error rate threshold is exceeded during any 5-minute period\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/MobileAppAnomaliesErrorRateIncreaseErrorRateIncreaseAuto:MobileAppAnomaliesErrorRateIncreaseErrorRateIncreaseAuto": {
            "properties": {
                "thresholdAbsolute": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                },
                "thresholdRelative": {
                    "type": "number",
                    "description": "Relative threshold\n"
                }
            },
            "type": "object",
            "required": [
                "thresholdAbsolute",
                "thresholdRelative"
            ]
        },
        "dynatrace:index/MobileAppAnomaliesErrorRateIncreaseErrorRateIncreaseFixed:MobileAppAnomaliesErrorRateIncreaseErrorRateIncreaseFixed": {
            "properties": {
                "sensitivity": {
                    "type": "string",
                    "description": "Possible Values: `Low`, `Medium`, `High`\n"
                },
                "thresholdAbsolute": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                }
            },
            "type": "object",
            "required": [
                "sensitivity",
                "thresholdAbsolute"
            ]
        },
        "dynatrace:index/MobileAppAnomaliesSlowUserActions:MobileAppAnomaliesSlowUserActions": {
            "properties": {
                "detectionMode": {
                    "type": "string",
                    "description": "Possible Values: `Auto`, `Fixed`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "slowUserActionsAuto": {
                    "$ref": "#/types/dynatrace:index/MobileAppAnomaliesSlowUserActionsSlowUserActionsAuto:MobileAppAnomaliesSlowUserActionsSlowUserActionsAuto",
                    "description": "no documentation available\n"
                },
                "slowUserActionsFixed": {
                    "$ref": "#/types/dynatrace:index/MobileAppAnomaliesSlowUserActionsSlowUserActionsFixed:MobileAppAnomaliesSlowUserActionsSlowUserActionsFixed",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/MobileAppAnomaliesSlowUserActionsSlowUserActionsAuto:MobileAppAnomaliesSlowUserActionsSlowUserActionsAuto": {
            "properties": {
                "durationAvoidOveralerting": {
                    "$ref": "#/types/dynatrace:index/MobileAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationAvoidOveralerting:MobileAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationAvoidOveralerting",
                    "description": "To avoid over-alerting do not alert for low traffic applications with less than\n"
                },
                "durationThresholdAll": {
                    "$ref": "#/types/dynatrace:index/MobileAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationThresholdAll:MobileAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationThresholdAll",
                    "description": "Alert if the action duration of all user actions degrades beyond **both** the absolute and relative threshold:\n"
                },
                "durationThresholdSlowest": {
                    "$ref": "#/types/dynatrace:index/MobileAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationThresholdSlowest:MobileAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationThresholdSlowest",
                    "description": "Alert if the action duration of the slowest 10% of user actions degrades beyond **both** the absolute and relative threshold:\n"
                }
            },
            "type": "object",
            "required": [
                "durationAvoidOveralerting",
                "durationThresholdAll",
                "durationThresholdSlowest"
            ]
        },
        "dynatrace:index/MobileAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationAvoidOveralerting:MobileAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationAvoidOveralerting": {
            "properties": {
                "minActionRate": {
                    "type": "integer",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "minActionRate"
            ]
        },
        "dynatrace:index/MobileAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationThresholdAll:MobileAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationThresholdAll": {
            "properties": {
                "durationThreshold": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                },
                "slowdownPercentage": {
                    "type": "number",
                    "description": "Relative threshold\n"
                }
            },
            "type": "object",
            "required": [
                "durationThreshold",
                "slowdownPercentage"
            ]
        },
        "dynatrace:index/MobileAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationThresholdSlowest:MobileAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationThresholdSlowest": {
            "properties": {
                "durationThreshold": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                },
                "slowdownPercentage": {
                    "type": "number",
                    "description": "Relative threshold\n"
                }
            },
            "type": "object",
            "required": [
                "durationThreshold",
                "slowdownPercentage"
            ]
        },
        "dynatrace:index/MobileAppAnomaliesSlowUserActionsSlowUserActionsFixed:MobileAppAnomaliesSlowUserActionsSlowUserActionsFixed": {
            "properties": {
                "durationAvoidOveralerting": {
                    "$ref": "#/types/dynatrace:index/MobileAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationAvoidOveralerting:MobileAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationAvoidOveralerting",
                    "description": "To avoid over-alerting do not alert for low traffic applications with less than\n"
                },
                "durationThresholdAllFixed": {
                    "$ref": "#/types/dynatrace:index/MobileAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationThresholdAllFixed:MobileAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationThresholdAllFixed",
                    "description": "Alert if the action duration of all user actions degrades beyond the absolute threshold:\n"
                },
                "durationThresholdSlowest": {
                    "$ref": "#/types/dynatrace:index/MobileAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationThresholdSlowest:MobileAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationThresholdSlowest",
                    "description": "Alert if the action duration of the slowest 10% of user actions degrades beyond **both** the absolute and relative threshold:\n"
                },
                "sensitivity": {
                    "type": "string",
                    "description": "Possible Values: `Low`, `Medium`, `High`\n"
                }
            },
            "type": "object",
            "required": [
                "durationAvoidOveralerting",
                "durationThresholdAllFixed",
                "durationThresholdSlowest",
                "sensitivity"
            ]
        },
        "dynatrace:index/MobileAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationAvoidOveralerting:MobileAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationAvoidOveralerting": {
            "properties": {
                "minActionRate": {
                    "type": "integer",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "minActionRate"
            ]
        },
        "dynatrace:index/MobileAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationThresholdAllFixed:MobileAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationThresholdAllFixed": {
            "properties": {
                "durationThreshold": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                }
            },
            "type": "object",
            "required": [
                "durationThreshold"
            ]
        },
        "dynatrace:index/MobileAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationThresholdSlowest:MobileAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationThresholdSlowest": {
            "properties": {
                "durationThreshold": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                }
            },
            "type": "object",
            "required": [
                "durationThreshold"
            ]
        },
        "dynatrace:index/MobileAppAnomaliesUnexpectedHighLoad:MobileAppAnomaliesUnexpectedHighLoad": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "thresholdPercentage": {
                    "type": "number",
                    "description": "Dynatrace learns your typical application traffic over an observation period of one week. Depending on this expected value Dynatrace detects abnormal traffic spikes within your application.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/MobileAppAnomaliesUnexpectedLowLoad:MobileAppAnomaliesUnexpectedLowLoad": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "thresholdPercentage": {
                    "type": "number",
                    "description": "Dynatrace learns your typical application traffic over an observation period of one week. Depending on this expected value Dynatrace detects abnormal traffic drops within your application.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/MobileAppCrashRateCrashRateIncrease:MobileAppCrashRateCrashRateIncrease": {
            "properties": {
                "crashRateIncreaseAuto": {
                    "$ref": "#/types/dynatrace:index/MobileAppCrashRateCrashRateIncreaseCrashRateIncreaseAuto:MobileAppCrashRateCrashRateIncreaseCrashRateIncreaseAuto",
                    "description": "Alert crash rate increases when auto-detected baseline is exceeded by a certain number of users\n"
                },
                "crashRateIncreaseFixed": {
                    "$ref": "#/types/dynatrace:index/MobileAppCrashRateCrashRateIncreaseCrashRateIncreaseFixed:MobileAppCrashRateCrashRateIncreaseCrashRateIncreaseFixed",
                    "description": "Alert crash rate increases when the defined threshold is exceeded by a certain number of users\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Possible Values: `Auto`, `Fixed`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/MobileAppCrashRateCrashRateIncreaseCrashRateIncreaseAuto:MobileAppCrashRateCrashRateIncreaseCrashRateIncreaseAuto": {
            "properties": {
                "baselineViolationPercentage": {
                    "type": "number",
                    "description": "Dynatrace learns the typical crash rate for all app versions and will create an alert if the baseline is violated by more than a specified threshold. Analysis happens based on a sliding window of 10 minutes.\n"
                },
                "concurrentUsers": {
                    "type": "number",
                    "description": "Amount of users\n"
                },
                "sensitivity": {
                    "type": "string",
                    "description": "Possible Values: `Low`, `Medium`, `High`\n"
                }
            },
            "type": "object",
            "required": [
                "baselineViolationPercentage",
                "concurrentUsers",
                "sensitivity"
            ]
        },
        "dynatrace:index/MobileAppCrashRateCrashRateIncreaseCrashRateIncreaseFixed:MobileAppCrashRateCrashRateIncreaseCrashRateIncreaseFixed": {
            "properties": {
                "absoluteCrashRate": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                },
                "concurrentUsers": {
                    "type": "integer",
                    "description": "Amount of users\n"
                }
            },
            "type": "object",
            "required": [
                "absoluteCrashRate",
                "concurrentUsers"
            ]
        },
        "dynatrace:index/MobileAppEnablementRum:MobileAppEnablementRum": {
            "properties": {
                "costAndTrafficControl": {
                    "type": "integer",
                    "description": "Percentage of user sessions captured and analyzed. By default, Dynatrace captures all user actions and user sessions for analysis. This approach ensures complete insight into your application’s performance and customer experience. You can optionally reduce the granularity of user-action and user-session analysis by capturing a lower percentage of user sessions. While this approach can reduce monitoring costs, it also results in lower visibility into how your customers are using your applications. For example, a setting of 10% results in Dynatrace analyzing only every tenth user session.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "costAndTrafficControl",
                "enabled"
            ]
        },
        "dynatrace:index/MobileAppEnablementSessionReplay:MobileAppEnablementSessionReplay": {
            "properties": {
                "onCrash": {
                    "type": "boolean",
                    "description": "Before enabling, Dynatrace checks your system against the [prerequisites for Session Replay](https://dt-url.net/t23s0ppi).\n"
                }
            },
            "type": "object",
            "required": [
                "onCrash"
            ]
        },
        "dynatrace:index/MobileAppKeyPerformanceThresholds:MobileAppKeyPerformanceThresholds": {
            "properties": {
                "frustratingThresholdSeconds": {
                    "type": "number",
                    "description": "If the action duration is above this value, the Apdex is considered to be **Frustrating**.\n"
                },
                "tolerableThresholdSeconds": {
                    "type": "number",
                    "description": "If the action duration is below this value, the Apdex is considered to be **Satisfactory**.\n"
                }
            },
            "type": "object",
            "required": [
                "frustratingThresholdSeconds",
                "tolerableThresholdSeconds"
            ]
        },
        "dynatrace:index/MobileAppRequestErrorsErrorRules:MobileAppRequestErrorsErrorRules": {
            "properties": {
                "errorRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/MobileAppRequestErrorsErrorRulesErrorRule:MobileAppRequestErrorsErrorRulesErrorRule"
                    }
                }
            },
            "type": "object",
            "required": [
                "errorRules"
            ]
        },
        "dynatrace:index/MobileAppRequestErrorsErrorRulesErrorRule:MobileAppRequestErrorsErrorRulesErrorRule": {
            "properties": {
                "errorCodes": {
                    "type": "string",
                    "description": "Exclude response codes\n"
                }
            },
            "type": "object",
            "required": [
                "errorCodes"
            ]
        },
        "dynatrace:index/MobileApplicationApdex:MobileApplicationApdex": {
            "properties": {
                "frustrated": {
                    "type": "integer",
                    "description": "Apdex **frustrated** threshold, in milliseconds: a duration greater than or equal to this value is considered frustrated\n"
                },
                "frustratedOnError": {
                    "type": "boolean",
                    "description": "Apdex error condition: if `true` the user session is considered frustrated when an error is reported\n"
                },
                "tolerable": {
                    "type": "integer",
                    "description": "Apdex **tolerable** threshold, in milliseconds: a duration greater than or equal to this value is considered tolerable\n"
                }
            },
            "type": "object",
            "required": [
                "frustrated",
                "tolerable"
            ]
        },
        "dynatrace:index/MobileApplicationProperties:MobileApplicationProperties": {
            "properties": {
                "apiValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/MobileApplicationPropertiesApiValue:MobileApplicationPropertiesApiValue"
                    },
                    "description": "A User Action / Session Property based on a value reported by the API\n"
                },
                "requestAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/MobileApplicationPropertiesRequestAttribute:MobileApplicationPropertiesRequestAttribute"
                    },
                    "description": "A User Action / Session Property based on a Server Side Request Attribute\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/MobileApplicationPropertiesApiValue:MobileApplicationPropertiesApiValue": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation type of the property. It defines how multiple values of the property are aggregated. Possible values are `SUM`, `MIN`, `MAX`, `FIRST` and `LAST`\n"
                },
                "cleanupRule": {
                    "type": "string",
                    "description": "The cleanup rule of the property. Defines how to extract the data you need from a string value. Specify the [regular expression](https://dt-url.net/k9e0iaq) for the data you need there\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the property\n"
                },
                "key": {
                    "type": "string",
                    "description": "The unique key of the mobile session or user action property\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the reported value\n"
                },
                "storeAsSessionProperty": {
                    "type": "boolean",
                    "description": "If `true`, the property is stored as a session property\n"
                },
                "storeAsUserActionProperty": {
                    "type": "boolean",
                    "description": "If `true`, the property is stored as a user action property\n"
                },
                "type": {
                    "type": "string",
                    "description": "The data type of the property. Possible values are `DOUBLE`, `LONG` and `STRING`\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "type"
            ]
        },
        "dynatrace:index/MobileApplicationPropertiesRequestAttribute:MobileApplicationPropertiesRequestAttribute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation type of the property. It defines how multiple values of the property are aggregated. Possible values are `SUM`, `MIN`, `MAX`, `FIRST` and `LAST`\n"
                },
                "cleanupRule": {
                    "type": "string",
                    "description": "The cleanup rule of the property. Defines how to extract the data you need from a string value. Specify the [regular expression](https://dt-url.net/k9e0iaq) for the data you need there\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the property\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the request attribute\n"
                },
                "key": {
                    "type": "string",
                    "description": "The unique key of the mobile session or user action property\n"
                },
                "storeAsSessionProperty": {
                    "type": "boolean",
                    "description": "If `true`, the property is stored as a session property\n"
                },
                "storeAsUserActionProperty": {
                    "type": "boolean",
                    "description": "If `true`, the property is stored as a user action property\n"
                },
                "type": {
                    "type": "string",
                    "description": "The data type of the property. Possible values are `DOUBLE`, `LONG` and `STRING`\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "key",
                "type"
            ]
        },
        "dynatrace:index/NetworkTrafficExcludeIp:NetworkTrafficExcludeIp": {
            "properties": {
                "ipAddressForms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/NetworkTrafficExcludeIpIpAddressForm:NetworkTrafficExcludeIpIpAddressForm"
                    }
                }
            },
            "type": "object",
            "required": [
                "ipAddressForms"
            ]
        },
        "dynatrace:index/NetworkTrafficExcludeIpIpAddressForm:NetworkTrafficExcludeIpIpAddressForm": {
            "properties": {
                "ipAddress": {
                    "type": "string",
                    "description": "IP address\n"
                }
            },
            "type": "object",
            "required": [
                "ipAddress"
            ]
        },
        "dynatrace:index/NetworkTrafficExcludeNic:NetworkTrafficExcludeNic": {
            "properties": {
                "nicForms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/NetworkTrafficExcludeNicNicForm:NetworkTrafficExcludeNicNicForm"
                    }
                }
            },
            "type": "object",
            "required": [
                "nicForms"
            ]
        },
        "dynatrace:index/NetworkTrafficExcludeNicNicForm:NetworkTrafficExcludeNicNicForm": {
            "properties": {
                "interface": {
                    "type": "string",
                    "description": "Network interface\n"
                },
                "os": {
                    "type": "string",
                    "description": "Possible Values: `OS_TYPE_AIX`, `OS_TYPE_DARWIN`, `OS_TYPE_HPUX`, `OS_TYPE_LINUX`, `OS_TYPE_SOLARIS`, `OS_TYPE_UNKNOWN`, `OS_TYPE_WINDOWS`, `OS_TYPE_ZOS`\n"
                }
            },
            "type": "object",
            "required": [
                "interface",
                "os"
            ]
        },
        "dynatrace:index/NotificationAnsibleTower:NotificationAnsibleTower": {
            "properties": {
                "acceptAnyCertificate": {
                    "type": "boolean",
                    "description": "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates\n"
                },
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "alertingProfile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "customMessage": {
                    "type": "string",
                    "description": "The custom message of the notification.   This message will be displayed in the extra variables **Message** field of your job template.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "jobTemplateId": {
                    "type": "integer",
                    "description": "The ID of the target Ansible Tower job template\n"
                },
                "jobTemplateUrl": {
                    "type": "string",
                    "description": "The URL of the target Ansible Tower job template\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password for the Ansible Tower account\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username of the Ansible Tower account\n"
                }
            },
            "type": "object",
            "required": [
                "acceptAnyCertificate",
                "active",
                "alertingProfile",
                "customMessage",
                "jobTemplateId",
                "jobTemplateUrl",
                "name",
                "username"
            ]
        },
        "dynatrace:index/NotificationConfig:NotificationConfig": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "alertingProfile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "type": {
                    "type": "string",
                    "description": "Defines the actual set of fields depending on the value. See one of the following objects:  * `EMAIL` \u003e EmailNotificationConfig  * `PAGER_DUTY` \u003e PagerDutyNotificationConfig  * `WEBHOOK` \u003e WebHookNotificationConfig  * `SLACK` \u003e SlackNotificationConfig  * `HIPCHAT` \u003e HipChatNotificationConfig  * `VICTOROPS` \u003e VictorOpsNotificationConfig  * `SERVICE_NOW` \u003e ServiceNowNotificationConfig  * `XMATTERS` \u003e XMattersNotificationConfig  * `ANSIBLETOWER` \u003e AnsibleTowerNotificationConfig  * `OPS_GENIE` \u003e OpsGenieNotificationConfig  * `JIRA` \u003e JiraNotificationConfig  * `TRELLO` \u003e TrelloNotificationConfig\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "active",
                "alertingProfile",
                "name",
                "type"
            ]
        },
        "dynatrace:index/NotificationEmail:NotificationEmail": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "alertingProfile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "bccReceivers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of the email BCC-recipients\n"
                },
                "body": {
                    "type": "string",
                    "description": "The template of the email notification.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "ccReceivers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of the email CC-recipients\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "receivers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of the email recipients\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email notifications\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "active",
                "alertingProfile",
                "body",
                "name",
                "subject"
            ]
        },
        "dynatrace:index/NotificationJira:NotificationJira": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "alertingProfile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the Jira issue to be created by this notification.   You can use same placeholders as in issue summary\n"
                },
                "issueType": {
                    "type": "string",
                    "description": "The type of the Jira issue to be created by this notification\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password for the Jira profile\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "The project key of the Jira issue to be created by this notification\n"
                },
                "summary": {
                    "type": "string",
                    "description": "The summary of the Jira issue to be created by this notification.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the Jira API endpoint\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username of the Jira profile\n"
                }
            },
            "type": "object",
            "required": [
                "active",
                "alertingProfile",
                "description",
                "issueType",
                "name",
                "projectKey",
                "summary",
                "url",
                "username"
            ]
        },
        "dynatrace:index/NotificationOpsGenie:NotificationOpsGenie": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "alertingProfile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "The API key to access OpsGenie\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The region domain of the OpsGenie\n"
                },
                "message": {
                    "type": "string",
                    "description": "The content of the message.  You can use the following placeholders:  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "active",
                "alertingProfile",
                "domain",
                "message",
                "name"
            ]
        },
        "dynatrace:index/NotificationPagerDuty:NotificationPagerDuty": {
            "properties": {
                "account": {
                    "type": "string",
                    "description": "The name of the PagerDuty account\n"
                },
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "alertingProfile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "serviceApiKey": {
                    "type": "string",
                    "description": "The API key to access PagerDuty\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The name of the service\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "account",
                "active",
                "alertingProfile",
                "name",
                "serviceName"
            ]
        },
        "dynatrace:index/NotificationServiceNow:NotificationServiceNow": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "alertingProfile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "instanceName": {
                    "type": "string",
                    "description": "The ServiceNow instance identifier. It refers to the first part of your own ServiceNow URL.   This field is mutually exclusive with the **url** field. You can only use one of them\n"
                },
                "message": {
                    "type": "string",
                    "description": "The content of the ServiceNow description.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "password": {
                    "type": "string",
                    "description": "The username to the ServiceNow account\n"
                },
                "sendEvents": {
                    "type": "boolean",
                    "description": "Send events into ServiceNow ITOM (`true`)\n"
                },
                "sendIncidents": {
                    "type": "boolean",
                    "description": "Send incidents into ServiceNow ITSM (`true`)\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the on-premise ServiceNow installation.   This field is mutually exclusive with the **instanceName** field. You can only use one of them\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username of the ServiceNow account.   Make sure that your user account has the `rest_service`, `web_request_admin`, and `x_dynat_ruxit.Integration` roles\n"
                }
            },
            "type": "object",
            "required": [
                "active",
                "alertingProfile",
                "message",
                "name",
                "sendEvents",
                "sendIncidents",
                "username"
            ]
        },
        "dynatrace:index/NotificationSlack:NotificationSlack": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "alertingProfile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "channel": {
                    "type": "string",
                    "description": "The channel (for example, `#general`) or the user (for example, `@john.smith`) to send the message to\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "title": {
                    "type": "string",
                    "description": "The content of the message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the Slack WebHook.  This is confidential information, therefore GET requests return this field with the `null` value, and it is optional for PUT requests\n"
                }
            },
            "type": "object",
            "required": [
                "active",
                "alertingProfile",
                "channel",
                "name",
                "title"
            ]
        },
        "dynatrace:index/NotificationTrello:NotificationTrello": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "alertingProfile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "applicationKey": {
                    "type": "string",
                    "description": "The application key for the Trello account\n"
                },
                "authorizationToken": {
                    "type": "string",
                    "description": "The application token for the Trello account\n"
                },
                "boardId": {
                    "type": "string",
                    "description": "The Trello board to which the card should be assigned\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the Trello card.   You can use same placeholders as in card text\n"
                },
                "listId": {
                    "type": "string",
                    "description": "The Trello list to which the card should be assigned\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "resolvedListId": {
                    "type": "string",
                    "description": "The Trello list to which the card of the resolved problem should be assigned\n"
                },
                "text": {
                    "type": "string",
                    "description": "The text of the generated Trello card.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "active",
                "alertingProfile",
                "applicationKey",
                "boardId",
                "description",
                "listId",
                "name",
                "resolvedListId",
                "text"
            ]
        },
        "dynatrace:index/NotificationVictorOps:NotificationVictorOps": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "alertingProfile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "The API key for the target VictorOps account\n"
                },
                "message": {
                    "type": "string",
                    "description": "The content of the message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "routingKey": {
                    "type": "string",
                    "description": "The routing key, defining the group to be notified\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "active",
                "alertingProfile",
                "message",
                "name",
                "routingKey"
            ]
        },
        "dynatrace:index/NotificationWebHook:NotificationWebHook": {
            "properties": {
                "acceptAnyCertificate": {
                    "type": "boolean",
                    "description": "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates\n"
                },
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "alertingProfile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/NotificationWebHookHeader:NotificationWebHookHeader"
                    },
                    "description": "A list of the additional HTTP headers\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "notifyEventMerges": {
                    "type": "boolean",
                    "description": "Call webhook if new events merge into existing problems\n"
                },
                "payload": {
                    "type": "string",
                    "description": "The content of the notification message.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the WebHook endpoint\n"
                }
            },
            "type": "object",
            "required": [
                "acceptAnyCertificate",
                "active",
                "alertingProfile",
                "name",
                "payload",
                "url"
            ]
        },
        "dynatrace:index/NotificationWebHookHeader:NotificationWebHookHeader": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the HTTP header. May contain an empty value.   Required when creating a new notification.  For the **Authorization** header, GET requests return the `null` value.  If you want update a notification configuration with an **Authorization** header which you want to remain intact, set the **Authorization** header with the `null` value\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "dynatrace:index/NotificationXmatters:NotificationXmatters": {
            "properties": {
                "acceptAnyCertificate": {
                    "type": "boolean",
                    "description": "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates\n"
                },
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "alertingProfile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/NotificationXmattersHeader:NotificationXmattersHeader"
                    },
                    "description": "A list of the additional HTTP headers\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "payload": {
                    "type": "string",
                    "description": "The content of the notification message.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the xMatters WebHook\n"
                }
            },
            "type": "object",
            "required": [
                "acceptAnyCertificate",
                "active",
                "alertingProfile",
                "name",
                "payload",
                "url"
            ]
        },
        "dynatrace:index/NotificationXmattersHeader:NotificationXmattersHeader": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the HTTP header. May contain an empty value.   Required when creating a new notification.  For the **Authorization** header, GET requests return the `null` value.  If you want update a notification configuration with an **Authorization** header which you want to remain intact, set the **Authorization** header with the `null` value\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "dynatrace:index/OneagentUpdatesMaintenanceWindows:OneagentUpdatesMaintenanceWindows": {
            "properties": {
                "maintenanceWindows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/OneagentUpdatesMaintenanceWindowsMaintenanceWindow:OneagentUpdatesMaintenanceWindowsMaintenanceWindow"
                    }
                }
            },
            "type": "object",
            "required": [
                "maintenanceWindows"
            ]
        },
        "dynatrace:index/OneagentUpdatesMaintenanceWindowsMaintenanceWindow:OneagentUpdatesMaintenanceWindowsMaintenanceWindow": {
            "properties": {
                "maintenanceWindow": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "maintenanceWindow"
            ]
        },
        "dynatrace:index/OpentelemetryMetricsAdditionalAttributes:OpentelemetryMetricsAdditionalAttributes": {
            "properties": {
                "additionalAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/OpentelemetryMetricsAdditionalAttributesAdditionalAttribute:OpentelemetryMetricsAdditionalAttributesAdditionalAttribute"
                    }
                }
            },
            "type": "object",
            "required": [
                "additionalAttributes"
            ]
        },
        "dynatrace:index/OpentelemetryMetricsAdditionalAttributesAdditionalAttribute:OpentelemetryMetricsAdditionalAttributesAdditionalAttribute": {
            "properties": {
                "attributeKey": {
                    "type": "string",
                    "description": "Attribute key\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "attributeKey",
                "enabled"
            ]
        },
        "dynatrace:index/OpentelemetryMetricsToDropAttributes:OpentelemetryMetricsToDropAttributes": {
            "properties": {
                "toDropAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/OpentelemetryMetricsToDropAttributesToDropAttribute:OpentelemetryMetricsToDropAttributesToDropAttribute"
                    }
                }
            },
            "type": "object",
            "required": [
                "toDropAttributes"
            ]
        },
        "dynatrace:index/OpentelemetryMetricsToDropAttributesToDropAttribute:OpentelemetryMetricsToDropAttributesToDropAttribute": {
            "properties": {
                "attributeKey": {
                    "type": "string",
                    "description": "Attribute key\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "attributeKey",
                "enabled"
            ]
        },
        "dynatrace:index/OsServicesDetectionConditionsLinux:OsServicesDetectionConditionsLinux": {
            "properties": {
                "linuxDetectionConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/OsServicesDetectionConditionsLinuxLinuxDetectionCondition:OsServicesDetectionConditionsLinuxLinuxDetectionCondition"
                    }
                }
            },
            "type": "object",
            "required": [
                "linuxDetectionConditions"
            ]
        },
        "dynatrace:index/OsServicesDetectionConditionsLinuxLinuxDetectionCondition:OsServicesDetectionConditionsLinuxLinuxDetectionCondition": {
            "properties": {
                "condition": {
                    "type": "string",
                    "description": "This string has to match a required format. See [OS services monitoring](https://dt-url.net/vl03xzk).\n"
                },
                "hostMetadataCondition": {
                    "$ref": "#/types/dynatrace:index/OsServicesDetectionConditionsLinuxLinuxDetectionConditionHostMetadataCondition:OsServicesDetectionConditionsLinuxLinuxDetectionConditionHostMetadataCondition"
                },
                "property": {
                    "type": "string"
                },
                "ruleType": {
                    "type": "string"
                },
                "startupCondition": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/OsServicesDetectionConditionsLinuxLinuxDetectionConditionHostMetadataCondition:OsServicesDetectionConditionsLinuxLinuxDetectionConditionHostMetadataCondition": {
            "properties": {
                "metadataCondition": {
                    "type": "string",
                    "description": "This string has to match a required format. See [OS services monitoring](https://dt-url.net/vl03xzk).\n"
                },
                "metadataKey": {
                    "type": "string",
                    "description": "Type 'dt.' for key hints.\n"
                }
            },
            "type": "object",
            "required": [
                "metadataCondition",
                "metadataKey"
            ]
        },
        "dynatrace:index/OsServicesDetectionConditionsWindows:OsServicesDetectionConditionsWindows": {
            "properties": {
                "detectionConditionsWindows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/OsServicesDetectionConditionsWindowsDetectionConditionsWindow:OsServicesDetectionConditionsWindowsDetectionConditionsWindow"
                    }
                }
            },
            "type": "object",
            "required": [
                "detectionConditionsWindows"
            ]
        },
        "dynatrace:index/OsServicesDetectionConditionsWindowsDetectionConditionsWindow:OsServicesDetectionConditionsWindowsDetectionConditionsWindow": {
            "properties": {
                "condition": {
                    "type": "string",
                    "description": "This string has to match a required format. See [OS services monitoring](https://dt-url.net/vl03xzk).\n"
                },
                "hostMetadataCondition": {
                    "$ref": "#/types/dynatrace:index/OsServicesDetectionConditionsWindowsDetectionConditionsWindowHostMetadataCondition:OsServicesDetectionConditionsWindowsDetectionConditionsWindowHostMetadataCondition"
                },
                "property": {
                    "type": "string"
                },
                "ruleType": {
                    "type": "string"
                },
                "startupCondition": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/OsServicesDetectionConditionsWindowsDetectionConditionsWindowHostMetadataCondition:OsServicesDetectionConditionsWindowsDetectionConditionsWindowHostMetadataCondition": {
            "properties": {
                "metadataCondition": {
                    "type": "string",
                    "description": "This string has to match a required format. See [OS services monitoring](https://dt-url.net/vl03xzk).\n"
                },
                "metadataKey": {
                    "type": "string",
                    "description": "Type 'dt.' for key hints.\n"
                }
            },
            "type": "object",
            "required": [
                "metadataCondition",
                "metadataKey"
            ]
        },
        "dynatrace:index/OsServicesMetadata:OsServicesMetadata": {
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/OsServicesMetadataItem:OsServicesMetadataItem"
                    }
                }
            },
            "type": "object",
            "required": [
                "items"
            ]
        },
        "dynatrace:index/OsServicesMetadataItem:OsServicesMetadataItem": {
            "properties": {
                "metadataKey": {
                    "type": "string",
                    "description": "Type 'dt.' for key hints.\n"
                },
                "metadataValue": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "metadataKey",
                "metadataValue"
            ]
        },
        "dynatrace:index/OwnershipConfigOwnershipIdentifiers:OwnershipConfigOwnershipIdentifiers": {
            "properties": {
                "ownershipIdentifiers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/OwnershipConfigOwnershipIdentifiersOwnershipIdentifier:OwnershipConfigOwnershipIdentifiersOwnershipIdentifier"
                    }
                }
            },
            "type": "object",
            "required": [
                "ownershipIdentifiers"
            ]
        },
        "dynatrace:index/OwnershipConfigOwnershipIdentifiersOwnershipIdentifier:OwnershipConfigOwnershipIdentifiersOwnershipIdentifier": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key for ownership metadata and tags\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "key"
            ]
        },
        "dynatrace:index/OwnershipTeamsAdditionalInformation:OwnershipTeamsAdditionalInformation": {
            "properties": {
                "additionalInformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/OwnershipTeamsAdditionalInformationAdditionalInformation:OwnershipTeamsAdditionalInformationAdditionalInformation"
                    }
                }
            },
            "type": "object",
            "required": [
                "additionalInformations"
            ]
        },
        "dynatrace:index/OwnershipTeamsAdditionalInformationAdditionalInformation:OwnershipTeamsAdditionalInformationAdditionalInformation": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Name\n"
                },
                "url": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "value": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "dynatrace:index/OwnershipTeamsContactDetails:OwnershipTeamsContactDetails": {
            "properties": {
                "contactDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/OwnershipTeamsContactDetailsContactDetail:OwnershipTeamsContactDetailsContactDetail"
                    }
                }
            },
            "type": "object",
            "required": [
                "contactDetails"
            ]
        },
        "dynatrace:index/OwnershipTeamsContactDetailsContactDetail:OwnershipTeamsContactDetailsContactDetail": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "integrationType": {
                    "type": "string",
                    "description": "Possible Values: `EMAIL`, `JIRA`, `MS_TEAMS`, `SLACK`\n"
                },
                "jira": {
                    "$ref": "#/types/dynatrace:index/OwnershipTeamsContactDetailsContactDetailJira:OwnershipTeamsContactDetailsContactDetailJira",
                    "description": "no documentation available\n"
                },
                "msTeams": {
                    "type": "string",
                    "description": "Team\n"
                },
                "slackChannel": {
                    "type": "string",
                    "description": "Channel\n"
                },
                "url": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "integrationType"
            ]
        },
        "dynatrace:index/OwnershipTeamsContactDetailsContactDetailJira:OwnershipTeamsContactDetailsContactDetailJira": {
            "properties": {
                "defaultAssignee": {
                    "type": "string",
                    "description": "Default Assignee\n"
                },
                "project": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "defaultAssignee",
                "project"
            ]
        },
        "dynatrace:index/OwnershipTeamsLinks:OwnershipTeamsLinks": {
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/OwnershipTeamsLinksLink:OwnershipTeamsLinksLink"
                    }
                }
            },
            "type": "object",
            "required": [
                "links"
            ]
        },
        "dynatrace:index/OwnershipTeamsLinksLink:OwnershipTeamsLinksLink": {
            "properties": {
                "linkType": {
                    "type": "string",
                    "description": "Possible Values: `DASHBOARD`, `DOCUMENTATION`, `HEALTH_APP`, `REPOSITORY`, `RUNBOOK`, `URL`, `WIKI`\n"
                },
                "url": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "linkType",
                "url"
            ]
        },
        "dynatrace:index/OwnershipTeamsResponsibilities:OwnershipTeamsResponsibilities": {
            "properties": {
                "development": {
                    "type": "boolean",
                    "description": "Responsible for developing and maintaining high quality software. Development teams are responsible for making code changes to address performance regressions, errors, or security vulnerabilities.\n"
                },
                "infrastructure": {
                    "type": "boolean",
                    "description": "Responsible for the administration, management, and support of the IT infrastructure including physical servers, virtualization, and cloud. Teams with infrastructure responsibility are responsible for addressing hardware issues, resource limits, and operating system vulnerabilities.\n"
                },
                "lineOfBusiness": {
                    "type": "boolean",
                    "description": "Responsible for ensuring that applications in development align with business needs and meet the usability requirements of users, stakeholders, customers, and external partners. Teams with line of business responsibility are responsible for understanding the customer experience and how it affects business goals.\n"
                },
                "operations": {
                    "type": "boolean",
                    "description": "Responsible for deploying and managing software, with a focus on high availability and performance. Teams with operations responsibilities needs to understand the impact, priority, and team responsible for addressing problems detected by Dynatrace.\n"
                },
                "security": {
                    "type": "boolean",
                    "description": "Responsible for the security posture of the organization. Teams with security responsibility must understand the impact, priority, and team responsible for addressing security vulnerabilities.\n"
                }
            },
            "type": "object",
            "required": [
                "development",
                "infrastructure",
                "lineOfBusiness",
                "operations",
                "security"
            ]
        },
        "dynatrace:index/OwnershipTeamsSupplementaryIdentifiers:OwnershipTeamsSupplementaryIdentifiers": {
            "properties": {
                "supplementaryIdentifiers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/OwnershipTeamsSupplementaryIdentifiersSupplementaryIdentifier:OwnershipTeamsSupplementaryIdentifiersSupplementaryIdentifier"
                    }
                }
            },
            "type": "object",
            "required": [
                "supplementaryIdentifiers"
            ]
        },
        "dynatrace:index/OwnershipTeamsSupplementaryIdentifiersSupplementaryIdentifier:OwnershipTeamsSupplementaryIdentifiersSupplementaryIdentifier": {
            "properties": {
                "supplementaryIdentifier": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "supplementaryIdentifier"
            ]
        },
        "dynatrace:index/PgAnomaliesAvailability:PgAnomaliesAvailability": {
            "properties": {
                "method": {
                    "type": "string",
                    "description": "How to monitor the availability of the process group:  * `PROCESS_IMPACT`: Alert if any process of the group becomes unavailable.  * `MINIMUM_THRESHOLD`: Alert if the number of active processes in the group falls below the specified threshold.  * `OFF`: Availability monitoring is disabled.\n"
                },
                "minimumThreshold": {
                    "type": "integer",
                    "description": "Alert if the number of active processes in the group is lower than this value.\n"
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "dynatrace:index/ProcessAvailabilityMetadata:ProcessAvailabilityMetadata": {
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessAvailabilityMetadataItem:ProcessAvailabilityMetadataItem"
                    }
                }
            },
            "type": "object",
            "required": [
                "items"
            ]
        },
        "dynatrace:index/ProcessAvailabilityMetadataItem:ProcessAvailabilityMetadataItem": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "dynatrace:index/ProcessAvailabilityRules:ProcessAvailabilityRules": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessAvailabilityRulesRule:ProcessAvailabilityRulesRule"
                    }
                }
            },
            "type": "object",
            "required": [
                "rules"
            ]
        },
        "dynatrace:index/ProcessAvailabilityRulesRule:ProcessAvailabilityRulesRule": {
            "properties": {
                "condition": {
                    "type": "string"
                },
                "hostMetadataCondition": {
                    "$ref": "#/types/dynatrace:index/ProcessAvailabilityRulesRuleHostMetadataCondition:ProcessAvailabilityRulesRuleHostMetadataCondition"
                },
                "property": {
                    "type": "string"
                },
                "ruleType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ProcessAvailabilityRulesRuleHostMetadataCondition:ProcessAvailabilityRulesRuleHostMetadataCondition": {
            "properties": {
                "metadataCondition": {
                    "type": "string"
                },
                "metadataKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metadataCondition",
                "metadataKey"
            ]
        },
        "dynatrace:index/ProcessGroupDetectionGroupExtraction:ProcessGroupDetectionGroupExtraction": {
            "properties": {
                "delimiter": {
                    "$ref": "#/types/dynatrace:index/ProcessGroupDetectionGroupExtractionDelimiter:ProcessGroupDetectionGroupExtractionDelimiter",
                    "description": "Optionally delimit this property between *From* and *To*.\n"
                },
                "property": {
                    "type": "string",
                    "description": "Possible values: `DOTNET_COMMAND`, `DOTNET_COMMAND_PATH`, `ASP_NET_CORE_APPLICATION_PATH`, `AWS_ECR_ACCOUNT_ID`, `AWS_ECR_REGION`, `AWS_ECS_CLUSTER`, `AWS_ECS_CONTAINERNAME`, `AWS_ECS_FAMILY`, `AWS_ECS_REVISION`, `AWS_LAMBDA_FUNCTION_NAME`, `AWS_REGION`, `APACHE_SPARK_MASTER_IP_ADDRESS`, `APACHE_CONFIG_PATH`, `CATALINA_BASE`, `CATALINA_HOME`, `CLOUD_FOUNDRY_APP_NAME`, `CLOUD_FOUNDRY_APPLICATION_ID`, `CLOUD_FOUNDRY_INSTANCE_INDEX`, `CLOUD_FOUNDRY_SPACE_NAME`, `CLOUD_FOUNDRY_SPACE_ID`, `COLDFUSION_JVM_CONFIG_FILE`, `SERVICE_NAME`, `COMMAND_LINE_ARGS`, `CONTAINER_ID`, `CONTAINER_IMAGE_VERSION`, `CONTAINER_NAME`, `DECLARATIVE_ID`, `CONTAINER_IMAGE_NAME`, `RUXIT_CLUSTER_ID`, `RUXIT_NODE_ID`, `EXE_NAME`, `EXE_PATH`, `ELASTIC_SEARCH_CLUSTER_NAME`, `ELASTIC_SEARCH_NODE_NAME`, `EQUINOX_CONFIG_PATH`, `GLASSFISH_DOMAIN_NAME`, `GLASSFISH_INSTANCE_NAME`, `PG_ID_CALC_INPUT_KEY_LINKAGE`, `GAE_INSTANCE`, `GAE_SERVICE`, `GOOGLE_CLOUD_PROJECT`, `HYBRIS_BIN_DIR`, `HYBRIS_CONFIG_DIR`, `HYBRIS_DATA_DIR`, `IBM_CICS_REGION`, `IBM_CICS_IMS_APPLID`, `IBM_CICS_IMS_JOBNAME`, `IBM_CTG_NAME`, `IBM_IMS_CONNECT`, `IBM_IMS_CONTROL`, `IBM_IMS_MPR`, `IBM_IMS_SOAP_GW_NAME`, `IIB_BROKER_NAME`, `IIB_EXECUTION_GROUP_NAME`, `IIS_APP_POOL`, `IIS_ROLE_NAME`, `JBOSS_HOME`, `JBOSS_MODE`, `JBOSS_SERVER_NAME`, `JAVA_JAR_FILE`, `JAVA_JAR_PATH`, `JAVA_MAIN_CLASS`, `KUBERNETES_BASEPODNAME`, `KUBERNETES_CONTAINERNAME`, `KUBERNETES_FULLPODNAME`, `KUBERNETES_NAMESPACE`, `KUBERNETES_PODUID`, `MSSQL_INSTANCE_NAME`, `NODEJS_APP_NAME`, `NODEJS_APP_BASE_DIR`, `NODEJS_SCRIPT_NAME`, `ORACLE_SID`, `PHP_CLI_SCRIPT_PATH`, `PHP_CLI_WORKING_DIR`, `SOFTWAREAG_INSTALL_ROOT`, `SOFTWAREAG_PRODUCTPROPNAME`, `SPRINGBOOT_APP_NAME`, `SPRINGBOOT_PROFILE_NAME`, `SPRINGBOOT_STARTUP_CLASS`, `TIBCO_BUSINESSWORKS_CE_APP_NAME`, `TIBCO_BUSINESSWORKS_CE_VERSION`, `TIBCO_BUSINESSWORKS_APP_NODE_NAME`, `TIBCO_BUSINESSWORKS_APP_SPACE_NAME`, `TIBCO_BUSINESSWORKS_DOMAIN_NAME`, `TIPCO_BUSINESSWORKS_PROPERTY_FILE`, `TIPCO_BUSINESSWORKS_PROPERTY_FILE_PATH`, `TIBCO_BUSINESSWORKS_HOME`, `VARNISH_INSTANCE_NAME`, `WEBLOGIC_NAME`, `WEBLOGIC_CLUSTER_NAME`, `WEBLOGIC_DOMAIN_NAME`, `WEBLOGIC_HOME`, `WEBSPHERE_LIBERTY_SERVER_NAME`, `WEBSPHERE_CELL_NAME`, `WEBSPHERE_CLUSTER_NAME`, `WEBSPHERE_NODE_NAME`, `WEBSPHERE_SERVER_NAME`\n"
                },
                "standaloneRule": {
                    "type": "boolean",
                    "description": "If this option is selected, the default Dynatrace behavior is disabled for these detected processes. Only this rule is used to separate the process group.\n"
                }
            },
            "type": "object",
            "required": [
                "delimiter",
                "property"
            ]
        },
        "dynatrace:index/ProcessGroupDetectionGroupExtractionDelimiter:ProcessGroupDetectionGroupExtractionDelimiter": {
            "properties": {
                "from": {
                    "type": "string",
                    "description": "Delimit from\n"
                },
                "removeIds": {
                    "type": "boolean",
                    "description": "(e.g. versions, hex, dates, and build numbers)\n"
                },
                "to": {
                    "type": "string",
                    "description": "Delimit to\n"
                }
            },
            "type": "object",
            "required": [
                "removeIds"
            ]
        },
        "dynatrace:index/ProcessGroupDetectionInstanceExtraction:ProcessGroupDetectionInstanceExtraction": {
            "properties": {
                "delimiter": {
                    "$ref": "#/types/dynatrace:index/ProcessGroupDetectionInstanceExtractionDelimiter:ProcessGroupDetectionInstanceExtractionDelimiter",
                    "description": "Optionally delimit this property between *From* and *To*.\n"
                },
                "property": {
                    "type": "string",
                    "description": "Possible values: `DOTNET_COMMAND`, `DOTNET_COMMAND_PATH`, `ASP_NET_CORE_APPLICATION_PATH`, `AWS_ECR_ACCOUNT_ID`, `AWS_ECR_REGION`, `AWS_ECS_CLUSTER`, `AWS_ECS_CONTAINERNAME`, `AWS_ECS_FAMILY`, `AWS_ECS_REVISION`, `AWS_LAMBDA_FUNCTION_NAME`, `AWS_REGION`, `APACHE_SPARK_MASTER_IP_ADDRESS`, `APACHE_CONFIG_PATH`, `CATALINA_BASE`, `CATALINA_HOME`, `CLOUD_FOUNDRY_APP_NAME`, `CLOUD_FOUNDRY_APPLICATION_ID`, `CLOUD_FOUNDRY_INSTANCE_INDEX`, `CLOUD_FOUNDRY_SPACE_NAME`, `CLOUD_FOUNDRY_SPACE_ID`, `COLDFUSION_JVM_CONFIG_FILE`, `SERVICE_NAME`, `COMMAND_LINE_ARGS`, `CONTAINER_ID`, `CONTAINER_IMAGE_VERSION`, `CONTAINER_NAME`, `DECLARATIVE_ID`, `CONTAINER_IMAGE_NAME`, `RUXIT_CLUSTER_ID`, `RUXIT_NODE_ID`, `EXE_NAME`, `EXE_PATH`, `ELASTIC_SEARCH_CLUSTER_NAME`, `ELASTIC_SEARCH_NODE_NAME`, `EQUINOX_CONFIG_PATH`, `GLASSFISH_DOMAIN_NAME`, `GLASSFISH_INSTANCE_NAME`, `PG_ID_CALC_INPUT_KEY_LINKAGE`, `GAE_INSTANCE`, `GAE_SERVICE`, `GOOGLE_CLOUD_PROJECT`, `HYBRIS_BIN_DIR`, `HYBRIS_CONFIG_DIR`, `HYBRIS_DATA_DIR`, `IBM_CICS_REGION`, `IBM_CICS_IMS_APPLID`, `IBM_CICS_IMS_JOBNAME`, `IBM_CTG_NAME`, `IBM_IMS_CONNECT`, `IBM_IMS_CONTROL`, `IBM_IMS_MPR`, `IBM_IMS_SOAP_GW_NAME`, `IIB_BROKER_NAME`, `IIB_EXECUTION_GROUP_NAME`, `IIS_APP_POOL`, `IIS_ROLE_NAME`, `JBOSS_HOME`, `JBOSS_MODE`, `JBOSS_SERVER_NAME`, `JAVA_JAR_FILE`, `JAVA_JAR_PATH`, `JAVA_MAIN_CLASS`, `KUBERNETES_BASEPODNAME`, `KUBERNETES_CONTAINERNAME`, `KUBERNETES_FULLPODNAME`, `KUBERNETES_NAMESPACE`, `KUBERNETES_PODUID`, `MSSQL_INSTANCE_NAME`, `NODEJS_APP_NAME`, `NODEJS_APP_BASE_DIR`, `NODEJS_SCRIPT_NAME`, `ORACLE_SID`, `PHP_CLI_SCRIPT_PATH`, `PHP_CLI_WORKING_DIR`, `SOFTWAREAG_INSTALL_ROOT`, `SOFTWAREAG_PRODUCTPROPNAME`, `SPRINGBOOT_APP_NAME`, `SPRINGBOOT_PROFILE_NAME`, `SPRINGBOOT_STARTUP_CLASS`, `TIBCO_BUSINESSWORKS_CE_APP_NAME`, `TIBCO_BUSINESSWORKS_CE_VERSION`, `TIBCO_BUSINESSWORKS_APP_NODE_NAME`, `TIBCO_BUSINESSWORKS_APP_SPACE_NAME`, `TIBCO_BUSINESSWORKS_DOMAIN_NAME`, `TIPCO_BUSINESSWORKS_PROPERTY_FILE`, `TIPCO_BUSINESSWORKS_PROPERTY_FILE_PATH`, `TIBCO_BUSINESSWORKS_HOME`, `VARNISH_INSTANCE_NAME`, `WEBLOGIC_NAME`, `WEBLOGIC_CLUSTER_NAME`, `WEBLOGIC_DOMAIN_NAME`, `WEBLOGIC_HOME`, `WEBSPHERE_LIBERTY_SERVER_NAME`, `WEBSPHERE_CELL_NAME`, `WEBSPHERE_CLUSTER_NAME`, `WEBSPHERE_NODE_NAME`, `WEBSPHERE_SERVER_NAME`\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ProcessGroupDetectionInstanceExtractionDelimiter:ProcessGroupDetectionInstanceExtractionDelimiter": {
            "properties": {
                "from": {
                    "type": "string",
                    "description": "Delimit from\n"
                },
                "removeIds": {
                    "type": "boolean",
                    "description": "(e.g. versions, hex, dates, and build numbers)\n"
                },
                "to": {
                    "type": "string",
                    "description": "Delimit to\n"
                }
            },
            "type": "object",
            "required": [
                "removeIds"
            ]
        },
        "dynatrace:index/ProcessGroupDetectionProcessDetection:ProcessGroupDetectionProcessDetection": {
            "properties": {
                "containedString": {
                    "type": "string",
                    "description": "The substring to be contained in the value `property` refers to. Case Sensitive\n"
                },
                "property": {
                    "type": "string",
                    "description": "Possible values: `DOTNET_COMMAND`, `DOTNET_COMMAND_PATH`, `ASP_NET_CORE_APPLICATION_PATH`, `AWS_ECR_ACCOUNT_ID`, `AWS_ECR_REGION`, `AWS_ECS_CLUSTER`, `AWS_ECS_CONTAINERNAME`, `AWS_ECS_FAMILY`, `AWS_ECS_REVISION`, `AWS_LAMBDA_FUNCTION_NAME`, `AWS_REGION`, `APACHE_SPARK_MASTER_IP_ADDRESS`, `APACHE_CONFIG_PATH`, `CATALINA_BASE`, `CATALINA_HOME`, `CLOUD_FOUNDRY_APP_NAME`, `CLOUD_FOUNDRY_APPLICATION_ID`, `CLOUD_FOUNDRY_INSTANCE_INDEX`, `CLOUD_FOUNDRY_SPACE_NAME`, `CLOUD_FOUNDRY_SPACE_ID`, `COLDFUSION_JVM_CONFIG_FILE`, `SERVICE_NAME`, `COMMAND_LINE_ARGS`, `CONTAINER_ID`, `CONTAINER_IMAGE_VERSION`, `CONTAINER_NAME`, `DECLARATIVE_ID`, `CONTAINER_IMAGE_NAME`, `RUXIT_CLUSTER_ID`, `RUXIT_NODE_ID`, `EXE_NAME`, `EXE_PATH`, `ELASTIC_SEARCH_CLUSTER_NAME`, `ELASTIC_SEARCH_NODE_NAME`, `EQUINOX_CONFIG_PATH`, `GLASSFISH_DOMAIN_NAME`, `GLASSFISH_INSTANCE_NAME`, `PG_ID_CALC_INPUT_KEY_LINKAGE`, `GAE_INSTANCE`, `GAE_SERVICE`, `GOOGLE_CLOUD_PROJECT`, `HYBRIS_BIN_DIR`, `HYBRIS_CONFIG_DIR`, `HYBRIS_DATA_DIR`, `IBM_CICS_REGION`, `IBM_CICS_IMS_APPLID`, `IBM_CICS_IMS_JOBNAME`, `IBM_CTG_NAME`, `IBM_IMS_CONNECT`, `IBM_IMS_CONTROL`, `IBM_IMS_MPR`, `IBM_IMS_SOAP_GW_NAME`, `IIB_BROKER_NAME`, `IIB_EXECUTION_GROUP_NAME`, `IIS_APP_POOL`, `IIS_ROLE_NAME`, `JBOSS_HOME`, `JBOSS_MODE`, `JBOSS_SERVER_NAME`, `JAVA_JAR_FILE`, `JAVA_JAR_PATH`, `JAVA_MAIN_CLASS`, `KUBERNETES_BASEPODNAME`, `KUBERNETES_CONTAINERNAME`, `KUBERNETES_FULLPODNAME`, `KUBERNETES_NAMESPACE`, `KUBERNETES_PODUID`, `MSSQL_INSTANCE_NAME`, `NODEJS_APP_NAME`, `NODEJS_APP_BASE_DIR`, `NODEJS_SCRIPT_NAME`, `ORACLE_SID`, `PHP_CLI_SCRIPT_PATH`, `PHP_CLI_WORKING_DIR`, `SOFTWAREAG_INSTALL_ROOT`, `SOFTWAREAG_PRODUCTPROPNAME`, `SPRINGBOOT_APP_NAME`, `SPRINGBOOT_PROFILE_NAME`, `SPRINGBOOT_STARTUP_CLASS`, `TIBCO_BUSINESSWORKS_CE_APP_NAME`, `TIBCO_BUSINESSWORKS_CE_VERSION`, `TIBCO_BUSINESSWORKS_APP_NODE_NAME`, `TIBCO_BUSINESSWORKS_APP_SPACE_NAME`, `TIBCO_BUSINESSWORKS_DOMAIN_NAME`, `TIPCO_BUSINESSWORKS_PROPERTY_FILE`, `TIPCO_BUSINESSWORKS_PROPERTY_FILE_PATH`, `TIBCO_BUSINESSWORKS_HOME`, `VARNISH_INSTANCE_NAME`, `WEBLOGIC_NAME`, `WEBLOGIC_CLUSTER_NAME`, `WEBLOGIC_DOMAIN_NAME`, `WEBLOGIC_HOME`, `WEBSPHERE_LIBERTY_SERVER_NAME`, `WEBSPHERE_CELL_NAME`, `WEBSPHERE_CLUSTER_NAME`, `WEBSPHERE_NODE_NAME`, `WEBSPHERE_SERVER_NAME`\n"
                },
                "restrictToProcessType": {
                    "type": "string",
                    "description": "Restrict this rule to specific process types. Note: Not all types can be detected at startup. Possible values: `PROCESS_TYPE_APACHE_HTTPD`, `PROCESS_TYPE_GLASSFISH`, `PROCESS_TYPE_GO`, `PROCESS_TYPE_IIS_APP_POOL`, `PROCESS_TYPE_JBOSS`, `PROCESS_TYPE_JAVA`, `PROCESS_TYPE_NGINX`, `PROCESS_TYPE_NODE_JS`, `PROCESS_TYPE_PHP`, `PROCESS_TYPE_TOMCAT`, `PROCESS_TYPE_WEBLOGIC`, `PROCESS_TYPE_WEBSPHERE`\n"
                }
            },
            "type": "object",
            "required": [
                "containedString",
                "property"
            ]
        },
        "dynatrace:index/ProcessMonitoringRuleCondition:ProcessMonitoringRuleCondition": {
            "properties": {
                "envVar": {
                    "type": "string",
                    "description": "supported only with OneAgent 1.167+\n"
                },
                "item": {
                    "type": "string",
                    "description": "Condition target\n"
                },
                "operator": {
                    "type": "string",
                    "description": "Condition operator\n"
                },
                "value": {
                    "type": "string",
                    "description": "Condition value\n"
                }
            },
            "type": "object",
            "required": [
                "item",
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingCondition:ProcessgroupNamingCondition": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionCondition:ProcessgroupNamingConditionCondition"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ProcessgroupNamingConditionCondition:ProcessgroupNamingConditionCondition": {
            "properties": {
                "applicationTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionApplicationTypeComparison:ProcessgroupNamingConditionConditionApplicationTypeComparison"
                    },
                    "deprecationMessage": "You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "applicationTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionApplicationType:ProcessgroupNamingConditionConditionApplicationType"
                    }
                },
                "azureComputeModeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionAzureComputeModeComparison:ProcessgroupNamingConditionConditionAzureComputeModeComparison"
                    }
                },
                "azureComputeModes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionAzureComputeMode:ProcessgroupNamingConditionConditionAzureComputeMode"
                    },
                    "deprecationMessage": "You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility."
                },
                "azureSkuComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionAzureSkuComparision:ProcessgroupNamingConditionConditionAzureSkuComparision"
                    },
                    "deprecationMessage": "You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility."
                },
                "azureSkus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionAzureSkus:ProcessgroupNamingConditionConditionAzureSkus"
                    }
                },
                "baseComparisonBasics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionBaseComparisonBasic:ProcessgroupNamingConditionConditionBaseComparisonBasic"
                    },
                    "deprecationMessage": "You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility."
                },
                "baseConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionBaseConditionKey:ProcessgroupNamingConditionConditionBaseConditionKey"
                    },
                    "deprecationMessage": "'base_condition_key' is deprecated. You should use 'key'"
                },
                "bitnessComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionBitnessComparision:ProcessgroupNamingConditionConditionBitnessComparision"
                    },
                    "deprecationMessage": "You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility."
                },
                "bitnesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionBitness:ProcessgroupNamingConditionConditionBitness"
                    }
                },
                "cloudTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionCloudTypeComparison:ProcessgroupNamingConditionConditionCloudTypeComparison"
                    },
                    "deprecationMessage": "You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "cloudTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionCloudType:ProcessgroupNamingConditionConditionCloudType"
                    }
                },
                "comparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionComparison:ProcessgroupNamingConditionConditionComparison"
                    }
                },
                "customApplicationTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionCustomApplicationTypeComparison:ProcessgroupNamingConditionConditionCustomApplicationTypeComparison"
                    },
                    "deprecationMessage": "You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "customApplicationTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionCustomApplicationType:ProcessgroupNamingConditionConditionCustomApplicationType"
                    }
                },
                "customHostMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionCustomHostMetadataConditionKey:ProcessgroupNamingConditionConditionCustomHostMetadataConditionKey"
                    },
                    "deprecationMessage": "'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'"
                },
                "customHostMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionCustomHostMetadata:ProcessgroupNamingConditionConditionCustomHostMetadata"
                    }
                },
                "customProcessMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKey:ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKey"
                    },
                    "deprecationMessage": "'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'"
                },
                "customProcessMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionCustomProcessMetadata:ProcessgroupNamingConditionConditionCustomProcessMetadata"
                    }
                },
                "databaseTopologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionDatabaseTopology:ProcessgroupNamingConditionConditionDatabaseTopology"
                    }
                },
                "databaseTopologyComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionDatabaseTopologyComparison:ProcessgroupNamingConditionConditionDatabaseTopologyComparison"
                    },
                    "deprecationMessage": "You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility."
                },
                "dcrumDecoderComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionDcrumDecoderComparison:ProcessgroupNamingConditionConditionDcrumDecoderComparison"
                    },
                    "deprecationMessage": "You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility."
                },
                "dcrumDecoders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionDcrumDecoder:ProcessgroupNamingConditionConditionDcrumDecoder"
                    }
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionEntity:ProcessgroupNamingConditionConditionEntity"
                    }
                },
                "entityIdComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionEntityIdComparison:ProcessgroupNamingConditionConditionEntityIdComparison"
                    },
                    "deprecationMessage": "You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility."
                },
                "hostTeches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionHostTech:ProcessgroupNamingConditionConditionHostTech"
                    }
                },
                "hypervisorTypeComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionHypervisorTypeComparision:ProcessgroupNamingConditionConditionHypervisorTypeComparision"
                    },
                    "deprecationMessage": "`hypervisor_type_comparision` is deprecated. Use `hypervisor` instead"
                },
                "hypervisors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionHypervisor:ProcessgroupNamingConditionConditionHypervisor"
                    }
                },
                "indexedNameComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionIndexedNameComparison:ProcessgroupNamingConditionConditionIndexedNameComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility."
                },
                "indexedNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionIndexedName:ProcessgroupNamingConditionConditionIndexedName"
                    }
                },
                "indexedStringComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionIndexedStringComparison:ProcessgroupNamingConditionConditionIndexedStringComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility."
                },
                "indexedStrings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionIndexedString:ProcessgroupNamingConditionConditionIndexedString"
                    }
                },
                "indexedTagComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionIndexedTagComparison:ProcessgroupNamingConditionConditionIndexedTagComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility."
                },
                "indexedTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionIndexedTag:ProcessgroupNamingConditionConditionIndexedTag"
                    }
                },
                "integerComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionIntegerComparison:ProcessgroupNamingConditionConditionIntegerComparison"
                    },
                    "deprecationMessage": "You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility."
                },
                "integers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionInteger:ProcessgroupNamingConditionConditionInteger"
                    }
                },
                "ipaddressComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionIpaddressComparison:ProcessgroupNamingConditionConditionIpaddressComparison"
                    },
                    "deprecationMessage": "You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility."
                },
                "ipaddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionIpaddress:ProcessgroupNamingConditionConditionIpaddress"
                    }
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionKey:ProcessgroupNamingConditionConditionKey"
                    }
                },
                "mobilePlatformComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionMobilePlatformComparison:ProcessgroupNamingConditionConditionMobilePlatformComparison"
                    },
                    "deprecationMessage": "You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility."
                },
                "mobilePlatforms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionMobilePlatform:ProcessgroupNamingConditionConditionMobilePlatform"
                    }
                },
                "osArches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionOsArch:ProcessgroupNamingConditionConditionOsArch"
                    }
                },
                "osTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionOsType:ProcessgroupNamingConditionConditionOsType"
                    }
                },
                "osarchitectureComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionOsarchitectureComparison:ProcessgroupNamingConditionConditionOsarchitectureComparison"
                    },
                    "deprecationMessage": "You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility."
                },
                "ostypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionOstypeComparison:ProcessgroupNamingConditionConditionOstypeComparison"
                    },
                    "deprecationMessage": "You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility."
                },
                "paasTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionPaasTypeComparison:ProcessgroupNamingConditionConditionPaasTypeComparison"
                    },
                    "deprecationMessage": "You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "paasTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionPaasType:ProcessgroupNamingConditionConditionPaasType"
                    }
                },
                "processMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionProcessMetadataConditionKey:ProcessgroupNamingConditionConditionProcessMetadataConditionKey"
                    },
                    "deprecationMessage": "'process_metadata_condition_key' is deprecated. You should use 'process_metadata'"
                },
                "processMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionProcessMetadata:ProcessgroupNamingConditionConditionProcessMetadata"
                    }
                },
                "serviceTopologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionServiceTopology:ProcessgroupNamingConditionConditionServiceTopology"
                    }
                },
                "serviceTopologyComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionServiceTopologyComparison:ProcessgroupNamingConditionConditionServiceTopologyComparison"
                    },
                    "deprecationMessage": "You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility."
                },
                "serviceTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionServiceTypeComparison:ProcessgroupNamingConditionConditionServiceTypeComparison"
                    },
                    "deprecationMessage": "You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "serviceTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionServiceType:ProcessgroupNamingConditionConditionServiceType"
                    }
                },
                "simpleHostTechComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionSimpleHostTechComparison:ProcessgroupNamingConditionConditionSimpleHostTechComparison"
                    },
                    "deprecationMessage": "You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility."
                },
                "simpleTechComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionSimpleTechComparison:ProcessgroupNamingConditionConditionSimpleTechComparison"
                    },
                    "deprecationMessage": "You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility."
                },
                "stringComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionStringComparison:ProcessgroupNamingConditionConditionStringComparison"
                    },
                    "deprecationMessage": "You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility."
                },
                "stringConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionStringConditionKey:ProcessgroupNamingConditionConditionStringConditionKey"
                    },
                    "deprecationMessage": "'string_condition_key' is deprecated. You should use 'string_key'"
                },
                "stringKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionStringKey:ProcessgroupNamingConditionConditionStringKey"
                    }
                },
                "strings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionString:ProcessgroupNamingConditionConditionString"
                    }
                },
                "syntheticEngineTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionSyntheticEngineTypeComparison:ProcessgroupNamingConditionConditionSyntheticEngineTypeComparison"
                    },
                    "deprecationMessage": "You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "syntheticEngines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionSyntheticEngine:ProcessgroupNamingConditionConditionSyntheticEngine"
                    }
                },
                "tagComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionTagComparison:ProcessgroupNamingConditionConditionTagComparison"
                    },
                    "deprecationMessage": "You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionTag:ProcessgroupNamingConditionConditionTag"
                    }
                },
                "teches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionTech:ProcessgroupNamingConditionConditionTech"
                    }
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionApplicationType:ProcessgroupNamingConditionConditionApplicationType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionApplicationTypeComparison:ProcessgroupNamingConditionConditionApplicationTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionAzureComputeMode:ProcessgroupNamingConditionConditionAzureComputeMode": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionAzureComputeModeComparison:ProcessgroupNamingConditionConditionAzureComputeModeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionAzureSkuComparision:ProcessgroupNamingConditionConditionAzureSkuComparision": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionAzureSkus:ProcessgroupNamingConditionConditionAzureSkus": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionBaseComparisonBasic:ProcessgroupNamingConditionConditionBaseComparisonBasic": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionBaseConditionKey:ProcessgroupNamingConditionConditionBaseConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionBitness:ProcessgroupNamingConditionConditionBitness": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionBitnessComparision:ProcessgroupNamingConditionConditionBitnessComparision": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionCloudType:ProcessgroupNamingConditionConditionCloudType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionCloudTypeComparison:ProcessgroupNamingConditionConditionCloudTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionComparison:ProcessgroupNamingConditionConditionComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionCustomApplicationType:ProcessgroupNamingConditionConditionCustomApplicationType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionCustomApplicationTypeComparison:ProcessgroupNamingConditionConditionCustomApplicationTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionCustomHostMetadata:ProcessgroupNamingConditionConditionCustomHostMetadata": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKey:ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKey"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionCustomHostMetadataConditionKey:ProcessgroupNamingConditionConditionCustomHostMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey:ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey:ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKey:ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKey": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionCustomProcessMetadata:ProcessgroupNamingConditionConditionCustomProcessMetadata": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKey:ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKey"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKey:ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey:ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey:ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKey:ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKey": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionDatabaseTopology:ProcessgroupNamingConditionConditionDatabaseTopology": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionDatabaseTopologyComparison:ProcessgroupNamingConditionConditionDatabaseTopologyComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionDcrumDecoder:ProcessgroupNamingConditionConditionDcrumDecoder": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionDcrumDecoderComparison:ProcessgroupNamingConditionConditionDcrumDecoderComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionEntity:ProcessgroupNamingConditionConditionEntity": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionEntityIdComparison:ProcessgroupNamingConditionConditionEntityIdComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionHostTech:ProcessgroupNamingConditionConditionHostTech": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionHostTechValue:ProcessgroupNamingConditionConditionHostTechValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionHostTechValue:ProcessgroupNamingConditionConditionHostTechValue": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "verbatimType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionHypervisor:ProcessgroupNamingConditionConditionHypervisor": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionHypervisorTypeComparision:ProcessgroupNamingConditionConditionHypervisorTypeComparision": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionIndexedName:ProcessgroupNamingConditionConditionIndexedName": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionIndexedNameComparison:ProcessgroupNamingConditionConditionIndexedNameComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionIndexedString:ProcessgroupNamingConditionConditionIndexedString": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionIndexedStringComparison:ProcessgroupNamingConditionConditionIndexedStringComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionIndexedTag:ProcessgroupNamingConditionConditionIndexedTag": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionIndexedTagValue:ProcessgroupNamingConditionConditionIndexedTagValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionIndexedTagComparison:ProcessgroupNamingConditionConditionIndexedTagComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionIndexedTagComparisonValue:ProcessgroupNamingConditionConditionIndexedTagComparisonValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionIndexedTagComparisonValue:ProcessgroupNamingConditionConditionIndexedTagComparisonValue": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionIndexedTagValue:ProcessgroupNamingConditionConditionIndexedTagValue": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionInteger:ProcessgroupNamingConditionConditionInteger": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionIntegerComparison:ProcessgroupNamingConditionConditionIntegerComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionIpaddress:ProcessgroupNamingConditionConditionIpaddress": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionIpaddressComparison:ProcessgroupNamingConditionConditionIpaddressComparison": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionKey:ProcessgroupNamingConditionConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionMobilePlatform:ProcessgroupNamingConditionConditionMobilePlatform": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionMobilePlatformComparison:ProcessgroupNamingConditionConditionMobilePlatformComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionOsArch:ProcessgroupNamingConditionConditionOsArch": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionOsType:ProcessgroupNamingConditionConditionOsType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionOsarchitectureComparison:ProcessgroupNamingConditionConditionOsarchitectureComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionOstypeComparison:ProcessgroupNamingConditionConditionOstypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionPaasType:ProcessgroupNamingConditionConditionPaasType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionPaasTypeComparison:ProcessgroupNamingConditionConditionPaasTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionProcessMetadata:ProcessgroupNamingConditionConditionProcessMetadata": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionProcessMetadataConditionKey:ProcessgroupNamingConditionConditionProcessMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionServiceTopology:ProcessgroupNamingConditionConditionServiceTopology": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionServiceTopologyComparison:ProcessgroupNamingConditionConditionServiceTopologyComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionServiceType:ProcessgroupNamingConditionConditionServiceType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionServiceTypeComparison:ProcessgroupNamingConditionConditionServiceTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionSimpleHostTechComparison:ProcessgroupNamingConditionConditionSimpleHostTechComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue:ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue:ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "verbatimType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionSimpleTechComparison:ProcessgroupNamingConditionConditionSimpleTechComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionSimpleTechComparisonValue:ProcessgroupNamingConditionConditionSimpleTechComparisonValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionSimpleTechComparisonValue:ProcessgroupNamingConditionConditionSimpleTechComparisonValue": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "verbatimType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionString:ProcessgroupNamingConditionConditionString": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionStringComparison:ProcessgroupNamingConditionConditionStringComparison": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionStringConditionKey:ProcessgroupNamingConditionConditionStringConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionStringKey:ProcessgroupNamingConditionConditionStringKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionSyntheticEngine:ProcessgroupNamingConditionConditionSyntheticEngine": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionSyntheticEngineTypeComparison:ProcessgroupNamingConditionConditionSyntheticEngineTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionTag:ProcessgroupNamingConditionConditionTag": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionTagValue:ProcessgroupNamingConditionConditionTagValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionTagComparison:ProcessgroupNamingConditionConditionTagComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionTagComparisonValue:ProcessgroupNamingConditionConditionTagComparisonValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionTagComparisonValue:ProcessgroupNamingConditionConditionTagComparisonValue": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionTagValue:ProcessgroupNamingConditionConditionTagValue": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionTech:ProcessgroupNamingConditionConditionTech": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ProcessgroupNamingConditionConditionTechValue:ProcessgroupNamingConditionConditionTechValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ProcessgroupNamingConditionConditionTechValue:ProcessgroupNamingConditionConditionTechValue": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "verbatimType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/QueueManagerAliasQueue:QueueManagerAliasQueue": {
            "properties": {
                "aliasQueues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/QueueManagerAliasQueueAliasQueue:QueueManagerAliasQueueAliasQueue"
                    },
                    "description": "Alias queue definitions for queue manager\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/QueueManagerAliasQueueAliasQueue:QueueManagerAliasQueueAliasQueue": {
            "properties": {
                "aliasQueueName": {
                    "type": "string",
                    "description": "The name of the alias queue\n"
                },
                "baseQueueName": {
                    "type": "string",
                    "description": "The name of the base queue\n"
                },
                "clusterVisibilities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Name of the cluster(s) this alias should be visible in\n"
                }
            },
            "type": "object",
            "required": [
                "aliasQueueName",
                "baseQueueName"
            ]
        },
        "dynatrace:index/QueueManagerClusterQueue:QueueManagerClusterQueue": {
            "properties": {
                "clusterQueues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/QueueManagerClusterQueueClusterQueue:QueueManagerClusterQueueClusterQueue"
                    },
                    "description": "Cluster queue definitions for queue manager\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/QueueManagerClusterQueueClusterQueue:QueueManagerClusterQueueClusterQueue": {
            "properties": {
                "clusterVisibilities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Name of the cluster(s) this alias should be visible in\n"
                },
                "localQueueName": {
                    "type": "string",
                    "description": "The name of the local queue\n"
                }
            },
            "type": "object",
            "required": [
                "localQueueName"
            ]
        },
        "dynatrace:index/QueueManagerRemoteQueue:QueueManagerRemoteQueue": {
            "properties": {
                "remoteQueues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/QueueManagerRemoteQueueRemoteQueue:QueueManagerRemoteQueueRemoteQueue"
                    },
                    "description": "Remote queue definitions for queue manager\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/QueueManagerRemoteQueueRemoteQueue:QueueManagerRemoteQueueRemoteQueue": {
            "properties": {
                "clusterVisibilities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Name of the cluster(s) this alias should be visible in\n"
                },
                "localQueueName": {
                    "type": "string",
                    "description": "The name of the local queue\n"
                },
                "remoteQueueManager": {
                    "type": "string",
                    "description": "The name of the remote queue manager\n"
                },
                "remoteQueueName": {
                    "type": "string",
                    "description": "The name of the remote queue\n"
                }
            },
            "type": "object",
            "required": [
                "localQueueName",
                "remoteQueueManager",
                "remoteQueueName"
            ]
        },
        "dynatrace:index/RequestAttributeDataSource:RequestAttributeDataSource": {
            "properties": {
                "capturingAndStorageLocation": {
                    "type": "string",
                    "description": "Specifies the location where the values are captured and stored.  Required if the **source** is one of the following: `GET_PARAMETER`, `URI`, `REQUEST_HEADER`, `RESPONSE_HEADER`.   Not applicable in other cases.   If the **source** value is `REQUEST_HEADER` or `RESPONSE_HEADER`, the `CAPTURE_AND_STORE_ON_BOTH` location is not allowed\n"
                },
                "cicsSdkMethodNodeCondition": {
                    "$ref": "#/types/dynatrace:index/RequestAttributeDataSourceCicsSdkMethodNodeCondition:RequestAttributeDataSourceCicsSdkMethodNodeCondition",
                    "description": "IBM integration bus label node name condition for which the value is captured\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The data source is enabled (`true`) or disabled (`false`)\n"
                },
                "iibLabelMethodNodeCondition": {
                    "$ref": "#/types/dynatrace:index/RequestAttributeDataSourceIibLabelMethodNodeCondition:RequestAttributeDataSourceIibLabelMethodNodeCondition",
                    "description": "IBM integration bus label node name condition for which the value is captured\n"
                },
                "iibMethodNodeCondition": {
                    "$ref": "#/types/dynatrace:index/RequestAttributeDataSourceIibMethodNodeCondition:RequestAttributeDataSourceIibMethodNodeCondition",
                    "description": "IBM integration bus label node name condition for which the value is captured\n"
                },
                "iibNodeType": {
                    "type": "string",
                    "description": "The IBM integration bus node type for which the value is captured.  This or `iibMethodNodeCondition` is required if the **source** is: `IIB_NODE`.  Not applicable in other cases\n"
                },
                "methods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/RequestAttributeDataSourceMethod:RequestAttributeDataSourceMethod"
                    },
                    "description": "The method specification if the **source** value is `METHOD_PARAM`.   Not applicable in other cases\n"
                },
                "parameterName": {
                    "type": "string",
                    "description": "The name of the web request parameter to capture.  Required if the **source** is one of the following: `POST_PARAMETER`, `GET_PARAMETER`, `REQUEST_HEADER`, `RESPONSE_HEADER`, `CUSTOM_ATTRIBUTE`.  Not applicable in other cases\n"
                },
                "scope": {
                    "$ref": "#/types/dynatrace:index/RequestAttributeDataSourceScope:RequestAttributeDataSourceScope",
                    "description": "Conditions for data capturing\n"
                },
                "sessionAttributeTechnology": {
                    "type": "string",
                    "description": "The technology of the session attribute to capture if the **source** value is `SESSION_ATTRIBUTE`.\n"
                },
                "source": {
                    "type": "string",
                    "description": "The source of the attribute to capture. Works in conjunction with **parameterName** or **methods** and **technology**\n"
                },
                "technology": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "valueProcessing": {
                    "$ref": "#/types/dynatrace:index/RequestAttributeDataSourceValueProcessing:RequestAttributeDataSourceValueProcessing"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "source"
            ]
        },
        "dynatrace:index/RequestAttributeDataSourceCicsSdkMethodNodeCondition:RequestAttributeDataSourceCicsSdkMethodNodeCondition": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "description": "Negate the comparison\n"
                },
                "operator": {
                    "type": "string",
                    "description": "Operator comparing the extracted value to the comparison value\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value to compare to\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/RequestAttributeDataSourceIibLabelMethodNodeCondition:RequestAttributeDataSourceIibLabelMethodNodeCondition": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "description": "Negate the comparison\n"
                },
                "operator": {
                    "type": "string",
                    "description": "Operator comparing the extracted value to the comparison value\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value to compare to\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/RequestAttributeDataSourceIibMethodNodeCondition:RequestAttributeDataSourceIibMethodNodeCondition": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "description": "Negate the comparison\n"
                },
                "operator": {
                    "type": "string",
                    "description": "Operator comparing the extracted value to the comparison value\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value to compare to\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/RequestAttributeDataSourceMethod:RequestAttributeDataSourceMethod": {
            "properties": {
                "argumentIndex": {
                    "type": "integer",
                    "description": "The index of the argument to capture. Set `0` to capture the return value, `1` or higher to capture a mehtod argument.   Required if the **capture** is set to `ARGUMENT`.  Not applicable in other cases\n"
                },
                "capture": {
                    "type": "string",
                    "description": "What to capture from the method\n"
                },
                "deepObjectAccess": {
                    "type": "string",
                    "description": "The getter chain to apply to the captured object. It is required in one of the following cases:  The **capture** is set to `THIS`.    The **capture** is set to `ARGUMENT`, and the argument is not a primitive, a primitive wrapper class, a string, or an array.   Not applicable in other cases\n"
                },
                "method": {
                    "$ref": "#/types/dynatrace:index/RequestAttributeDataSourceMethodMethod:RequestAttributeDataSourceMethodMethod",
                    "description": "Configuration of a method to be captured\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "capture"
            ]
        },
        "dynatrace:index/RequestAttributeDataSourceMethodMethod:RequestAttributeDataSourceMethodMethod": {
            "properties": {
                "argumentTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Configuration of a method to be captured\n"
                },
                "className": {
                    "type": "string",
                    "description": "The class name where the method to capture resides.   Either this or the **fileName** must be set\n"
                },
                "fileName": {
                    "type": "string",
                    "description": "The file name where the method to capture resides.   Either this or **className** must be set\n"
                },
                "fileNameMatcher": {
                    "type": "string",
                    "description": "The operator of the comparison. If not set, `EQUALS` is used\n"
                },
                "methodName": {
                    "type": "string",
                    "description": "The name of the method to capture\n"
                },
                "modifiers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The modifiers of the method to capture\n"
                },
                "returnType": {
                    "type": "string",
                    "description": "The return type\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "visibility": {
                    "type": "string",
                    "description": "The visibility of the method to capture\n"
                }
            },
            "type": "object",
            "required": [
                "methodName",
                "returnType",
                "visibility"
            ]
        },
        "dynatrace:index/RequestAttributeDataSourceScope:RequestAttributeDataSourceScope": {
            "properties": {
                "hostGroup": {
                    "type": "string",
                    "description": "Only applies to this host group\n"
                },
                "processGroup": {
                    "type": "string",
                    "description": "Only applies to this process group. Note that this can't be transferred between different clusters or environments\n"
                },
                "serviceTechnology": {
                    "type": "string",
                    "description": "Only applies to this service technology\n"
                },
                "tagOfProcessGroup": {
                    "type": "string",
                    "description": "Only apply to process groups matching this tag\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestAttributeDataSourceValueProcessing:RequestAttributeDataSourceValueProcessing": {
            "properties": {
                "extractSubstring": {
                    "$ref": "#/types/dynatrace:index/RequestAttributeDataSourceValueProcessingExtractSubstring:RequestAttributeDataSourceValueProcessingExtractSubstring",
                    "description": "Preprocess by extracting a substring from the original value\n"
                },
                "splitAt": {
                    "type": "string",
                    "description": "Split (preprocessed) string values at this separator\n"
                },
                "trim": {
                    "type": "boolean",
                    "description": "Prune Whitespaces. Defaults to false\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "valueCondition": {
                    "$ref": "#/types/dynatrace:index/RequestAttributeDataSourceValueProcessingValueCondition:RequestAttributeDataSourceValueProcessingValueCondition",
                    "description": "IBM integration bus label node name condition for which the value is captured\n"
                },
                "valueExtractorRegex": {
                    "type": "string",
                    "description": "Extract value from captured data per regex\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestAttributeDataSourceValueProcessingExtractSubstring:RequestAttributeDataSourceValueProcessingExtractSubstring": {
            "properties": {
                "delimiter": {
                    "type": "string",
                    "description": "The delimiter string\n"
                },
                "endDelimiter": {
                    "type": "string",
                    "description": "The end-delimiter string.   Required if the **position** value is `BETWEEN`. Otherwise not allowed\n"
                },
                "position": {
                    "type": "string",
                    "description": "The position of the extracted string relative to delimiters\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "delimiter",
                "position"
            ]
        },
        "dynatrace:index/RequestAttributeDataSourceValueProcessingValueCondition:RequestAttributeDataSourceValueProcessingValueCondition": {
            "properties": {
                "negate": {
                    "type": "boolean",
                    "description": "Negate the comparison\n"
                },
                "operator": {
                    "type": "string",
                    "description": "Operator comparing the extracted value to the comparison value\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value to compare to\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "dynatrace:index/RequestNamingConditions:RequestNamingConditions": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/RequestNamingConditionsCondition:RequestNamingConditionsCondition"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsCondition:RequestNamingConditionsCondition": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "comparison": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparison:RequestNamingConditionsConditionComparison"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "comparison"
            ]
        },
        "dynatrace:index/RequestNamingConditionsConditionComparison:RequestNamingConditionsConditionComparison": {
            "properties": {
                "boolean": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonBoolean:RequestNamingConditionsConditionComparisonBoolean"
                },
                "esbInputNodeType": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonEsbInputNodeType:RequestNamingConditionsConditionComparisonEsbInputNodeType"
                },
                "failedState": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonFailedState:RequestNamingConditionsConditionComparisonFailedState"
                },
                "failureReason": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonFailureReason:RequestNamingConditionsConditionComparisonFailureReason"
                },
                "fastString": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonFastString:RequestNamingConditionsConditionComparisonFastString"
                },
                "flawState": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonFlawState:RequestNamingConditionsConditionComparisonFlawState"
                },
                "generic": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonGeneric:RequestNamingConditionsConditionComparisonGeneric"
                },
                "httpMethod": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonHttpMethod:RequestNamingConditionsConditionComparisonHttpMethod"
                },
                "httpStatusClass": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonHttpStatusClass:RequestNamingConditionsConditionComparisonHttpStatusClass"
                },
                "iibInputNodeType": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonIibInputNodeType:RequestNamingConditionsConditionComparisonIibInputNodeType"
                },
                "negate": {
                    "type": "boolean"
                },
                "number": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonNumber:RequestNamingConditionsConditionComparisonNumber"
                },
                "numberRequestAttribute": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonNumberRequestAttribute:RequestNamingConditionsConditionComparisonNumberRequestAttribute"
                },
                "serviceType": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonServiceType:RequestNamingConditionsConditionComparisonServiceType"
                },
                "string": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonString:RequestNamingConditionsConditionComparisonString"
                },
                "stringRequestAttribute": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonStringRequestAttribute:RequestNamingConditionsConditionComparisonStringRequestAttribute"
                },
                "tag": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonTag:RequestNamingConditionsConditionComparisonTag"
                },
                "zosCallType": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonZosCallType:RequestNamingConditionsConditionComparisonZosCallType"
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonBoolean:RequestNamingConditionsConditionComparisonBoolean": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "boolean"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    }
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonEsbInputNodeType:RequestNamingConditionsConditionComparisonEsbInputNodeType": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonFailedState:RequestNamingConditionsConditionComparisonFailedState": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonFailureReason:RequestNamingConditionsConditionComparisonFailureReason": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonFastString:RequestNamingConditionsConditionComparisonFastString": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonFlawState:RequestNamingConditionsConditionComparisonFlawState": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonGeneric:RequestNamingConditionsConditionComparisonGeneric": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonHttpMethod:RequestNamingConditionsConditionComparisonHttpMethod": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonHttpStatusClass:RequestNamingConditionsConditionComparisonHttpStatusClass": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonIibInputNodeType:RequestNamingConditionsConditionComparisonIibInputNodeType": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonNumber:RequestNamingConditionsConditionComparisonNumber": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonNumberRequestAttribute:RequestNamingConditionsConditionComparisonNumberRequestAttribute": {
            "properties": {
                "matchOnChildCalls": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "requestAttribute": {
                    "type": "string"
                },
                "source": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonNumberRequestAttributeSource:RequestNamingConditionsConditionComparisonNumberRequestAttributeSource"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                }
            },
            "type": "object",
            "required": [
                "requestAttribute"
            ]
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonNumberRequestAttributeSource:RequestNamingConditionsConditionComparisonNumberRequestAttributeSource": {
            "properties": {
                "managementZone": {
                    "type": "string"
                },
                "serviceTag": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag:RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag:RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "tagKey": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey:RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey:RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonServiceType:RequestNamingConditionsConditionComparisonServiceType": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonString:RequestNamingConditionsConditionComparisonString": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonStringRequestAttribute:RequestNamingConditionsConditionComparisonStringRequestAttribute": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "matchOnChildCalls": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "requestAttribute": {
                    "type": "string"
                },
                "source": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonStringRequestAttributeSource:RequestNamingConditionsConditionComparisonStringRequestAttributeSource"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "requestAttribute"
            ]
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonStringRequestAttributeSource:RequestNamingConditionsConditionComparisonStringRequestAttributeSource": {
            "properties": {
                "managementZone": {
                    "type": "string"
                },
                "serviceTag": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag:RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag:RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "tagKey": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey:RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey:RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonTag:RequestNamingConditionsConditionComparisonTag": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonTagValue:RequestNamingConditionsConditionComparisonTagValue"
                },
                "values": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonTagValues:RequestNamingConditionsConditionComparisonTagValues"
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonTagValue:RequestNamingConditionsConditionComparisonTagValue": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonTagValues:RequestNamingConditionsConditionComparisonTagValues": {
            "properties": {
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/RequestNamingConditionsConditionComparisonTagValuesValue:RequestNamingConditionsConditionComparisonTagValuesValue"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonTagValuesValue:RequestNamingConditionsConditionComparisonTagValuesValue": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/RequestNamingConditionsConditionComparisonZosCallType:RequestNamingConditionsConditionComparisonZosCallType": {
            "properties": {
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingPlaceholders:RequestNamingPlaceholders": {
            "properties": {
                "placeholders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/RequestNamingPlaceholdersPlaceholder:RequestNamingPlaceholdersPlaceholder"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingPlaceholdersPlaceholder:RequestNamingPlaceholdersPlaceholder": {
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "attribute": {
                    "type": "string"
                },
                "delimiterOrRegex": {
                    "type": "string"
                },
                "endDelimiter": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "normalization": {
                    "type": "string"
                },
                "requestAttribute": {
                    "type": "string"
                },
                "source": {
                    "$ref": "#/types/dynatrace:index/RequestNamingPlaceholdersPlaceholderSource:RequestNamingPlaceholdersPlaceholderSource"
                },
                "unknowns": {
                    "type": "string"
                },
                "useFromChildCalls": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "kind",
                "name"
            ]
        },
        "dynatrace:index/RequestNamingPlaceholdersPlaceholderSource:RequestNamingPlaceholdersPlaceholderSource": {
            "properties": {
                "managementZone": {
                    "type": "string"
                },
                "serviceTag": {
                    "$ref": "#/types/dynatrace:index/RequestNamingPlaceholdersPlaceholderSourceServiceTag:RequestNamingPlaceholdersPlaceholderSourceServiceTag"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/RequestNamingPlaceholdersPlaceholderSourceServiceTag:RequestNamingPlaceholdersPlaceholderSourceServiceTag": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "tagKey": {
                    "$ref": "#/types/dynatrace:index/RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey:RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "dynatrace:index/RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey:RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ResourceAttributesKeys:ResourceAttributesKeys": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ResourceAttributesKeysRule:ResourceAttributesKeysRule"
                    }
                }
            },
            "type": "object",
            "required": [
                "rules"
            ]
        },
        "dynatrace:index/ResourceAttributesKeysRule:ResourceAttributesKeysRule": {
            "properties": {
                "attributeKey": {
                    "type": "string",
                    "description": "Attribute key **service.name** is automatically captured by default\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "masking": {
                    "type": "string",
                    "description": "Possible Values: `MASK_ENTIRE_VALUE`, `MASK_ONLY_CONFIDENTIAL_DATA`, `NOT_MASKED`\n"
                }
            },
            "type": "object",
            "required": [
                "attributeKey",
                "enabled",
                "masking"
            ]
        },
        "dynatrace:index/RumProviderBreakdownDomainNamePatternList:RumProviderBreakdownDomainNamePatternList": {
            "properties": {
                "domainNamePatterns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/RumProviderBreakdownDomainNamePatternListDomainNamePattern:RumProviderBreakdownDomainNamePatternListDomainNamePattern"
                    }
                }
            },
            "type": "object",
            "required": [
                "domainNamePatterns"
            ]
        },
        "dynatrace:index/RumProviderBreakdownDomainNamePatternListDomainNamePattern:RumProviderBreakdownDomainNamePatternListDomainNamePattern": {
            "properties": {
                "pattern": {
                    "type": "string",
                    "description": "Use a ends-with pattern for this content provider's domain\n"
                }
            },
            "type": "object",
            "required": [
                "pattern"
            ]
        },
        "dynatrace:index/ServiceAnomaliesFailureRates:ServiceAnomaliesFailureRates": {
            "properties": {
                "auto": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesFailureRatesAuto:ServiceAnomaliesFailureRatesAuto",
                    "description": "Parameters of failure rate increase auto-detection. Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + **1%** = 2.5%  Relative: 1.5% + 1.5% * **50%** = 2.25%\n"
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesFailureRatesThresholds:ServiceAnomaliesFailureRatesThresholds",
                    "description": "Fixed thresholds for failure rate increase detection\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ServiceAnomaliesFailureRatesAuto:ServiceAnomaliesFailureRatesAuto": {
            "properties": {
                "absolute": {
                    "type": "integer",
                    "description": "Absolute increase of failing service calls to trigger an alert, %\n"
                },
                "relative": {
                    "type": "integer",
                    "description": "Relative increase of failing service calls to trigger an alert, %\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "absolute",
                "relative"
            ]
        },
        "dynatrace:index/ServiceAnomaliesFailureRatesThresholds:ServiceAnomaliesFailureRatesThresholds": {
            "properties": {
                "sensitivity": {
                    "type": "string",
                    "description": "Sensitivity of the threshold.  With `low` sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With `high` sensitivity, no statistical confidence is used. Each violation triggers alert\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "Failure rate during any 5-minute period to trigger an alert, %\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "sensitivity",
                "threshold"
            ]
        },
        "dynatrace:index/ServiceAnomaliesLoad:ServiceAnomaliesLoad": {
            "properties": {
                "drops": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesLoadDrops:ServiceAnomaliesLoadDrops",
                    "description": "The configuration of traffic drops detection\n"
                },
                "spikes": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesLoadSpikes:ServiceAnomaliesLoadSpikes",
                    "description": "The configuration of traffic spikes detection\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ServiceAnomaliesLoadDrops:ServiceAnomaliesLoadDrops": {
            "properties": {
                "minutes": {
                    "type": "integer",
                    "description": "Alert if the service stays in abnormal state for at least *X* minutes\n"
                },
                "percent": {
                    "type": "integer",
                    "description": "Alert if the observed load is more than *X* % of the expected value\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ServiceAnomaliesLoadSpikes:ServiceAnomaliesLoadSpikes": {
            "properties": {
                "minutes": {
                    "type": "integer",
                    "description": "Alert if the service stays in abnormal state for at least *X* minutes\n"
                },
                "percent": {
                    "type": "integer",
                    "description": "Alert if the observed load is more than *X* % of the expected value\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ServiceAnomaliesResponseTimes:ServiceAnomaliesResponseTimes": {
            "properties": {
                "auto": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesResponseTimesAuto:ServiceAnomaliesResponseTimesAuto",
                    "description": "Parameters of the response time degradation auto-detection. Violation of **any** criterion triggers an alert\n"
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesResponseTimesThresholds:ServiceAnomaliesResponseTimesThresholds",
                    "description": "Fixed thresholds for response time degradation detection\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ServiceAnomaliesResponseTimesAuto:ServiceAnomaliesResponseTimesAuto": {
            "properties": {
                "load": {
                    "type": "string",
                    "description": "Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are `FIFTEEN_REQUESTS_PER_MINUTE`, `FIVE_REQUESTS_PER_MINUTE`, `ONE_REQUEST_PER_MINUTE` and `TEN_REQUESTS_PER_MINUTE`\n"
                },
                "milliseconds": {
                    "type": "integer",
                    "description": "Alert if the response time degrades by more than *X* milliseconds\n"
                },
                "percent": {
                    "type": "integer",
                    "description": "Alert if the observed load is more than *X* % of the expected value\n"
                },
                "slowestMilliseconds": {
                    "type": "integer",
                    "description": "Alert if the response time of the slowest 10% degrades by more than *X* milliseconds\n"
                },
                "slowestPercent": {
                    "type": "integer",
                    "description": "Alert if the response time of the slowest 10% degrades by more than *X* milliseconds\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "load",
                "milliseconds",
                "percent",
                "slowestMilliseconds",
                "slowestPercent"
            ]
        },
        "dynatrace:index/ServiceAnomaliesResponseTimesThresholds:ServiceAnomaliesResponseTimesThresholds": {
            "properties": {
                "load": {
                    "type": "string",
                    "description": "Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are `FIFTEEN_REQUESTS_PER_MINUTE`, `FIVE_REQUESTS_PER_MINUTE`, `ONE_REQUEST_PER_MINUTE` and `TEN_REQUESTS_PER_MINUTE`\n"
                },
                "milliseconds": {
                    "type": "integer",
                    "description": "Alert if the response time degrades by more than *X* milliseconds\n"
                },
                "sensitivity": {
                    "type": "string",
                    "description": "Sensitivity of the threshold.  With `low` sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With `high` sensitivity, no statistical confidence is used. Each violation triggers alert\n"
                },
                "slowestMilliseconds": {
                    "type": "integer",
                    "description": "Alert if the response time of the slowest 10% degrades by more than *X* milliseconds\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "type": "object",
            "required": [
                "load",
                "milliseconds",
                "sensitivity",
                "slowestMilliseconds"
            ]
        },
        "dynatrace:index/ServiceAnomaliesV2FailureRate:ServiceAnomaliesV2FailureRate": {
            "properties": {
                "autoDetection": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesV2FailureRateAutoDetection:ServiceAnomaliesV2FailureRateAutoDetection",
                    "description": "Alert if the percentage of failing service calls increases by **both** the absolute and relative thresholds:\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Possible Values: `Auto`, `Fixed`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "fixedDetection": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesV2FailureRateFixedDetection:ServiceAnomaliesV2FailureRateFixedDetection",
                    "description": "Alert if a given failure rate is exceeded during any 5-minute-period\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/ServiceAnomaliesV2FailureRateAutoDetection:ServiceAnomaliesV2FailureRateAutoDetection": {
            "properties": {
                "absoluteIncrease": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                },
                "overAlertingProtection": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesV2FailureRateAutoDetectionOverAlertingProtection:ServiceAnomaliesV2FailureRateAutoDetectionOverAlertingProtection",
                    "description": "Avoid over-alerting\n"
                },
                "relativeIncrease": {
                    "type": "number",
                    "description": "Relative threshold\n"
                }
            },
            "type": "object",
            "required": [
                "absoluteIncrease",
                "overAlertingProtection",
                "relativeIncrease"
            ]
        },
        "dynatrace:index/ServiceAnomaliesV2FailureRateAutoDetectionOverAlertingProtection:ServiceAnomaliesV2FailureRateAutoDetectionOverAlertingProtection": {
            "properties": {
                "minutesAbnormalState": {
                    "type": "integer",
                    "description": "Only alert if the abnormal state remains for at least\n"
                },
                "requestsPerMinute": {
                    "type": "number",
                    "description": "Only alert if there are at least\n"
                }
            },
            "type": "object",
            "required": [
                "minutesAbnormalState",
                "requestsPerMinute"
            ]
        },
        "dynatrace:index/ServiceAnomaliesV2FailureRateFixedDetection:ServiceAnomaliesV2FailureRateFixedDetection": {
            "properties": {
                "overAlertingProtection": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesV2FailureRateFixedDetectionOverAlertingProtection:ServiceAnomaliesV2FailureRateFixedDetectionOverAlertingProtection",
                    "description": "Avoid over-alerting\n"
                },
                "sensitivity": {
                    "type": "string",
                    "description": "Possible Values: `High`, `Low`, `Medium`\n"
                },
                "threshold": {
                    "type": "number",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "overAlertingProtection",
                "sensitivity",
                "threshold"
            ]
        },
        "dynatrace:index/ServiceAnomaliesV2FailureRateFixedDetectionOverAlertingProtection:ServiceAnomaliesV2FailureRateFixedDetectionOverAlertingProtection": {
            "properties": {
                "minutesAbnormalState": {
                    "type": "integer",
                    "description": "Only alert if the abnormal state remains for at least\n"
                },
                "requestsPerMinute": {
                    "type": "number",
                    "description": "Only alert if there are at least\n"
                }
            },
            "type": "object",
            "required": [
                "minutesAbnormalState",
                "requestsPerMinute"
            ]
        },
        "dynatrace:index/ServiceAnomaliesV2LoadDrops:ServiceAnomaliesV2LoadDrops": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "loadDropPercent": {
                    "type": "number",
                    "description": "Threshold\n"
                },
                "minutesAbnormalState": {
                    "type": "integer",
                    "description": "Time span\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/ServiceAnomaliesV2LoadSpikes:ServiceAnomaliesV2LoadSpikes": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "loadSpikePercent": {
                    "type": "number",
                    "description": "Threshold\n"
                },
                "minutesAbnormalState": {
                    "type": "integer",
                    "description": "Time span\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/ServiceAnomaliesV2ResponseTime:ServiceAnomaliesV2ResponseTime": {
            "properties": {
                "autoDetection": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesV2ResponseTimeAutoDetection:ServiceAnomaliesV2ResponseTimeAutoDetection",
                    "description": "no documentation available\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Possible Values: `Auto`, `Fixed`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "fixedDetection": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesV2ResponseTimeFixedDetection:ServiceAnomaliesV2ResponseTimeFixedDetection",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/ServiceAnomaliesV2ResponseTimeAutoDetection:ServiceAnomaliesV2ResponseTimeAutoDetection": {
            "properties": {
                "overAlertingProtection": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesV2ResponseTimeAutoDetectionOverAlertingProtection:ServiceAnomaliesV2ResponseTimeAutoDetectionOverAlertingProtection",
                    "description": "Avoid over-alerting\n"
                },
                "responseTimeAll": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesV2ResponseTimeAutoDetectionResponseTimeAll:ServiceAnomaliesV2ResponseTimeAutoDetectionResponseTimeAll",
                    "description": "Alert if the median response time of all requests degrades beyond **both** the absolute and relative thresholds:\n"
                },
                "responseTimeSlowest": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesV2ResponseTimeAutoDetectionResponseTimeSlowest:ServiceAnomaliesV2ResponseTimeAutoDetectionResponseTimeSlowest",
                    "description": "Alert if the response time of the slowest 10% of requests degrades beyond **both** the absolute and relative thresholds:\n"
                }
            },
            "type": "object",
            "required": [
                "overAlertingProtection",
                "responseTimeAll",
                "responseTimeSlowest"
            ]
        },
        "dynatrace:index/ServiceAnomaliesV2ResponseTimeAutoDetectionOverAlertingProtection:ServiceAnomaliesV2ResponseTimeAutoDetectionOverAlertingProtection": {
            "properties": {
                "minutesAbnormalState": {
                    "type": "integer",
                    "description": "Only alert if the abnormal state remains for at least\n"
                },
                "requestsPerMinute": {
                    "type": "number",
                    "description": "Only alert if there are at least\n"
                }
            },
            "type": "object",
            "required": [
                "minutesAbnormalState",
                "requestsPerMinute"
            ]
        },
        "dynatrace:index/ServiceAnomaliesV2ResponseTimeAutoDetectionResponseTimeAll:ServiceAnomaliesV2ResponseTimeAutoDetectionResponseTimeAll": {
            "properties": {
                "degradationMilliseconds": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                },
                "degradationPercent": {
                    "type": "number",
                    "description": "Relative threshold\n"
                }
            },
            "type": "object",
            "required": [
                "degradationMilliseconds",
                "degradationPercent"
            ]
        },
        "dynatrace:index/ServiceAnomaliesV2ResponseTimeAutoDetectionResponseTimeSlowest:ServiceAnomaliesV2ResponseTimeAutoDetectionResponseTimeSlowest": {
            "properties": {
                "slowestDegradationMilliseconds": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                },
                "slowestDegradationPercent": {
                    "type": "number",
                    "description": "Relative threshold\n"
                }
            },
            "type": "object",
            "required": [
                "slowestDegradationMilliseconds",
                "slowestDegradationPercent"
            ]
        },
        "dynatrace:index/ServiceAnomaliesV2ResponseTimeFixedDetection:ServiceAnomaliesV2ResponseTimeFixedDetection": {
            "properties": {
                "overAlertingProtection": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesV2ResponseTimeFixedDetectionOverAlertingProtection:ServiceAnomaliesV2ResponseTimeFixedDetectionOverAlertingProtection",
                    "description": "Avoid over-alerting\n"
                },
                "responseTimeAll": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesV2ResponseTimeFixedDetectionResponseTimeAll:ServiceAnomaliesV2ResponseTimeFixedDetectionResponseTimeAll",
                    "description": "Alert if the median response time of all requests degrades beyond **both** the absolute and relative thresholds:\n"
                },
                "responseTimeSlowest": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesV2ResponseTimeFixedDetectionResponseTimeSlowest:ServiceAnomaliesV2ResponseTimeFixedDetectionResponseTimeSlowest",
                    "description": "Alert if the response time of the slowest 10% of requests degrades beyond **both** the absolute and relative thresholds:\n"
                },
                "sensitivity": {
                    "type": "string",
                    "description": "Possible Values: `High`, `Low`, `Medium`\n"
                }
            },
            "type": "object",
            "required": [
                "overAlertingProtection",
                "responseTimeAll",
                "responseTimeSlowest",
                "sensitivity"
            ]
        },
        "dynatrace:index/ServiceAnomaliesV2ResponseTimeFixedDetectionOverAlertingProtection:ServiceAnomaliesV2ResponseTimeFixedDetectionOverAlertingProtection": {
            "properties": {
                "minutesAbnormalState": {
                    "type": "integer",
                    "description": "Only alert if the abnormal state remains for at least\n"
                },
                "requestsPerMinute": {
                    "type": "number",
                    "description": "Only alert if there are at least\n"
                }
            },
            "type": "object",
            "required": [
                "minutesAbnormalState",
                "requestsPerMinute"
            ]
        },
        "dynatrace:index/ServiceAnomaliesV2ResponseTimeFixedDetectionResponseTimeAll:ServiceAnomaliesV2ResponseTimeFixedDetectionResponseTimeAll": {
            "properties": {
                "degradationMilliseconds": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                }
            },
            "type": "object",
            "required": [
                "degradationMilliseconds"
            ]
        },
        "dynatrace:index/ServiceAnomaliesV2ResponseTimeFixedDetectionResponseTimeSlowest:ServiceAnomaliesV2ResponseTimeFixedDetectionResponseTimeSlowest": {
            "properties": {
                "slowestDegradationMilliseconds": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                }
            },
            "type": "object",
            "required": [
                "slowestDegradationMilliseconds"
            ]
        },
        "dynatrace:index/ServiceExternalWebRequestConditions:ServiceExternalWebRequestConditions": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceExternalWebRequestConditionsCondition:ServiceExternalWebRequestConditionsCondition"
                    }
                }
            },
            "type": "object",
            "required": [
                "conditions"
            ]
        },
        "dynatrace:index/ServiceExternalWebRequestConditionsCondition:ServiceExternalWebRequestConditionsCondition": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "description": "Take the value of this attribute\n"
                },
                "compareOperationType": {
                    "type": "string",
                    "description": "Apply this operation\n"
                },
                "frameworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Technology\n"
                },
                "ignoreCase": {
                    "type": "boolean",
                    "description": "Ignore case sensitivity for texts.\n"
                },
                "intValue": {
                    "type": "integer",
                    "description": "Value\n"
                },
                "intValues": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Values\n"
                },
                "ipRangeFrom": {
                    "type": "string",
                    "description": "From\n"
                },
                "ipRangeTo": {
                    "type": "string",
                    "description": "To\n"
                },
                "tagValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "If multiple values are specified, at least one of them must match for the condition to match\n"
                },
                "textValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "If multiple values are specified, at least one of them must match for the condition to match\n"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "compareOperationType"
            ]
        },
        "dynatrace:index/ServiceExternalWebRequestIdContributors:ServiceExternalWebRequestIdContributors": {
            "properties": {
                "applicationId": {
                    "$ref": "#/types/dynatrace:index/ServiceExternalWebRequestIdContributorsApplicationId:ServiceExternalWebRequestIdContributorsApplicationId",
                    "description": "Application identifier\n"
                },
                "contextRoot": {
                    "$ref": "#/types/dynatrace:index/ServiceExternalWebRequestIdContributorsContextRoot:ServiceExternalWebRequestIdContributorsContextRoot",
                    "description": "URL context root\n"
                },
                "portForServiceId": {
                    "type": "boolean",
                    "description": "Let the port contribute to the Service Id\n"
                },
                "publicDomainName": {
                    "$ref": "#/types/dynatrace:index/ServiceExternalWebRequestIdContributorsPublicDomainName:ServiceExternalWebRequestIdContributorsPublicDomainName",
                    "description": "Public domain name\n"
                }
            },
            "type": "object",
            "required": [
                "applicationId",
                "contextRoot",
                "portForServiceId",
                "publicDomainName"
            ]
        },
        "dynatrace:index/ServiceExternalWebRequestIdContributorsApplicationId:ServiceExternalWebRequestIdContributorsApplicationId": {
            "properties": {
                "enableIdContributor": {
                    "type": "boolean",
                    "description": "Transform this value before letting it contribute to the Service Id\n"
                },
                "serviceIdContributor": {
                    "$ref": "#/types/dynatrace:index/ServiceExternalWebRequestIdContributorsApplicationIdServiceIdContributor:ServiceExternalWebRequestIdContributorsApplicationIdServiceIdContributor",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "enableIdContributor"
            ]
        },
        "dynatrace:index/ServiceExternalWebRequestIdContributorsApplicationIdServiceIdContributor:ServiceExternalWebRequestIdContributorsApplicationIdServiceIdContributor": {
            "properties": {
                "contributionType": {
                    "type": "string",
                    "description": "Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`\n"
                },
                "transformations": {
                    "$ref": "#/types/dynatrace:index/ServiceExternalWebRequestIdContributorsApplicationIdServiceIdContributorTransformations:ServiceExternalWebRequestIdContributorsApplicationIdServiceIdContributorTransformations",
                    "description": "Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.\n"
                },
                "valueOverride": {
                    "$ref": "#/types/dynatrace:index/ServiceExternalWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride:ServiceExternalWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride",
                    "description": "The value to be used instead of the detected value.\n"
                }
            },
            "type": "object",
            "required": [
                "contributionType"
            ]
        },
        "dynatrace:index/ServiceExternalWebRequestIdContributorsApplicationIdServiceIdContributorTransformations:ServiceExternalWebRequestIdContributorsApplicationIdServiceIdContributorTransformations": {
            "properties": {
                "transformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceExternalWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation:ServiceExternalWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation"
                    }
                }
            },
            "type": "object",
            "required": [
                "transformations"
            ]
        },
        "dynatrace:index/ServiceExternalWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation:ServiceExternalWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation": {
            "properties": {
                "includeHexNumbers": {
                    "type": "boolean",
                    "description": "include hexadecimal numbers\n"
                },
                "minDigitCount": {
                    "type": "integer",
                    "description": "min digit count\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "replacementValue": {
                    "type": "string",
                    "description": "replacement\n"
                },
                "segmentCount": {
                    "type": "integer",
                    "description": "How many segments should be taken.\n"
                },
                "selectIndex": {
                    "type": "integer",
                    "description": "select index\n"
                },
                "splitDelimiter": {
                    "type": "string",
                    "description": "split by\n"
                },
                "suffix": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "takeFromEnd": {
                    "type": "boolean",
                    "description": "take from end\n"
                },
                "transformationType": {
                    "type": "string",
                    "description": "Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`\n"
                }
            },
            "type": "object",
            "required": [
                "transformationType"
            ]
        },
        "dynatrace:index/ServiceExternalWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride:ServiceExternalWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride": {
            "properties": {
                "value": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "dynatrace:index/ServiceExternalWebRequestIdContributorsContextRoot:ServiceExternalWebRequestIdContributorsContextRoot": {
            "properties": {
                "enableIdContributor": {
                    "type": "boolean",
                    "description": "Transform this value before letting it contribute to the Service Id\n"
                },
                "serviceIdContributor": {
                    "$ref": "#/types/dynatrace:index/ServiceExternalWebRequestIdContributorsContextRootServiceIdContributor:ServiceExternalWebRequestIdContributorsContextRootServiceIdContributor",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "enableIdContributor"
            ]
        },
        "dynatrace:index/ServiceExternalWebRequestIdContributorsContextRootServiceIdContributor:ServiceExternalWebRequestIdContributorsContextRootServiceIdContributor": {
            "properties": {
                "contributionType": {
                    "type": "string",
                    "description": "Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`\n"
                },
                "segmentCount": {
                    "type": "integer",
                    "description": "How many segments should be taken.\n"
                },
                "transformations": {
                    "$ref": "#/types/dynatrace:index/ServiceExternalWebRequestIdContributorsContextRootServiceIdContributorTransformations:ServiceExternalWebRequestIdContributorsContextRootServiceIdContributorTransformations",
                    "description": "Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.\n"
                },
                "valueOverride": {
                    "$ref": "#/types/dynatrace:index/ServiceExternalWebRequestIdContributorsContextRootServiceIdContributorValueOverride:ServiceExternalWebRequestIdContributorsContextRootServiceIdContributorValueOverride",
                    "description": "The value to be used instead of the detected value.\n"
                }
            },
            "type": "object",
            "required": [
                "contributionType"
            ]
        },
        "dynatrace:index/ServiceExternalWebRequestIdContributorsContextRootServiceIdContributorTransformations:ServiceExternalWebRequestIdContributorsContextRootServiceIdContributorTransformations": {
            "properties": {
                "transformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceExternalWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation:ServiceExternalWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation"
                    }
                }
            },
            "type": "object",
            "required": [
                "transformations"
            ]
        },
        "dynatrace:index/ServiceExternalWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation:ServiceExternalWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation": {
            "properties": {
                "includeHexNumbers": {
                    "type": "boolean",
                    "description": "include hexadecimal numbers\n"
                },
                "minDigitCount": {
                    "type": "integer",
                    "description": "min digit count\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "replacementValue": {
                    "type": "string",
                    "description": "replacement\n"
                },
                "suffix": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "transformationType": {
                    "type": "string",
                    "description": "Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`\n"
                }
            },
            "type": "object",
            "required": [
                "transformationType"
            ]
        },
        "dynatrace:index/ServiceExternalWebRequestIdContributorsContextRootServiceIdContributorValueOverride:ServiceExternalWebRequestIdContributorsContextRootServiceIdContributorValueOverride": {
            "properties": {
                "value": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "dynatrace:index/ServiceExternalWebRequestIdContributorsPublicDomainName:ServiceExternalWebRequestIdContributorsPublicDomainName": {
            "properties": {
                "enableIdContributor": {
                    "type": "boolean",
                    "description": "Transform this value before letting it contribute to the Service Id\n"
                },
                "serviceIdContributor": {
                    "$ref": "#/types/dynatrace:index/ServiceExternalWebRequestIdContributorsPublicDomainNameServiceIdContributor:ServiceExternalWebRequestIdContributorsPublicDomainNameServiceIdContributor",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "enableIdContributor"
            ]
        },
        "dynatrace:index/ServiceExternalWebRequestIdContributorsPublicDomainNameServiceIdContributor:ServiceExternalWebRequestIdContributorsPublicDomainNameServiceIdContributor": {
            "properties": {
                "contributionType": {
                    "type": "string",
                    "description": "Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`\n"
                },
                "copyFromHostName": {
                    "type": "boolean",
                    "description": "Use the detected host name instead of the request's domain name.\n"
                },
                "transformations": {
                    "$ref": "#/types/dynatrace:index/ServiceExternalWebRequestIdContributorsPublicDomainNameServiceIdContributorTransformations:ServiceExternalWebRequestIdContributorsPublicDomainNameServiceIdContributorTransformations",
                    "description": "Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.\n"
                },
                "valueOverride": {
                    "$ref": "#/types/dynatrace:index/ServiceExternalWebRequestIdContributorsPublicDomainNameServiceIdContributorValueOverride:ServiceExternalWebRequestIdContributorsPublicDomainNameServiceIdContributorValueOverride",
                    "description": "The value to be used instead of the detected value.\n"
                }
            },
            "type": "object",
            "required": [
                "contributionType"
            ]
        },
        "dynatrace:index/ServiceExternalWebRequestIdContributorsPublicDomainNameServiceIdContributorTransformations:ServiceExternalWebRequestIdContributorsPublicDomainNameServiceIdContributorTransformations": {
            "properties": {
                "transformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceExternalWebRequestIdContributorsPublicDomainNameServiceIdContributorTransformationsTransformation:ServiceExternalWebRequestIdContributorsPublicDomainNameServiceIdContributorTransformationsTransformation"
                    }
                }
            },
            "type": "object",
            "required": [
                "transformations"
            ]
        },
        "dynatrace:index/ServiceExternalWebRequestIdContributorsPublicDomainNameServiceIdContributorTransformationsTransformation:ServiceExternalWebRequestIdContributorsPublicDomainNameServiceIdContributorTransformationsTransformation": {
            "properties": {
                "includeHexNumbers": {
                    "type": "boolean",
                    "description": "include hexadecimal numbers\n"
                },
                "minDigitCount": {
                    "type": "integer",
                    "description": "min digit count\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "replacementValue": {
                    "type": "string",
                    "description": "replacement\n"
                },
                "segmentCount": {
                    "type": "integer",
                    "description": "How many segments should be taken.\n"
                },
                "selectIndex": {
                    "type": "integer",
                    "description": "select index\n"
                },
                "splitDelimiter": {
                    "type": "string",
                    "description": "split by\n"
                },
                "suffix": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "takeFromEnd": {
                    "type": "boolean",
                    "description": "take from end\n"
                },
                "transformationType": {
                    "type": "string",
                    "description": "Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`\n"
                }
            },
            "type": "object",
            "required": [
                "transformationType"
            ]
        },
        "dynatrace:index/ServiceExternalWebRequestIdContributorsPublicDomainNameServiceIdContributorValueOverride:ServiceExternalWebRequestIdContributorsPublicDomainNameServiceIdContributorValueOverride": {
            "properties": {
                "value": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "dynatrace:index/ServiceExternalWebServiceConditions:ServiceExternalWebServiceConditions": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceExternalWebServiceConditionsCondition:ServiceExternalWebServiceConditionsCondition"
                    }
                }
            },
            "type": "object",
            "required": [
                "conditions"
            ]
        },
        "dynatrace:index/ServiceExternalWebServiceConditionsCondition:ServiceExternalWebServiceConditionsCondition": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "description": "Take the value of this attribute\n"
                },
                "compareOperationType": {
                    "type": "string",
                    "description": "Apply this operation\n"
                },
                "frameworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Technology\n"
                },
                "ignoreCase": {
                    "type": "boolean",
                    "description": "Ignore case sensitivity for texts.\n"
                },
                "intValue": {
                    "type": "integer",
                    "description": "Value\n"
                },
                "intValues": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Values\n"
                },
                "ipRangeFrom": {
                    "type": "string",
                    "description": "From\n"
                },
                "ipRangeTo": {
                    "type": "string",
                    "description": "To\n"
                },
                "tagValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "If multiple values are specified, at least one of them must match for the condition to match\n"
                },
                "textValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "If multiple values are specified, at least one of them must match for the condition to match\n"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "compareOperationType"
            ]
        },
        "dynatrace:index/ServiceExternalWebServiceIdContributors:ServiceExternalWebServiceIdContributors": {
            "properties": {
                "detectAsWebRequestService": {
                    "type": "boolean",
                    "description": "Detect the matching requests as web request services instead of web services.\n"
                },
                "portForServiceId": {
                    "type": "boolean"
                },
                "urlPath": {
                    "$ref": "#/types/dynatrace:index/ServiceExternalWebServiceIdContributorsUrlPath:ServiceExternalWebServiceIdContributorsUrlPath"
                }
            },
            "type": "object",
            "required": [
                "detectAsWebRequestService"
            ]
        },
        "dynatrace:index/ServiceExternalWebServiceIdContributorsUrlPath:ServiceExternalWebServiceIdContributorsUrlPath": {
            "properties": {
                "enableIdContributor": {
                    "type": "boolean",
                    "description": "Transform this value before letting it contribute to the Service Id\n"
                },
                "serviceIdContributor": {
                    "$ref": "#/types/dynatrace:index/ServiceExternalWebServiceIdContributorsUrlPathServiceIdContributor:ServiceExternalWebServiceIdContributorsUrlPathServiceIdContributor",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "enableIdContributor"
            ]
        },
        "dynatrace:index/ServiceExternalWebServiceIdContributorsUrlPathServiceIdContributor:ServiceExternalWebServiceIdContributorsUrlPathServiceIdContributor": {
            "properties": {
                "contributionType": {
                    "type": "string",
                    "description": "Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`\n"
                },
                "transformations": {
                    "$ref": "#/types/dynatrace:index/ServiceExternalWebServiceIdContributorsUrlPathServiceIdContributorTransformations:ServiceExternalWebServiceIdContributorsUrlPathServiceIdContributorTransformations",
                    "description": "Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.\n"
                },
                "valueOverride": {
                    "$ref": "#/types/dynatrace:index/ServiceExternalWebServiceIdContributorsUrlPathServiceIdContributorValueOverride:ServiceExternalWebServiceIdContributorsUrlPathServiceIdContributorValueOverride",
                    "description": "The value to be used instead of the detected value.\n"
                }
            },
            "type": "object",
            "required": [
                "contributionType"
            ]
        },
        "dynatrace:index/ServiceExternalWebServiceIdContributorsUrlPathServiceIdContributorTransformations:ServiceExternalWebServiceIdContributorsUrlPathServiceIdContributorTransformations": {
            "properties": {
                "transformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceExternalWebServiceIdContributorsUrlPathServiceIdContributorTransformationsTransformation:ServiceExternalWebServiceIdContributorsUrlPathServiceIdContributorTransformationsTransformation"
                    }
                }
            },
            "type": "object",
            "required": [
                "transformations"
            ]
        },
        "dynatrace:index/ServiceExternalWebServiceIdContributorsUrlPathServiceIdContributorTransformationsTransformation:ServiceExternalWebServiceIdContributorsUrlPathServiceIdContributorTransformationsTransformation": {
            "properties": {
                "includeHexNumbers": {
                    "type": "boolean",
                    "description": "include hexadecimal numbers\n"
                },
                "minDigitCount": {
                    "type": "integer",
                    "description": "min digit count\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "replacementValue": {
                    "type": "string",
                    "description": "replacement\n"
                },
                "segmentCount": {
                    "type": "integer",
                    "description": "How many segments should be taken.\n"
                },
                "selectIndex": {
                    "type": "integer",
                    "description": "select index\n"
                },
                "splitDelimiter": {
                    "type": "string",
                    "description": "split by\n"
                },
                "suffix": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "takeFromEnd": {
                    "type": "boolean",
                    "description": "take from end\n"
                },
                "transformationType": {
                    "type": "string",
                    "description": "Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`\n"
                }
            },
            "type": "object",
            "required": [
                "transformationType"
            ]
        },
        "dynatrace:index/ServiceExternalWebServiceIdContributorsUrlPathServiceIdContributorValueOverride:ServiceExternalWebServiceIdContributorsUrlPathServiceIdContributorValueOverride": {
            "properties": {
                "value": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "dynatrace:index/ServiceFailureExceptionRules:ServiceFailureExceptionRules": {
            "properties": {
                "customErrorRules": {
                    "$ref": "#/types/dynatrace:index/ServiceFailureExceptionRulesCustomErrorRules:ServiceFailureExceptionRulesCustomErrorRules",
                    "description": "Some custom error situations are only detectable via a return value or other means. To support such cases, [define a request attribute](https://dt-url.net/ys5k0p4y) that captures the required data. Then define a custom error rule that determines if the request has failed based on the value of the request attribute.\n"
                },
                "customHandledExceptions": {
                    "$ref": "#/types/dynatrace:index/ServiceFailureExceptionRulesCustomHandledExceptions:ServiceFailureExceptionRulesCustomHandledExceptions",
                    "description": "There may be situations where your application code handles exceptions gracefully in a manner that these failures aren't detected by Dynatrace. Use this setting to define specific gracefully-handled exceptions that should be treated as service failures.\n"
                },
                "ignoreAllExceptions": {
                    "type": "boolean",
                    "description": "Ignore all exceptions\n"
                },
                "ignoreSpanFailureDetection": {
                    "type": "boolean",
                    "description": "Ignore span failure detection\n"
                },
                "ignoredExceptions": {
                    "$ref": "#/types/dynatrace:index/ServiceFailureExceptionRulesIgnoredExceptions:ServiceFailureExceptionRulesIgnoredExceptions",
                    "description": "Some exceptions that are thrown by legacy or 3rd-party code indicate a specific response, not an error. Use this setting to instruct Dynatrace to treat such exceptions as non-failed requests.. If an exception matching any of the defined patterns occurs in a request, it will not be considered as a failure. Other exceptions occurring at the same request might still mark the request as failed.\n"
                },
                "successForcingExceptions": {
                    "$ref": "#/types/dynatrace:index/ServiceFailureExceptionRulesSuccessForcingExceptions:ServiceFailureExceptionRulesSuccessForcingExceptions",
                    "description": "Define exceptions which indicate that a service call should not be considered as failed. E.g. an exception indicating that the client aborted the operation.. If an exception matching any of the defined patterns occurs on the entry node of the service, it will be considered successful. Compared to ignored exceptions, the request will be considered successful even if other exceptions occur in the same request.\n"
                }
            },
            "type": "object",
            "required": [
                "ignoreAllExceptions",
                "ignoreSpanFailureDetection"
            ]
        },
        "dynatrace:index/ServiceFailureExceptionRulesCustomErrorRules:ServiceFailureExceptionRulesCustomErrorRules": {
            "properties": {
                "customErrorRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRule:ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRule"
                    }
                }
            },
            "type": "object",
            "required": [
                "customErrorRules"
            ]
        },
        "dynatrace:index/ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRule:ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRule": {
            "properties": {
                "condition": {
                    "$ref": "#/types/dynatrace:index/ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRuleCondition:ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRuleCondition",
                    "description": "Request attribute condition\n"
                },
                "requestAttribute": {
                    "type": "string",
                    "description": "Request attribute\n"
                }
            },
            "type": "object",
            "required": [
                "condition",
                "requestAttribute"
            ]
        },
        "dynatrace:index/ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRuleCondition:ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRuleCondition": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "description": "Case sensitive\n"
                },
                "compareOperationType": {
                    "type": "string",
                    "description": "Apply this comparison\n"
                },
                "doubleValue": {
                    "type": "number",
                    "description": "Value\n"
                },
                "intValue": {
                    "type": "integer",
                    "description": "Value\n"
                },
                "textValue": {
                    "type": "string",
                    "description": "Value\n"
                }
            },
            "type": "object",
            "required": [
                "compareOperationType"
            ]
        },
        "dynatrace:index/ServiceFailureExceptionRulesCustomHandledExceptions:ServiceFailureExceptionRulesCustomHandledExceptions": {
            "properties": {
                "customHandledExceptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledException:ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledException"
                    }
                }
            },
            "type": "object",
            "required": [
                "customHandledExceptions"
            ]
        },
        "dynatrace:index/ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledException:ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledException": {
            "properties": {
                "classPattern": {
                    "type": "string",
                    "description": "The pattern will match if it is contained within the actual class name.\n"
                },
                "messagePattern": {
                    "type": "string",
                    "description": "Optionally, define an exception message pattern. The pattern will match if the actual exception message contains the pattern.\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ServiceFailureExceptionRulesIgnoredExceptions:ServiceFailureExceptionRulesIgnoredExceptions": {
            "properties": {
                "customHandledExceptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledException:ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledException"
                    }
                }
            },
            "type": "object",
            "required": [
                "customHandledExceptions"
            ]
        },
        "dynatrace:index/ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledException:ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledException": {
            "properties": {
                "classPattern": {
                    "type": "string",
                    "description": "The pattern will match if it is contained within the actual class name.\n"
                },
                "messagePattern": {
                    "type": "string",
                    "description": "Optionally, define an exception message pattern. The pattern will match if the actual exception message contains the pattern.\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ServiceFailureExceptionRulesSuccessForcingExceptions:ServiceFailureExceptionRulesSuccessForcingExceptions": {
            "properties": {
                "customHandledExceptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledException:ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledException"
                    }
                }
            },
            "type": "object",
            "required": [
                "customHandledExceptions"
            ]
        },
        "dynatrace:index/ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledException:ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledException": {
            "properties": {
                "classPattern": {
                    "type": "string",
                    "description": "The pattern will match if it is contained within the actual class name.\n"
                },
                "messagePattern": {
                    "type": "string",
                    "description": "Optionally, define an exception message pattern. The pattern will match if the actual exception message contains the pattern.\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ServiceFullWebRequestConditions:ServiceFullWebRequestConditions": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceFullWebRequestConditionsCondition:ServiceFullWebRequestConditionsCondition"
                    }
                }
            },
            "type": "object",
            "required": [
                "conditions"
            ]
        },
        "dynatrace:index/ServiceFullWebRequestConditionsCondition:ServiceFullWebRequestConditionsCondition": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "description": "Take the value of this attribute\n"
                },
                "compareOperationType": {
                    "type": "string",
                    "description": "Apply this operation\n"
                },
                "frameworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Technology\n"
                },
                "ignoreCase": {
                    "type": "boolean",
                    "description": "Ignore case sensitivity for texts.\n"
                },
                "intValue": {
                    "type": "integer",
                    "description": "Value\n"
                },
                "intValues": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Values\n"
                },
                "ipRangeFrom": {
                    "type": "string",
                    "description": "From\n"
                },
                "ipRangeTo": {
                    "type": "string",
                    "description": "To\n"
                },
                "tagValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "If multiple values are specified, at least one of them must match for the condition to match\n"
                },
                "textValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "If multiple values are specified, at least one of them must match for the condition to match\n"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "compareOperationType"
            ]
        },
        "dynatrace:index/ServiceFullWebRequestIdContributors:ServiceFullWebRequestIdContributors": {
            "properties": {
                "applicationId": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebRequestIdContributorsApplicationId:ServiceFullWebRequestIdContributorsApplicationId",
                    "description": "Application identifier\n"
                },
                "contextRoot": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebRequestIdContributorsContextRoot:ServiceFullWebRequestIdContributorsContextRoot",
                    "description": "The context root is the first segment of the request URL after the Server name. For example, in the `www.dynatrace.com/support/help/dynatrace-api/` URL the context root is `/support`. The context root value can be found on the **Service overview page** under **Properties and tags**.\n"
                },
                "serverName": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebRequestIdContributorsServerName:ServiceFullWebRequestIdContributorsServerName",
                    "description": "Server Name\n"
                }
            },
            "type": "object",
            "required": [
                "applicationId",
                "contextRoot",
                "serverName"
            ]
        },
        "dynatrace:index/ServiceFullWebRequestIdContributorsApplicationId:ServiceFullWebRequestIdContributorsApplicationId": {
            "properties": {
                "enableIdContributor": {
                    "type": "boolean",
                    "description": "Transform this value before letting it contribute to the Service Id\n"
                },
                "serviceIdContributor": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributor:ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributor",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "enableIdContributor"
            ]
        },
        "dynatrace:index/ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributor:ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributor": {
            "properties": {
                "contributionType": {
                    "type": "string",
                    "description": "Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`\n"
                },
                "transformations": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformations:ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformations",
                    "description": "Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.\n"
                },
                "valueOverride": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride:ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride",
                    "description": "The value to be used instead of the detected value.\n"
                }
            },
            "type": "object",
            "required": [
                "contributionType"
            ]
        },
        "dynatrace:index/ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformations:ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformations": {
            "properties": {
                "transformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation:ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation"
                    }
                }
            },
            "type": "object",
            "required": [
                "transformations"
            ]
        },
        "dynatrace:index/ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation:ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation": {
            "properties": {
                "includeHexNumbers": {
                    "type": "boolean",
                    "description": "include hexadecimal numbers\n"
                },
                "minDigitCount": {
                    "type": "integer",
                    "description": "min digit count\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "replacementValue": {
                    "type": "string",
                    "description": "replacement\n"
                },
                "segmentCount": {
                    "type": "integer",
                    "description": "How many segments should be taken.\n"
                },
                "selectIndex": {
                    "type": "integer",
                    "description": "select index\n"
                },
                "splitDelimiter": {
                    "type": "string",
                    "description": "split by\n"
                },
                "suffix": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "takeFromEnd": {
                    "type": "boolean",
                    "description": "take from end\n"
                },
                "transformationType": {
                    "type": "string",
                    "description": "Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`\n"
                }
            },
            "type": "object",
            "required": [
                "transformationType"
            ]
        },
        "dynatrace:index/ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride:ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride": {
            "properties": {
                "value": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "dynatrace:index/ServiceFullWebRequestIdContributorsContextRoot:ServiceFullWebRequestIdContributorsContextRoot": {
            "properties": {
                "enableIdContributor": {
                    "type": "boolean",
                    "description": "Transform this value before letting it contribute to the Service Id\n"
                },
                "serviceIdContributor": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebRequestIdContributorsContextRootServiceIdContributor:ServiceFullWebRequestIdContributorsContextRootServiceIdContributor",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "enableIdContributor"
            ]
        },
        "dynatrace:index/ServiceFullWebRequestIdContributorsContextRootServiceIdContributor:ServiceFullWebRequestIdContributorsContextRootServiceIdContributor": {
            "properties": {
                "contributionType": {
                    "type": "string",
                    "description": "Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`\n"
                },
                "segmentCount": {
                    "type": "integer",
                    "description": "How many segments should be taken.\n"
                },
                "transformations": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformations:ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformations",
                    "description": "Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.\n"
                },
                "valueOverride": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverride:ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverride",
                    "description": "The value to be used instead of the detected value.\n"
                }
            },
            "type": "object",
            "required": [
                "contributionType"
            ]
        },
        "dynatrace:index/ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformations:ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformations": {
            "properties": {
                "transformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation:ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation"
                    }
                }
            },
            "type": "object",
            "required": [
                "transformations"
            ]
        },
        "dynatrace:index/ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation:ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation": {
            "properties": {
                "includeHexNumbers": {
                    "type": "boolean",
                    "description": "include hexadecimal numbers\n"
                },
                "minDigitCount": {
                    "type": "integer",
                    "description": "min digit count\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "replacementValue": {
                    "type": "string",
                    "description": "replacement\n"
                },
                "suffix": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "transformationType": {
                    "type": "string",
                    "description": "Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`\n"
                }
            },
            "type": "object",
            "required": [
                "transformationType"
            ]
        },
        "dynatrace:index/ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverride:ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverride": {
            "properties": {
                "value": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "dynatrace:index/ServiceFullWebRequestIdContributorsServerName:ServiceFullWebRequestIdContributorsServerName": {
            "properties": {
                "enableIdContributor": {
                    "type": "boolean",
                    "description": "Transform this value before letting it contribute to the Service Id\n"
                },
                "serviceIdContributor": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebRequestIdContributorsServerNameServiceIdContributor:ServiceFullWebRequestIdContributorsServerNameServiceIdContributor",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "enableIdContributor"
            ]
        },
        "dynatrace:index/ServiceFullWebRequestIdContributorsServerNameServiceIdContributor:ServiceFullWebRequestIdContributorsServerNameServiceIdContributor": {
            "properties": {
                "contributionType": {
                    "type": "string",
                    "description": "Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`\n"
                },
                "transformations": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformations:ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformations",
                    "description": "Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.\n"
                },
                "valueOverride": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverride:ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverride",
                    "description": "The value to be used instead of the detected value.\n"
                }
            },
            "type": "object",
            "required": [
                "contributionType"
            ]
        },
        "dynatrace:index/ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformations:ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformations": {
            "properties": {
                "transformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformation:ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformation"
                    }
                }
            },
            "type": "object",
            "required": [
                "transformations"
            ]
        },
        "dynatrace:index/ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformation:ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformation": {
            "properties": {
                "includeHexNumbers": {
                    "type": "boolean",
                    "description": "include hexadecimal numbers\n"
                },
                "minDigitCount": {
                    "type": "integer",
                    "description": "min digit count\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "replacementValue": {
                    "type": "string",
                    "description": "replacement\n"
                },
                "segmentCount": {
                    "type": "integer",
                    "description": "How many segments should be taken.\n"
                },
                "selectIndex": {
                    "type": "integer",
                    "description": "select index\n"
                },
                "splitDelimiter": {
                    "type": "string",
                    "description": "split by\n"
                },
                "suffix": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "takeFromEnd": {
                    "type": "boolean",
                    "description": "take from end\n"
                },
                "transformationType": {
                    "type": "string",
                    "description": "Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`\n"
                }
            },
            "type": "object",
            "required": [
                "transformationType"
            ]
        },
        "dynatrace:index/ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverride:ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverride": {
            "properties": {
                "value": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceConditions:ServiceFullWebServiceConditions": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceFullWebServiceConditionsCondition:ServiceFullWebServiceConditionsCondition"
                    }
                }
            },
            "type": "object",
            "required": [
                "conditions"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceConditionsCondition:ServiceFullWebServiceConditionsCondition": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "description": "Take the value of this attribute\n"
                },
                "compareOperationType": {
                    "type": "string",
                    "description": "Apply this operation\n"
                },
                "frameworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Technology\n"
                },
                "ignoreCase": {
                    "type": "boolean",
                    "description": "Ignore case sensitivity for texts.\n"
                },
                "intValue": {
                    "type": "integer",
                    "description": "Value\n"
                },
                "intValues": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Values\n"
                },
                "ipRangeFrom": {
                    "type": "string",
                    "description": "From\n"
                },
                "ipRangeTo": {
                    "type": "string",
                    "description": "To\n"
                },
                "tagValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "If multiple values are specified, at least one of them must match for the condition to match\n"
                },
                "textValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "If multiple values are specified, at least one of them must match for the condition to match\n"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "compareOperationType"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceIdContributors:ServiceFullWebServiceIdContributors": {
            "properties": {
                "applicationId": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributorsApplicationId:ServiceFullWebServiceIdContributorsApplicationId"
                },
                "contextRoot": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributorsContextRoot:ServiceFullWebServiceIdContributorsContextRoot"
                },
                "detectAsWebRequestService": {
                    "type": "boolean",
                    "description": "Detect the matching requests as full web services (false) or web request services (true).\n"
                },
                "serverName": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributorsServerName:ServiceFullWebServiceIdContributorsServerName"
                },
                "webServiceName": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributorsWebServiceName:ServiceFullWebServiceIdContributorsWebServiceName"
                },
                "webServiceNamespace": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributorsWebServiceNamespace:ServiceFullWebServiceIdContributorsWebServiceNamespace"
                }
            },
            "type": "object",
            "required": [
                "detectAsWebRequestService"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceIdContributorsApplicationId:ServiceFullWebServiceIdContributorsApplicationId": {
            "properties": {
                "enableIdContributor": {
                    "type": "boolean",
                    "description": "Transform this value before letting it contribute to the Service Id\n"
                },
                "serviceIdContributor": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributor:ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributor",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "enableIdContributor"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributor:ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributor": {
            "properties": {
                "contributionType": {
                    "type": "string",
                    "description": "Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`\n"
                },
                "transformations": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformations:ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformations",
                    "description": "Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.\n"
                },
                "valueOverride": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverride:ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverride",
                    "description": "The value to be used instead of the detected value.\n"
                }
            },
            "type": "object",
            "required": [
                "contributionType"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformations:ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformations": {
            "properties": {
                "transformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformation:ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformation"
                    }
                }
            },
            "type": "object",
            "required": [
                "transformations"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformation:ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformation": {
            "properties": {
                "includeHexNumbers": {
                    "type": "boolean",
                    "description": "include hexadecimal numbers\n"
                },
                "minDigitCount": {
                    "type": "integer",
                    "description": "min digit count\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "replacementValue": {
                    "type": "string",
                    "description": "replacement\n"
                },
                "segmentCount": {
                    "type": "integer",
                    "description": "How many segments should be taken.\n"
                },
                "selectIndex": {
                    "type": "integer",
                    "description": "select index\n"
                },
                "splitDelimiter": {
                    "type": "string",
                    "description": "split by\n"
                },
                "suffix": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "takeFromEnd": {
                    "type": "boolean",
                    "description": "take from end\n"
                },
                "transformationType": {
                    "type": "string",
                    "description": "Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`\n"
                }
            },
            "type": "object",
            "required": [
                "transformationType"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverride:ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverride": {
            "properties": {
                "value": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceIdContributorsContextRoot:ServiceFullWebServiceIdContributorsContextRoot": {
            "properties": {
                "enableIdContributor": {
                    "type": "boolean",
                    "description": "Transform this value before letting it contribute to the Service Id\n"
                },
                "serviceIdContributor": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributorsContextRootServiceIdContributor:ServiceFullWebServiceIdContributorsContextRootServiceIdContributor",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "enableIdContributor"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceIdContributorsContextRootServiceIdContributor:ServiceFullWebServiceIdContributorsContextRootServiceIdContributor": {
            "properties": {
                "contributionType": {
                    "type": "string",
                    "description": "Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`\n"
                },
                "segmentCount": {
                    "type": "integer",
                    "description": "How many segments should be taken.\n"
                },
                "transformations": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformations:ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformations",
                    "description": "Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.\n"
                },
                "valueOverride": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverride:ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverride",
                    "description": "The value to be used instead of the detected value.\n"
                }
            },
            "type": "object",
            "required": [
                "contributionType"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformations:ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformations": {
            "properties": {
                "transformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformation:ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformation"
                    }
                }
            },
            "type": "object",
            "required": [
                "transformations"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformation:ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformation": {
            "properties": {
                "includeHexNumbers": {
                    "type": "boolean",
                    "description": "include hexadecimal numbers\n"
                },
                "minDigitCount": {
                    "type": "integer",
                    "description": "min digit count\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "replacementValue": {
                    "type": "string",
                    "description": "replacement\n"
                },
                "suffix": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "transformationType": {
                    "type": "string",
                    "description": "Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`\n"
                }
            },
            "type": "object",
            "required": [
                "transformationType"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverride:ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverride": {
            "properties": {
                "value": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceIdContributorsServerName:ServiceFullWebServiceIdContributorsServerName": {
            "properties": {
                "enableIdContributor": {
                    "type": "boolean",
                    "description": "Transform this value before letting it contribute to the Service Id\n"
                },
                "serviceIdContributor": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributorsServerNameServiceIdContributor:ServiceFullWebServiceIdContributorsServerNameServiceIdContributor",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "enableIdContributor"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceIdContributorsServerNameServiceIdContributor:ServiceFullWebServiceIdContributorsServerNameServiceIdContributor": {
            "properties": {
                "contributionType": {
                    "type": "string",
                    "description": "Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`\n"
                },
                "transformations": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformations:ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformations",
                    "description": "Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.\n"
                },
                "valueOverride": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverride:ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverride",
                    "description": "The value to be used instead of the detected value.\n"
                }
            },
            "type": "object",
            "required": [
                "contributionType"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformations:ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformations": {
            "properties": {
                "transformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformation:ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformation"
                    }
                }
            },
            "type": "object",
            "required": [
                "transformations"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformation:ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformation": {
            "properties": {
                "includeHexNumbers": {
                    "type": "boolean",
                    "description": "include hexadecimal numbers\n"
                },
                "minDigitCount": {
                    "type": "integer",
                    "description": "min digit count\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "replacementValue": {
                    "type": "string",
                    "description": "replacement\n"
                },
                "segmentCount": {
                    "type": "integer",
                    "description": "How many segments should be taken.\n"
                },
                "selectIndex": {
                    "type": "integer",
                    "description": "select index\n"
                },
                "splitDelimiter": {
                    "type": "string",
                    "description": "split by\n"
                },
                "suffix": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "takeFromEnd": {
                    "type": "boolean",
                    "description": "take from end\n"
                },
                "transformationType": {
                    "type": "string",
                    "description": "Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`\n"
                }
            },
            "type": "object",
            "required": [
                "transformationType"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverride:ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverride": {
            "properties": {
                "value": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceIdContributorsWebServiceName:ServiceFullWebServiceIdContributorsWebServiceName": {
            "properties": {
                "enableIdContributor": {
                    "type": "boolean",
                    "description": "Transform this value before letting it contribute to the Service Id\n"
                },
                "serviceIdContributor": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributor:ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributor",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "enableIdContributor"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributor:ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributor": {
            "properties": {
                "contributionType": {
                    "type": "string",
                    "description": "Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`\n"
                },
                "transformations": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformations:ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformations",
                    "description": "Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.\n"
                },
                "valueOverride": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverride:ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverride",
                    "description": "The value to be used instead of the detected value.\n"
                }
            },
            "type": "object",
            "required": [
                "contributionType"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformations:ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformations": {
            "properties": {
                "transformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformation:ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformation"
                    }
                }
            },
            "type": "object",
            "required": [
                "transformations"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformation:ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformation": {
            "properties": {
                "includeHexNumbers": {
                    "type": "boolean",
                    "description": "include hexadecimal numbers\n"
                },
                "minDigitCount": {
                    "type": "integer",
                    "description": "min digit count\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "replacementValue": {
                    "type": "string",
                    "description": "replacement\n"
                },
                "segmentCount": {
                    "type": "integer",
                    "description": "How many segments should be taken.\n"
                },
                "selectIndex": {
                    "type": "integer",
                    "description": "select index\n"
                },
                "splitDelimiter": {
                    "type": "string",
                    "description": "split by\n"
                },
                "suffix": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "takeFromEnd": {
                    "type": "boolean",
                    "description": "take from end\n"
                },
                "transformationType": {
                    "type": "string",
                    "description": "Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`\n"
                }
            },
            "type": "object",
            "required": [
                "transformationType"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverride:ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverride": {
            "properties": {
                "value": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceIdContributorsWebServiceNamespace:ServiceFullWebServiceIdContributorsWebServiceNamespace": {
            "properties": {
                "enableIdContributor": {
                    "type": "boolean",
                    "description": "Transform this value before letting it contribute to the Service Id\n"
                },
                "serviceIdContributor": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributor:ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributor",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "enableIdContributor"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributor:ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributor": {
            "properties": {
                "contributionType": {
                    "type": "string",
                    "description": "Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`\n"
                },
                "transformations": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformations:ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformations",
                    "description": "Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.\n"
                },
                "valueOverride": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverride:ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverride",
                    "description": "The value to be used instead of the detected value.\n"
                }
            },
            "type": "object",
            "required": [
                "contributionType"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformations:ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformations": {
            "properties": {
                "transformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformation:ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformation"
                    }
                }
            },
            "type": "object",
            "required": [
                "transformations"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformation:ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformation": {
            "properties": {
                "includeHexNumbers": {
                    "type": "boolean",
                    "description": "include hexadecimal numbers\n"
                },
                "minDigitCount": {
                    "type": "integer",
                    "description": "min digit count\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "replacementValue": {
                    "type": "string",
                    "description": "replacement\n"
                },
                "segmentCount": {
                    "type": "integer",
                    "description": "How many segments should be taken.\n"
                },
                "selectIndex": {
                    "type": "integer",
                    "description": "select index\n"
                },
                "splitDelimiter": {
                    "type": "string",
                    "description": "split by\n"
                },
                "suffix": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "takeFromEnd": {
                    "type": "boolean",
                    "description": "take from end\n"
                },
                "transformationType": {
                    "type": "string",
                    "description": "Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`\n"
                }
            },
            "type": "object",
            "required": [
                "transformationType"
            ]
        },
        "dynatrace:index/ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverride:ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverride": {
            "properties": {
                "value": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "dynatrace:index/ServiceHttpFailureBrokenLinks:ServiceHttpFailureBrokenLinks": {
            "properties": {
                "brokenLinkDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "If your application relies on other hosts at other domains, add the associated domain names here. Once configured, Dynatrace will consider 404s thrown by hosts at these domains to be service failures related to your application.\n"
                },
                "http404NotFoundFailures": {
                    "type": "boolean",
                    "description": "Consider 404 HTTP response codes as failures\n"
                }
            },
            "type": "object",
            "required": [
                "http404NotFoundFailures"
            ]
        },
        "dynatrace:index/ServiceHttpFailureHttpResponseCodes:ServiceHttpFailureHttpResponseCodes": {
            "properties": {
                "clientSideErrors": {
                    "type": "string",
                    "description": "HTTP response codes which indicate client side errors\n"
                },
                "failOnMissingResponseCodeClientSide": {
                    "type": "boolean",
                    "description": "Treat missing HTTP response code as client side error\n"
                },
                "failOnMissingResponseCodeServerSide": {
                    "type": "boolean",
                    "description": "Treat missing HTTP response code as server side errors\n"
                },
                "serverSideErrors": {
                    "type": "string",
                    "description": "HTTP response codes which indicate an error on the server side\n"
                }
            },
            "type": "object",
            "required": [
                "clientSideErrors",
                "failOnMissingResponseCodeClientSide",
                "failOnMissingResponseCodeServerSide",
                "serverSideErrors"
            ]
        },
        "dynatrace:index/ServiceNamingCondition:ServiceNamingCondition": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionCondition:ServiceNamingConditionCondition"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/ServiceNamingConditionCondition:ServiceNamingConditionCondition": {
            "properties": {
                "applicationTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionApplicationTypeComparison:ServiceNamingConditionConditionApplicationTypeComparison"
                    },
                    "deprecationMessage": "You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "applicationTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionApplicationType:ServiceNamingConditionConditionApplicationType"
                    }
                },
                "azureComputeModeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionAzureComputeModeComparison:ServiceNamingConditionConditionAzureComputeModeComparison"
                    }
                },
                "azureComputeModes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionAzureComputeMode:ServiceNamingConditionConditionAzureComputeMode"
                    },
                    "deprecationMessage": "You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility."
                },
                "azureSkuComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionAzureSkuComparision:ServiceNamingConditionConditionAzureSkuComparision"
                    },
                    "deprecationMessage": "You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility."
                },
                "azureSkus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionAzureSkus:ServiceNamingConditionConditionAzureSkus"
                    }
                },
                "baseComparisonBasics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionBaseComparisonBasic:ServiceNamingConditionConditionBaseComparisonBasic"
                    },
                    "deprecationMessage": "You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility."
                },
                "baseConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionBaseConditionKey:ServiceNamingConditionConditionBaseConditionKey"
                    },
                    "deprecationMessage": "'base_condition_key' is deprecated. You should use 'key'"
                },
                "bitnessComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionBitnessComparision:ServiceNamingConditionConditionBitnessComparision"
                    },
                    "deprecationMessage": "You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility."
                },
                "bitnesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionBitness:ServiceNamingConditionConditionBitness"
                    }
                },
                "cloudTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionCloudTypeComparison:ServiceNamingConditionConditionCloudTypeComparison"
                    },
                    "deprecationMessage": "You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "cloudTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionCloudType:ServiceNamingConditionConditionCloudType"
                    }
                },
                "comparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionComparison:ServiceNamingConditionConditionComparison"
                    }
                },
                "customApplicationTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionCustomApplicationTypeComparison:ServiceNamingConditionConditionCustomApplicationTypeComparison"
                    },
                    "deprecationMessage": "You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "customApplicationTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionCustomApplicationType:ServiceNamingConditionConditionCustomApplicationType"
                    }
                },
                "customHostMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionCustomHostMetadataConditionKey:ServiceNamingConditionConditionCustomHostMetadataConditionKey"
                    },
                    "deprecationMessage": "'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'"
                },
                "customHostMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionCustomHostMetadata:ServiceNamingConditionConditionCustomHostMetadata"
                    }
                },
                "customProcessMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionCustomProcessMetadataConditionKey:ServiceNamingConditionConditionCustomProcessMetadataConditionKey"
                    },
                    "deprecationMessage": "'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'"
                },
                "customProcessMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionCustomProcessMetadata:ServiceNamingConditionConditionCustomProcessMetadata"
                    }
                },
                "databaseTopologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionDatabaseTopology:ServiceNamingConditionConditionDatabaseTopology"
                    }
                },
                "databaseTopologyComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionDatabaseTopologyComparison:ServiceNamingConditionConditionDatabaseTopologyComparison"
                    },
                    "deprecationMessage": "You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility."
                },
                "dcrumDecoderComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionDcrumDecoderComparison:ServiceNamingConditionConditionDcrumDecoderComparison"
                    },
                    "deprecationMessage": "You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility."
                },
                "dcrumDecoders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionDcrumDecoder:ServiceNamingConditionConditionDcrumDecoder"
                    }
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionEntity:ServiceNamingConditionConditionEntity"
                    }
                },
                "entityIdComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionEntityIdComparison:ServiceNamingConditionConditionEntityIdComparison"
                    },
                    "deprecationMessage": "You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility."
                },
                "hostTeches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionHostTech:ServiceNamingConditionConditionHostTech"
                    }
                },
                "hypervisorTypeComparisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionHypervisorTypeComparision:ServiceNamingConditionConditionHypervisorTypeComparision"
                    },
                    "deprecationMessage": "`hypervisor_type_comparision` is deprecated. Use `hypervisor` instead"
                },
                "hypervisors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionHypervisor:ServiceNamingConditionConditionHypervisor"
                    }
                },
                "indexedNameComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionIndexedNameComparison:ServiceNamingConditionConditionIndexedNameComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility."
                },
                "indexedNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionIndexedName:ServiceNamingConditionConditionIndexedName"
                    }
                },
                "indexedStringComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionIndexedStringComparison:ServiceNamingConditionConditionIndexedStringComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility."
                },
                "indexedStrings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionIndexedString:ServiceNamingConditionConditionIndexedString"
                    }
                },
                "indexedTagComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionIndexedTagComparison:ServiceNamingConditionConditionIndexedTagComparison"
                    },
                    "deprecationMessage": "You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility."
                },
                "indexedTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionIndexedTag:ServiceNamingConditionConditionIndexedTag"
                    }
                },
                "integerComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionIntegerComparison:ServiceNamingConditionConditionIntegerComparison"
                    },
                    "deprecationMessage": "You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility."
                },
                "integers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionInteger:ServiceNamingConditionConditionInteger"
                    }
                },
                "ipaddressComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionIpaddressComparison:ServiceNamingConditionConditionIpaddressComparison"
                    },
                    "deprecationMessage": "You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility."
                },
                "ipaddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionIpaddress:ServiceNamingConditionConditionIpaddress"
                    }
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionKey:ServiceNamingConditionConditionKey"
                    }
                },
                "mobilePlatformComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionMobilePlatformComparison:ServiceNamingConditionConditionMobilePlatformComparison"
                    },
                    "deprecationMessage": "You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility."
                },
                "mobilePlatforms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionMobilePlatform:ServiceNamingConditionConditionMobilePlatform"
                    }
                },
                "osArches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionOsArch:ServiceNamingConditionConditionOsArch"
                    }
                },
                "osTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionOsType:ServiceNamingConditionConditionOsType"
                    }
                },
                "osarchitectureComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionOsarchitectureComparison:ServiceNamingConditionConditionOsarchitectureComparison"
                    },
                    "deprecationMessage": "You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility."
                },
                "ostypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionOstypeComparison:ServiceNamingConditionConditionOstypeComparison"
                    },
                    "deprecationMessage": "You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility."
                },
                "paasTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionPaasTypeComparison:ServiceNamingConditionConditionPaasTypeComparison"
                    },
                    "deprecationMessage": "You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "paasTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionPaasType:ServiceNamingConditionConditionPaasType"
                    }
                },
                "processMetadataConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionProcessMetadataConditionKey:ServiceNamingConditionConditionProcessMetadataConditionKey"
                    },
                    "deprecationMessage": "'process_metadata_condition_key' is deprecated. You should use 'process_metadata'"
                },
                "processMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionProcessMetadata:ServiceNamingConditionConditionProcessMetadata"
                    }
                },
                "serviceTopologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionServiceTopology:ServiceNamingConditionConditionServiceTopology"
                    }
                },
                "serviceTopologyComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionServiceTopologyComparison:ServiceNamingConditionConditionServiceTopologyComparison"
                    },
                    "deprecationMessage": "You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility."
                },
                "serviceTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionServiceTypeComparison:ServiceNamingConditionConditionServiceTypeComparison"
                    },
                    "deprecationMessage": "You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "serviceTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionServiceType:ServiceNamingConditionConditionServiceType"
                    }
                },
                "simpleHostTechComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionSimpleHostTechComparison:ServiceNamingConditionConditionSimpleHostTechComparison"
                    },
                    "deprecationMessage": "You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility."
                },
                "simpleTechComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionSimpleTechComparison:ServiceNamingConditionConditionSimpleTechComparison"
                    },
                    "deprecationMessage": "You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility."
                },
                "stringComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionStringComparison:ServiceNamingConditionConditionStringComparison"
                    },
                    "deprecationMessage": "You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility."
                },
                "stringConditionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionStringConditionKey:ServiceNamingConditionConditionStringConditionKey"
                    },
                    "deprecationMessage": "'string_condition_key' is deprecated. You should use 'string_key'"
                },
                "stringKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionStringKey:ServiceNamingConditionConditionStringKey"
                    }
                },
                "strings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionString:ServiceNamingConditionConditionString"
                    }
                },
                "syntheticEngineTypeComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionSyntheticEngineTypeComparison:ServiceNamingConditionConditionSyntheticEngineTypeComparison"
                    },
                    "deprecationMessage": "You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility."
                },
                "syntheticEngines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionSyntheticEngine:ServiceNamingConditionConditionSyntheticEngine"
                    }
                },
                "tagComparisons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionTagComparison:ServiceNamingConditionConditionTagComparison"
                    },
                    "deprecationMessage": "You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionTag:ServiceNamingConditionConditionTag"
                    }
                },
                "teches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionTech:ServiceNamingConditionConditionTech"
                    }
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ServiceNamingConditionConditionApplicationType:ServiceNamingConditionConditionApplicationType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionApplicationTypeComparison:ServiceNamingConditionConditionApplicationTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionAzureComputeMode:ServiceNamingConditionConditionAzureComputeMode": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionAzureComputeModeComparison:ServiceNamingConditionConditionAzureComputeModeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionAzureSkuComparision:ServiceNamingConditionConditionAzureSkuComparision": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionAzureSkus:ServiceNamingConditionConditionAzureSkus": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionBaseComparisonBasic:ServiceNamingConditionConditionBaseComparisonBasic": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionBaseConditionKey:ServiceNamingConditionConditionBaseConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionBitness:ServiceNamingConditionConditionBitness": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionBitnessComparision:ServiceNamingConditionConditionBitnessComparision": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionCloudType:ServiceNamingConditionConditionCloudType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionCloudTypeComparison:ServiceNamingConditionConditionCloudTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionComparison:ServiceNamingConditionConditionComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionCustomApplicationType:ServiceNamingConditionConditionCustomApplicationType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionCustomApplicationTypeComparison:ServiceNamingConditionConditionCustomApplicationTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionCustomHostMetadata:ServiceNamingConditionConditionCustomHostMetadata": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionCustomHostMetadataDynamicKey:ServiceNamingConditionConditionCustomHostMetadataDynamicKey"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionCustomHostMetadataConditionKey:ServiceNamingConditionConditionCustomHostMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey:ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey:ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionCustomHostMetadataDynamicKey:ServiceNamingConditionConditionCustomHostMetadataDynamicKey": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionCustomProcessMetadata:ServiceNamingConditionConditionCustomProcessMetadata": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionCustomProcessMetadataDynamicKey:ServiceNamingConditionConditionCustomProcessMetadataDynamicKey"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionCustomProcessMetadataConditionKey:ServiceNamingConditionConditionCustomProcessMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey:ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey:ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionCustomProcessMetadataDynamicKey:ServiceNamingConditionConditionCustomProcessMetadataDynamicKey": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "source"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionDatabaseTopology:ServiceNamingConditionConditionDatabaseTopology": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionDatabaseTopologyComparison:ServiceNamingConditionConditionDatabaseTopologyComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionDcrumDecoder:ServiceNamingConditionConditionDcrumDecoder": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionDcrumDecoderComparison:ServiceNamingConditionConditionDcrumDecoderComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionEntity:ServiceNamingConditionConditionEntity": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionEntityIdComparison:ServiceNamingConditionConditionEntityIdComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionHostTech:ServiceNamingConditionConditionHostTech": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionHostTechValue:ServiceNamingConditionConditionHostTechValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionHostTechValue:ServiceNamingConditionConditionHostTechValue": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "verbatimType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ServiceNamingConditionConditionHypervisor:ServiceNamingConditionConditionHypervisor": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionHypervisorTypeComparision:ServiceNamingConditionConditionHypervisorTypeComparision": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionIndexedName:ServiceNamingConditionConditionIndexedName": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionIndexedNameComparison:ServiceNamingConditionConditionIndexedNameComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionIndexedString:ServiceNamingConditionConditionIndexedString": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionIndexedStringComparison:ServiceNamingConditionConditionIndexedStringComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionIndexedTag:ServiceNamingConditionConditionIndexedTag": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionIndexedTagValue:ServiceNamingConditionConditionIndexedTagValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionIndexedTagComparison:ServiceNamingConditionConditionIndexedTagComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionIndexedTagComparisonValue:ServiceNamingConditionConditionIndexedTagComparisonValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionIndexedTagComparisonValue:ServiceNamingConditionConditionIndexedTagComparisonValue": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionIndexedTagValue:ServiceNamingConditionConditionIndexedTagValue": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionInteger:ServiceNamingConditionConditionInteger": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionIntegerComparison:ServiceNamingConditionConditionIntegerComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionIpaddress:ServiceNamingConditionConditionIpaddress": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionIpaddressComparison:ServiceNamingConditionConditionIpaddressComparison": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionKey:ServiceNamingConditionConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionMobilePlatform:ServiceNamingConditionConditionMobilePlatform": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionMobilePlatformComparison:ServiceNamingConditionConditionMobilePlatformComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionOsArch:ServiceNamingConditionConditionOsArch": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionOsType:ServiceNamingConditionConditionOsType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionOsarchitectureComparison:ServiceNamingConditionConditionOsarchitectureComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionOstypeComparison:ServiceNamingConditionConditionOstypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionPaasType:ServiceNamingConditionConditionPaasType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionPaasTypeComparison:ServiceNamingConditionConditionPaasTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionProcessMetadata:ServiceNamingConditionConditionProcessMetadata": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionProcessMetadataConditionKey:ServiceNamingConditionConditionProcessMetadataConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionServiceTopology:ServiceNamingConditionConditionServiceTopology": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionServiceTopologyComparison:ServiceNamingConditionConditionServiceTopologyComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionServiceType:ServiceNamingConditionConditionServiceType": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionServiceTypeComparison:ServiceNamingConditionConditionServiceTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionSimpleHostTechComparison:ServiceNamingConditionConditionSimpleHostTechComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionSimpleHostTechComparisonValue:ServiceNamingConditionConditionSimpleHostTechComparisonValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionSimpleHostTechComparisonValue:ServiceNamingConditionConditionSimpleHostTechComparisonValue": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "verbatimType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ServiceNamingConditionConditionSimpleTechComparison:ServiceNamingConditionConditionSimpleTechComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionSimpleTechComparisonValue:ServiceNamingConditionConditionSimpleTechComparisonValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionSimpleTechComparisonValue:ServiceNamingConditionConditionSimpleTechComparisonValue": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "verbatimType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/ServiceNamingConditionConditionString:ServiceNamingConditionConditionString": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionStringComparison:ServiceNamingConditionConditionStringComparison": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean"
                },
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionStringConditionKey:ServiceNamingConditionConditionStringConditionKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionStringKey:ServiceNamingConditionConditionStringKey": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "dynamicKey": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "dynamicKey"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionSyntheticEngine:ServiceNamingConditionConditionSyntheticEngine": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionSyntheticEngineTypeComparison:ServiceNamingConditionConditionSyntheticEngineTypeComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionTag:ServiceNamingConditionConditionTag": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionTagValue:ServiceNamingConditionConditionTagValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionTagComparison:ServiceNamingConditionConditionTagComparison": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "The value of the attribute type is implicit, therefore shouldn't get specified"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionTagComparisonValue:ServiceNamingConditionConditionTagComparisonValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionTagComparisonValue:ServiceNamingConditionConditionTagComparisonValue": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionTagValue:ServiceNamingConditionConditionTagValue": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionTech:ServiceNamingConditionConditionTech": {
            "properties": {
                "negate": {
                    "type": "boolean"
                },
                "operator": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/ServiceNamingConditionConditionTechValue:ServiceNamingConditionConditionTechValue"
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "dynatrace:index/ServiceNamingConditionConditionTechValue:ServiceNamingConditionConditionTechValue": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "unknowns": {
                    "type": "string"
                },
                "verbatimType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "dynatrace:index/SessionReplayWebPrivacyMaskingPresets:SessionReplayWebPrivacyMaskingPresets": {
            "properties": {
                "playbackMaskingAllowListRules": {
                    "$ref": "#/types/dynatrace:index/SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRules:SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRules",
                    "description": "(Field has overlap with `dynatrace.ApplicationDataPrivacy`) The elements are defined by the CSS selector or attribute name.\n"
                },
                "playbackMaskingBlockListRules": {
                    "$ref": "#/types/dynatrace:index/SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRules:SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRules",
                    "description": "(Field has overlap with `dynatrace.ApplicationDataPrivacy`) The elements are defined by the CSS selector or attribute name.\n"
                },
                "playbackMaskingPreset": {
                    "type": "string",
                    "description": "(Field has overlap with `dynatrace.ApplicationDataPrivacy`) Possible Values: `MASK_ALL`, `MASK_USER_INPUT`, `ALLOW_LIST`, `BLOCK_LIST`\n"
                },
                "recordingMaskingAllowListRules": {
                    "$ref": "#/types/dynatrace:index/SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRules:SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRules",
                    "description": "(Field has overlap with `dynatrace.ApplicationDataPrivacy`) The elements are defined by the CSS selector or attribute name.\n"
                },
                "recordingMaskingBlockListRules": {
                    "$ref": "#/types/dynatrace:index/SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRules:SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRules",
                    "description": "(Field has overlap with `dynatrace.ApplicationDataPrivacy`) The elements are defined by the CSS selector or attribute name.\n"
                },
                "recordingMaskingPreset": {
                    "type": "string",
                    "description": "(Field has overlap with `dynatrace.ApplicationDataPrivacy`) Possible Values: `MASK_USER_INPUT`, `ALLOW_LIST`, `BLOCK_LIST`, `MASK_ALL`\n"
                }
            },
            "type": "object",
            "required": [
                "playbackMaskingPreset",
                "recordingMaskingPreset"
            ]
        },
        "dynatrace:index/SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRules:SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRules": {
            "properties": {
                "allowListRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRule:SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRule"
                    }
                }
            },
            "type": "object",
            "required": [
                "allowListRules"
            ]
        },
        "dynatrace:index/SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRule:SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRule": {
            "properties": {
                "attributeExpression": {
                    "type": "string",
                    "description": "Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.\n"
                },
                "cssExpression": {
                    "type": "string",
                    "description": "Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Possible Values: `ATTRIBUTE`, `ELEMENT`\n"
                }
            },
            "type": "object",
            "required": [
                "target"
            ]
        },
        "dynatrace:index/SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRules:SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRules": {
            "properties": {
                "blockListRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRule:SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRule"
                    }
                }
            },
            "type": "object",
            "required": [
                "blockListRules"
            ]
        },
        "dynatrace:index/SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRule:SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRule": {
            "properties": {
                "attributeExpression": {
                    "type": "string",
                    "description": "Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.\n"
                },
                "cssExpression": {
                    "type": "string",
                    "description": "Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.\n"
                },
                "hideUserInteraction": {
                    "type": "boolean",
                    "description": "Hide user interactions with these elements, including clicks that expand elements, highlighting that results from hovering a cursor over an option, and selection of specific form options.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Possible Values: `ATTRIBUTE`, `ELEMENT`\n"
                }
            },
            "type": "object",
            "required": [
                "target"
            ]
        },
        "dynatrace:index/SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRules:SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRules": {
            "properties": {
                "allowListRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRule:SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRule"
                    }
                }
            },
            "type": "object",
            "required": [
                "allowListRules"
            ]
        },
        "dynatrace:index/SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRule:SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRule": {
            "properties": {
                "attributeExpression": {
                    "type": "string",
                    "description": "Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.\n"
                },
                "cssExpression": {
                    "type": "string",
                    "description": "Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Possible Values: `ATTRIBUTE`, `ELEMENT`\n"
                }
            },
            "type": "object",
            "required": [
                "target"
            ]
        },
        "dynatrace:index/SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRules:SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRules": {
            "properties": {
                "blockListRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRule:SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRule"
                    }
                }
            },
            "type": "object",
            "required": [
                "blockListRules"
            ]
        },
        "dynatrace:index/SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRule:SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRule": {
            "properties": {
                "attributeExpression": {
                    "type": "string",
                    "description": "Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.\n"
                },
                "cssExpression": {
                    "type": "string",
                    "description": "Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.\n"
                },
                "hideUserInteraction": {
                    "type": "boolean",
                    "description": "Hide user interactions with these elements, including clicks that expand elements, highlighting that results from hovering a cursor over an option, and selection of specific form options.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Possible Values: `ATTRIBUTE`, `ELEMENT`\n"
                }
            },
            "type": "object",
            "required": [
                "target"
            ]
        },
        "dynatrace:index/SiteReliabilityGuardianObjectives:SiteReliabilityGuardianObjectives": {
            "properties": {
                "objectives": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/SiteReliabilityGuardianObjectivesObjective:SiteReliabilityGuardianObjectivesObjective"
                    }
                }
            },
            "type": "object",
            "required": [
                "objectives"
            ]
        },
        "dynatrace:index/SiteReliabilityGuardianObjectivesObjective:SiteReliabilityGuardianObjectivesObjective": {
            "properties": {
                "comparisonOperator": {
                    "type": "string",
                    "description": "Possible Values: `GREATER_THAN_OR_EQUAL`, `LESS_THAN_OR_EQUAL`\n"
                },
                "description": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "dqlQuery": {
                    "type": "string",
                    "description": "DQL query\n"
                },
                "name": {
                    "type": "string",
                    "description": "Objective name\n"
                },
                "objectiveType": {
                    "type": "string",
                    "description": "Possible Values: `DQL`, `REFERENCE_SLO`\n"
                },
                "referenceSlo": {
                    "type": "string",
                    "description": "Please enter the metric key of your desired SLO. SLO metric keys have to start with 'func:slo.'\n"
                },
                "target": {
                    "type": "number",
                    "description": "no documentation available\n"
                },
                "warning": {
                    "type": "number",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "comparisonOperator",
                "name",
                "objectiveType"
            ]
        },
        "dynatrace:index/SiteReliabilityGuardianVariables:SiteReliabilityGuardianVariables": {
            "properties": {
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/SiteReliabilityGuardianVariablesVariable:SiteReliabilityGuardianVariablesVariable"
                    }
                }
            },
            "type": "object",
            "required": [
                "variables"
            ]
        },
        "dynatrace:index/SiteReliabilityGuardianVariablesVariable:SiteReliabilityGuardianVariablesVariable": {
            "properties": {
                "definition": {
                    "type": "string",
                    "description": "Value\n"
                },
                "name": {
                    "type": "string",
                    "description": "Objective name\n"
                }
            },
            "type": "object",
            "required": [
                "definition",
                "name"
            ]
        },
        "dynatrace:index/SloErrorBudgetBurnRate:SloErrorBudgetBurnRate": {
            "properties": {
                "burnRateVisualizationEnabled": {
                    "type": "boolean",
                    "description": "The error budget burn rate calculation is enabled (true) or disabled (false).\n"
                },
                "fastBurnThreshold": {
                    "type": "number",
                    "description": "The threshold between a slow and a fast burn rate.\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/SloV2ErrorBudgetBurnRate:SloV2ErrorBudgetBurnRate": {
            "properties": {
                "burnRateVisualizationEnabled": {
                    "type": "boolean",
                    "description": "Burn rate visualization enabled\n"
                },
                "fastBurnThreshold": {
                    "type": "number",
                    "description": "The threshold defines when a burn rate is marked as fast-burning (high-emergency). Burn rates lower than this threshold (and greater than 1) are highlighted as slow-burn (low-emergency).\n"
                }
            },
            "type": "object",
            "required": [
                "burnRateVisualizationEnabled"
            ]
        },
        "dynatrace:index/SpanCaptureRuleMatches:SpanCaptureRuleMatches": {
            "properties": {
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/SpanCaptureRuleMatchesMatch:SpanCaptureRuleMatchesMatch"
                    },
                    "description": "Matching strategies for the Span\n"
                }
            },
            "type": "object",
            "required": [
                "matches"
            ]
        },
        "dynatrace:index/SpanCaptureRuleMatchesMatch:SpanCaptureRuleMatchesMatch": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "description": "Whether to match strings case sensitively or not\n"
                },
                "comparison": {
                    "type": "string",
                    "description": "Possible values are `EQUALS`, `CONTAINS`, `STARTS_WITH`, `ENDS_WITH`, `DOES_NOT_EQUAL`, `DOES_NOT_CONTAIN`, `DOES_NOT_START_WITH` and `DOES_NOT_END_WITH`.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The name of the attribute if `source` is `ATTRIBUTE`\n"
                },
                "source": {
                    "type": "string",
                    "description": "What to match against. Possible values are `SPAN_NAME`, `SPAN_KIND`, `ATTRIBUTE`, `INSTRUMENTATION_LIBRARY_NAME` and `INSTRUMENTATION_LIBRARY_VERSION`\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value to compare against. When `source` is `SPAN_KIND` the only allowed values are `INTERNAL`, `SERVER`, `CLIENT`, `PRODUCER` and `CONSUMER`\n"
                }
            },
            "type": "object",
            "required": [
                "comparison",
                "source"
            ]
        },
        "dynatrace:index/SpanContextPropagationMatches:SpanContextPropagationMatches": {
            "properties": {
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/SpanContextPropagationMatchesMatch:SpanContextPropagationMatchesMatch"
                    },
                    "description": "Matching strategies for the Span\n"
                }
            },
            "type": "object",
            "required": [
                "matches"
            ]
        },
        "dynatrace:index/SpanContextPropagationMatchesMatch:SpanContextPropagationMatchesMatch": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "description": "Whether to match strings case sensitively or not\n"
                },
                "comparison": {
                    "type": "string",
                    "description": "Possible values are `EQUALS`, `CONTAINS`, `STARTS_WITH`, `ENDS_WITH`, `DOES_NOT_EQUAL`, `DOES_NOT_CONTAIN`, `DOES_NOT_START_WITH` and `DOES_NOT_END_WITH`.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The name of the attribute if `source` is `ATTRIBUTE`\n"
                },
                "source": {
                    "type": "string",
                    "description": "What to match against. Possible values are `SPAN_NAME`, `SPAN_KIND`, `ATTRIBUTE`, `INSTRUMENTATION_LIBRARY_NAME` and `INSTRUMENTATION_LIBRARY_VERSION`\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value to compare against. When `source` is `SPAN_KIND` the only allowed values are `INTERNAL`, `SERVER`, `CLIENT`, `PRODUCER` and `CONSUMER`\n"
                }
            },
            "type": "object",
            "required": [
                "comparison",
                "source"
            ]
        },
        "dynatrace:index/SpanEntryPointMatches:SpanEntryPointMatches": {
            "properties": {
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/SpanEntryPointMatchesMatch:SpanEntryPointMatchesMatch"
                    },
                    "description": "Matching strategies for the Span\n"
                }
            },
            "type": "object",
            "required": [
                "matches"
            ]
        },
        "dynatrace:index/SpanEntryPointMatchesMatch:SpanEntryPointMatchesMatch": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "description": "Whether to match strings case sensitively or not\n"
                },
                "comparison": {
                    "type": "string",
                    "description": "Possible values are `EQUALS`, `CONTAINS`, `STARTS_WITH`, `ENDS_WITH`, `DOES_NOT_EQUAL`, `DOES_NOT_CONTAIN`, `DOES_NOT_START_WITH` and `DOES_NOT_END_WITH`.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The name of the attribute if `source` is `ATTRIBUTE`\n"
                },
                "source": {
                    "type": "string",
                    "description": "What to match against. Possible values are `SPAN_NAME`, `SPAN_KIND`, `ATTRIBUTE`, `INSTRUMENTATION_LIBRARY_NAME` and `INSTRUMENTATION_LIBRARY_VERSION`\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value to compare against. When `source` is `SPAN_KIND` the only allowed values are `INTERNAL`, `SERVER`, `CLIENT`, `PRODUCER` and `CONSUMER`\n"
                }
            },
            "type": "object",
            "required": [
                "comparison",
                "source"
            ]
        },
        "dynatrace:index/UpdateWindowsDailyRecurrence:UpdateWindowsDailyRecurrence": {
            "properties": {
                "every": {
                    "type": "integer"
                },
                "recurrenceRange": {
                    "$ref": "#/types/dynatrace:index/UpdateWindowsDailyRecurrenceRecurrenceRange:UpdateWindowsDailyRecurrenceRecurrenceRange"
                },
                "updateTime": {
                    "$ref": "#/types/dynatrace:index/UpdateWindowsDailyRecurrenceUpdateTime:UpdateWindowsDailyRecurrenceUpdateTime"
                }
            },
            "type": "object",
            "required": [
                "every",
                "recurrenceRange",
                "updateTime"
            ]
        },
        "dynatrace:index/UpdateWindowsDailyRecurrenceRecurrenceRange:UpdateWindowsDailyRecurrenceRecurrenceRange": {
            "properties": {
                "end": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "end",
                "start"
            ]
        },
        "dynatrace:index/UpdateWindowsDailyRecurrenceUpdateTime:UpdateWindowsDailyRecurrenceUpdateTime": {
            "properties": {
                "duration": {
                    "type": "integer"
                },
                "startTime": {
                    "type": "string"
                },
                "timeZone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "startTime",
                "timeZone"
            ]
        },
        "dynatrace:index/UpdateWindowsMonthlyRecurrence:UpdateWindowsMonthlyRecurrence": {
            "properties": {
                "every": {
                    "type": "integer"
                },
                "recurrenceRange": {
                    "$ref": "#/types/dynatrace:index/UpdateWindowsMonthlyRecurrenceRecurrenceRange:UpdateWindowsMonthlyRecurrenceRecurrenceRange"
                },
                "selectedMonthDay": {
                    "type": "integer"
                },
                "updateTime": {
                    "$ref": "#/types/dynatrace:index/UpdateWindowsMonthlyRecurrenceUpdateTime:UpdateWindowsMonthlyRecurrenceUpdateTime"
                }
            },
            "type": "object",
            "required": [
                "every",
                "recurrenceRange",
                "selectedMonthDay",
                "updateTime"
            ]
        },
        "dynatrace:index/UpdateWindowsMonthlyRecurrenceRecurrenceRange:UpdateWindowsMonthlyRecurrenceRecurrenceRange": {
            "properties": {
                "end": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "end",
                "start"
            ]
        },
        "dynatrace:index/UpdateWindowsMonthlyRecurrenceUpdateTime:UpdateWindowsMonthlyRecurrenceUpdateTime": {
            "properties": {
                "duration": {
                    "type": "integer"
                },
                "startTime": {
                    "type": "string"
                },
                "timeZone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "startTime",
                "timeZone"
            ]
        },
        "dynatrace:index/UpdateWindowsOnceRecurrence:UpdateWindowsOnceRecurrence": {
            "properties": {
                "recurrenceRange": {
                    "$ref": "#/types/dynatrace:index/UpdateWindowsOnceRecurrenceRecurrenceRange:UpdateWindowsOnceRecurrenceRecurrenceRange"
                }
            },
            "type": "object",
            "required": [
                "recurrenceRange"
            ]
        },
        "dynatrace:index/UpdateWindowsOnceRecurrenceRecurrenceRange:UpdateWindowsOnceRecurrenceRecurrenceRange": {
            "properties": {
                "end": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "end",
                "start"
            ]
        },
        "dynatrace:index/UpdateWindowsWeeklyRecurrence:UpdateWindowsWeeklyRecurrence": {
            "properties": {
                "every": {
                    "type": "integer"
                },
                "recurrenceRange": {
                    "$ref": "#/types/dynatrace:index/UpdateWindowsWeeklyRecurrenceRecurrenceRange:UpdateWindowsWeeklyRecurrenceRecurrenceRange"
                },
                "selectedWeekDays": {
                    "$ref": "#/types/dynatrace:index/UpdateWindowsWeeklyRecurrenceSelectedWeekDays:UpdateWindowsWeeklyRecurrenceSelectedWeekDays"
                },
                "updateTime": {
                    "$ref": "#/types/dynatrace:index/UpdateWindowsWeeklyRecurrenceUpdateTime:UpdateWindowsWeeklyRecurrenceUpdateTime"
                }
            },
            "type": "object",
            "required": [
                "every",
                "recurrenceRange",
                "selectedWeekDays",
                "updateTime"
            ]
        },
        "dynatrace:index/UpdateWindowsWeeklyRecurrenceRecurrenceRange:UpdateWindowsWeeklyRecurrenceRecurrenceRange": {
            "properties": {
                "end": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "end",
                "start"
            ]
        },
        "dynatrace:index/UpdateWindowsWeeklyRecurrenceSelectedWeekDays:UpdateWindowsWeeklyRecurrenceSelectedWeekDays": {
            "properties": {
                "friday": {
                    "type": "boolean"
                },
                "monday": {
                    "type": "boolean"
                },
                "saturday": {
                    "type": "boolean"
                },
                "sunday": {
                    "type": "boolean"
                },
                "thursday": {
                    "type": "boolean"
                },
                "tuesday": {
                    "type": "boolean"
                },
                "wednesday": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "friday",
                "monday",
                "saturday",
                "sunday",
                "thursday",
                "tuesday",
                "wednesday"
            ]
        },
        "dynatrace:index/UpdateWindowsWeeklyRecurrenceUpdateTime:UpdateWindowsWeeklyRecurrenceUpdateTime": {
            "properties": {
                "duration": {
                    "type": "integer"
                },
                "startTime": {
                    "type": "string"
                },
                "timeZone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "startTime",
                "timeZone"
            ]
        },
        "dynatrace:index/UrlBasedSamplingQueryParameters:UrlBasedSamplingQueryParameters": {
            "properties": {
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/UrlBasedSamplingQueryParametersParameter:UrlBasedSamplingQueryParametersParameter"
                    }
                }
            },
            "type": "object",
            "required": [
                "parameters"
            ]
        },
        "dynatrace:index/UrlBasedSamplingQueryParametersParameter:UrlBasedSamplingQueryParametersParameter": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Query parameter name\n"
                },
                "value": {
                    "type": "string",
                    "description": "Query parameter value\n"
                },
                "valueIsUndefined": {
                    "type": "boolean",
                    "description": "Query parameter value is undefined\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "dynatrace:index/UserActionMetricsFilters:UserActionMetricsFilters": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/UserActionMetricsFiltersFilter:UserActionMetricsFiltersFilter"
                    }
                }
            },
            "type": "object",
            "required": [
                "filters"
            ]
        },
        "dynatrace:index/UserActionMetricsFiltersFilter:UserActionMetricsFiltersFilter": {
            "properties": {
                "fieldName": {
                    "type": "string",
                    "description": "Field name\n"
                },
                "operator": {
                    "type": "string",
                    "description": "Possible Values: `EQUALS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL_TO`, `IN`, `IS_NOT_NULL`, `IS_NULL`, `LESS_THAN`, `LESS_THAN_OR_EQUAL_TO`, `LIKE`, `NOT_EQUAL`, `NOT_LIKE`, `STARTS_WITH`\n"
                },
                "value": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "valueIns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Values\n"
                }
            },
            "type": "object",
            "required": [
                "fieldName",
                "operator"
            ]
        },
        "dynatrace:index/UserActionMetricsValue:UserActionMetricsValue": {
            "properties": {
                "fieldName": {
                    "type": "string",
                    "description": "Field name\n"
                },
                "type": {
                    "type": "string",
                    "description": "Possible Values: `COUNTER`, `FIELD`\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/UserGroupPermissions:UserGroupPermissions": {
            "properties": {
                "grants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/UserGroupPermissionsGrant:UserGroupPermissionsGrant"
                    },
                    "description": "A permission granted to one or multiple environments\n"
                }
            },
            "type": "object",
            "required": [
                "grants"
            ]
        },
        "dynatrace:index/UserGroupPermissionsGrant:UserGroupPermissionsGrant": {
            "properties": {
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ids of the environments this permission grants the user access to.\n"
                },
                "permission": {
                    "type": "string",
                    "description": "The permission. Possible values are `VIEWER`, `MANAGE_SETTINGS`, `AGENT_INSTALL`, `LOG_VIEWER`, `VIEW_SENSITIVE_REQUEST_DATA`, `CONFIGURE_REQUEST_CAPTURE_DATA`, `REPLAY_SESSION_DATA`, `REPLAY_SESSION_DATA_WITHOUT_MASKING`, `MANAGE_SECURITY_PROBLEMS` and `MANAGE_SUPPORT_TICKETS`.\n"
                }
            },
            "type": "object",
            "required": [
                "permission"
            ]
        },
        "dynatrace:index/UserSessionMetricsFilters:UserSessionMetricsFilters": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/UserSessionMetricsFiltersFilter:UserSessionMetricsFiltersFilter"
                    }
                }
            },
            "type": "object",
            "required": [
                "filters"
            ]
        },
        "dynatrace:index/UserSessionMetricsFiltersFilter:UserSessionMetricsFiltersFilter": {
            "properties": {
                "fieldName": {
                    "type": "string",
                    "description": "Field name\n"
                },
                "operator": {
                    "type": "string",
                    "description": "Possible Values: `EQUALS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL_TO`, `IN`, `IS_NOT_NULL`, `IS_NULL`, `LESS_THAN`, `LESS_THAN_OR_EQUAL_TO`, `LIKE`, `NOT_EQUAL`, `NOT_LIKE`, `STARTS_WITH`\n"
                },
                "value": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "valueIns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Values\n"
                }
            },
            "type": "object",
            "required": [
                "fieldName",
                "operator"
            ]
        },
        "dynatrace:index/UserSessionMetricsValue:UserSessionMetricsValue": {
            "properties": {
                "fieldName": {
                    "type": "string",
                    "description": "Field name\n"
                },
                "type": {
                    "type": "string",
                    "description": "Possible Values: `COUNTER`, `FIELD`\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/VmwareAnomaliesDroppedPacketsDetection:VmwareAnomaliesDroppedPacketsDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/VmwareAnomaliesDroppedPacketsDetectionCustomThresholds:VmwareAnomaliesDroppedPacketsDetectionCustomThresholds",
                    "description": "Alert if the condition is met in 3 out of 5 samples\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Possible Values: `Auto`, `Custom`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/VmwareAnomaliesDroppedPacketsDetectionCustomThresholds:VmwareAnomaliesDroppedPacketsDetectionCustomThresholds": {
            "properties": {
                "droppedPacketsPerSecond": {
                    "type": "integer",
                    "description": "Receive/transmit dropped packets rate on NIC is higher than\n"
                }
            },
            "type": "object",
            "required": [
                "droppedPacketsPerSecond"
            ]
        },
        "dynatrace:index/VmwareAnomaliesEsxiHighCpuDetection:VmwareAnomaliesEsxiHighCpuDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/VmwareAnomaliesEsxiHighCpuDetectionCustomThresholds:VmwareAnomaliesEsxiHighCpuDetectionCustomThresholds",
                    "description": "Alert if **all three** conditions are met in 3 out of 5 samples\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Possible Values: `Auto`, `Custom`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/VmwareAnomaliesEsxiHighCpuDetectionCustomThresholds:VmwareAnomaliesEsxiHighCpuDetectionCustomThresholds": {
            "properties": {
                "cpuPeakPercentage": {
                    "type": "integer",
                    "description": "At least one peak occurred when Hypervisor CPU usage was higher than\n"
                },
                "cpuUsagePercentage": {
                    "type": "integer",
                    "description": "CPU usage is higher than\n"
                },
                "vmCpuReadyPercentage": {
                    "type": "integer",
                    "description": "VM CPU ready is higher than\n"
                }
            },
            "type": "object",
            "required": [
                "cpuPeakPercentage",
                "cpuUsagePercentage",
                "vmCpuReadyPercentage"
            ]
        },
        "dynatrace:index/VmwareAnomaliesEsxiHighMemoryDetection:VmwareAnomaliesEsxiHighMemoryDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholds:VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholds",
                    "description": "Alert if the condition is met in 3 out of 5 samples\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Possible Values: `Auto`, `Custom`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholds:VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholds": {
            "properties": {
                "compressionDecompressionRate": {
                    "type": "number",
                    "description": "ESXi host swap IN/OUT or compression/decompression rate is higher than\n"
                }
            },
            "type": "object",
            "required": [
                "compressionDecompressionRate"
            ]
        },
        "dynatrace:index/VmwareAnomaliesGuestCpuLimitDetection:VmwareAnomaliesGuestCpuLimitDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/VmwareAnomaliesGuestCpuLimitDetectionCustomThresholds:VmwareAnomaliesGuestCpuLimitDetectionCustomThresholds",
                    "description": "Alert if **all three** conditions are met in 3 out of 5 samples\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Possible Values: `Auto`, `Custom`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/VmwareAnomaliesGuestCpuLimitDetectionCustomThresholds:VmwareAnomaliesGuestCpuLimitDetectionCustomThresholds": {
            "properties": {
                "hostCpuUsagePercentage": {
                    "type": "integer",
                    "description": "Hypervisor CPU usage is higher than\n"
                },
                "vmCpuReadyPercentage": {
                    "type": "integer",
                    "description": "VM CPU ready is higher than\n"
                },
                "vmCpuUsagePercentage": {
                    "type": "integer",
                    "description": "VM CPU usage (VM CPU Usage Mhz / VM CPU limit in Mhz) is higher than\n"
                }
            },
            "type": "object",
            "required": [
                "hostCpuUsagePercentage",
                "vmCpuReadyPercentage",
                "vmCpuUsagePercentage"
            ]
        },
        "dynatrace:index/VmwareAnomaliesLowDatastoreSpaceDetection:VmwareAnomaliesLowDatastoreSpaceDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholds:VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholds",
                    "description": "Alert if the condition is met in 1 out of 5 samples\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Possible Values: `Auto`, `Custom`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholds:VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholds": {
            "properties": {
                "freeSpacePercentage": {
                    "type": "integer",
                    "description": "Datastore free space is lower than\n"
                }
            },
            "type": "object",
            "required": [
                "freeSpacePercentage"
            ]
        },
        "dynatrace:index/VmwareAnomaliesOverloadedStorageDetection:VmwareAnomaliesOverloadedStorageDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/VmwareAnomaliesOverloadedStorageDetectionCustomThresholds:VmwareAnomaliesOverloadedStorageDetectionCustomThresholds",
                    "description": "Alert if the condition is met in 3 out of 5 samples\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Possible Values: `Auto`, `Custom`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/VmwareAnomaliesOverloadedStorageDetectionCustomThresholds:VmwareAnomaliesOverloadedStorageDetectionCustomThresholds": {
            "properties": {
                "commandAbortsNumber": {
                    "type": "integer",
                    "description": "Number of command aborts is higher than\n"
                }
            },
            "type": "object",
            "required": [
                "commandAbortsNumber"
            ]
        },
        "dynatrace:index/VmwareAnomaliesSlowPhysicalStorageDetection:VmwareAnomaliesSlowPhysicalStorageDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholds:VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholds",
                    "description": "Alert if **any** condition is met in 4 out of 5 samples\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Possible Values: `Auto`, `Custom`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholds:VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholds": {
            "properties": {
                "avgReadWriteLatency": {
                    "type": "integer",
                    "description": "Read/write latency is higher than\n"
                },
                "peakReadWriteLatency": {
                    "type": "integer",
                    "description": "Peak value for read/write latency is higher than\n"
                }
            },
            "type": "object",
            "required": [
                "avgReadWriteLatency",
                "peakReadWriteLatency"
            ]
        },
        "dynatrace:index/VmwareAnomaliesUndersizedStorageDetection:VmwareAnomaliesUndersizedStorageDetection": {
            "properties": {
                "customThresholds": {
                    "$ref": "#/types/dynatrace:index/VmwareAnomaliesUndersizedStorageDetectionCustomThresholds:VmwareAnomaliesUndersizedStorageDetectionCustomThresholds",
                    "description": "Alert if **any** condition is met in 3 out of 5 samples\n"
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Possible Values: `Auto`, `Custom`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/VmwareAnomaliesUndersizedStorageDetectionCustomThresholds:VmwareAnomaliesUndersizedStorageDetectionCustomThresholds": {
            "properties": {
                "averageQueueCommandLatency": {
                    "type": "integer",
                    "description": "Average queue command latency is higher than\n"
                },
                "peakQueueCommandLatency": {
                    "type": "integer",
                    "description": "Peak queue command latency is higher than\n"
                }
            },
            "type": "object",
            "required": [
                "averageQueueCommandLatency",
                "peakQueueCommandLatency"
            ]
        },
        "dynatrace:index/VulnerabilityCodeCriteria:VulnerabilityCodeCriteria": {
            "properties": {
                "processGroup": {
                    "type": "string",
                    "description": "Process group\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/VulnerabilityCodeMetadata:VulnerabilityCodeMetadata": {
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "comment"
            ]
        },
        "dynatrace:index/VulnerabilityCodeVulnerabilityDetectionControl:VulnerabilityCodeVulnerabilityDetectionControl": {
            "properties": {
                "monitoringMode": {
                    "type": "string",
                    "description": "Possible Values: `MONITORING_OFF`, `MONITORING_ON`\n"
                }
            },
            "type": "object",
            "required": [
                "monitoringMode"
            ]
        },
        "dynatrace:index/VulnerabilitySettingsTechnologies:VulnerabilitySettingsTechnologies": {
            "properties": {
                "enableDotNet": {
                    "type": "boolean",
                    "description": "NET\n"
                },
                "enableDotNetRuntime": {
                    "type": "boolean",
                    "description": "NET runtimes\n"
                },
                "enableGo": {
                    "type": "boolean",
                    "description": "Go\n"
                },
                "enableJava": {
                    "type": "boolean",
                    "description": "Java\n"
                },
                "enableJavaRuntime": {
                    "type": "boolean",
                    "description": "Java runtimes\n"
                },
                "enableKubernetes": {
                    "type": "boolean",
                    "description": "Kubernetes\n"
                },
                "enableNodeJs": {
                    "type": "boolean",
                    "description": "Node.js\n"
                },
                "enableNodeJsRuntime": {
                    "type": "boolean",
                    "description": "Node.js runtimes\n"
                },
                "enablePhp": {
                    "type": "boolean",
                    "description": "PHP\n"
                }
            },
            "type": "object",
            "required": [
                "enableDotNet",
                "enableGo",
                "enableJava",
                "enableKubernetes",
                "enableNodeJs",
                "enablePhp"
            ]
        },
        "dynatrace:index/WebAppAnomaliesErrorRate:WebAppAnomaliesErrorRate": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "errorRateAuto": {
                    "$ref": "#/types/dynatrace:index/WebAppAnomaliesErrorRateErrorRateAuto:WebAppAnomaliesErrorRateErrorRateAuto",
                    "description": "Alert if the percentage of failing user actions increases by **both** the absolute and relative thresholds:\n"
                },
                "errorRateDetectionMode": {
                    "type": "string",
                    "description": "Possible Values: `Auto`, `Fixed`\n"
                },
                "errorRateFixed": {
                    "$ref": "#/types/dynatrace:index/WebAppAnomaliesErrorRateErrorRateFixed:WebAppAnomaliesErrorRateErrorRateFixed",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/WebAppAnomaliesErrorRateErrorRateAuto:WebAppAnomaliesErrorRateErrorRateAuto": {
            "properties": {
                "absoluteIncrease": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                },
                "overAlertingProtection": {
                    "$ref": "#/types/dynatrace:index/WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtection:WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtection",
                    "description": "Avoid over-alerting\n"
                },
                "relativeIncrease": {
                    "type": "number",
                    "description": "Relative threshold\n"
                }
            },
            "type": "object",
            "required": [
                "absoluteIncrease",
                "overAlertingProtection",
                "relativeIncrease"
            ]
        },
        "dynatrace:index/WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtection:WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtection": {
            "properties": {
                "actionsPerMinute": {
                    "type": "number",
                    "description": "Only alert if there are at least\n"
                },
                "minutesAbnormalState": {
                    "type": "number",
                    "description": "Only alert if the abnormal state remains for at least\n"
                }
            },
            "type": "object",
            "required": [
                "actionsPerMinute",
                "minutesAbnormalState"
            ]
        },
        "dynatrace:index/WebAppAnomaliesErrorRateErrorRateFixed:WebAppAnomaliesErrorRateErrorRateFixed": {
            "properties": {
                "errorRateReqPerMin": {
                    "type": "number",
                    "description": "To avoid over-alerting for low traffic applications\n"
                },
                "errorRateSensitivity": {
                    "type": "string",
                    "description": "Possible Values: `Low`, `Medium`, `High`\n"
                },
                "maxFailureRateIncrease": {
                    "type": "number",
                    "description": "Alert if this custom error rate threshold is exceeded during any 5-minute-period\n"
                },
                "minutesAbnormalState": {
                    "type": "number",
                    "description": "Only alert if the abnormal state remains for at least\n"
                }
            },
            "type": "object",
            "required": [
                "errorRateReqPerMin",
                "errorRateSensitivity",
                "maxFailureRateIncrease",
                "minutesAbnormalState"
            ]
        },
        "dynatrace:index/WebAppAnomaliesResponseTime:WebAppAnomaliesResponseTime": {
            "properties": {
                "detectionMode": {
                    "type": "string",
                    "description": "Possible Values: `Auto`, `Fixed`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "responseTimeAuto": {
                    "$ref": "#/types/dynatrace:index/WebAppAnomaliesResponseTimeResponseTimeAuto:WebAppAnomaliesResponseTimeResponseTimeAuto",
                    "description": "no documentation available\n"
                },
                "responseTimeFixed": {
                    "$ref": "#/types/dynatrace:index/WebAppAnomaliesResponseTimeResponseTimeFixed:WebAppAnomaliesResponseTimeResponseTimeFixed",
                    "description": "no documentation available\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/WebAppAnomaliesResponseTimeResponseTimeAuto:WebAppAnomaliesResponseTimeResponseTimeAuto": {
            "properties": {
                "overAlertingProtection": {
                    "$ref": "#/types/dynatrace:index/WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtection:WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtection",
                    "description": "Avoid over-alerting\n"
                },
                "responseTimeAll": {
                    "$ref": "#/types/dynatrace:index/WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAll:WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAll",
                    "description": "Alert if the median response time of all user actions degrades beyond **both** the absolute and relative thresholds:\n"
                },
                "responseTimeSlowest": {
                    "$ref": "#/types/dynatrace:index/WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowest:WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowest",
                    "description": "Alert if the response time of the slowest 10% of requests degrades beyond **both** the absolute and relative thresholds:\n"
                }
            },
            "type": "object",
            "required": [
                "overAlertingProtection",
                "responseTimeAll",
                "responseTimeSlowest"
            ]
        },
        "dynatrace:index/WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtection:WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtection": {
            "properties": {
                "actionsPerMinute": {
                    "type": "number",
                    "description": "Only alert if there are at least\n"
                },
                "minutesAbnormalState": {
                    "type": "number",
                    "description": "Only alert if the abnormal state remains for at least\n"
                }
            },
            "type": "object",
            "required": [
                "actionsPerMinute",
                "minutesAbnormalState"
            ]
        },
        "dynatrace:index/WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAll:WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAll": {
            "properties": {
                "degradationMilliseconds": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                },
                "degradationPercent": {
                    "type": "number",
                    "description": "Relative threshold\n"
                }
            },
            "type": "object",
            "required": [
                "degradationMilliseconds",
                "degradationPercent"
            ]
        },
        "dynatrace:index/WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowest:WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowest": {
            "properties": {
                "slowestDegradationMilliseconds": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                },
                "slowestDegradationPercent": {
                    "type": "number",
                    "description": "Relative threshold\n"
                }
            },
            "type": "object",
            "required": [
                "slowestDegradationMilliseconds",
                "slowestDegradationPercent"
            ]
        },
        "dynatrace:index/WebAppAnomaliesResponseTimeResponseTimeFixed:WebAppAnomaliesResponseTimeResponseTimeFixed": {
            "properties": {
                "overAlertingProtection": {
                    "$ref": "#/types/dynatrace:index/WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtection:WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtection",
                    "description": "Avoid over-alerting\n"
                },
                "responseTimeAll": {
                    "$ref": "#/types/dynatrace:index/WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAll:WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAll",
                    "description": "Alert if the median response time of all user actions degrades beyond **both** the absolute and relative thresholds:\n"
                },
                "responseTimeSlowest": {
                    "$ref": "#/types/dynatrace:index/WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowest:WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowest",
                    "description": "Alert if the response time of the slowest 10% of requests degrades beyond **both** the absolute and relative thresholds:\n"
                },
                "sensitivity": {
                    "type": "string",
                    "description": "Possible Values: `Medium`, `High`, `Low`\n"
                }
            },
            "type": "object",
            "required": [
                "overAlertingProtection",
                "responseTimeAll",
                "responseTimeSlowest",
                "sensitivity"
            ]
        },
        "dynatrace:index/WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtection:WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtection": {
            "properties": {
                "actionsPerMinute": {
                    "type": "number",
                    "description": "Only alert if there are at least\n"
                },
                "minutesAbnormalState": {
                    "type": "number",
                    "description": "Only alert if the abnormal state remains for at least\n"
                }
            },
            "type": "object",
            "required": [
                "actionsPerMinute",
                "minutesAbnormalState"
            ]
        },
        "dynatrace:index/WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAll:WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAll": {
            "properties": {
                "degradationMilliseconds": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                }
            },
            "type": "object",
            "required": [
                "degradationMilliseconds"
            ]
        },
        "dynatrace:index/WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowest:WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowest": {
            "properties": {
                "slowestDegradationMilliseconds": {
                    "type": "number",
                    "description": "Absolute threshold\n"
                }
            },
            "type": "object",
            "required": [
                "slowestDegradationMilliseconds"
            ]
        },
        "dynatrace:index/WebAppAnomaliesTrafficDrops:WebAppAnomaliesTrafficDrops": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "trafficDrops": {
                    "$ref": "#/types/dynatrace:index/WebAppAnomaliesTrafficDropsTrafficDrops:WebAppAnomaliesTrafficDropsTrafficDrops",
                    "description": "Dynatrace learns your typical application traffic over an observation period of one week.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/WebAppAnomaliesTrafficDropsTrafficDrops:WebAppAnomaliesTrafficDropsTrafficDrops": {
            "properties": {
                "abnormalStateAbnormalState": {
                    "type": "number",
                    "description": "Minutes the observed traffic has to stay in abnormal state before alert\n"
                },
                "trafficDropPercentage": {
                    "type": "number",
                    "description": "Alert if the observed traffic is less than this percentage of the expected value\n"
                }
            },
            "type": "object",
            "required": [
                "abnormalStateAbnormalState",
                "trafficDropPercentage"
            ]
        },
        "dynatrace:index/WebAppAnomaliesTrafficSpikes:WebAppAnomaliesTrafficSpikes": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "trafficSpikes": {
                    "$ref": "#/types/dynatrace:index/WebAppAnomaliesTrafficSpikesTrafficSpikes:WebAppAnomaliesTrafficSpikesTrafficSpikes",
                    "description": "Dynatrace learns your typical application traffic over an observation period of one week.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "dynatrace:index/WebAppAnomaliesTrafficSpikesTrafficSpikes:WebAppAnomaliesTrafficSpikesTrafficSpikes": {
            "properties": {
                "minutesAbnormalState": {
                    "type": "number",
                    "description": "Only alert if the abnormal state remains for at least\n"
                },
                "trafficSpikePercentage": {
                    "type": "number",
                    "description": "Alert if the observed traffic is more than this percentage of the expected value\n"
                }
            },
            "type": "object",
            "required": [
                "minutesAbnormalState",
                "trafficSpikePercentage"
            ]
        },
        "dynatrace:index/WebAppCustomErrorsErrorRules:WebAppCustomErrorsErrorRules": {
            "properties": {
                "errorRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebAppCustomErrorsErrorRulesErrorRule:WebAppCustomErrorsErrorRulesErrorRule"
                    }
                }
            },
            "type": "object",
            "required": [
                "errorRules"
            ]
        },
        "dynatrace:index/WebAppCustomErrorsErrorRulesErrorRule:WebAppCustomErrorsErrorRulesErrorRule": {
            "properties": {
                "captureSettings": {
                    "$ref": "#/types/dynatrace:index/WebAppCustomErrorsErrorRulesErrorRuleCaptureSettings:WebAppCustomErrorsErrorRulesErrorRuleCaptureSettings",
                    "description": "Capture settings\n"
                },
                "keyMatcher": {
                    "type": "string",
                    "description": "Possible Values: `ALL`, `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`\n"
                },
                "keyPattern": {
                    "type": "string",
                    "description": "A case-insensitive key pattern\n"
                },
                "valueMatcher": {
                    "type": "string",
                    "description": "Possible Values: `ALL`, `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`\n"
                },
                "valuePattern": {
                    "type": "string",
                    "description": "A case-insensitive value pattern\n"
                }
            },
            "type": "object",
            "required": [
                "captureSettings",
                "keyMatcher",
                "valueMatcher"
            ]
        },
        "dynatrace:index/WebAppCustomErrorsErrorRulesErrorRuleCaptureSettings:WebAppCustomErrorsErrorRulesErrorRuleCaptureSettings": {
            "properties": {
                "capture": {
                    "type": "boolean",
                    "description": "Capture this error\n"
                },
                "considerForAi": {
                    "type": "boolean",
                    "description": "[View more details](https://dt-url.net/hd580p2k)\n"
                },
                "impactApdex": {
                    "type": "boolean",
                    "description": "Include error in Apdex calculations\n"
                }
            },
            "type": "object",
            "required": [
                "capture"
            ]
        },
        "dynatrace:index/WebAppEnablementRum:WebAppEnablementRum": {
            "properties": {
                "costAndTrafficControl": {
                    "type": "integer",
                    "description": "(Field has overlap with `dynatrace.WebApplication`) Percentage of user sessions captured and analyzed\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.WebApplication`) This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "costAndTrafficControl",
                "enabled"
            ]
        },
        "dynatrace:index/WebAppEnablementSessionReplay:WebAppEnablementSessionReplay": {
            "properties": {
                "costAndTrafficControl": {
                    "type": "integer",
                    "description": "(Field has overlap with `dynatrace.WebApplication`) [Percentage of user sessions recorded with Session Replay](https://dt-url.net/sr-cost-traffic-control). For example, if you have 50% for RUM and 50% for Session Replay, it results in 25% of sessions recorded with Session Replay.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.WebApplication`) This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "type": "object",
            "required": [
                "costAndTrafficControl",
                "enabled"
            ]
        },
        "dynatrace:index/WebAppKeyPerformanceCustomThresholds:WebAppKeyPerformanceCustomThresholds": {
            "properties": {
                "frustratingThresholdSeconds": {
                    "type": "number",
                    "description": "If **User action duration** is above this value, the action is assigned to the Frustrated performance zone.\n"
                },
                "toleratedThresholdSeconds": {
                    "type": "number",
                    "description": "If **User action duration** is below this value, the action is assigned to the Satisfied performance zone.\n"
                }
            },
            "type": "object",
            "required": [
                "frustratingThresholdSeconds",
                "toleratedThresholdSeconds"
            ]
        },
        "dynatrace:index/WebAppKeyPerformanceLoadFallbackThresholds:WebAppKeyPerformanceLoadFallbackThresholds": {
            "properties": {
                "frustratingFallbackThresholdSeconds": {
                    "type": "number",
                    "description": "If **User action duration** is above this value, the action is assigned to the Frustrated performance zone.\n"
                },
                "toleratedFallbackThresholdSeconds": {
                    "type": "number",
                    "description": "If **User action duration** is below this value, the action is assigned to the Satisfied performance zone.\n"
                }
            },
            "type": "object",
            "required": [
                "frustratingFallbackThresholdSeconds",
                "toleratedFallbackThresholdSeconds"
            ]
        },
        "dynatrace:index/WebAppKeyPerformanceLoadThresholds:WebAppKeyPerformanceLoadThresholds": {
            "properties": {
                "frustratingThresholdSeconds": {
                    "type": "number",
                    "description": "If the key performance metric is above this value, the action is assigned to the Frustrated performance zone.\n"
                },
                "toleratedThresholdSeconds": {
                    "type": "number",
                    "description": "If the key performance metric is below this value, the action is assigned to the Satisfied performance zone.\n"
                }
            },
            "type": "object",
            "required": [
                "frustratingThresholdSeconds",
                "toleratedThresholdSeconds"
            ]
        },
        "dynatrace:index/WebAppKeyPerformanceXhrFallbackThresholds:WebAppKeyPerformanceXhrFallbackThresholds": {
            "properties": {
                "frustratingFallbackThresholdSeconds": {
                    "type": "number",
                    "description": "If **User action duration** is above this value, the action is assigned to the Frustrated performance zone.\n"
                },
                "toleratedFallbackThresholdSeconds": {
                    "type": "number",
                    "description": "If **User action duration** is below this value, the action is assigned to the Satisfied performance zone.\n"
                }
            },
            "type": "object",
            "required": [
                "frustratingFallbackThresholdSeconds",
                "toleratedFallbackThresholdSeconds"
            ]
        },
        "dynatrace:index/WebAppKeyPerformanceXhrThresholds:WebAppKeyPerformanceXhrThresholds": {
            "properties": {
                "frustratingThresholdSeconds": {
                    "type": "number",
                    "description": "If the key performance metric is above this value, the action is assigned to the Frustrated performance zone.\n"
                },
                "toleratedThresholdSeconds": {
                    "type": "number",
                    "description": "If the key performance metric is below this value, the action is assigned to the Satisfied performance zone.\n"
                }
            },
            "type": "object",
            "required": [
                "frustratingThresholdSeconds",
                "toleratedThresholdSeconds"
            ]
        },
        "dynatrace:index/WebAppRequestErrorsErrorRules:WebAppRequestErrorsErrorRules": {
            "properties": {
                "errorRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebAppRequestErrorsErrorRulesErrorRule:WebAppRequestErrorsErrorRulesErrorRule"
                    }
                }
            },
            "type": "object",
            "required": [
                "errorRules"
            ]
        },
        "dynatrace:index/WebAppRequestErrorsErrorRulesErrorRule:WebAppRequestErrorsErrorRulesErrorRule": {
            "properties": {
                "captureSettings": {
                    "$ref": "#/types/dynatrace:index/WebAppRequestErrorsErrorRulesErrorRuleCaptureSettings:WebAppRequestErrorsErrorRulesErrorRuleCaptureSettings",
                    "description": "Capture settings\n"
                },
                "considerCspViolations": {
                    "type": "boolean",
                    "description": "Match by errors that have CSP violations\n"
                },
                "considerFailedImages": {
                    "type": "boolean",
                    "description": "Match by errors that have failed image requests\n"
                },
                "errorCodes": {
                    "type": "string",
                    "description": "Match by error code\n"
                },
                "filterSettings": {
                    "$ref": "#/types/dynatrace:index/WebAppRequestErrorsErrorRulesErrorRuleFilterSettings:WebAppRequestErrorsErrorRulesErrorRuleFilterSettings",
                    "description": "Filter settings\n"
                }
            },
            "type": "object",
            "required": [
                "captureSettings",
                "considerCspViolations",
                "considerFailedImages",
                "filterSettings"
            ]
        },
        "dynatrace:index/WebAppRequestErrorsErrorRulesErrorRuleCaptureSettings:WebAppRequestErrorsErrorRulesErrorRuleCaptureSettings": {
            "properties": {
                "capture": {
                    "type": "boolean",
                    "description": "Capture this error\n"
                },
                "considerForAi": {
                    "type": "boolean",
                    "description": "[View more details](https://dt-url.net/hd580p2k)\n"
                },
                "impactApdex": {
                    "type": "boolean",
                    "description": "Include error in Apdex calculations\n"
                }
            },
            "type": "object",
            "required": [
                "capture"
            ]
        },
        "dynatrace:index/WebAppRequestErrorsErrorRulesErrorRuleFilterSettings:WebAppRequestErrorsErrorRulesErrorRuleFilterSettings": {
            "properties": {
                "filter": {
                    "type": "string",
                    "description": "Possible Values: `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`\n"
                },
                "url": {
                    "type": "string",
                    "description": "no documentation available\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/WebApplicationConversionGoals:WebApplicationConversionGoals": {
            "properties": {
                "goals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationConversionGoalsGoal:WebApplicationConversionGoalsGoal"
                    },
                    "description": "A conversion goal of the application\n"
                }
            },
            "type": "object",
            "required": [
                "goals"
            ]
        },
        "dynatrace:index/WebApplicationConversionGoalsGoal:WebApplicationConversionGoalsGoal": {
            "properties": {
                "destination": {
                    "$ref": "#/types/dynatrace:index/WebApplicationConversionGoalsGoalDestination:WebApplicationConversionGoalsGoalDestination",
                    "description": "Configuration of a destination-based conversion goal\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of conversion goal.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the conversion goal. Valid length within 1 and 50 characters.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the action. Possible values are `Custom`, `Load` and `Xhr`.\n"
                },
                "userAction": {
                    "$ref": "#/types/dynatrace:index/WebApplicationConversionGoalsGoalUserAction:WebApplicationConversionGoalsGoalUserAction"
                },
                "visitDuration": {
                    "$ref": "#/types/dynatrace:index/WebApplicationConversionGoalsGoalVisitDuration:WebApplicationConversionGoalsGoalVisitDuration"
                },
                "visitNumAction": {
                    "$ref": "#/types/dynatrace:index/WebApplicationConversionGoalsGoalVisitNumAction:WebApplicationConversionGoalsGoalVisitNumAction"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name"
                    ]
                }
            }
        },
        "dynatrace:index/WebApplicationConversionGoalsGoalDestination:WebApplicationConversionGoalsGoalDestination": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "description": "The match is case-sensitive (`true`) or (`false`)\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "The operator of the match. Possible values are `Begins`, `Contains` and `Ends`.\n"
                },
                "urlOrPath": {
                    "type": "string",
                    "description": "The path to be reached to hit the conversion goal\n"
                }
            },
            "type": "object",
            "required": [
                "urlOrPath"
            ]
        },
        "dynatrace:index/WebApplicationConversionGoalsGoalUserAction:WebApplicationConversionGoalsGoalUserAction": {
            "properties": {
                "actionType": {
                    "type": "string",
                    "description": "Type of the action to which the rule applies. Possible values are `Custom`, `Load` and `Xhr`.\n"
                },
                "caseSensitive": {
                    "type": "boolean",
                    "description": "The match is case-sensitive (`true`) or (`false`)\n"
                },
                "matchEntity": {
                    "type": "string",
                    "description": "The type of the entity to which the rule applies. Possible values are `ActionName`, `CssSelector`, `JavaScriptVariable`, `MetaTag`, `PagePath`, `PageTitle`, `PageUrl`, `UrlAnchor` and `XhrUrl`.\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "The operator of the match. Possible values are `Begins`, `Contains` and `Ends`.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value to be matched to hit the conversion goal\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/WebApplicationConversionGoalsGoalVisitDuration:WebApplicationConversionGoalsGoalVisitDuration": {
            "properties": {
                "duration": {
                    "type": "integer",
                    "description": "The duration of session to hit the conversion goal, in milliseconds\n"
                }
            },
            "type": "object",
            "required": [
                "duration"
            ]
        },
        "dynatrace:index/WebApplicationConversionGoalsGoalVisitNumAction:WebApplicationConversionGoalsGoalVisitNumAction": {
            "properties": {
                "numUserActions": {
                    "type": "integer",
                    "description": "The number of user actions to hit the conversion goal\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/WebApplicationCustomActionApdexSettings:WebApplicationCustomActionApdexSettings": {
            "properties": {
                "frustratingFallbackThreshold": {
                    "type": "integer",
                    "description": "Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.\n"
                },
                "frustratingThreshold": {
                    "type": "integer",
                    "description": "Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "no documentation available\n"
                },
                "toleratedFallbackThreshold": {
                    "type": "integer",
                    "description": "Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.\n"
                },
                "toleratedThreshold": {
                    "type": "integer",
                    "description": "Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/WebApplicationKeyUserAction:WebApplicationKeyUserAction": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationKeyUserActionAction:WebApplicationKeyUserActionAction"
                    },
                    "description": "Configuration of the key user action\n"
                }
            },
            "type": "object",
            "required": [
                "actions"
            ]
        },
        "dynatrace:index/WebApplicationKeyUserActionAction:WebApplicationKeyUserActionAction": {
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "The domain where the action is performed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the conversion goal. Valid length within 1 and 50 characters.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the action. Possible values are `Custom`, `Load` and `Xhr`.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ]
        },
        "dynatrace:index/WebApplicationLoadActionApdexSettings:WebApplicationLoadActionApdexSettings": {
            "properties": {
                "frustratingFallbackThreshold": {
                    "type": "integer",
                    "description": "Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.\n"
                },
                "frustratingThreshold": {
                    "type": "integer",
                    "description": "Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "no documentation available\n"
                },
                "toleratedFallbackThreshold": {
                    "type": "integer",
                    "description": "Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.\n"
                },
                "toleratedThreshold": {
                    "type": "integer",
                    "description": "Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/WebApplicationMetaDataCaptureSettings:WebApplicationMetaDataCaptureSettings": {
            "properties": {
                "captures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationMetaDataCaptureSettingsCapture:WebApplicationMetaDataCaptureSettingsCapture"
                    },
                    "description": "Java script agent meta data capture settings\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/WebApplicationMetaDataCaptureSettingsCapture:WebApplicationMetaDataCaptureSettingsCapture": {
            "properties": {
                "capturingName": {
                    "type": "string",
                    "description": "The name of the meta data to capture\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the conversion goal. Valid length within 1 and 50 characters.\n"
                },
                "publicMetadata": {
                    "type": "boolean",
                    "description": "`true` if this metadata should be captured regardless of the privacy settings, `false` otherwise\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the action. Possible values are `Custom`, `Load` and `Xhr`.\n"
                },
                "uniqueId": {
                    "type": "integer",
                    "description": "The unique ID of the meta data to capture\n"
                },
                "useLastValue": {
                    "type": "boolean",
                    "description": "`true` if the last captured value should be used for this metadata. By default the first value will be used.\n"
                }
            },
            "type": "object",
            "required": [
                "capturingName",
                "name",
                "type"
            ]
        },
        "dynatrace:index/WebApplicationMonitoringSettings:WebApplicationMonitoringSettings": {
            "properties": {
                "addCrossOriginAnonymousAttribute": {
                    "type": "boolean",
                    "description": "Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings\n"
                },
                "advancedJavascriptTagSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings:WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings",
                    "description": "Advanced JavaScript tag settings\n"
                },
                "angularPackageName": {
                    "type": "string",
                    "description": "The name of the angular package\n"
                },
                "browserRestrictionSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsBrowserRestrictionSettings:WebApplicationMonitoringSettingsBrowserRestrictionSettings",
                    "description": "Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode\n"
                },
                "cacheControlHeaderOptimizations": {
                    "type": "boolean",
                    "description": "Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled\n"
                },
                "contentCapture": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsContentCapture:WebApplicationMonitoringSettingsContentCapture",
                    "description": "Settings for content capture\n"
                },
                "cookiePlacementDomain": {
                    "type": "string",
                    "description": "Domain for cookie placement. Maximum 150 characters.\n"
                },
                "correlationHeaderInclusionRegex": {
                    "type": "string",
                    "description": "To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (`x-dtc`) to each such request to the respective endpoints in AWS.\n"
                },
                "customConfigurationProperties": {
                    "type": "string"
                },
                "excludeXhrRegex": {
                    "type": "string"
                },
                "fetchRequests": {
                    "type": "boolean"
                },
                "injectionMode": {
                    "type": "string",
                    "description": "Possible valures are `CODE_SNIPPET`, `CODE_SNIPPET_ASYNC`, `INLINE_CODE` and `JAVASCRIPT_TAG`.\n"
                },
                "instrumentedWebServer": {
                    "type": "boolean"
                },
                "ipAddressRestrictionSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsIpAddressRestrictionSettings:WebApplicationMonitoringSettingsIpAddressRestrictionSettings"
                },
                "javascriptFrameworkSupport": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsJavascriptFrameworkSupport:WebApplicationMonitoringSettingsJavascriptFrameworkSupport"
                },
                "javascriptInjectionRules": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsJavascriptInjectionRules:WebApplicationMonitoringSettingsJavascriptInjectionRules"
                },
                "libraryFileLocation": {
                    "type": "string"
                },
                "monitoringDataPath": {
                    "type": "string"
                },
                "sameSiteCookieAttribute": {
                    "type": "string"
                },
                "scriptTagCacheDurationInHours": {
                    "type": "integer"
                },
                "secureCookieAttribute": {
                    "type": "boolean"
                },
                "serverRequestPathId": {
                    "type": "string"
                },
                "useCors": {
                    "type": "boolean"
                },
                "xmlHttpRequest": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "contentCapture",
                "injectionMode"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "addCrossOriginAnonymousAttribute",
                        "contentCapture",
                        "injectionMode",
                        "scriptTagCacheDurationInHours"
                    ]
                }
            }
        },
        "dynatrace:index/WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings:WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings": {
            "properties": {
                "additionalEventHandlers": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers:WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers",
                    "description": "Additional event handlers and wrappers\n"
                },
                "eventWrapperSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings:WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings",
                    "description": "In addition to the event handlers, events called using `addEventListener` or `attachEvent` can be captured. Be careful with this option! Event wrappers can conflict with the JavaScript code on a web page\n"
                },
                "globalEventCaptureSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings:WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings",
                    "description": "Global event capture settings\n"
                },
                "instrumentUnsupportedAjaxFrameworks": {
                    "type": "boolean",
                    "description": "Instrumentation of unsupported Ajax frameworks enabled/disabled\n"
                },
                "maxActionNameLength": {
                    "type": "integer",
                    "description": "Maximum character length for action names. Valid values range from 5 to 10000.\n"
                },
                "maxErrorsToCapture": {
                    "type": "integer",
                    "description": "Maximum number of errors to be captured per page. Valid values range from 0 to 50.\n"
                },
                "specialCharactersToEscape": {
                    "type": "string",
                    "description": "Additional special characters that are to be escaped using non-alphanumeric characters in HTML escape format. Maximum length 30 character. Allowed characters are `^`, `\\`, `\u003c` and `\u003e`.\n"
                },
                "syncBeaconFirefox": {
                    "type": "boolean",
                    "description": "Send the beacon signal as a synchronous XMLHttpRequest using Firefox enabled/disabled\n"
                },
                "syncBeaconInternetExplorer": {
                    "type": "boolean",
                    "description": "Send the beacon signal as a synchronous XMLHttpRequest using Internet Explorer enabled/disabled\n"
                }
            },
            "type": "object",
            "required": [
                "maxActionNameLength",
                "maxErrorsToCapture"
            ]
        },
        "dynatrace:index/WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers:WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers": {
            "properties": {
                "blur": {
                    "type": "boolean",
                    "description": "Blur event handler enabled/disabled\n"
                },
                "change": {
                    "type": "boolean",
                    "description": "Change event handler enabled/disabled\n"
                },
                "click": {
                    "type": "boolean",
                    "description": "Click event handler enabled/disabled\n"
                },
                "maxDomNodes": {
                    "type": "integer",
                    "description": "Max. number of DOM nodes to instrument. Valid values range from 0 to 100000.\n"
                },
                "mouseup": {
                    "type": "boolean",
                    "description": "Mouseup event handler enabled/disabled\n"
                },
                "toStringMethod": {
                    "type": "boolean",
                    "description": "toString method enabled/disabled\n"
                },
                "useMouseUpEventForClicks": {
                    "type": "boolean",
                    "description": "Use mouseup event for clicks enabled/disabled\n"
                }
            },
            "type": "object",
            "required": [
                "maxDomNodes"
            ]
        },
        "dynatrace:index/WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings:WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings": {
            "properties": {
                "blur": {
                    "type": "boolean",
                    "description": "Blur event handler enabled/disabled\n"
                },
                "change": {
                    "type": "boolean",
                    "description": "Change event handler enabled/disabled\n"
                },
                "click": {
                    "type": "boolean",
                    "description": "Click event handler enabled/disabled\n"
                },
                "mouseup": {
                    "type": "boolean",
                    "description": "Mouseup event handler enabled/disabled\n"
                },
                "touchEnd": {
                    "type": "boolean",
                    "description": "TouchEnd enabled/disabled\n"
                },
                "touchStart": {
                    "type": "boolean",
                    "description": "TouchStart enabled/disabled\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings:WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings": {
            "properties": {
                "additionalEventCapturedAsUserInput": {
                    "type": "string",
                    "description": "Additional events to be captured globally as user input.\n"
                },
                "change": {
                    "type": "boolean",
                    "description": "Change event handler enabled/disabled\n"
                },
                "click": {
                    "type": "boolean",
                    "description": "Click event handler enabled/disabled\n"
                },
                "doubleclick": {
                    "type": "boolean"
                },
                "keydown": {
                    "type": "boolean"
                },
                "keyup": {
                    "type": "boolean"
                },
                "mousedown": {
                    "type": "boolean"
                },
                "mouseup": {
                    "type": "boolean",
                    "description": "Mouseup event handler enabled/disabled\n"
                },
                "scroll": {
                    "type": "boolean"
                },
                "touchEnd": {
                    "type": "boolean",
                    "description": "TouchEnd enabled/disabled\n"
                },
                "touchStart": {
                    "type": "boolean",
                    "description": "TouchStart enabled/disabled\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/WebApplicationMonitoringSettingsBrowserRestrictionSettings:WebApplicationMonitoringSettingsBrowserRestrictionSettings": {
            "properties": {
                "mode": {
                    "type": "string",
                    "description": "The mode of the list of browser restrictions. Possible values area `EXCLUDE` and `INCLUDE`.\n"
                },
                "restrictions": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions:WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions",
                    "description": "A list of browser restrictions\n"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "dynatrace:index/WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions:WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions": {
            "properties": {
                "restrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction:WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction"
                    },
                    "description": "Browser exclusion rules for the browsers that are to be excluded\n"
                }
            },
            "type": "object",
            "required": [
                "restrictions"
            ]
        },
        "dynatrace:index/WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction:WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction": {
            "properties": {
                "browserType": {
                    "type": "string",
                    "description": "The type of the browser that is used. Possible values are `ANDROID_WEBKIT`, `BOTS_SPIDERS`, `CHROME`, `EDGE`, `FIREFOX`, `INTERNET_EXPLORER,`OPERA`and`SAFARI`\n"
                },
                "browserVersion": {
                    "type": "string",
                    "description": "The version of the browser that is used\n"
                },
                "comparator": {
                    "type": "string",
                    "description": "No documentation available. Possible values are `EQUALS`, `GREATER_THAN_OR_EQUAL` and `LOWER_THAN_OR_EQUAL`.\n"
                },
                "platform": {
                    "type": "string",
                    "description": "The platform on which the browser is being used. Possible values are `ALL`, `DESKTOP` and `MOBILE`\n"
                }
            },
            "type": "object",
            "required": [
                "browserType"
            ]
        },
        "dynatrace:index/WebApplicationMonitoringSettingsContentCapture:WebApplicationMonitoringSettingsContentCapture": {
            "properties": {
                "javascriptErrors": {
                    "type": "boolean",
                    "description": "JavaScript errors monitoring enabled/disabled\n"
                },
                "resourceTimingSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings:WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings",
                    "description": "Settings for resource timings capture\n"
                },
                "timeoutSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsContentCaptureTimeoutSettings:WebApplicationMonitoringSettingsContentCaptureTimeoutSettings",
                    "description": "Settings for timed action capture\n"
                },
                "visuallyCompleteAndSpeedIndex": {
                    "type": "boolean",
                    "description": "Visually complete and Speed index support enabled/disabled\n"
                },
                "visuallyCompleteSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings:WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings",
                    "description": "Settings for VisuallyComplete\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings:WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings": {
            "properties": {
                "instrumentationDelay": {
                    "type": "integer",
                    "description": "Instrumentation delay for monitoring resource and image resource impact in browsers that don't offer W3C resource timings.\n"
                },
                "nonW3cResourceTimings": {
                    "type": "boolean"
                },
                "resourceTimingCaptureType": {
                    "type": "string"
                },
                "resourceTimingsDomainLimit": {
                    "type": "integer"
                },
                "w3cResourceTimings": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "instrumentationDelay"
            ]
        },
        "dynatrace:index/WebApplicationMonitoringSettingsContentCaptureTimeoutSettings:WebApplicationMonitoringSettingsContentCaptureTimeoutSettings": {
            "properties": {
                "temporaryActionLimit": {
                    "type": "integer",
                    "description": "Defines how deep temporary actions may cascade. 0 disables temporary actions completely. Recommended value if enabled is 3\n"
                },
                "temporaryActionTotalTimeout": {
                    "type": "integer",
                    "description": "The total timeout of all cascaded timeouts that should still be able to create a temporary action\n"
                },
                "timedActionSupport": {
                    "type": "boolean",
                    "description": "Timed action support enabled/disabled.\n"
                }
            },
            "type": "object",
            "required": [
                "temporaryActionLimit",
                "temporaryActionTotalTimeout"
            ]
        },
        "dynatrace:index/WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings:WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings": {
            "properties": {
                "excludeUrlRegex": {
                    "type": "string",
                    "description": "A RegularExpression used to exclude images and iframes from being detected by the VC module\n"
                },
                "ignoredMutationsList": {
                    "type": "string",
                    "description": "Query selector for mutation nodes to ignore in VC and SI calculation\n"
                },
                "inactivityTimeout": {
                    "type": "integer",
                    "description": "The time in ms the VC module waits for no mutations happening on the page after the load action. Defaults to 1000. Valid values range from 0 to 30000.\n"
                },
                "mutationTimeout": {
                    "type": "integer",
                    "description": "Determines the time in ms VC waits after an action closes to start calculation. Defaults to 50. Valid values range from 0 to 5000.\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "no documentation available\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/WebApplicationMonitoringSettingsIpAddressRestrictionSettings:WebApplicationMonitoringSettingsIpAddressRestrictionSettings": {
            "properties": {
                "mode": {
                    "type": "string",
                    "description": "The mode of the list of browser restrictions. Possible values area `EXCLUDE` and `INCLUDE`.\n"
                },
                "restrictions": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions:WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions",
                    "description": "A list of browser restrictions\n"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "dynatrace:index/WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions:WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions": {
            "properties": {
                "ranges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange:WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange"
                    },
                    "description": "The IP address or the IP address range to be mapped to the location\n"
                }
            },
            "type": "object",
            "required": [
                "ranges"
            ]
        },
        "dynatrace:index/WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange:WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The IP address to be mapped.\n"
                },
                "addressTo": {
                    "type": "string"
                },
                "subnetMask": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "dynatrace:index/WebApplicationMonitoringSettingsJavascriptFrameworkSupport:WebApplicationMonitoringSettingsJavascriptFrameworkSupport": {
            "properties": {
                "activeXObject": {
                    "type": "boolean",
                    "description": "ActiveXObject support enabled/disabled\n"
                },
                "angular": {
                    "type": "boolean",
                    "description": "AngularJS and Angular support enabled/disabled\n"
                },
                "dojo": {
                    "type": "boolean",
                    "description": "Dojo support enabled/disabled\n"
                },
                "extjs": {
                    "type": "boolean",
                    "description": "ExtJS, Sencha Touch support enabled/disabled\n"
                },
                "icefaces": {
                    "type": "boolean",
                    "description": "ICEfaces support enabled/disabled\n"
                },
                "jquery": {
                    "type": "boolean",
                    "description": "jQuery, Backbone.js support enabled/disabled\n"
                },
                "mooTools": {
                    "type": "boolean",
                    "description": "MooTools support enabled/disabled\n"
                },
                "prototype": {
                    "type": "boolean",
                    "description": "Prototype support enabled/disabled\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/WebApplicationMonitoringSettingsJavascriptInjectionRules:WebApplicationMonitoringSettingsJavascriptInjectionRules": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettingsJavascriptInjectionRulesRule:WebApplicationMonitoringSettingsJavascriptInjectionRulesRule"
                    },
                    "description": "Java script injection rule\n"
                }
            },
            "type": "object",
            "required": [
                "rules"
            ]
        },
        "dynatrace:index/WebApplicationMonitoringSettingsJavascriptInjectionRulesRule:WebApplicationMonitoringSettingsJavascriptInjectionRulesRule": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "`fetch()` request capture enabled/disabled\n"
                },
                "htmlPattern": {
                    "type": "string",
                    "description": "The HTML pattern of the java script injection\n"
                },
                "rule": {
                    "type": "string",
                    "description": "Java script injection rule\n"
                },
                "target": {
                    "type": "string",
                    "description": "The target against which the rule of the java script injection should be matched. Possible values are `PAGE_QUERY` and `URL`.\n"
                },
                "urlOperator": {
                    "type": "string",
                    "description": "The url operator of the java script injection. Possible values are `ALL_PAGES`, `CONTAINS`, `ENDS_WITH`, `EQUALS` and `STARTS_WITH`.\n"
                },
                "urlPattern": {
                    "type": "string",
                    "description": "The url pattern of the java script injection\n"
                }
            },
            "type": "object",
            "required": [
                "rule",
                "urlOperator"
            ]
        },
        "dynatrace:index/WebApplicationSessionReplayConfig:WebApplicationSessionReplayConfig": {
            "properties": {
                "costControlPercentage": {
                    "type": "integer",
                    "description": "(Field has overlap with `dynatrace.WebAppEnablement`) Session replay sampling rating in percent\n"
                },
                "cssResourceCapturingExclusionRules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Field has overlap with `dynatrace.SessionReplayResourceCapture`) A list of URLs to be excluded from CSS resource capturing\n"
                },
                "enableCssResourceCapturing": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.SessionReplayResourceCapture`) Capture (`true`) or don't capture (`false`) CSS resources from the session\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.WebAppEnablement`) SessionReplay Enabled/Disabled\n"
                }
            },
            "type": "object",
            "required": [
                "costControlPercentage"
            ]
        },
        "dynatrace:index/WebApplicationUserActionAndSessionProperties:WebApplicationUserActionAndSessionProperties": {
            "properties": {
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationUserActionAndSessionPropertiesProperty:WebApplicationUserActionAndSessionPropertiesProperty"
                    },
                    "description": "User action and session properties settings\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/WebApplicationUserActionAndSessionPropertiesProperty:WebApplicationUserActionAndSessionPropertiesProperty": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation type of the property.\n"
                },
                "cleanupRule": {
                    "type": "string",
                    "description": "Cleanup rule expression of the userTag\n"
                },
                "displayName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of conversion goal.\n"
                },
                "ignoreCase": {
                    "type": "boolean",
                    "description": "Case insensitive naming\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key of the property\n"
                },
                "longStringLength": {
                    "type": "integer"
                },
                "metadataId": {
                    "type": "integer",
                    "description": "The ID of the metadata\n"
                },
                "origin": {
                    "type": "string",
                    "description": "The origin of the property. Possible values are `JAVASCRIPT_API`, `META_DATA` and `SERVER_SIDE_REQUEST_ATTRIBUTE`.\n"
                },
                "serverSideRequestAttribute": {
                    "type": "string",
                    "description": "The ID of the RrequestAttribute for the userTag\n"
                },
                "storeAsSessionProperty": {
                    "type": "boolean"
                },
                "storeAsUserActionProperty": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the action. Possible values are `Custom`, `Load` and `Xhr`.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "key",
                "origin",
                "type"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettings:WebApplicationUserActionNamingSettings": {
            "properties": {
                "customActionNamingRules": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsCustomActionNamingRules:WebApplicationUserActionNamingSettingsCustomActionNamingRules",
                    "description": "User action naming rules for custom actions\n"
                },
                "ignoreCase": {
                    "type": "boolean",
                    "description": "Case insensitive naming\n"
                },
                "loadActionNamingRules": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsLoadActionNamingRules:WebApplicationUserActionNamingSettingsLoadActionNamingRules",
                    "description": "User action naming rules for loading actions\n"
                },
                "placeholders": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsPlaceholders:WebApplicationUserActionNamingSettingsPlaceholders",
                    "description": "User action placeholders\n"
                },
                "queryParameterCleanups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "User action naming rules for custom actions. If not specified Dynatrace assumes `__sid`, `cfid`, `cftoken`, `phpsessid` and `sid`.\n"
                },
                "splitUserActionsByDomain": {
                    "type": "boolean",
                    "description": "Deactivate this setting if different domains should not result in separate user actions\n"
                },
                "useFirstDetectedLoadAction": {
                    "type": "boolean",
                    "description": "First load action found under an XHR action should be used when true. Else the deepest one under the xhr action is used\n"
                },
                "xhrActionNamingRules": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsXhrActionNamingRules:WebApplicationUserActionNamingSettingsXhrActionNamingRules",
                    "description": "User action naming rules for XHR actions\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "queryParameterCleanups"
                    ]
                }
            }
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsCustomActionNamingRules:WebApplicationUserActionNamingSettingsCustomActionNamingRules": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule:WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule"
                    },
                    "description": "Java script injection rule\n"
                }
            },
            "type": "object",
            "required": [
                "rules"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule:WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule": {
            "properties": {
                "conditions": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions:WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions",
                    "description": "Defines the conditions when the naming rule should apply\n"
                },
                "template": {
                    "type": "string",
                    "description": "Naming pattern. Use Curly brackets `{}` to select placeholders\n"
                },
                "useOrConditions": {
                    "type": "boolean",
                    "description": "If set to `true` the conditions will be connected by logical OR instead of logical AND\n"
                }
            },
            "type": "object",
            "required": [
                "template"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions:WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition:WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition"
                    },
                    "description": "Defines the conditions when the naming rule should apply\n"
                }
            },
            "type": "object",
            "required": [
                "conditions"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition:WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition": {
            "properties": {
                "operand1": {
                    "type": "string",
                    "description": "Must be a defined placeholder wrapped in curly braces\n"
                },
                "operand2": {
                    "type": "string",
                    "description": "Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces\n"
                },
                "operator": {
                    "type": "string",
                    "description": "The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.\n"
                }
            },
            "type": "object",
            "required": [
                "operand1",
                "operator"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsLoadActionNamingRules:WebApplicationUserActionNamingSettingsLoadActionNamingRules": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule:WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule"
                    },
                    "description": "Java script injection rule\n"
                }
            },
            "type": "object",
            "required": [
                "rules"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule:WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule": {
            "properties": {
                "conditions": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions:WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions",
                    "description": "Defines the conditions when the naming rule should apply\n"
                },
                "template": {
                    "type": "string",
                    "description": "Naming pattern. Use Curly brackets `{}` to select placeholders\n"
                },
                "useOrConditions": {
                    "type": "boolean",
                    "description": "If set to `true` the conditions will be connected by logical OR instead of logical AND\n"
                }
            },
            "type": "object",
            "required": [
                "template"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions:WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition:WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition"
                    },
                    "description": "Defines the conditions when the naming rule should apply\n"
                }
            },
            "type": "object",
            "required": [
                "conditions"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition:WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition": {
            "properties": {
                "operand1": {
                    "type": "string",
                    "description": "Must be a defined placeholder wrapped in curly braces\n"
                },
                "operand2": {
                    "type": "string",
                    "description": "Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces\n"
                },
                "operator": {
                    "type": "string",
                    "description": "The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.\n"
                }
            },
            "type": "object",
            "required": [
                "operand1",
                "operator"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsPlaceholders:WebApplicationUserActionNamingSettingsPlaceholders": {
            "properties": {
                "placeholders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder:WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder"
                    },
                    "description": "User action placeholders\n"
                }
            },
            "type": "object",
            "required": [
                "placeholders"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder:WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder": {
            "properties": {
                "input": {
                    "type": "string",
                    "description": "The input for the place holder. Possible values are `ELEMENT_IDENTIFIER`, `INPUT_TYPE`, `METADATA`, `PAGE_TITLE`, `PAGE_URL`, `SOURCE_URL`, `TOP_XHR_URL` and `XHR_URL`\n"
                },
                "metadataId": {
                    "type": "integer",
                    "description": "The ID of the metadata\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the conversion goal. Valid length within 1 and 50 characters.\n"
                },
                "processingPart": {
                    "type": "string",
                    "description": "The part to process. Possible values are `ALL`, `ANCHOR` and `PATH`\n"
                },
                "processingSteps": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps:WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps",
                    "description": "The processing step settings\n"
                },
                "useGuessedElementIdentifier": {
                    "type": "boolean",
                    "description": "Use the element identifier that was selected by Dynatrace\n"
                }
            },
            "type": "object",
            "required": [
                "input",
                "name",
                "processingPart"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps:WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps": {
            "properties": {
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep:WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep"
                    },
                    "description": "The processing step\n"
                }
            },
            "type": "object",
            "required": [
                "steps"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep:WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep": {
            "properties": {
                "fallbackToInput": {
                    "type": "boolean",
                    "description": "If set to `true`: Returns the input if `patternBefore` or `patternAfter` cannot be found and the `type` is `SUBSTRING`. Returns the input if `regularExpression` doesn't match and `type` is `EXTRACT_BY_REGULAR_EXPRESSION`.\n"
                },
                "patternAfter": {
                    "type": "string"
                },
                "patternAfterSearchType": {
                    "type": "string"
                },
                "patternBefore": {
                    "type": "string"
                },
                "patternBeforeSearchType": {
                    "type": "string"
                },
                "patternToReplace": {
                    "type": "string"
                },
                "regularExpression": {
                    "type": "string"
                },
                "replacement": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the action. Possible values are `Custom`, `Load` and `Xhr`.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsXhrActionNamingRules:WebApplicationUserActionNamingSettingsXhrActionNamingRules": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule:WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule"
                    },
                    "description": "Java script injection rule\n"
                }
            },
            "type": "object",
            "required": [
                "rules"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule:WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule": {
            "properties": {
                "conditions": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions:WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions",
                    "description": "Defines the conditions when the naming rule should apply\n"
                },
                "template": {
                    "type": "string",
                    "description": "Naming pattern. Use Curly brackets `{}` to select placeholders\n"
                },
                "useOrConditions": {
                    "type": "boolean",
                    "description": "If set to `true` the conditions will be connected by logical OR instead of logical AND\n"
                }
            },
            "type": "object",
            "required": [
                "template"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions:WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition:WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition"
                    },
                    "description": "Defines the conditions when the naming rule should apply\n"
                }
            },
            "type": "object",
            "required": [
                "conditions"
            ]
        },
        "dynatrace:index/WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition:WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition": {
            "properties": {
                "operand1": {
                    "type": "string",
                    "description": "Must be a defined placeholder wrapped in curly braces\n"
                },
                "operand2": {
                    "type": "string",
                    "description": "Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces\n"
                },
                "operator": {
                    "type": "string",
                    "description": "The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.\n"
                }
            },
            "type": "object",
            "required": [
                "operand1",
                "operator"
            ]
        },
        "dynatrace:index/WebApplicationUserTags:WebApplicationUserTags": {
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationUserTagsTag:WebApplicationUserTagsTag"
                    },
                    "description": "User tag settings\n"
                }
            },
            "type": "object",
            "required": [
                "tags"
            ]
        },
        "dynatrace:index/WebApplicationUserTagsTag:WebApplicationUserTagsTag": {
            "properties": {
                "cleanupRule": {
                    "type": "string",
                    "description": "Cleanup rule expression of the userTag\n"
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of conversion goal.\n"
                },
                "ignoreCase": {
                    "type": "boolean",
                    "description": "Case insensitive naming\n"
                },
                "metadataId": {
                    "type": "integer",
                    "description": "The ID of the metadata\n"
                },
                "serverSideRequestAttribute": {
                    "type": "string",
                    "description": "The ID of the RrequestAttribute for the userTag\n"
                },
                "uniqueId": {
                    "type": "integer",
                    "description": "The unique ID of the meta data to capture\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "uniqueId"
                    ]
                }
            }
        },
        "dynatrace:index/WebApplicationWaterfallSettings:WebApplicationWaterfallSettings": {
            "properties": {
                "resourceBrowserCachingThreshold": {
                    "type": "integer",
                    "description": "Warn about resources with a lower browser cache rate above *X*%. Values between 1 and 100 are allowed.\n"
                },
                "resourcesThreshold": {
                    "type": "integer",
                    "description": "Warn about resources larger than *X* bytes. Values between 0 and 99999000 are allowed.\n"
                },
                "slowCndResourcesThreshold": {
                    "type": "integer",
                    "description": "Warn about slow CDN resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.\n"
                },
                "slowFirstPartyResourcesThreshold": {
                    "type": "integer",
                    "description": "Warn about slow 1st party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.\n"
                },
                "slowThirdPartyResourcesThreshold": {
                    "type": "integer",
                    "description": "Warn about slow 3rd party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.\n"
                },
                "speedIndexVisuallyCompleteRatioThreshold": {
                    "type": "integer",
                    "description": "Warn if Speed index exceeds *X* % of Visually complete. Values between 1 and 99 are allowed.\n"
                },
                "uncompressedResourcesThreshold": {
                    "type": "integer",
                    "description": "Warn about uncompressed resources larger than *X* bytes. Values between 0 and 99999 are allowed.\n"
                }
            },
            "type": "object",
            "required": [
                "resourceBrowserCachingThreshold",
                "resourcesThreshold",
                "slowCndResourcesThreshold",
                "slowFirstPartyResourcesThreshold",
                "slowThirdPartyResourcesThreshold",
                "speedIndexVisuallyCompleteRatioThreshold",
                "uncompressedResourcesThreshold"
            ]
        },
        "dynatrace:index/WebApplicationXhrActionApdexSettings:WebApplicationXhrActionApdexSettings": {
            "properties": {
                "frustratingFallbackThreshold": {
                    "type": "integer",
                    "description": "Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.\n"
                },
                "frustratingThreshold": {
                    "type": "integer",
                    "description": "Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "no documentation available\n"
                },
                "toleratedFallbackThreshold": {
                    "type": "integer",
                    "description": "Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.\n"
                },
                "toleratedThreshold": {
                    "type": "integer",
                    "description": "Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.\n"
                }
            },
            "type": "object"
        },
        "dynatrace:index/WebhookNotificationHeaders:WebhookNotificationHeaders": {
            "properties": {
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebhookNotificationHeadersHeader:WebhookNotificationHeadersHeader"
                    },
                    "description": "An additional HTTP Header to include when sending requests\n"
                }
            },
            "type": "object",
            "required": [
                "headers"
            ]
        },
        "dynatrace:index/WebhookNotificationHeadersHeader:WebhookNotificationHeadersHeader": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the HTTP header\n"
                },
                "secretValue": {
                    "type": "string",
                    "description": "The value of the HTTP header as a sensitive property. May contain an empty value. `secret_value` and `value` are mutually exclusive. Only one of those two is allowed to be specified.\n",
                    "secret": true
                },
                "value": {
                    "type": "string",
                    "description": "The value of the HTTP header. May contain an empty value. `secret_value` and `value` are mutually exclusive. Only one of those two is allowed to be specified.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "dynatrace:index/WebhookNotificationOauth2Credentials:WebhookNotificationOauth2Credentials": {
            "properties": {
                "accessTokenUrl": {
                    "type": "string",
                    "description": "Access token URL\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret\n",
                    "secret": true
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of access you are requesting\n"
                }
            },
            "type": "object",
            "required": [
                "accessTokenUrl",
                "clientId",
                "clientSecret"
            ]
        },
        "dynatrace:index/XmattersNotificationHeaders:XmattersNotificationHeaders": {
            "properties": {
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/XmattersNotificationHeadersHeader:XmattersNotificationHeadersHeader"
                    },
                    "description": "An additional HTTP Header to include when sending requests\n"
                }
            },
            "type": "object",
            "required": [
                "headers"
            ]
        },
        "dynatrace:index/XmattersNotificationHeadersHeader:XmattersNotificationHeadersHeader": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the HTTP header\n"
                },
                "secretValue": {
                    "type": "string",
                    "description": "The value of the HTTP header as a sensitive property. May contain an empty value. `secret_value` and `value` are mutually exclusive. Only one of those two is allowed to be specified.\n",
                    "secret": true
                },
                "value": {
                    "type": "string",
                    "description": "The value of the HTTP header. May contain an empty value. `secret_value` and `value` are mutually exclusive. Only one of those two is allowed to be specified.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "dynatrace:index/getAlertingProfilesValue:getAlertingProfilesValue": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "legacyId": {
                    "type": "string"
                },
                "managementZoneId": {
                    "type": "string"
                },
                "managementZoneLegacyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "legacyId",
                "managementZoneId",
                "managementZoneLegacyId",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "dynatrace:index/getDocumentsValue:getDocumentsValue": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "owner",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "dynatrace:index/getEntitiesEntity:getEntitiesEntity": {
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "entityId": {
                    "type": "string"
                },
                "lastSeenTms": {
                    "type": "integer"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/getEntitiesEntityTag:getEntitiesEntityTag"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "properties"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "dynatrace:index/getEntitiesEntityTag:getEntitiesEntityTag": {
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/getEntitiesEntityTagTag:getEntitiesEntityTagTag"
                    }
                }
            },
            "type": "object"
        },
        "dynatrace:index/getEntitiesEntityTagTag:getEntitiesEntityTagTag": {
            "properties": {
                "context": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "stringRepresentation": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "context",
                "key"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "dynatrace:index/getHubItemsItem:getHubItemsItem": {
            "properties": {
                "activationLink": {
                    "type": "string"
                },
                "artifactId": {
                    "type": "string"
                },
                "authorLogo": {
                    "type": "string"
                },
                "authorName": {
                    "type": "string"
                },
                "clusterCompatible": {
                    "type": "boolean"
                },
                "comingSoon": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "documentationLink": {
                    "type": "string"
                },
                "hasDescriptionBlocks": {
                    "type": "boolean"
                },
                "itemId": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "marketingLink": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notCompatibleReason": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "activationLink",
                "artifactId",
                "authorLogo",
                "authorName",
                "clusterCompatible",
                "comingSoon",
                "description",
                "documentationLink",
                "hasDescriptionBlocks",
                "itemId",
                "logo",
                "marketingLink",
                "name",
                "notCompatibleReason",
                "tags",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "dynatrace:index/getManagementZonesValue:getManagementZonesValue": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "legacyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "legacyId",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "dynatrace:index/getRemoteEnvironmentsRemoteEnvironment:getRemoteEnvironmentsRemoteEnvironment": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "networkScope": {
                    "type": "string"
                },
                "token": {
                    "type": "string",
                    "secret": true
                },
                "uri": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "networkScope",
                "token",
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "dynatrace:index/getSyntheticLocationsLocations:getSyntheticLocationsLocations": {
            "properties": {
                "cloudPlatform": {
                    "type": "string",
                    "description": "The cloud provider where the location is hosted.\n"
                },
                "entityId": {
                    "type": "string"
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "stage": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "cloudPlatform",
                "ips",
                "stage",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "dynatrace:index/getSyntheticNodesNode:getSyntheticNodesNode": {
            "properties": {
                "activeGateVersion": {
                    "type": "string"
                },
                "autoUpdate": {
                    "type": "boolean"
                },
                "browserMonitors": {
                    "type": "boolean"
                },
                "healthCheckStatus": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "oneAgentRouting": {
                    "type": "boolean"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "playerVersion": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "activeGateVersion",
                "autoUpdate",
                "browserMonitors",
                "healthCheckStatus",
                "hostname",
                "id",
                "ips",
                "oneAgentRouting",
                "operatingSystem",
                "playerVersion",
                "status",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the dynatrace package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "accountId": {
                "type": "string",
                "secret": true
            },
            "automationClientId": {
                "type": "string",
                "secret": true
            },
            "automationClientSecret": {
                "type": "string",
                "secret": true
            },
            "automationEnvUrl": {
                "type": "string",
                "description": "The URL of the Dynatrace Environment with Platform capabilities turned on (`https://#####.apps.dynatrace.com)`. This is\noptional configuration when `dt_env_url` already specifies a SaaS Environment like `https://#####.live.dynatrace.com` or\n`https://#####.apps.dynatrace.com`\n"
            },
            "automationTokenUrl": {
                "type": "string",
                "description": "The URL that provides the Bearer tokens when accessing the Automation REST API. This is optional configuration when\n`dt_env_url` already specifies a SaaS Environment like `https://#####.live.dynatrace.com` or\n`https://#####.apps.dynatrace.com`\n"
            },
            "clientId": {
                "type": "string",
                "secret": true
            },
            "clientSecret": {
                "type": "string",
                "secret": true
            },
            "dtApiToken": {
                "type": "string",
                "secret": true
            },
            "dtClusterApiToken": {
                "type": "string",
                "secret": true
            },
            "dtClusterUrl": {
                "type": "string",
                "secret": true
            },
            "dtEnvUrl": {
                "type": "string"
            },
            "iamAccountId": {
                "type": "string",
                "secret": true
            },
            "iamClientId": {
                "type": "string",
                "secret": true
            },
            "iamClientSecret": {
                "type": "string",
                "secret": true
            }
        },
        "inputProperties": {
            "accountId": {
                "type": "string",
                "secret": true
            },
            "automationClientId": {
                "type": "string",
                "secret": true
            },
            "automationClientSecret": {
                "type": "string",
                "secret": true
            },
            "automationEnvUrl": {
                "type": "string",
                "description": "The URL of the Dynatrace Environment with Platform capabilities turned on (`https://#####.apps.dynatrace.com)`. This is\noptional configuration when `dt_env_url` already specifies a SaaS Environment like `https://#####.live.dynatrace.com` or\n`https://#####.apps.dynatrace.com`\n"
            },
            "automationTokenUrl": {
                "type": "string",
                "description": "The URL that provides the Bearer tokens when accessing the Automation REST API. This is optional configuration when\n`dt_env_url` already specifies a SaaS Environment like `https://#####.live.dynatrace.com` or\n`https://#####.apps.dynatrace.com`\n"
            },
            "clientId": {
                "type": "string",
                "secret": true
            },
            "clientSecret": {
                "type": "string",
                "secret": true
            },
            "dtApiToken": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DYNATRACE_API_TOKEN",
                        "DT_API_TOKEN"
                    ]
                },
                "secret": true
            },
            "dtClusterApiToken": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DYNATRACE_CLUSTER_API_TOKEN",
                        "DT_CLUSTER_API_TOKEN"
                    ]
                },
                "secret": true
            },
            "dtClusterUrl": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DYNATRACE_CLUSTER_URL",
                        "DT_CLUSTER_URL"
                    ]
                },
                "secret": true
            },
            "dtEnvUrl": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DYNATRACE_ENV_URL",
                        "DT_ENV_URL"
                    ]
                }
            },
            "iamAccountId": {
                "type": "string",
                "secret": true
            },
            "iamClientId": {
                "type": "string",
                "secret": true
            },
            "iamClientSecret": {
                "type": "string",
                "secret": true
            }
        }
    },
    "resources": {
        "dynatrace:index/activegateToken:ActivegateToken": {
            "properties": {
                "authTokenEnforcementManuallyEnabled": {
                    "type": "boolean",
                    "description": "Manually enforce ActiveGate token authentication\n"
                },
                "expiringTokenNotificationsEnabled": {
                    "type": "boolean",
                    "description": "Note: ActiveGate tokens notifications are sent only when you deployed ActiveGate tokens with expiration dates in your environment and notifications are defined ([see notification settings](https://www.terraform.io/ui/settings/builtin:problem.notifications))\n"
                }
            },
            "required": [
                "authTokenEnforcementManuallyEnabled",
                "expiringTokenNotificationsEnabled"
            ],
            "inputProperties": {
                "authTokenEnforcementManuallyEnabled": {
                    "type": "boolean",
                    "description": "Manually enforce ActiveGate token authentication\n"
                },
                "expiringTokenNotificationsEnabled": {
                    "type": "boolean",
                    "description": "Note: ActiveGate tokens notifications are sent only when you deployed ActiveGate tokens with expiration dates in your environment and notifications are defined ([see notification settings](https://www.terraform.io/ui/settings/builtin:problem.notifications))\n"
                }
            },
            "requiredInputs": [
                "authTokenEnforcementManuallyEnabled",
                "expiringTokenNotificationsEnabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ActivegateToken resources.\n",
                "properties": {
                    "authTokenEnforcementManuallyEnabled": {
                        "type": "boolean",
                        "description": "Manually enforce ActiveGate token authentication\n"
                    },
                    "expiringTokenNotificationsEnabled": {
                        "type": "boolean",
                        "description": "Note: ActiveGate tokens notifications are sent only when you deployed ActiveGate tokens with expiration dates in your environment and notifications are defined ([see notification settings](https://www.terraform.io/ui/settings/builtin:problem.notifications))\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/activegateUpdates:ActivegateUpdates": {
            "properties": {
                "autoUpdate": {
                    "type": "boolean",
                    "description": "Automatic updates at earliest convenience\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (ENVIRONMENT*ACTIVE*GATE). Omit this property if you want to cover the whole environment.\n"
                }
            },
            "required": [
                "autoUpdate"
            ],
            "inputProperties": {
                "autoUpdate": {
                    "type": "boolean",
                    "description": "Automatic updates at earliest convenience\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (ENVIRONMENT*ACTIVE*GATE). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "autoUpdate"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ActivegateUpdates resources.\n",
                "properties": {
                    "autoUpdate": {
                        "type": "boolean",
                        "description": "Automatic updates at earliest convenience\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (ENVIRONMENT*ACTIVE*GATE). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/agToken:AgToken": {
            "properties": {
                "expirationDate": {
                    "type": "string",
                    "description": "The expiration date of the token. You can use one of the following formats: * Timestamp in UTC milliseconds. *\nHuman-readable format of 2021-01-25T05:57:01.123+01:00. If no time zone is specified, UTC is used. You can use a space\ncharacter instead of the T. Seconds and fractions of a second are optional. * Relative timeframe, back from now. The\nformat is now-NU/A, where N is the amount of time, U is the unit of time, and A is an alignment. The alignment rounds\nall the smaller values to the nearest zero in the past. For example, now-1y/w is one year back, aligned by a week. You\ncan also specify relative timeframe without an alignment: now-NU. Supported time units for the relative timeframe are: -\nm: minutes - h: hours - d: days - w: weeks - M: months - y: years\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the token.\n"
                },
                "seed": {
                    "type": "boolean",
                    "description": "The token is a seed token (true) or an individual token (false). We recommend the individual token option (false)\n"
                },
                "tenantToken": {
                    "type": "string",
                    "description": "The tenant token. This information isn't directly related to the Active Gate Token. It's included for convenience. You\nrequire the permission `InstallerDownload` for that attribute to get populated\n",
                    "secret": true
                },
                "token": {
                    "type": "string",
                    "description": "The secret of the token.\n",
                    "secret": true
                },
                "type": {
                    "type": "string",
                    "description": "The type of the ActiveGate for which the token is valid. Possible values are `ENVIRONMENT` or `CLUSTER`\n"
                }
            },
            "required": [
                "name",
                "tenantToken",
                "token",
                "type"
            ],
            "inputProperties": {
                "expirationDate": {
                    "type": "string",
                    "description": "The expiration date of the token. You can use one of the following formats: * Timestamp in UTC milliseconds. *\nHuman-readable format of 2021-01-25T05:57:01.123+01:00. If no time zone is specified, UTC is used. You can use a space\ncharacter instead of the T. Seconds and fractions of a second are optional. * Relative timeframe, back from now. The\nformat is now-NU/A, where N is the amount of time, U is the unit of time, and A is an alignment. The alignment rounds\nall the smaller values to the nearest zero in the past. For example, now-1y/w is one year back, aligned by a week. You\ncan also specify relative timeframe without an alignment: now-NU. Supported time units for the relative timeframe are: -\nm: minutes - h: hours - d: days - w: weeks - M: months - y: years\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the token.\n"
                },
                "seed": {
                    "type": "boolean",
                    "description": "The token is a seed token (true) or an individual token (false). We recommend the individual token option (false)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the ActiveGate for which the token is valid. Possible values are `ENVIRONMENT` or `CLUSTER`\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AgToken resources.\n",
                "properties": {
                    "expirationDate": {
                        "type": "string",
                        "description": "The expiration date of the token. You can use one of the following formats: * Timestamp in UTC milliseconds. *\nHuman-readable format of 2021-01-25T05:57:01.123+01:00. If no time zone is specified, UTC is used. You can use a space\ncharacter instead of the T. Seconds and fractions of a second are optional. * Relative timeframe, back from now. The\nformat is now-NU/A, where N is the amount of time, U is the unit of time, and A is an alignment. The alignment rounds\nall the smaller values to the nearest zero in the past. For example, now-1y/w is one year back, aligned by a week. You\ncan also specify relative timeframe without an alignment: now-NU. Supported time units for the relative timeframe are: -\nm: minutes - h: hours - d: days - w: weeks - M: months - y: years\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the token.\n"
                    },
                    "seed": {
                        "type": "boolean",
                        "description": "The token is a seed token (true) or an individual token (false). We recommend the individual token option (false)\n"
                    },
                    "tenantToken": {
                        "type": "string",
                        "description": "The tenant token. This information isn't directly related to the Active Gate Token. It's included for convenience. You\nrequire the permission `InstallerDownload` for that attribute to get populated\n",
                        "secret": true
                    },
                    "token": {
                        "type": "string",
                        "description": "The secret of the token.\n",
                        "secret": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the ActiveGate for which the token is valid. Possible values are `ENVIRONMENT` or `CLUSTER`\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/aixExtension:AixExtension": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                },
                "useGlobalSettings": {
                    "type": "boolean",
                    "description": "Use global settings\n"
                }
            },
            "required": [
                "hostId",
                "useGlobalSettings"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                },
                "useGlobalSettings": {
                    "type": "boolean",
                    "description": "Use global settings\n"
                }
            },
            "requiredInputs": [
                "hostId",
                "useGlobalSettings"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AixExtension resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "hostId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    },
                    "useGlobalSettings": {
                        "type": "boolean",
                        "description": "Use global settings\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/alerting:Alerting": {
            "properties": {
                "filters": {
                    "$ref": "#/types/dynatrace:index/AlertingFilters:AlertingFilters",
                    "description": "The list of event filters.  For all filters that are *negated* inside of these event filters, that is all `Predefined` as well as `Custom` (Title and/or Description) ones the AND logic applies. For all *non-negated* ones the OR logic applies. Between these two groups, negated and non-negated, the AND logic applies.  If you specify both severity rule and event filter, the AND logic applies\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of this setting when referred to by the Config REST API V1\n"
                },
                "managementZone": {
                    "type": "string",
                    "description": "Entities which are part of the configured management zones will match this alerting profile. It is recommended to use manual tags instead.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the alerting profile, displayed in the UI\n"
                },
                "rules": {
                    "$ref": "#/types/dynatrace:index/AlertingRules:AlertingRules",
                    "description": "A list of rules for management zone usage.  Each rule is evaluated independently of all other rules\n"
                }
            },
            "required": [
                "legacyId",
                "name"
            ],
            "inputProperties": {
                "filters": {
                    "$ref": "#/types/dynatrace:index/AlertingFilters:AlertingFilters",
                    "description": "The list of event filters.  For all filters that are *negated* inside of these event filters, that is all `Predefined` as well as `Custom` (Title and/or Description) ones the AND logic applies. For all *non-negated* ones the OR logic applies. Between these two groups, negated and non-negated, the AND logic applies.  If you specify both severity rule and event filter, the AND logic applies\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of this setting when referred to by the Config REST API V1\n"
                },
                "managementZone": {
                    "type": "string",
                    "description": "Entities which are part of the configured management zones will match this alerting profile. It is recommended to use manual tags instead.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the alerting profile, displayed in the UI\n"
                },
                "rules": {
                    "$ref": "#/types/dynatrace:index/AlertingRules:AlertingRules",
                    "description": "A list of rules for management zone usage.  Each rule is evaluated independently of all other rules\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Alerting resources.\n",
                "properties": {
                    "filters": {
                        "$ref": "#/types/dynatrace:index/AlertingFilters:AlertingFilters",
                        "description": "The list of event filters.  For all filters that are *negated* inside of these event filters, that is all `Predefined` as well as `Custom` (Title and/or Description) ones the AND logic applies. For all *non-negated* ones the OR logic applies. Between these two groups, negated and non-negated, the AND logic applies.  If you specify both severity rule and event filter, the AND logic applies\n"
                    },
                    "legacyId": {
                        "type": "string",
                        "description": "The ID of this setting when referred to by the Config REST API V1\n"
                    },
                    "managementZone": {
                        "type": "string",
                        "description": "Entities which are part of the configured management zones will match this alerting profile. It is recommended to use manual tags instead.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the alerting profile, displayed in the UI\n"
                    },
                    "rules": {
                        "$ref": "#/types/dynatrace:index/AlertingRules:AlertingRules",
                        "description": "A list of rules for management zone usage.  Each rule is evaluated independently of all other rules\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/alertingProfile:AlertingProfile": {
            "description": "!\u003e This resource API endpoint has been deprecated, please use dynatrace.Alerting instead.\n\n\u003e This resource requires the API token scopes **Read configuration** (`ReadConfig`) and **Write configuration** (`WriteConfig`)\n\n## Dynatrace Documentation\n\n- Alerting profiles - https://www.dynatrace.com/support/help/how-to-use-dynatrace/problem-detection-and-analysis/notifications-and-alerting/alerting-profiles\n\n- Alerting profiles API - https://www.dynatrace.com/support/help/dynatrace-api/configuration-api/alerting-profiles-api\n\n## Resource Example Usage\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\n\nconst _name_ = new dynatrace.AlertingProfile(\"#name#\", {\n    displayName: \"#name#\",\n    mzId: \"\",\n    rules: [\n        {\n            delayInMinutes: 0,\n            severityLevel: \"AVAILABILITY\",\n            tagFilters: [{\n                includeMode: \"INCLUDE_ALL\",\n                tagFilters: [\n                    {\n                        context: \"CONTEXTLESS\",\n                        key: \"EnvironmentA\",\n                        value: \"production\",\n                    },\n                    {\n                        context: \"CONTEXTLESS\",\n                        key: \"Team\",\n                        value: \"test\",\n                    },\n                ],\n            }],\n        },\n        {\n            delayInMinutes: 0,\n            severityLevel: \"CUSTOM_ALERT\",\n            tagFilters: [{\n                includeMode: \"INCLUDE_ALL\",\n                tagFilters: [\n                    {\n                        context: \"CONTEXTLESS\",\n                        key: \"EnvironmentB\",\n                        value: \"production\",\n                    },\n                    {\n                        context: \"CONTEXTLESS\",\n                        key: \"Team\",\n                        value: \"test\",\n                    },\n                ],\n            }],\n        },\n        {\n            delayInMinutes: 0,\n            severityLevel: \"ERROR\",\n            tagFilters: [{\n                includeMode: \"INCLUDE_ALL\",\n                tagFilters: [\n                    {\n                        context: \"CONTEXTLESS\",\n                        key: \"EnvironmentC\",\n                        value: \"production\",\n                    },\n                    {\n                        context: \"CONTEXTLESS\",\n                        key: \"Team\",\n                        value: \"test\",\n                    },\n                ],\n            }],\n        },\n        {\n            delayInMinutes: 0,\n            severityLevel: \"MONITORING_UNAVAILABLE\",\n            tagFilters: [{\n                includeMode: \"INCLUDE_ALL\",\n                tagFilters: [\n                    {\n                        context: \"CONTEXTLESS\",\n                        key: \"EnvironmentD\",\n                        value: \"production\",\n                    },\n                    {\n                        context: \"CONTEXTLESS\",\n                        key: \"Team\",\n                        value: \"test\",\n                    },\n                ],\n            }],\n        },\n        {\n            delayInMinutes: 0,\n            severityLevel: \"PERFORMANCE\",\n            tagFilters: [{\n                includeMode: \"INCLUDE_ALL\",\n                tagFilters: [\n                    {\n                        context: \"CONTEXTLESS\",\n                        key: \"EnvironmentE\",\n                        value: \"production\",\n                    },\n                    {\n                        context: \"CONTEXTLESS\",\n                        key: \"Team\",\n                        value: \"test\",\n                    },\n                ],\n            }],\n        },\n        {\n            delayInMinutes: 0,\n            severityLevel: \"RESOURCE_CONTENTION\",\n            tagFilters: [{\n                includeMode: \"INCLUDE_ALL\",\n                tagFilters: [\n                    {\n                        context: \"CONTEXTLESS\",\n                        key: \"EnvironmentF\",\n                        value: \"production\",\n                    },\n                    {\n                        context: \"CONTEXTLESS\",\n                        key: \"Team\",\n                        value: \"test\",\n                    },\n                ],\n            }],\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\n\n_name_ = dynatrace.AlertingProfile(\"#name#\",\n    display_name=\"#name#\",\n    mz_id=\"\",\n    rules=[\n        dynatrace.AlertingProfileRuleArgs(\n            delay_in_minutes=0,\n            severity_level=\"AVAILABILITY\",\n            tag_filters=[dynatrace.AlertingProfileRuleTagFilterArgs(\n                include_mode=\"INCLUDE_ALL\",\n                tag_filters=[\n                    dynatrace.AlertingProfileRuleTagFilterTagFilterArgs(\n                        context=\"CONTEXTLESS\",\n                        key=\"EnvironmentA\",\n                        value=\"production\",\n                    ),\n                    dynatrace.AlertingProfileRuleTagFilterTagFilterArgs(\n                        context=\"CONTEXTLESS\",\n                        key=\"Team\",\n                        value=\"test\",\n                    ),\n                ],\n            )],\n        ),\n        dynatrace.AlertingProfileRuleArgs(\n            delay_in_minutes=0,\n            severity_level=\"CUSTOM_ALERT\",\n            tag_filters=[dynatrace.AlertingProfileRuleTagFilterArgs(\n                include_mode=\"INCLUDE_ALL\",\n                tag_filters=[\n                    dynatrace.AlertingProfileRuleTagFilterTagFilterArgs(\n                        context=\"CONTEXTLESS\",\n                        key=\"EnvironmentB\",\n                        value=\"production\",\n                    ),\n                    dynatrace.AlertingProfileRuleTagFilterTagFilterArgs(\n                        context=\"CONTEXTLESS\",\n                        key=\"Team\",\n                        value=\"test\",\n                    ),\n                ],\n            )],\n        ),\n        dynatrace.AlertingProfileRuleArgs(\n            delay_in_minutes=0,\n            severity_level=\"ERROR\",\n            tag_filters=[dynatrace.AlertingProfileRuleTagFilterArgs(\n                include_mode=\"INCLUDE_ALL\",\n                tag_filters=[\n                    dynatrace.AlertingProfileRuleTagFilterTagFilterArgs(\n                        context=\"CONTEXTLESS\",\n                        key=\"EnvironmentC\",\n                        value=\"production\",\n                    ),\n                    dynatrace.AlertingProfileRuleTagFilterTagFilterArgs(\n                        context=\"CONTEXTLESS\",\n                        key=\"Team\",\n                        value=\"test\",\n                    ),\n                ],\n            )],\n        ),\n        dynatrace.AlertingProfileRuleArgs(\n            delay_in_minutes=0,\n            severity_level=\"MONITORING_UNAVAILABLE\",\n            tag_filters=[dynatrace.AlertingProfileRuleTagFilterArgs(\n                include_mode=\"INCLUDE_ALL\",\n                tag_filters=[\n                    dynatrace.AlertingProfileRuleTagFilterTagFilterArgs(\n                        context=\"CONTEXTLESS\",\n                        key=\"EnvironmentD\",\n                        value=\"production\",\n                    ),\n                    dynatrace.AlertingProfileRuleTagFilterTagFilterArgs(\n                        context=\"CONTEXTLESS\",\n                        key=\"Team\",\n                        value=\"test\",\n                    ),\n                ],\n            )],\n        ),\n        dynatrace.AlertingProfileRuleArgs(\n            delay_in_minutes=0,\n            severity_level=\"PERFORMANCE\",\n            tag_filters=[dynatrace.AlertingProfileRuleTagFilterArgs(\n                include_mode=\"INCLUDE_ALL\",\n                tag_filters=[\n                    dynatrace.AlertingProfileRuleTagFilterTagFilterArgs(\n                        context=\"CONTEXTLESS\",\n                        key=\"EnvironmentE\",\n                        value=\"production\",\n                    ),\n                    dynatrace.AlertingProfileRuleTagFilterTagFilterArgs(\n                        context=\"CONTEXTLESS\",\n                        key=\"Team\",\n                        value=\"test\",\n                    ),\n                ],\n            )],\n        ),\n        dynatrace.AlertingProfileRuleArgs(\n            delay_in_minutes=0,\n            severity_level=\"RESOURCE_CONTENTION\",\n            tag_filters=[dynatrace.AlertingProfileRuleTagFilterArgs(\n                include_mode=\"INCLUDE_ALL\",\n                tag_filters=[\n                    dynatrace.AlertingProfileRuleTagFilterTagFilterArgs(\n                        context=\"CONTEXTLESS\",\n                        key=\"EnvironmentF\",\n                        value=\"production\",\n                    ),\n                    dynatrace.AlertingProfileRuleTagFilterTagFilterArgs(\n                        context=\"CONTEXTLESS\",\n                        key=\"Team\",\n                        value=\"test\",\n                    ),\n                ],\n            )],\n        ),\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var _name_ = new Dynatrace.AlertingProfile(\"#name#\", new()\n    {\n        DisplayName = \"#name#\",\n        MzId = \"\",\n        Rules = new[]\n        {\n            new Dynatrace.Inputs.AlertingProfileRuleArgs\n            {\n                DelayInMinutes = 0,\n                SeverityLevel = \"AVAILABILITY\",\n                TagFilters = new[]\n                {\n                    new Dynatrace.Inputs.AlertingProfileRuleTagFilterArgs\n                    {\n                        IncludeMode = \"INCLUDE_ALL\",\n                        TagFilters = new[]\n                        {\n                            new Dynatrace.Inputs.AlertingProfileRuleTagFilterTagFilterArgs\n                            {\n                                Context = \"CONTEXTLESS\",\n                                Key = \"EnvironmentA\",\n                                Value = \"production\",\n                            },\n                            new Dynatrace.Inputs.AlertingProfileRuleTagFilterTagFilterArgs\n                            {\n                                Context = \"CONTEXTLESS\",\n                                Key = \"Team\",\n                                Value = \"test\",\n                            },\n                        },\n                    },\n                },\n            },\n            new Dynatrace.Inputs.AlertingProfileRuleArgs\n            {\n                DelayInMinutes = 0,\n                SeverityLevel = \"CUSTOM_ALERT\",\n                TagFilters = new[]\n                {\n                    new Dynatrace.Inputs.AlertingProfileRuleTagFilterArgs\n                    {\n                        IncludeMode = \"INCLUDE_ALL\",\n                        TagFilters = new[]\n                        {\n                            new Dynatrace.Inputs.AlertingProfileRuleTagFilterTagFilterArgs\n                            {\n                                Context = \"CONTEXTLESS\",\n                                Key = \"EnvironmentB\",\n                                Value = \"production\",\n                            },\n                            new Dynatrace.Inputs.AlertingProfileRuleTagFilterTagFilterArgs\n                            {\n                                Context = \"CONTEXTLESS\",\n                                Key = \"Team\",\n                                Value = \"test\",\n                            },\n                        },\n                    },\n                },\n            },\n            new Dynatrace.Inputs.AlertingProfileRuleArgs\n            {\n                DelayInMinutes = 0,\n                SeverityLevel = \"ERROR\",\n                TagFilters = new[]\n                {\n                    new Dynatrace.Inputs.AlertingProfileRuleTagFilterArgs\n                    {\n                        IncludeMode = \"INCLUDE_ALL\",\n                        TagFilters = new[]\n                        {\n                            new Dynatrace.Inputs.AlertingProfileRuleTagFilterTagFilterArgs\n                            {\n                                Context = \"CONTEXTLESS\",\n                                Key = \"EnvironmentC\",\n                                Value = \"production\",\n                            },\n                            new Dynatrace.Inputs.AlertingProfileRuleTagFilterTagFilterArgs\n                            {\n                                Context = \"CONTEXTLESS\",\n                                Key = \"Team\",\n                                Value = \"test\",\n                            },\n                        },\n                    },\n                },\n            },\n            new Dynatrace.Inputs.AlertingProfileRuleArgs\n            {\n                DelayInMinutes = 0,\n                SeverityLevel = \"MONITORING_UNAVAILABLE\",\n                TagFilters = new[]\n                {\n                    new Dynatrace.Inputs.AlertingProfileRuleTagFilterArgs\n                    {\n                        IncludeMode = \"INCLUDE_ALL\",\n                        TagFilters = new[]\n                        {\n                            new Dynatrace.Inputs.AlertingProfileRuleTagFilterTagFilterArgs\n                            {\n                                Context = \"CONTEXTLESS\",\n                                Key = \"EnvironmentD\",\n                                Value = \"production\",\n                            },\n                            new Dynatrace.Inputs.AlertingProfileRuleTagFilterTagFilterArgs\n                            {\n                                Context = \"CONTEXTLESS\",\n                                Key = \"Team\",\n                                Value = \"test\",\n                            },\n                        },\n                    },\n                },\n            },\n            new Dynatrace.Inputs.AlertingProfileRuleArgs\n            {\n                DelayInMinutes = 0,\n                SeverityLevel = \"PERFORMANCE\",\n                TagFilters = new[]\n                {\n                    new Dynatrace.Inputs.AlertingProfileRuleTagFilterArgs\n                    {\n                        IncludeMode = \"INCLUDE_ALL\",\n                        TagFilters = new[]\n                        {\n                            new Dynatrace.Inputs.AlertingProfileRuleTagFilterTagFilterArgs\n                            {\n                                Context = \"CONTEXTLESS\",\n                                Key = \"EnvironmentE\",\n                                Value = \"production\",\n                            },\n                            new Dynatrace.Inputs.AlertingProfileRuleTagFilterTagFilterArgs\n                            {\n                                Context = \"CONTEXTLESS\",\n                                Key = \"Team\",\n                                Value = \"test\",\n                            },\n                        },\n                    },\n                },\n            },\n            new Dynatrace.Inputs.AlertingProfileRuleArgs\n            {\n                DelayInMinutes = 0,\n                SeverityLevel = \"RESOURCE_CONTENTION\",\n                TagFilters = new[]\n                {\n                    new Dynatrace.Inputs.AlertingProfileRuleTagFilterArgs\n                    {\n                        IncludeMode = \"INCLUDE_ALL\",\n                        TagFilters = new[]\n                        {\n                            new Dynatrace.Inputs.AlertingProfileRuleTagFilterTagFilterArgs\n                            {\n                                Context = \"CONTEXTLESS\",\n                                Key = \"EnvironmentF\",\n                                Value = \"production\",\n                            },\n                            new Dynatrace.Inputs.AlertingProfileRuleTagFilterTagFilterArgs\n                            {\n                                Context = \"CONTEXTLESS\",\n                                Key = \"Team\",\n                                Value = \"test\",\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dynatrace.NewAlertingProfile(ctx, \"#name#\", \u0026dynatrace.AlertingProfileArgs{\n\t\t\tDisplayName: pulumi.String(\"#name#\"),\n\t\t\tMzId:        pulumi.String(\"\"),\n\t\t\tRules: dynatrace.AlertingProfileRuleArray{\n\t\t\t\t\u0026dynatrace.AlertingProfileRuleArgs{\n\t\t\t\t\tDelayInMinutes: pulumi.Int(0),\n\t\t\t\t\tSeverityLevel:  pulumi.String(\"AVAILABILITY\"),\n\t\t\t\t\tTagFilters: dynatrace.AlertingProfileRuleTagFilterArray{\n\t\t\t\t\t\t\u0026dynatrace.AlertingProfileRuleTagFilterArgs{\n\t\t\t\t\t\t\tIncludeMode: pulumi.String(\"INCLUDE_ALL\"),\n\t\t\t\t\t\t\tTagFilters: dynatrace.AlertingProfileRuleTagFilterTagFilterArray{\n\t\t\t\t\t\t\t\t\u0026dynatrace.AlertingProfileRuleTagFilterTagFilterArgs{\n\t\t\t\t\t\t\t\t\tContext: pulumi.String(\"CONTEXTLESS\"),\n\t\t\t\t\t\t\t\t\tKey:     pulumi.String(\"EnvironmentA\"),\n\t\t\t\t\t\t\t\t\tValue:   pulumi.String(\"production\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\u0026dynatrace.AlertingProfileRuleTagFilterTagFilterArgs{\n\t\t\t\t\t\t\t\t\tContext: pulumi.String(\"CONTEXTLESS\"),\n\t\t\t\t\t\t\t\t\tKey:     pulumi.String(\"Team\"),\n\t\t\t\t\t\t\t\t\tValue:   pulumi.String(\"test\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026dynatrace.AlertingProfileRuleArgs{\n\t\t\t\t\tDelayInMinutes: pulumi.Int(0),\n\t\t\t\t\tSeverityLevel:  pulumi.String(\"CUSTOM_ALERT\"),\n\t\t\t\t\tTagFilters: dynatrace.AlertingProfileRuleTagFilterArray{\n\t\t\t\t\t\t\u0026dynatrace.AlertingProfileRuleTagFilterArgs{\n\t\t\t\t\t\t\tIncludeMode: pulumi.String(\"INCLUDE_ALL\"),\n\t\t\t\t\t\t\tTagFilters: dynatrace.AlertingProfileRuleTagFilterTagFilterArray{\n\t\t\t\t\t\t\t\t\u0026dynatrace.AlertingProfileRuleTagFilterTagFilterArgs{\n\t\t\t\t\t\t\t\t\tContext: pulumi.String(\"CONTEXTLESS\"),\n\t\t\t\t\t\t\t\t\tKey:     pulumi.String(\"EnvironmentB\"),\n\t\t\t\t\t\t\t\t\tValue:   pulumi.String(\"production\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\u0026dynatrace.AlertingProfileRuleTagFilterTagFilterArgs{\n\t\t\t\t\t\t\t\t\tContext: pulumi.String(\"CONTEXTLESS\"),\n\t\t\t\t\t\t\t\t\tKey:     pulumi.String(\"Team\"),\n\t\t\t\t\t\t\t\t\tValue:   pulumi.String(\"test\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026dynatrace.AlertingProfileRuleArgs{\n\t\t\t\t\tDelayInMinutes: pulumi.Int(0),\n\t\t\t\t\tSeverityLevel:  pulumi.String(\"ERROR\"),\n\t\t\t\t\tTagFilters: dynatrace.AlertingProfileRuleTagFilterArray{\n\t\t\t\t\t\t\u0026dynatrace.AlertingProfileRuleTagFilterArgs{\n\t\t\t\t\t\t\tIncludeMode: pulumi.String(\"INCLUDE_ALL\"),\n\t\t\t\t\t\t\tTagFilters: dynatrace.AlertingProfileRuleTagFilterTagFilterArray{\n\t\t\t\t\t\t\t\t\u0026dynatrace.AlertingProfileRuleTagFilterTagFilterArgs{\n\t\t\t\t\t\t\t\t\tContext: pulumi.String(\"CONTEXTLESS\"),\n\t\t\t\t\t\t\t\t\tKey:     pulumi.String(\"EnvironmentC\"),\n\t\t\t\t\t\t\t\t\tValue:   pulumi.String(\"production\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\u0026dynatrace.AlertingProfileRuleTagFilterTagFilterArgs{\n\t\t\t\t\t\t\t\t\tContext: pulumi.String(\"CONTEXTLESS\"),\n\t\t\t\t\t\t\t\t\tKey:     pulumi.String(\"Team\"),\n\t\t\t\t\t\t\t\t\tValue:   pulumi.String(\"test\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026dynatrace.AlertingProfileRuleArgs{\n\t\t\t\t\tDelayInMinutes: pulumi.Int(0),\n\t\t\t\t\tSeverityLevel:  pulumi.String(\"MONITORING_UNAVAILABLE\"),\n\t\t\t\t\tTagFilters: dynatrace.AlertingProfileRuleTagFilterArray{\n\t\t\t\t\t\t\u0026dynatrace.AlertingProfileRuleTagFilterArgs{\n\t\t\t\t\t\t\tIncludeMode: pulumi.String(\"INCLUDE_ALL\"),\n\t\t\t\t\t\t\tTagFilters: dynatrace.AlertingProfileRuleTagFilterTagFilterArray{\n\t\t\t\t\t\t\t\t\u0026dynatrace.AlertingProfileRuleTagFilterTagFilterArgs{\n\t\t\t\t\t\t\t\t\tContext: pulumi.String(\"CONTEXTLESS\"),\n\t\t\t\t\t\t\t\t\tKey:     pulumi.String(\"EnvironmentD\"),\n\t\t\t\t\t\t\t\t\tValue:   pulumi.String(\"production\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\u0026dynatrace.AlertingProfileRuleTagFilterTagFilterArgs{\n\t\t\t\t\t\t\t\t\tContext: pulumi.String(\"CONTEXTLESS\"),\n\t\t\t\t\t\t\t\t\tKey:     pulumi.String(\"Team\"),\n\t\t\t\t\t\t\t\t\tValue:   pulumi.String(\"test\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026dynatrace.AlertingProfileRuleArgs{\n\t\t\t\t\tDelayInMinutes: pulumi.Int(0),\n\t\t\t\t\tSeverityLevel:  pulumi.String(\"PERFORMANCE\"),\n\t\t\t\t\tTagFilters: dynatrace.AlertingProfileRuleTagFilterArray{\n\t\t\t\t\t\t\u0026dynatrace.AlertingProfileRuleTagFilterArgs{\n\t\t\t\t\t\t\tIncludeMode: pulumi.String(\"INCLUDE_ALL\"),\n\t\t\t\t\t\t\tTagFilters: dynatrace.AlertingProfileRuleTagFilterTagFilterArray{\n\t\t\t\t\t\t\t\t\u0026dynatrace.AlertingProfileRuleTagFilterTagFilterArgs{\n\t\t\t\t\t\t\t\t\tContext: pulumi.String(\"CONTEXTLESS\"),\n\t\t\t\t\t\t\t\t\tKey:     pulumi.String(\"EnvironmentE\"),\n\t\t\t\t\t\t\t\t\tValue:   pulumi.String(\"production\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\u0026dynatrace.AlertingProfileRuleTagFilterTagFilterArgs{\n\t\t\t\t\t\t\t\t\tContext: pulumi.String(\"CONTEXTLESS\"),\n\t\t\t\t\t\t\t\t\tKey:     pulumi.String(\"Team\"),\n\t\t\t\t\t\t\t\t\tValue:   pulumi.String(\"test\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026dynatrace.AlertingProfileRuleArgs{\n\t\t\t\t\tDelayInMinutes: pulumi.Int(0),\n\t\t\t\t\tSeverityLevel:  pulumi.String(\"RESOURCE_CONTENTION\"),\n\t\t\t\t\tTagFilters: dynatrace.AlertingProfileRuleTagFilterArray{\n\t\t\t\t\t\t\u0026dynatrace.AlertingProfileRuleTagFilterArgs{\n\t\t\t\t\t\t\tIncludeMode: pulumi.String(\"INCLUDE_ALL\"),\n\t\t\t\t\t\t\tTagFilters: dynatrace.AlertingProfileRuleTagFilterTagFilterArray{\n\t\t\t\t\t\t\t\t\u0026dynatrace.AlertingProfileRuleTagFilterTagFilterArgs{\n\t\t\t\t\t\t\t\t\tContext: pulumi.String(\"CONTEXTLESS\"),\n\t\t\t\t\t\t\t\t\tKey:     pulumi.String(\"EnvironmentF\"),\n\t\t\t\t\t\t\t\t\tValue:   pulumi.String(\"production\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\u0026dynatrace.AlertingProfileRuleTagFilterTagFilterArgs{\n\t\t\t\t\t\t\t\t\tContext: pulumi.String(\"CONTEXTLESS\"),\n\t\t\t\t\t\t\t\t\tKey:     pulumi.String(\"Team\"),\n\t\t\t\t\t\t\t\t\tValue:   pulumi.String(\"test\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.AlertingProfile;\nimport com.pulumi.dynatrace.AlertingProfileArgs;\nimport com.pulumi.dynatrace.inputs.AlertingProfileRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var _name_ = new AlertingProfile(\"#name#\", AlertingProfileArgs.builder()        \n            .displayName(\"#name#\")\n            .mzId(\"\")\n            .rules(            \n                AlertingProfileRuleArgs.builder()\n                    .delayInMinutes(0)\n                    .severityLevel(\"AVAILABILITY\")\n                    .tagFilters(AlertingProfileRuleTagFilterArgs.builder()\n                        .includeMode(\"INCLUDE_ALL\")\n                        .tagFilters(                        \n                            AlertingProfileRuleTagFilterTagFilterArgs.builder()\n                                .context(\"CONTEXTLESS\")\n                                .key(\"EnvironmentA\")\n                                .value(\"production\")\n                                .build(),\n                            AlertingProfileRuleTagFilterTagFilterArgs.builder()\n                                .context(\"CONTEXTLESS\")\n                                .key(\"Team\")\n                                .value(\"test\")\n                                .build())\n                        .build())\n                    .build(),\n                AlertingProfileRuleArgs.builder()\n                    .delayInMinutes(0)\n                    .severityLevel(\"CUSTOM_ALERT\")\n                    .tagFilters(AlertingProfileRuleTagFilterArgs.builder()\n                        .includeMode(\"INCLUDE_ALL\")\n                        .tagFilters(                        \n                            AlertingProfileRuleTagFilterTagFilterArgs.builder()\n                                .context(\"CONTEXTLESS\")\n                                .key(\"EnvironmentB\")\n                                .value(\"production\")\n                                .build(),\n                            AlertingProfileRuleTagFilterTagFilterArgs.builder()\n                                .context(\"CONTEXTLESS\")\n                                .key(\"Team\")\n                                .value(\"test\")\n                                .build())\n                        .build())\n                    .build(),\n                AlertingProfileRuleArgs.builder()\n                    .delayInMinutes(0)\n                    .severityLevel(\"ERROR\")\n                    .tagFilters(AlertingProfileRuleTagFilterArgs.builder()\n                        .includeMode(\"INCLUDE_ALL\")\n                        .tagFilters(                        \n                            AlertingProfileRuleTagFilterTagFilterArgs.builder()\n                                .context(\"CONTEXTLESS\")\n                                .key(\"EnvironmentC\")\n                                .value(\"production\")\n                                .build(),\n                            AlertingProfileRuleTagFilterTagFilterArgs.builder()\n                                .context(\"CONTEXTLESS\")\n                                .key(\"Team\")\n                                .value(\"test\")\n                                .build())\n                        .build())\n                    .build(),\n                AlertingProfileRuleArgs.builder()\n                    .delayInMinutes(0)\n                    .severityLevel(\"MONITORING_UNAVAILABLE\")\n                    .tagFilters(AlertingProfileRuleTagFilterArgs.builder()\n                        .includeMode(\"INCLUDE_ALL\")\n                        .tagFilters(                        \n                            AlertingProfileRuleTagFilterTagFilterArgs.builder()\n                                .context(\"CONTEXTLESS\")\n                                .key(\"EnvironmentD\")\n                                .value(\"production\")\n                                .build(),\n                            AlertingProfileRuleTagFilterTagFilterArgs.builder()\n                                .context(\"CONTEXTLESS\")\n                                .key(\"Team\")\n                                .value(\"test\")\n                                .build())\n                        .build())\n                    .build(),\n                AlertingProfileRuleArgs.builder()\n                    .delayInMinutes(0)\n                    .severityLevel(\"PERFORMANCE\")\n                    .tagFilters(AlertingProfileRuleTagFilterArgs.builder()\n                        .includeMode(\"INCLUDE_ALL\")\n                        .tagFilters(                        \n                            AlertingProfileRuleTagFilterTagFilterArgs.builder()\n                                .context(\"CONTEXTLESS\")\n                                .key(\"EnvironmentE\")\n                                .value(\"production\")\n                                .build(),\n                            AlertingProfileRuleTagFilterTagFilterArgs.builder()\n                                .context(\"CONTEXTLESS\")\n                                .key(\"Team\")\n                                .value(\"test\")\n                                .build())\n                        .build())\n                    .build(),\n                AlertingProfileRuleArgs.builder()\n                    .delayInMinutes(0)\n                    .severityLevel(\"RESOURCE_CONTENTION\")\n                    .tagFilters(AlertingProfileRuleTagFilterArgs.builder()\n                        .includeMode(\"INCLUDE_ALL\")\n                        .tagFilters(                        \n                            AlertingProfileRuleTagFilterTagFilterArgs.builder()\n                                .context(\"CONTEXTLESS\")\n                                .key(\"EnvironmentF\")\n                                .value(\"production\")\n                                .build(),\n                            AlertingProfileRuleTagFilterTagFilterArgs.builder()\n                                .context(\"CONTEXTLESS\")\n                                .key(\"Team\")\n                                .value(\"test\")\n                                .build())\n                        .build())\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  '#name#':\n    type: dynatrace:AlertingProfile\n    properties:\n      displayName: '#name#'\n      mzId:\n      rules:\n        - delayInMinutes: 0\n          severityLevel: AVAILABILITY\n          tagFilters:\n            - includeMode: INCLUDE_ALL\n              tagFilters:\n                - context: CONTEXTLESS\n                  key: EnvironmentA\n                  value: production\n                - context: CONTEXTLESS\n                  key: Team\n                  value: test\n        - delayInMinutes: 0\n          severityLevel: CUSTOM_ALERT\n          tagFilters:\n            - includeMode: INCLUDE_ALL\n              tagFilters:\n                - context: CONTEXTLESS\n                  key: EnvironmentB\n                  value: production\n                - context: CONTEXTLESS\n                  key: Team\n                  value: test\n        - delayInMinutes: 0\n          severityLevel: ERROR\n          tagFilters:\n            - includeMode: INCLUDE_ALL\n              tagFilters:\n                - context: CONTEXTLESS\n                  key: EnvironmentC\n                  value: production\n                - context: CONTEXTLESS\n                  key: Team\n                  value: test\n        - delayInMinutes: 0\n          severityLevel: MONITORING_UNAVAILABLE\n          tagFilters:\n            - includeMode: INCLUDE_ALL\n              tagFilters:\n                - context: CONTEXTLESS\n                  key: EnvironmentD\n                  value: production\n                - context: CONTEXTLESS\n                  key: Team\n                  value: test\n        - delayInMinutes: 0\n          severityLevel: PERFORMANCE\n          tagFilters:\n            - includeMode: INCLUDE_ALL\n              tagFilters:\n                - context: CONTEXTLESS\n                  key: EnvironmentE\n                  value: production\n                - context: CONTEXTLESS\n                  key: Team\n                  value: test\n        - delayInMinutes: 0\n          severityLevel: RESOURCE_CONTENTION\n          tagFilters:\n            - includeMode: INCLUDE_ALL\n              tagFilters:\n                - context: CONTEXTLESS\n                  key: EnvironmentF\n                  value: production\n                - context: CONTEXTLESS\n                  key: Team\n                  value: test\n```\n",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "The name of the alerting profile, displayed in the UI\n"
                },
                "eventTypeFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AlertingProfileEventTypeFilter:AlertingProfileEventTypeFilter"
                    },
                    "description": "The list of event filters.  For all filters that are *negated* inside of these event filters, that is all `Predefined` as well as `Custom` (Title and/or Description) ones the AND logic applies. For all *non-negated* ones the OR logic applies. Between these two groups, negated and non-negated, the AND logic applies.  If you specify both severity rule and event filter, the AND logic applies\n"
                },
                "metadata": {
                    "$ref": "#/types/dynatrace:index/AlertingProfileMetadata:AlertingProfileMetadata",
                    "description": "`metadata` exists for backwards compatibility but shouldn't get specified anymore\n",
                    "deprecationMessage": "`metadata` exists for backwards compatibility but shouldn't get specified anymore"
                },
                "mzId": {
                    "type": "string",
                    "description": "The ID of the management zone to which the alerting profile applies\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AlertingProfileRule:AlertingProfileRule"
                    },
                    "description": "A list of rules for management zone usage.  Each rule is evaluated independently of all other rules\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "required": [
                "displayName"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "The name of the alerting profile, displayed in the UI\n"
                },
                "eventTypeFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AlertingProfileEventTypeFilter:AlertingProfileEventTypeFilter"
                    },
                    "description": "The list of event filters.  For all filters that are *negated* inside of these event filters, that is all `Predefined` as well as `Custom` (Title and/or Description) ones the AND logic applies. For all *non-negated* ones the OR logic applies. Between these two groups, negated and non-negated, the AND logic applies.  If you specify both severity rule and event filter, the AND logic applies\n"
                },
                "metadata": {
                    "$ref": "#/types/dynatrace:index/AlertingProfileMetadata:AlertingProfileMetadata",
                    "description": "`metadata` exists for backwards compatibility but shouldn't get specified anymore\n",
                    "deprecationMessage": "`metadata` exists for backwards compatibility but shouldn't get specified anymore"
                },
                "mzId": {
                    "type": "string",
                    "description": "The ID of the management zone to which the alerting profile applies\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AlertingProfileRule:AlertingProfileRule"
                    },
                    "description": "A list of rules for management zone usage.  Each rule is evaluated independently of all other rules\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "requiredInputs": [
                "displayName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AlertingProfile resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "The name of the alerting profile, displayed in the UI\n"
                    },
                    "eventTypeFilters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/AlertingProfileEventTypeFilter:AlertingProfileEventTypeFilter"
                        },
                        "description": "The list of event filters.  For all filters that are *negated* inside of these event filters, that is all `Predefined` as well as `Custom` (Title and/or Description) ones the AND logic applies. For all *non-negated* ones the OR logic applies. Between these two groups, negated and non-negated, the AND logic applies.  If you specify both severity rule and event filter, the AND logic applies\n"
                    },
                    "metadata": {
                        "$ref": "#/types/dynatrace:index/AlertingProfileMetadata:AlertingProfileMetadata",
                        "description": "`metadata` exists for backwards compatibility but shouldn't get specified anymore\n",
                        "deprecationMessage": "`metadata` exists for backwards compatibility but shouldn't get specified anymore"
                    },
                    "mzId": {
                        "type": "string",
                        "description": "The ID of the management zone to which the alerting profile applies\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/AlertingProfileRule:AlertingProfileRule"
                        },
                        "description": "A list of rules for management zone usage.  Each rule is evaluated independently of all other rules\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/ansibleTowerNotification:AnsibleTowerNotification": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The notification is active (`true`) or inactive (`false`). Default is `false`.\n"
                },
                "customMessage": {
                    "type": "string",
                    "description": "The custom message of the notification. This message will be displayed in the extra variables **Message** field of your job template. You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "insecure": {
                    "type": "boolean",
                    "description": "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates. Default is `false`.\n"
                },
                "jobTemplateUrl": {
                    "type": "string",
                    "description": "The URL of the target Ansible Tower job template\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                },
                "name": {
                    "type": "string",
                    "description": "The display name within the Dynatrace WebUI.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password for the Ansible Tower account\n",
                    "secret": true
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username of the Ansible Tower account\n"
                }
            },
            "required": [
                "customMessage",
                "jobTemplateUrl",
                "legacyId",
                "name",
                "profile",
                "username"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "The notification is active (`true`) or inactive (`false`). Default is `false`.\n"
                },
                "customMessage": {
                    "type": "string",
                    "description": "The custom message of the notification. This message will be displayed in the extra variables **Message** field of your job template. You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "insecure": {
                    "type": "boolean",
                    "description": "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates. Default is `false`.\n"
                },
                "jobTemplateUrl": {
                    "type": "string",
                    "description": "The URL of the target Ansible Tower job template\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                },
                "name": {
                    "type": "string",
                    "description": "The display name within the Dynatrace WebUI.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password for the Ansible Tower account\n",
                    "secret": true
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username of the Ansible Tower account\n"
                }
            },
            "requiredInputs": [
                "customMessage",
                "jobTemplateUrl",
                "profile",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AnsibleTowerNotification resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "The notification is active (`true`) or inactive (`false`). Default is `false`.\n"
                    },
                    "customMessage": {
                        "type": "string",
                        "description": "The custom message of the notification. This message will be displayed in the extra variables **Message** field of your job template. You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                    },
                    "insecure": {
                        "type": "boolean",
                        "description": "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates. Default is `false`.\n"
                    },
                    "jobTemplateUrl": {
                        "type": "string",
                        "description": "The URL of the target Ansible Tower job template\n"
                    },
                    "legacyId": {
                        "type": "string",
                        "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name within the Dynatrace WebUI.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password for the Ansible Tower account\n",
                        "secret": true
                    },
                    "profile": {
                        "type": "string",
                        "description": "The ID of the associated alerting profile.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username of the Ansible Tower account\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/apiDetection:ApiDetection": {
            "properties": {
                "apiColor": {
                    "type": "string",
                    "description": "This color will be used to highlight APIs when viewing code level data, such as distributed traces or method hotspots.\n"
                },
                "apiName": {
                    "type": "string",
                    "description": "API name\n"
                },
                "conditions": {
                    "$ref": "#/types/dynatrace:index/ApiDetectionConditions:ApiDetectionConditions",
                    "description": "List of conditions\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "technology": {
                    "type": "string",
                    "description": "Restrict this rule to a specific technology.\n"
                },
                "thirdPartyApi": {
                    "type": "boolean",
                    "description": "This API defines a third party library\n"
                }
            },
            "required": [
                "apiColor",
                "apiName",
                "insertAfter",
                "thirdPartyApi"
            ],
            "inputProperties": {
                "apiColor": {
                    "type": "string",
                    "description": "This color will be used to highlight APIs when viewing code level data, such as distributed traces or method hotspots.\n"
                },
                "apiName": {
                    "type": "string",
                    "description": "API name\n"
                },
                "conditions": {
                    "$ref": "#/types/dynatrace:index/ApiDetectionConditions:ApiDetectionConditions",
                    "description": "List of conditions\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "technology": {
                    "type": "string",
                    "description": "Restrict this rule to a specific technology.\n"
                },
                "thirdPartyApi": {
                    "type": "boolean",
                    "description": "This API defines a third party library\n"
                }
            },
            "requiredInputs": [
                "apiColor",
                "apiName",
                "thirdPartyApi"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApiDetection resources.\n",
                "properties": {
                    "apiColor": {
                        "type": "string",
                        "description": "This color will be used to highlight APIs when viewing code level data, such as distributed traces or method hotspots.\n"
                    },
                    "apiName": {
                        "type": "string",
                        "description": "API name\n"
                    },
                    "conditions": {
                        "$ref": "#/types/dynatrace:index/ApiDetectionConditions:ApiDetectionConditions",
                        "description": "List of conditions\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "technology": {
                        "type": "string",
                        "description": "Restrict this rule to a specific technology.\n"
                    },
                    "thirdPartyApi": {
                        "type": "boolean",
                        "description": "This API defines a third party library\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/apiToken:ApiToken": {
            "properties": {
                "creationDate": {
                    "type": "string",
                    "description": "Token creation date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z')\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The token is enabled (true) or disabled (false), default disabled (false).\n"
                },
                "expirationDate": {
                    "type": "string",
                    "description": "The expiration date of the token.\n"
                },
                "lastUsedDate": {
                    "type": "string",
                    "description": "Token last used date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z')\n"
                },
                "lastUsedIpAddress": {
                    "type": "string",
                    "description": "Token last used IP address.\n"
                },
                "modifiedDate": {
                    "type": "string",
                    "description": "Token last modified date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z').\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the token.\n"
                },
                "owner": {
                    "type": "string",
                    "description": "The owner of the token\n"
                },
                "personalAccessToken": {
                    "type": "boolean",
                    "description": "The token is a personal access token (true) or an API token (false).\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of the scopes to be assigned to the token.\n"
                },
                "token": {
                    "type": "string",
                    "description": "The secret of the token.\n",
                    "secret": true
                }
            },
            "required": [
                "creationDate",
                "lastUsedDate",
                "lastUsedIpAddress",
                "modifiedDate",
                "name",
                "owner",
                "scopes",
                "token"
            ],
            "inputProperties": {
                "creationDate": {
                    "type": "string",
                    "description": "Token creation date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z')\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The token is enabled (true) or disabled (false), default disabled (false).\n"
                },
                "expirationDate": {
                    "type": "string",
                    "description": "The expiration date of the token.\n"
                },
                "lastUsedDate": {
                    "type": "string",
                    "description": "Token last used date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z')\n"
                },
                "lastUsedIpAddress": {
                    "type": "string",
                    "description": "Token last used IP address.\n"
                },
                "modifiedDate": {
                    "type": "string",
                    "description": "Token last modified date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z').\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the token.\n"
                },
                "owner": {
                    "type": "string",
                    "description": "The owner of the token\n"
                },
                "personalAccessToken": {
                    "type": "boolean",
                    "description": "The token is a personal access token (true) or an API token (false).\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of the scopes to be assigned to the token.\n"
                }
            },
            "requiredInputs": [
                "scopes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApiToken resources.\n",
                "properties": {
                    "creationDate": {
                        "type": "string",
                        "description": "Token creation date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z')\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The token is enabled (true) or disabled (false), default disabled (false).\n"
                    },
                    "expirationDate": {
                        "type": "string",
                        "description": "The expiration date of the token.\n"
                    },
                    "lastUsedDate": {
                        "type": "string",
                        "description": "Token last used date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z')\n"
                    },
                    "lastUsedIpAddress": {
                        "type": "string",
                        "description": "Token last used IP address.\n"
                    },
                    "modifiedDate": {
                        "type": "string",
                        "description": "Token last modified date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z').\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the token.\n"
                    },
                    "owner": {
                        "type": "string",
                        "description": "The owner of the token\n"
                    },
                    "personalAccessToken": {
                        "type": "boolean",
                        "description": "The token is a personal access token (true) or an API token (false).\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of the scopes to be assigned to the token.\n"
                    },
                    "token": {
                        "type": "string",
                        "description": "The secret of the token.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/appMonitoring:AppMonitoring": {
            "properties": {
                "defaultLogLevel": {
                    "type": "string",
                    "description": "Possible Values: `All`, `Off`\n"
                }
            },
            "required": [
                "defaultLogLevel"
            ],
            "inputProperties": {
                "defaultLogLevel": {
                    "type": "string",
                    "description": "Possible Values: `All`, `Off`\n"
                }
            },
            "requiredInputs": [
                "defaultLogLevel"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppMonitoring resources.\n",
                "properties": {
                    "defaultLogLevel": {
                        "type": "string",
                        "description": "Possible Values: `All`, `Off`\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/applicationAnomalies:ApplicationAnomalies": {
            "properties": {
                "failureRate": {
                    "$ref": "#/types/dynatrace:index/ApplicationAnomaliesFailureRate:ApplicationAnomaliesFailureRate",
                    "description": "Configuration of failure rate increase detection\n"
                },
                "responseTime": {
                    "$ref": "#/types/dynatrace:index/ApplicationAnomaliesResponseTime:ApplicationAnomaliesResponseTime",
                    "description": "Configuration of response time degradation detection\n"
                },
                "traffic": {
                    "$ref": "#/types/dynatrace:index/ApplicationAnomaliesTraffic:ApplicationAnomaliesTraffic",
                    "description": "Configuration for anomalies regarding traffic\n"
                }
            },
            "inputProperties": {
                "failureRate": {
                    "$ref": "#/types/dynatrace:index/ApplicationAnomaliesFailureRate:ApplicationAnomaliesFailureRate",
                    "description": "Configuration of failure rate increase detection\n"
                },
                "responseTime": {
                    "$ref": "#/types/dynatrace:index/ApplicationAnomaliesResponseTime:ApplicationAnomaliesResponseTime",
                    "description": "Configuration of response time degradation detection\n"
                },
                "traffic": {
                    "$ref": "#/types/dynatrace:index/ApplicationAnomaliesTraffic:ApplicationAnomaliesTraffic",
                    "description": "Configuration for anomalies regarding traffic\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationAnomalies resources.\n",
                "properties": {
                    "failureRate": {
                        "$ref": "#/types/dynatrace:index/ApplicationAnomaliesFailureRate:ApplicationAnomaliesFailureRate",
                        "description": "Configuration of failure rate increase detection\n"
                    },
                    "responseTime": {
                        "$ref": "#/types/dynatrace:index/ApplicationAnomaliesResponseTime:ApplicationAnomaliesResponseTime",
                        "description": "Configuration of response time degradation detection\n"
                    },
                    "traffic": {
                        "$ref": "#/types/dynatrace:index/ApplicationAnomaliesTraffic:ApplicationAnomaliesTraffic",
                        "description": "Configuration for anomalies regarding traffic\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/applicationDataPrivacy:ApplicationDataPrivacy": {
            "properties": {
                "dataCaptureOptIn": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.DataPrivacy`) Set to `true` to disable data capture and cookies until JavaScriptAPI `dtrum.enable()` is called\n"
                },
                "doNotTrackBehaviour": {
                    "type": "string",
                    "description": "(Field has overlap with `dynatrace.DataPrivacy`) How to handle the \"Do Not Track\" header:\n"
                },
                "persistentCookieForUserTracking": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.DataPrivacy`) Set to `true` to set persistent cookie in order to recognize returning devices\n"
                },
                "sessionReplayDataPrivacy": {
                    "$ref": "#/types/dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacy:ApplicationDataPrivacySessionReplayDataPrivacy",
                    "description": "(Field has overlap with `dynatrace.SessionReplayWebPrivacy`) Data privacy settings for Session Replay\n"
                },
                "webApplicationId": {
                    "type": "string",
                    "description": "Dynatrace entity ID of the web application\n"
                }
            },
            "required": [
                "doNotTrackBehaviour",
                "sessionReplayDataPrivacy",
                "webApplicationId"
            ],
            "inputProperties": {
                "dataCaptureOptIn": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.DataPrivacy`) Set to `true` to disable data capture and cookies until JavaScriptAPI `dtrum.enable()` is called\n"
                },
                "doNotTrackBehaviour": {
                    "type": "string",
                    "description": "(Field has overlap with `dynatrace.DataPrivacy`) How to handle the \"Do Not Track\" header:\n"
                },
                "persistentCookieForUserTracking": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.DataPrivacy`) Set to `true` to set persistent cookie in order to recognize returning devices\n"
                },
                "sessionReplayDataPrivacy": {
                    "$ref": "#/types/dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacy:ApplicationDataPrivacySessionReplayDataPrivacy",
                    "description": "(Field has overlap with `dynatrace.SessionReplayWebPrivacy`) Data privacy settings for Session Replay\n"
                },
                "webApplicationId": {
                    "type": "string",
                    "description": "Dynatrace entity ID of the web application\n"
                }
            },
            "requiredInputs": [
                "doNotTrackBehaviour",
                "sessionReplayDataPrivacy",
                "webApplicationId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationDataPrivacy resources.\n",
                "properties": {
                    "dataCaptureOptIn": {
                        "type": "boolean",
                        "description": "(Field has overlap with `dynatrace.DataPrivacy`) Set to `true` to disable data capture and cookies until JavaScriptAPI `dtrum.enable()` is called\n"
                    },
                    "doNotTrackBehaviour": {
                        "type": "string",
                        "description": "(Field has overlap with `dynatrace.DataPrivacy`) How to handle the \"Do Not Track\" header:\n"
                    },
                    "persistentCookieForUserTracking": {
                        "type": "boolean",
                        "description": "(Field has overlap with `dynatrace.DataPrivacy`) Set to `true` to set persistent cookie in order to recognize returning devices\n"
                    },
                    "sessionReplayDataPrivacy": {
                        "$ref": "#/types/dynatrace:index/ApplicationDataPrivacySessionReplayDataPrivacy:ApplicationDataPrivacySessionReplayDataPrivacy",
                        "description": "(Field has overlap with `dynatrace.SessionReplayWebPrivacy`) Data privacy settings for Session Replay\n"
                    },
                    "webApplicationId": {
                        "type": "string",
                        "description": "Dynatrace entity ID of the web application\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/applicationDetectionRule:ApplicationDetectionRule": {
            "properties": {
                "applicationIdentifier": {
                    "type": "string",
                    "description": "The Dynatrace entity ID of the application, for example APPLICATION-4A3B43\n"
                },
                "filterConfig": {
                    "$ref": "#/types/dynatrace:index/ApplicationDetectionRuleFilterConfig:ApplicationDetectionRuleFilterConfig",
                    "description": "The condition of an application detection rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Application detection rule\n",
                    "deprecationMessage": "Dynatrace computes that value automatically. Any attempts to specify that value will are getting ignored."
                },
                "order": {
                    "type": "string",
                    "description": "The order of the rule in the rules list\n"
                }
            },
            "required": [
                "applicationIdentifier",
                "filterConfig",
                "name"
            ],
            "inputProperties": {
                "applicationIdentifier": {
                    "type": "string",
                    "description": "The Dynatrace entity ID of the application, for example APPLICATION-4A3B43\n"
                },
                "filterConfig": {
                    "$ref": "#/types/dynatrace:index/ApplicationDetectionRuleFilterConfig:ApplicationDetectionRuleFilterConfig",
                    "description": "The condition of an application detection rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Application detection rule\n",
                    "deprecationMessage": "Dynatrace computes that value automatically. Any attempts to specify that value will are getting ignored."
                },
                "order": {
                    "type": "string",
                    "description": "The order of the rule in the rules list\n"
                }
            },
            "requiredInputs": [
                "applicationIdentifier",
                "filterConfig"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationDetectionRule resources.\n",
                "properties": {
                    "applicationIdentifier": {
                        "type": "string",
                        "description": "The Dynatrace entity ID of the application, for example APPLICATION-4A3B43\n"
                    },
                    "filterConfig": {
                        "$ref": "#/types/dynatrace:index/ApplicationDetectionRuleFilterConfig:ApplicationDetectionRuleFilterConfig",
                        "description": "The condition of an application detection rule\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name of the Application detection rule\n",
                        "deprecationMessage": "Dynatrace computes that value automatically. Any attempts to specify that value will are getting ignored."
                    },
                    "order": {
                        "type": "string",
                        "description": "The order of the rule in the rules list\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/applicationDetectionRuleV2:ApplicationDetectionRuleV2": {
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "Select an existing application or create a new one.\n"
                },
                "description": {
                    "type": "string",
                    "description": "(v1.274) Add a description for your rule\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "matcher": {
                    "type": "string",
                    "description": "Possible Values: `DOMAIN_CONTAINS`, `DOMAIN_ENDS_WITH`, `DOMAIN_EQUALS`, `DOMAIN_MATCHES`, `DOMAIN_STARTS_WITH`, `URL_CONTAINS`, `URL_ENDS_WITH`, `URL_EQUALS`, `URL_STARTS_WITH`\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Pattern\n"
                }
            },
            "required": [
                "applicationId",
                "insertAfter",
                "matcher",
                "pattern"
            ],
            "inputProperties": {
                "applicationId": {
                    "type": "string",
                    "description": "Select an existing application or create a new one.\n"
                },
                "description": {
                    "type": "string",
                    "description": "(v1.274) Add a description for your rule\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "matcher": {
                    "type": "string",
                    "description": "Possible Values: `DOMAIN_CONTAINS`, `DOMAIN_ENDS_WITH`, `DOMAIN_EQUALS`, `DOMAIN_MATCHES`, `DOMAIN_STARTS_WITH`, `URL_CONTAINS`, `URL_ENDS_WITH`, `URL_EQUALS`, `URL_STARTS_WITH`\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Pattern\n"
                }
            },
            "requiredInputs": [
                "applicationId",
                "matcher",
                "pattern"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationDetectionRuleV2 resources.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "Select an existing application or create a new one.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "(v1.274) Add a description for your rule\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "matcher": {
                        "type": "string",
                        "description": "Possible Values: `DOMAIN_CONTAINS`, `DOMAIN_ENDS_WITH`, `DOMAIN_EQUALS`, `DOMAIN_MATCHES`, `DOMAIN_STARTS_WITH`, `URL_CONTAINS`, `URL_ENDS_WITH`, `URL_EQUALS`, `URL_STARTS_WITH`\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "Pattern\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/applicationErrorRules:ApplicationErrorRules": {
            "properties": {
                "customErrors": {
                    "$ref": "#/types/dynatrace:index/ApplicationErrorRulesCustomErrors:ApplicationErrorRulesCustomErrors",
                    "description": "(Field has overlap with `dynatrace.WebAppCustomErrors`) An ordered list of HTTP errors.\n"
                },
                "httpErrors": {
                    "$ref": "#/types/dynatrace:index/ApplicationErrorRulesHttpErrors:ApplicationErrorRulesHttpErrors",
                    "description": "(Field has overlap with `dynatrace_web_app_request_errors`) An ordered list of HTTP errors. Rules are evaluated from top\nto bottom; the first matching rule applies\n"
                },
                "ignoreCustomErrorsApdex": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace_web_app_custom_errors`) Exclude (`true`) or include (`false`) custom errors listed in\n**customErrorRules** in Apdex calculation\n"
                },
                "ignoreHttpErrorsApdex": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace_web_app_request_errors`) Exclude (`true`) or include (`false`) HTTP errors listed in\n**httpErrorRules** in Apdex calculation\n"
                },
                "ignoreJsErrorsApdex": {
                    "type": "boolean",
                    "description": "Exclude (`true`) or include (`false`) JavaScript errors in Apdex calculation\n"
                },
                "webApplicationId": {
                    "type": "string",
                    "description": "The EntityID of the the WebApplication\n"
                }
            },
            "inputProperties": {
                "customErrors": {
                    "$ref": "#/types/dynatrace:index/ApplicationErrorRulesCustomErrors:ApplicationErrorRulesCustomErrors",
                    "description": "(Field has overlap with `dynatrace.WebAppCustomErrors`) An ordered list of HTTP errors.\n"
                },
                "httpErrors": {
                    "$ref": "#/types/dynatrace:index/ApplicationErrorRulesHttpErrors:ApplicationErrorRulesHttpErrors",
                    "description": "(Field has overlap with `dynatrace_web_app_request_errors`) An ordered list of HTTP errors. Rules are evaluated from top\nto bottom; the first matching rule applies\n"
                },
                "ignoreCustomErrorsApdex": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace_web_app_custom_errors`) Exclude (`true`) or include (`false`) custom errors listed in\n**customErrorRules** in Apdex calculation\n"
                },
                "ignoreHttpErrorsApdex": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace_web_app_request_errors`) Exclude (`true`) or include (`false`) HTTP errors listed in\n**httpErrorRules** in Apdex calculation\n"
                },
                "ignoreJsErrorsApdex": {
                    "type": "boolean",
                    "description": "Exclude (`true`) or include (`false`) JavaScript errors in Apdex calculation\n"
                },
                "webApplicationId": {
                    "type": "string",
                    "description": "The EntityID of the the WebApplication\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationErrorRules resources.\n",
                "properties": {
                    "customErrors": {
                        "$ref": "#/types/dynatrace:index/ApplicationErrorRulesCustomErrors:ApplicationErrorRulesCustomErrors",
                        "description": "(Field has overlap with `dynatrace.WebAppCustomErrors`) An ordered list of HTTP errors.\n"
                    },
                    "httpErrors": {
                        "$ref": "#/types/dynatrace:index/ApplicationErrorRulesHttpErrors:ApplicationErrorRulesHttpErrors",
                        "description": "(Field has overlap with `dynatrace_web_app_request_errors`) An ordered list of HTTP errors. Rules are evaluated from top\nto bottom; the first matching rule applies\n"
                    },
                    "ignoreCustomErrorsApdex": {
                        "type": "boolean",
                        "description": "(Field has overlap with `dynatrace_web_app_custom_errors`) Exclude (`true`) or include (`false`) custom errors listed in\n**customErrorRules** in Apdex calculation\n"
                    },
                    "ignoreHttpErrorsApdex": {
                        "type": "boolean",
                        "description": "(Field has overlap with `dynatrace_web_app_request_errors`) Exclude (`true`) or include (`false`) HTTP errors listed in\n**httpErrorRules** in Apdex calculation\n"
                    },
                    "ignoreJsErrorsApdex": {
                        "type": "boolean",
                        "description": "Exclude (`true`) or include (`false`) JavaScript errors in Apdex calculation\n"
                    },
                    "webApplicationId": {
                        "type": "string",
                        "description": "The EntityID of the the WebApplication\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/appsecNotification:AppsecNotification": {
            "properties": {
                "attackCandidateBasedAlertingProfile": {
                    "type": "string",
                    "description": "For attack candidate alerts, select an [alerting\nprofile](/ui/settings/builtin:appsec.notification-attack-alerting-profile) to control the delivery of security\nnotifications related to this integration.\n"
                },
                "attackCandidateBasedEmailPayload": {
                    "$ref": "#/types/dynatrace:index/AppsecNotificationAttackCandidateBasedEmailPayload:AppsecNotificationAttackCandidateBasedEmailPayload",
                    "description": "Attack candidate based email payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `EMAIL`\n"
                },
                "attackCandidateBasedJiraPayload": {
                    "$ref": "#/types/dynatrace:index/AppsecNotificationAttackCandidateBasedJiraPayload:AppsecNotificationAttackCandidateBasedJiraPayload",
                    "description": "Attack candidate based Jira payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `JIRA`\n"
                },
                "attackCandidateBasedWebhookPayload": {
                    "$ref": "#/types/dynatrace:index/AppsecNotificationAttackCandidateBasedWebhookPayload:AppsecNotificationAttackCandidateBasedWebhookPayload",
                    "description": "Attack candidate based webhook payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `WEBHOOK`\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name of the security notification\n"
                },
                "emailConfiguration": {
                    "$ref": "#/types/dynatrace:index/AppsecNotificationEmailConfiguration:AppsecNotificationEmailConfiguration",
                    "description": "Email configuration, required when `type` equals `EMAIL`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable/Disable the security notification, enabled (`true`) or disabled (`false`)\n"
                },
                "jiraConfiguration": {
                    "$ref": "#/types/dynatrace:index/AppsecNotificationJiraConfiguration:AppsecNotificationJiraConfiguration",
                    "description": "Jira configuration, required when `type` equals `JIRA`\n"
                },
                "securityProblemBasedAlertingProfile": {
                    "type": "string",
                    "description": "For security problem alerts, select an [alerting profile](/ui/settings/builtin:appsec.notification-alerting-profile) to\ncontrol the delivery of security notifications related to this integration.\n"
                },
                "securityProblemBasedEmailPayload": {
                    "$ref": "#/types/dynatrace:index/AppsecNotificationSecurityProblemBasedEmailPayload:AppsecNotificationSecurityProblemBasedEmailPayload",
                    "description": "Security problem based email payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `EMAIL`\n"
                },
                "securityProblemBasedJiraPayload": {
                    "$ref": "#/types/dynatrace:index/AppsecNotificationSecurityProblemBasedJiraPayload:AppsecNotificationSecurityProblemBasedJiraPayload",
                    "description": "Security problem based Jira payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `JIRA`\n"
                },
                "securityProblemBasedWebhookPayload": {
                    "$ref": "#/types/dynatrace:index/AppsecNotificationSecurityProblemBasedWebhookPayload:AppsecNotificationSecurityProblemBasedWebhookPayload",
                    "description": "Security problem based webhook payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `WEBHOOK`\n"
                },
                "trigger": {
                    "type": "string",
                    "description": "Security alert type, possible Values: `ATTACK_CANDIDATE`, `SECURITY_PROBLEM`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Notification type, possible Values: `EMAIL`, `JIRA`, `WEBHOOK`\n"
                },
                "webhookConfiguration": {
                    "$ref": "#/types/dynatrace:index/AppsecNotificationWebhookConfiguration:AppsecNotificationWebhookConfiguration",
                    "description": "Webhook configuration, required when `type` equals `WEBHOOK`\n"
                }
            },
            "required": [
                "displayName",
                "enabled",
                "trigger",
                "type"
            ],
            "inputProperties": {
                "attackCandidateBasedAlertingProfile": {
                    "type": "string",
                    "description": "For attack candidate alerts, select an [alerting\nprofile](/ui/settings/builtin:appsec.notification-attack-alerting-profile) to control the delivery of security\nnotifications related to this integration.\n"
                },
                "attackCandidateBasedEmailPayload": {
                    "$ref": "#/types/dynatrace:index/AppsecNotificationAttackCandidateBasedEmailPayload:AppsecNotificationAttackCandidateBasedEmailPayload",
                    "description": "Attack candidate based email payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `EMAIL`\n"
                },
                "attackCandidateBasedJiraPayload": {
                    "$ref": "#/types/dynatrace:index/AppsecNotificationAttackCandidateBasedJiraPayload:AppsecNotificationAttackCandidateBasedJiraPayload",
                    "description": "Attack candidate based Jira payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `JIRA`\n"
                },
                "attackCandidateBasedWebhookPayload": {
                    "$ref": "#/types/dynatrace:index/AppsecNotificationAttackCandidateBasedWebhookPayload:AppsecNotificationAttackCandidateBasedWebhookPayload",
                    "description": "Attack candidate based webhook payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `WEBHOOK`\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name of the security notification\n"
                },
                "emailConfiguration": {
                    "$ref": "#/types/dynatrace:index/AppsecNotificationEmailConfiguration:AppsecNotificationEmailConfiguration",
                    "description": "Email configuration, required when `type` equals `EMAIL`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable/Disable the security notification, enabled (`true`) or disabled (`false`)\n"
                },
                "jiraConfiguration": {
                    "$ref": "#/types/dynatrace:index/AppsecNotificationJiraConfiguration:AppsecNotificationJiraConfiguration",
                    "description": "Jira configuration, required when `type` equals `JIRA`\n"
                },
                "securityProblemBasedAlertingProfile": {
                    "type": "string",
                    "description": "For security problem alerts, select an [alerting profile](/ui/settings/builtin:appsec.notification-alerting-profile) to\ncontrol the delivery of security notifications related to this integration.\n"
                },
                "securityProblemBasedEmailPayload": {
                    "$ref": "#/types/dynatrace:index/AppsecNotificationSecurityProblemBasedEmailPayload:AppsecNotificationSecurityProblemBasedEmailPayload",
                    "description": "Security problem based email payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `EMAIL`\n"
                },
                "securityProblemBasedJiraPayload": {
                    "$ref": "#/types/dynatrace:index/AppsecNotificationSecurityProblemBasedJiraPayload:AppsecNotificationSecurityProblemBasedJiraPayload",
                    "description": "Security problem based Jira payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `JIRA`\n"
                },
                "securityProblemBasedWebhookPayload": {
                    "$ref": "#/types/dynatrace:index/AppsecNotificationSecurityProblemBasedWebhookPayload:AppsecNotificationSecurityProblemBasedWebhookPayload",
                    "description": "Security problem based webhook payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `WEBHOOK`\n"
                },
                "trigger": {
                    "type": "string",
                    "description": "Security alert type, possible Values: `ATTACK_CANDIDATE`, `SECURITY_PROBLEM`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Notification type, possible Values: `EMAIL`, `JIRA`, `WEBHOOK`\n"
                },
                "webhookConfiguration": {
                    "$ref": "#/types/dynatrace:index/AppsecNotificationWebhookConfiguration:AppsecNotificationWebhookConfiguration",
                    "description": "Webhook configuration, required when `type` equals `WEBHOOK`\n"
                }
            },
            "requiredInputs": [
                "displayName",
                "enabled",
                "trigger",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppsecNotification resources.\n",
                "properties": {
                    "attackCandidateBasedAlertingProfile": {
                        "type": "string",
                        "description": "For attack candidate alerts, select an [alerting\nprofile](/ui/settings/builtin:appsec.notification-attack-alerting-profile) to control the delivery of security\nnotifications related to this integration.\n"
                    },
                    "attackCandidateBasedEmailPayload": {
                        "$ref": "#/types/dynatrace:index/AppsecNotificationAttackCandidateBasedEmailPayload:AppsecNotificationAttackCandidateBasedEmailPayload",
                        "description": "Attack candidate based email payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `EMAIL`\n"
                    },
                    "attackCandidateBasedJiraPayload": {
                        "$ref": "#/types/dynatrace:index/AppsecNotificationAttackCandidateBasedJiraPayload:AppsecNotificationAttackCandidateBasedJiraPayload",
                        "description": "Attack candidate based Jira payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `JIRA`\n"
                    },
                    "attackCandidateBasedWebhookPayload": {
                        "$ref": "#/types/dynatrace:index/AppsecNotificationAttackCandidateBasedWebhookPayload:AppsecNotificationAttackCandidateBasedWebhookPayload",
                        "description": "Attack candidate based webhook payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `WEBHOOK`\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name of the security notification\n"
                    },
                    "emailConfiguration": {
                        "$ref": "#/types/dynatrace:index/AppsecNotificationEmailConfiguration:AppsecNotificationEmailConfiguration",
                        "description": "Email configuration, required when `type` equals `EMAIL`\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable/Disable the security notification, enabled (`true`) or disabled (`false`)\n"
                    },
                    "jiraConfiguration": {
                        "$ref": "#/types/dynatrace:index/AppsecNotificationJiraConfiguration:AppsecNotificationJiraConfiguration",
                        "description": "Jira configuration, required when `type` equals `JIRA`\n"
                    },
                    "securityProblemBasedAlertingProfile": {
                        "type": "string",
                        "description": "For security problem alerts, select an [alerting profile](/ui/settings/builtin:appsec.notification-alerting-profile) to\ncontrol the delivery of security notifications related to this integration.\n"
                    },
                    "securityProblemBasedEmailPayload": {
                        "$ref": "#/types/dynatrace:index/AppsecNotificationSecurityProblemBasedEmailPayload:AppsecNotificationSecurityProblemBasedEmailPayload",
                        "description": "Security problem based email payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `EMAIL`\n"
                    },
                    "securityProblemBasedJiraPayload": {
                        "$ref": "#/types/dynatrace:index/AppsecNotificationSecurityProblemBasedJiraPayload:AppsecNotificationSecurityProblemBasedJiraPayload",
                        "description": "Security problem based Jira payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `JIRA`\n"
                    },
                    "securityProblemBasedWebhookPayload": {
                        "$ref": "#/types/dynatrace:index/AppsecNotificationSecurityProblemBasedWebhookPayload:AppsecNotificationSecurityProblemBasedWebhookPayload",
                        "description": "Security problem based webhook payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `WEBHOOK`\n"
                    },
                    "trigger": {
                        "type": "string",
                        "description": "Security alert type, possible Values: `ATTACK_CANDIDATE`, `SECURITY_PROBLEM`\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Notification type, possible Values: `EMAIL`, `JIRA`, `WEBHOOK`\n"
                    },
                    "webhookConfiguration": {
                        "$ref": "#/types/dynatrace:index/AppsecNotificationWebhookConfiguration:AppsecNotificationWebhookConfiguration",
                        "description": "Webhook configuration, required when `type` equals `WEBHOOK`\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/attackAlerting:AttackAlerting": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "enabledAttackMitigations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Attack State\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name\n"
                }
            },
            "required": [
                "enabled",
                "name"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "enabledAttackMitigations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Attack State\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name\n"
                }
            },
            "requiredInputs": [
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AttackAlerting resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "enabledAttackMitigations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Attack State\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/attackAllowlist:AttackAllowlist": {
            "properties": {
                "attackHandling": {
                    "$ref": "#/types/dynatrace:index/AttackAllowlistAttackHandling:AttackAllowlistAttackHandling",
                    "description": "Step 2: Define attack control for chosen criteria\n"
                },
                "criteria": {
                    "$ref": "#/types/dynatrace:index/AttackAllowlistCriteria:AttackAllowlistCriteria",
                    "description": "Step 1: Define criteria. Please specify at least one of source IP or attack pattern.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "metadata": {
                    "$ref": "#/types/dynatrace:index/AttackAllowlistMetadata:AttackAllowlistMetadata",
                    "description": "Step 3: Leave comment\n"
                }
            },
            "required": [
                "attackHandling",
                "criteria",
                "enabled",
                "insertAfter",
                "metadata"
            ],
            "inputProperties": {
                "attackHandling": {
                    "$ref": "#/types/dynatrace:index/AttackAllowlistAttackHandling:AttackAllowlistAttackHandling",
                    "description": "Step 2: Define attack control for chosen criteria\n"
                },
                "criteria": {
                    "$ref": "#/types/dynatrace:index/AttackAllowlistCriteria:AttackAllowlistCriteria",
                    "description": "Step 1: Define criteria. Please specify at least one of source IP or attack pattern.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "metadata": {
                    "$ref": "#/types/dynatrace:index/AttackAllowlistMetadata:AttackAllowlistMetadata",
                    "description": "Step 3: Leave comment\n"
                }
            },
            "requiredInputs": [
                "attackHandling",
                "criteria",
                "enabled",
                "metadata"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AttackAllowlist resources.\n",
                "properties": {
                    "attackHandling": {
                        "$ref": "#/types/dynatrace:index/AttackAllowlistAttackHandling:AttackAllowlistAttackHandling",
                        "description": "Step 2: Define attack control for chosen criteria\n"
                    },
                    "criteria": {
                        "$ref": "#/types/dynatrace:index/AttackAllowlistCriteria:AttackAllowlistCriteria",
                        "description": "Step 1: Define criteria. Please specify at least one of source IP or attack pattern.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "metadata": {
                        "$ref": "#/types/dynatrace:index/AttackAllowlistMetadata:AttackAllowlistMetadata",
                        "description": "Step 3: Leave comment\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/attackRules:AttackRules": {
            "properties": {
                "attackHandling": {
                    "$ref": "#/types/dynatrace:index/AttackRulesAttackHandling:AttackRulesAttackHandling",
                    "description": "Step 2: Define attack control for chosen criteria\n"
                },
                "criteria": {
                    "$ref": "#/types/dynatrace:index/AttackRulesCriteria:AttackRulesCriteria",
                    "description": "Step 1: Define criteria\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "metadata": {
                    "$ref": "#/types/dynatrace:index/AttackRulesMetadata:AttackRulesMetadata",
                    "description": "Step 3: Leave comment\n"
                }
            },
            "required": [
                "attackHandling",
                "criteria",
                "enabled",
                "insertAfter",
                "metadata"
            ],
            "inputProperties": {
                "attackHandling": {
                    "$ref": "#/types/dynatrace:index/AttackRulesAttackHandling:AttackRulesAttackHandling",
                    "description": "Step 2: Define attack control for chosen criteria\n"
                },
                "criteria": {
                    "$ref": "#/types/dynatrace:index/AttackRulesCriteria:AttackRulesCriteria",
                    "description": "Step 1: Define criteria\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "metadata": {
                    "$ref": "#/types/dynatrace:index/AttackRulesMetadata:AttackRulesMetadata",
                    "description": "Step 3: Leave comment\n"
                }
            },
            "requiredInputs": [
                "attackHandling",
                "criteria",
                "enabled",
                "metadata"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AttackRules resources.\n",
                "properties": {
                    "attackHandling": {
                        "$ref": "#/types/dynatrace:index/AttackRulesAttackHandling:AttackRulesAttackHandling",
                        "description": "Step 2: Define attack control for chosen criteria\n"
                    },
                    "criteria": {
                        "$ref": "#/types/dynatrace:index/AttackRulesCriteria:AttackRulesCriteria",
                        "description": "Step 1: Define criteria\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "metadata": {
                        "$ref": "#/types/dynatrace:index/AttackRulesMetadata:AttackRulesMetadata",
                        "description": "Step 3: Leave comment\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/attackSettings:AttackSettings": {
            "properties": {
                "defaultAttackHandling": {
                    "$ref": "#/types/dynatrace:index/AttackSettingsDefaultAttackHandling:AttackSettingsDefaultAttackHandling",
                    "description": "Define global incoming attack control\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "required": [
                "defaultAttackHandling",
                "enabled"
            ],
            "inputProperties": {
                "defaultAttackHandling": {
                    "$ref": "#/types/dynatrace:index/AttackSettingsDefaultAttackHandling:AttackSettingsDefaultAttackHandling",
                    "description": "Define global incoming attack control\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "requiredInputs": [
                "defaultAttackHandling",
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AttackSettings resources.\n",
                "properties": {
                    "defaultAttackHandling": {
                        "$ref": "#/types/dynatrace:index/AttackSettingsDefaultAttackHandling:AttackSettingsDefaultAttackHandling",
                        "description": "Define global incoming attack control\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/attributeAllowList:AttributeAllowList": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key of the attribute to persist\n"
                }
            },
            "required": [
                "enabled",
                "key"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key of the attribute to persist\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AttributeAllowList resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "Key of the attribute to persist\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/attributeBlockList:AttributeBlockList": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key of the attribute that should not be persisted\n"
                }
            },
            "required": [
                "enabled",
                "key"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key of the attribute that should not be persisted\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AttributeBlockList resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "Key of the attribute that should not be persisted\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/attributeMasking:AttributeMasking": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key of the attribute\n"
                },
                "masking": {
                    "type": "string",
                    "description": "Possible Values: `MASK_ENTIRE_VALUE`, `MASK_ONLY_CONFIDENTIAL_DATA`\n"
                }
            },
            "required": [
                "enabled",
                "key",
                "masking"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key of the attribute\n"
                },
                "masking": {
                    "type": "string",
                    "description": "Possible Values: `MASK_ENTIRE_VALUE`, `MASK_ONLY_CONFIDENTIAL_DATA`\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "key",
                "masking"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AttributeMasking resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "Key of the attribute\n"
                    },
                    "masking": {
                        "type": "string",
                        "description": "Possible Values: `MASK_ENTIRE_VALUE`, `MASK_ONLY_CONFIDENTIAL_DATA`\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/attributesPreferences:AttributesPreferences": {
            "properties": {
                "persistenceMode": {
                    "type": "string",
                    "description": "Possible Values: `ALLOW_ALL_ATTRIBUTES`, `BLOCK_ALL_ATTRIBUTES`\n"
                }
            },
            "required": [
                "persistenceMode"
            ],
            "inputProperties": {
                "persistenceMode": {
                    "type": "string",
                    "description": "Possible Values: `ALLOW_ALL_ATTRIBUTES`, `BLOCK_ALL_ATTRIBUTES`\n"
                }
            },
            "requiredInputs": [
                "persistenceMode"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AttributesPreferences resources.\n",
                "properties": {
                    "persistenceMode": {
                        "type": "string",
                        "description": "Possible Values: `ALLOW_ALL_ATTRIBUTES`, `BLOCK_ALL_ATTRIBUTES`\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/auditLog:AuditLog": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "required": [
                "enabled"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "requiredInputs": [
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AuditLog resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/automationBusinessCalendar:AutomationBusinessCalendar": {
            "description": "\u003e This resource is excluded by default in the export utility. You can, of course, specify that resource explicitly in order to export it. In that case, don't forget to specify the environment variables `DYNATRACE_AUTOMATION_CLIENT_ID` and `DYNATRACE_AUTOMATION_CLIENT_SECRET` for authentication.\n\n## Dynatrace Documentation\n\n- Dynatrace Workflows - https://www.dynatrace.com/support/help/platform-modules/cloud-automation/workflows\n\n## Prerequisites\n\nUsing this resource requires an OAuth client to be configured within your account settings.\nThe scopes of the OAuth Client need to include `View calendars (automation:calendars:read)` and `Create and edit calendars (automation:calendars:write)`.\n\nFinally the provider configuration requires the credentials for that OAuth Client.\nThe configuration section of your provider needs to look like this.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n\u003e In order to handle credentials in a secure manner we recommend to use the environment variables `DYNATRACE_AUTOMATION_CLIENT_ID` and `DYNATRACE_AUTOMATION_CLIENT_SECRET` as an alternative.\n\n## Resource Example Usage\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\n\nconst _name_ = new dynatrace.AutomationBusinessCalendar(\"#name#\", {\n    description: \"#name#\",\n    holidays: {\n        holidays: [\n            {\n                date: \"2023-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2023-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2023-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2023-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2023-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2023-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2024-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2024-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2024-04-01\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2024-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2024-05-09\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2024-05-20\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2024-05-30\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2024-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2024-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2024-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2024-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2024-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2024-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2025-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2025-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2025-04-21\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2025-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2025-05-29\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2025-06-09\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2025-06-19\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2025-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2025-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2025-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2025-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2025-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2025-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2026-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2026-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2026-04-06\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2026-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2026-05-14\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2026-05-25\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2026-06-04\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2026-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2026-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2026-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2026-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2026-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2026-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2027-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2027-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2027-03-29\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2027-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2027-05-06\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2027-05-17\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2027-05-27\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2027-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2027-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2027-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2027-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2027-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2027-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2028-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2028-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2028-04-17\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2028-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2028-05-25\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2028-06-05\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2028-06-15\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2028-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2028-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2028-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2028-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2028-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2028-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2029-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2029-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2029-04-02\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2029-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2029-05-10\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2029-05-21\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2029-05-31\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2029-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2029-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2029-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2029-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2029-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2029-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2030-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2030-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2030-04-22\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2030-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2030-05-30\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2030-06-10\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2030-06-20\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2030-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2030-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2030-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2030-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2030-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2030-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2031-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2031-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2031-04-14\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2031-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2031-05-22\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2031-06-02\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2031-06-12\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2031-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2031-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2031-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2031-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2031-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2031-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2032-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2032-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2032-03-29\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2032-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2032-05-06\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2032-05-17\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2032-05-27\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2032-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2032-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2032-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2032-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2032-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2032-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2033-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2033-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2033-04-18\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2033-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2033-05-26\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2033-06-06\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2033-06-16\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2023-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2024-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2025-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2026-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2027-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2028-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2029-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2030-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2031-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2032-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2033-07-31\",\n                title: \"Reini Day\",\n            },\n        ],\n    },\n    title: \"#name#\",\n    validFrom: \"2023-07-31\",\n    validTo: \"2033-07-31\",\n    weekDays: [\n        1,\n        2,\n        3,\n        4,\n        5,\n    ],\n    weekStart: 1,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\n\n_name_ = dynatrace.AutomationBusinessCalendar(\"#name#\",\n    description=\"#name#\",\n    holidays=dynatrace.AutomationBusinessCalendarHolidaysArgs(\n        holidays=[\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-04-01\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-05-09\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-05-20\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-05-30\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-04-21\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-05-29\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-06-09\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-06-19\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-04-06\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-05-14\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-05-25\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-06-04\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-03-29\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-05-06\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-05-17\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-05-27\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-04-17\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-05-25\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-06-05\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-06-15\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-04-02\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-05-10\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-05-21\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-05-31\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-04-22\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-05-30\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-06-10\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-06-20\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-04-14\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-05-22\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-06-02\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-06-12\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-03-29\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-05-06\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-05-17\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-05-27\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-04-18\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-05-26\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-06-06\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-06-16\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-07-31\",\n                title=\"Reini Day\",\n            ),\n        ],\n    ),\n    title=\"#name#\",\n    valid_from=\"2023-07-31\",\n    valid_to=\"2033-07-31\",\n    week_days=[\n        1,\n        2,\n        3,\n        4,\n        5,\n    ],\n    week_start=1)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var _name_ = new Dynatrace.AutomationBusinessCalendar(\"#name#\", new()\n    {\n        Description = \"#name#\",\n        Holidays = new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysArgs\n        {\n            Holidays = new[]\n            {\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-04-01\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-05-09\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-05-20\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-05-30\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-04-21\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-05-29\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-06-09\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-06-19\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-04-06\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-05-14\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-05-25\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-06-04\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-03-29\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-05-06\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-05-17\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-05-27\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-04-17\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-05-25\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-06-05\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-06-15\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-04-02\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-05-10\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-05-21\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-05-31\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-04-22\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-05-30\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-06-10\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-06-20\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-04-14\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-05-22\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-06-02\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-06-12\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-03-29\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-05-06\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-05-17\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-05-27\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-04-18\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-05-26\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-06-06\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-06-16\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-07-31\",\n                    Title = \"Reini Day\",\n                },\n            },\n        },\n        Title = \"#name#\",\n        ValidFrom = \"2023-07-31\",\n        ValidTo = \"2033-07-31\",\n        WeekDays = new[]\n        {\n            1,\n            2,\n            3,\n            4,\n            5,\n        },\n        WeekStart = 1,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dynatrace.NewAutomationBusinessCalendar(ctx, \"#name#\", \u0026dynatrace.AutomationBusinessCalendarArgs{\n\t\t\tDescription: pulumi.String(\"#name#\"),\n\t\t\tHolidays: \u0026dynatrace.AutomationBusinessCalendarHolidaysArgs{\n\t\t\t\tHolidays: dynatrace.AutomationBusinessCalendarHolidaysHolidayArray{\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-04-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-05-09\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-05-20\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-05-30\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-04-21\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-05-29\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-06-09\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-06-19\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-04-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-05-14\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-05-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-06-04\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-03-29\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-05-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-05-17\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-05-27\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-04-17\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-05-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-06-05\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-06-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-04-02\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-05-10\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-05-21\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-05-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-04-22\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-05-30\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-06-10\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-06-20\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-04-14\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-05-22\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-06-02\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-06-12\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-03-29\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-05-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-05-17\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-05-27\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-04-18\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-05-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-06-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-06-16\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tTitle:     pulumi.String(\"#name#\"),\n\t\t\tValidFrom: pulumi.String(\"2023-07-31\"),\n\t\t\tValidTo:   pulumi.String(\"2033-07-31\"),\n\t\t\tWeekDays: pulumi.IntArray{\n\t\t\t\tpulumi.Int(1),\n\t\t\t\tpulumi.Int(2),\n\t\t\t\tpulumi.Int(3),\n\t\t\t\tpulumi.Int(4),\n\t\t\t\tpulumi.Int(5),\n\t\t\t},\n\t\t\tWeekStart: pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.AutomationBusinessCalendar;\nimport com.pulumi.dynatrace.AutomationBusinessCalendarArgs;\nimport com.pulumi.dynatrace.inputs.AutomationBusinessCalendarHolidaysArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var _name_ = new AutomationBusinessCalendar(\"#name#\", AutomationBusinessCalendarArgs.builder()        \n            .description(\"#name#\")\n            .holidays(AutomationBusinessCalendarHolidaysArgs.builder()\n                .holidays(                \n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2023-08-15\")\n                        .title(\"Mariä Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2023-10-26\")\n                        .title(\"Nationalfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2023-11-01\")\n                        .title(\"Allerheiligen\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2023-12-08\")\n                        .title(\"Mariä Empfängnis\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2023-12-25\")\n                        .title(\"Christtag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2023-12-26\")\n                        .title(\"Stefanitag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-01-01\")\n                        .title(\"Neujahr\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-01-06\")\n                        .title(\"Heilige Drei Könige\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-04-01\")\n                        .title(\"Ostermontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-05-01\")\n                        .title(\"Staatsfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-05-09\")\n                        .title(\"Christi Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-05-20\")\n                        .title(\"Pfingstmontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-05-30\")\n                        .title(\"Fronleichnam\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-08-15\")\n                        .title(\"Mariä Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-10-26\")\n                        .title(\"Nationalfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-11-01\")\n                        .title(\"Allerheiligen\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-12-08\")\n                        .title(\"Mariä Empfängnis\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-12-25\")\n                        .title(\"Christtag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-12-26\")\n                        .title(\"Stefanitag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-01-01\")\n                        .title(\"Neujahr\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-01-06\")\n                        .title(\"Heilige Drei Könige\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-04-21\")\n                        .title(\"Ostermontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-05-01\")\n                        .title(\"Staatsfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-05-29\")\n                        .title(\"Christi Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-06-09\")\n                        .title(\"Pfingstmontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-06-19\")\n                        .title(\"Fronleichnam\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-08-15\")\n                        .title(\"Mariä Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-10-26\")\n                        .title(\"Nationalfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-11-01\")\n                        .title(\"Allerheiligen\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-12-08\")\n                        .title(\"Mariä Empfängnis\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-12-25\")\n                        .title(\"Christtag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-12-26\")\n                        .title(\"Stefanitag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-01-01\")\n                        .title(\"Neujahr\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-01-06\")\n                        .title(\"Heilige Drei Könige\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-04-06\")\n                        .title(\"Ostermontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-05-01\")\n                        .title(\"Staatsfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-05-14\")\n                        .title(\"Christi Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-05-25\")\n                        .title(\"Pfingstmontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-06-04\")\n                        .title(\"Fronleichnam\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-08-15\")\n                        .title(\"Mariä Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-10-26\")\n                        .title(\"Nationalfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-11-01\")\n                        .title(\"Allerheiligen\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-12-08\")\n                        .title(\"Mariä Empfängnis\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-12-25\")\n                        .title(\"Christtag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-12-26\")\n                        .title(\"Stefanitag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-01-01\")\n                        .title(\"Neujahr\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-01-06\")\n                        .title(\"Heilige Drei Könige\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-03-29\")\n                        .title(\"Ostermontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-05-01\")\n                        .title(\"Staatsfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-05-06\")\n                        .title(\"Christi Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-05-17\")\n                        .title(\"Pfingstmontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-05-27\")\n                        .title(\"Fronleichnam\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-08-15\")\n                        .title(\"Mariä Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-10-26\")\n                        .title(\"Nationalfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-11-01\")\n                        .title(\"Allerheiligen\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-12-08\")\n                        .title(\"Mariä Empfängnis\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-12-25\")\n                        .title(\"Christtag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-12-26\")\n                        .title(\"Stefanitag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-01-01\")\n                        .title(\"Neujahr\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-01-06\")\n                        .title(\"Heilige Drei Könige\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-04-17\")\n                        .title(\"Ostermontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-05-01\")\n                        .title(\"Staatsfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-05-25\")\n                        .title(\"Christi Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-06-05\")\n                        .title(\"Pfingstmontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-06-15\")\n                        .title(\"Fronleichnam\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-08-15\")\n                        .title(\"Mariä Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-10-26\")\n                        .title(\"Nationalfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-11-01\")\n                        .title(\"Allerheiligen\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-12-08\")\n                        .title(\"Mariä Empfängnis\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-12-25\")\n                        .title(\"Christtag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-12-26\")\n                        .title(\"Stefanitag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-01-01\")\n                        .title(\"Neujahr\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-01-06\")\n                        .title(\"Heilige Drei Könige\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-04-02\")\n                        .title(\"Ostermontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-05-01\")\n                        .title(\"Staatsfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-05-10\")\n                        .title(\"Christi Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-05-21\")\n                        .title(\"Pfingstmontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-05-31\")\n                        .title(\"Fronleichnam\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-08-15\")\n                        .title(\"Mariä Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-10-26\")\n                        .title(\"Nationalfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-11-01\")\n                        .title(\"Allerheiligen\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-12-08\")\n                        .title(\"Mariä Empfängnis\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-12-25\")\n                        .title(\"Christtag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-12-26\")\n                        .title(\"Stefanitag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-01-01\")\n                        .title(\"Neujahr\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-01-06\")\n                        .title(\"Heilige Drei Könige\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-04-22\")\n                        .title(\"Ostermontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-05-01\")\n                        .title(\"Staatsfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-05-30\")\n                        .title(\"Christi Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-06-10\")\n                        .title(\"Pfingstmontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-06-20\")\n                        .title(\"Fronleichnam\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-08-15\")\n                        .title(\"Mariä Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-10-26\")\n                        .title(\"Nationalfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-11-01\")\n                        .title(\"Allerheiligen\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-12-08\")\n                        .title(\"Mariä Empfängnis\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-12-25\")\n                        .title(\"Christtag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-12-26\")\n                        .title(\"Stefanitag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-01-01\")\n                        .title(\"Neujahr\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-01-06\")\n                        .title(\"Heilige Drei Könige\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-04-14\")\n                        .title(\"Ostermontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-05-01\")\n                        .title(\"Staatsfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-05-22\")\n                        .title(\"Christi Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-06-02\")\n                        .title(\"Pfingstmontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-06-12\")\n                        .title(\"Fronleichnam\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-08-15\")\n                        .title(\"Mariä Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-10-26\")\n                        .title(\"Nationalfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-11-01\")\n                        .title(\"Allerheiligen\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-12-08\")\n                        .title(\"Mariä Empfängnis\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-12-25\")\n                        .title(\"Christtag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-12-26\")\n                        .title(\"Stefanitag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-01-01\")\n                        .title(\"Neujahr\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-01-06\")\n                        .title(\"Heilige Drei Könige\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-03-29\")\n                        .title(\"Ostermontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-05-01\")\n                        .title(\"Staatsfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-05-06\")\n                        .title(\"Christi Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-05-17\")\n                        .title(\"Pfingstmontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-05-27\")\n                        .title(\"Fronleichnam\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-08-15\")\n                        .title(\"Mariä Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-10-26\")\n                        .title(\"Nationalfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-11-01\")\n                        .title(\"Allerheiligen\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-12-08\")\n                        .title(\"Mariä Empfängnis\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-12-25\")\n                        .title(\"Christtag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-12-26\")\n                        .title(\"Stefanitag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2033-01-01\")\n                        .title(\"Neujahr\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2033-01-06\")\n                        .title(\"Heilige Drei Könige\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2033-04-18\")\n                        .title(\"Ostermontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2033-05-01\")\n                        .title(\"Staatsfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2033-05-26\")\n                        .title(\"Christi Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2033-06-06\")\n                        .title(\"Pfingstmontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2033-06-16\")\n                        .title(\"Fronleichnam\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2023-07-31\")\n                        .title(\"Reini Day\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-07-31\")\n                        .title(\"Reini Day\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-07-31\")\n                        .title(\"Reini Day\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-07-31\")\n                        .title(\"Reini Day\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-07-31\")\n                        .title(\"Reini Day\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-07-31\")\n                        .title(\"Reini Day\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-07-31\")\n                        .title(\"Reini Day\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-07-31\")\n                        .title(\"Reini Day\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-07-31\")\n                        .title(\"Reini Day\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-07-31\")\n                        .title(\"Reini Day\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2033-07-31\")\n                        .title(\"Reini Day\")\n                        .build())\n                .build())\n            .title(\"#name#\")\n            .validFrom(\"2023-07-31\")\n            .validTo(\"2033-07-31\")\n            .weekDays(            \n                1,\n                2,\n                3,\n                4,\n                5)\n            .weekStart(1)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  '#name#':\n    type: dynatrace:AutomationBusinessCalendar\n    properties:\n      description: '#name#'\n      holidays:\n        holidays:\n          - date: 2023-08-15\n            title: Mariä Himmelfahrt\n          - date: 2023-10-26\n            title: Nationalfeiertag\n          - date: 2023-11-01\n            title: Allerheiligen\n          - date: 2023-12-08\n            title: Mariä Empfängnis\n          - date: 2023-12-25\n            title: Christtag\n          - date: 2023-12-26\n            title: Stefanitag\n          - date: 2024-01-01\n            title: Neujahr\n          - date: 2024-01-06\n            title: Heilige Drei Könige\n          - date: 2024-04-01\n            title: Ostermontag\n          - date: 2024-05-01\n            title: Staatsfeiertag\n          - date: 2024-05-09\n            title: Christi Himmelfahrt\n          - date: 2024-05-20\n            title: Pfingstmontag\n          - date: 2024-05-30\n            title: Fronleichnam\n          - date: 2024-08-15\n            title: Mariä Himmelfahrt\n          - date: 2024-10-26\n            title: Nationalfeiertag\n          - date: 2024-11-01\n            title: Allerheiligen\n          - date: 2024-12-08\n            title: Mariä Empfängnis\n          - date: 2024-12-25\n            title: Christtag\n          - date: 2024-12-26\n            title: Stefanitag\n          - date: 2025-01-01\n            title: Neujahr\n          - date: 2025-01-06\n            title: Heilige Drei Könige\n          - date: 2025-04-21\n            title: Ostermontag\n          - date: 2025-05-01\n            title: Staatsfeiertag\n          - date: 2025-05-29\n            title: Christi Himmelfahrt\n          - date: 2025-06-09\n            title: Pfingstmontag\n          - date: 2025-06-19\n            title: Fronleichnam\n          - date: 2025-08-15\n            title: Mariä Himmelfahrt\n          - date: 2025-10-26\n            title: Nationalfeiertag\n          - date: 2025-11-01\n            title: Allerheiligen\n          - date: 2025-12-08\n            title: Mariä Empfängnis\n          - date: 2025-12-25\n            title: Christtag\n          - date: 2025-12-26\n            title: Stefanitag\n          - date: 2026-01-01\n            title: Neujahr\n          - date: 2026-01-06\n            title: Heilige Drei Könige\n          - date: 2026-04-06\n            title: Ostermontag\n          - date: 2026-05-01\n            title: Staatsfeiertag\n          - date: 2026-05-14\n            title: Christi Himmelfahrt\n          - date: 2026-05-25\n            title: Pfingstmontag\n          - date: 2026-06-04\n            title: Fronleichnam\n          - date: 2026-08-15\n            title: Mariä Himmelfahrt\n          - date: 2026-10-26\n            title: Nationalfeiertag\n          - date: 2026-11-01\n            title: Allerheiligen\n          - date: 2026-12-08\n            title: Mariä Empfängnis\n          - date: 2026-12-25\n            title: Christtag\n          - date: 2026-12-26\n            title: Stefanitag\n          - date: 2027-01-01\n            title: Neujahr\n          - date: 2027-01-06\n            title: Heilige Drei Könige\n          - date: 2027-03-29\n            title: Ostermontag\n          - date: 2027-05-01\n            title: Staatsfeiertag\n          - date: 2027-05-06\n            title: Christi Himmelfahrt\n          - date: 2027-05-17\n            title: Pfingstmontag\n          - date: 2027-05-27\n            title: Fronleichnam\n          - date: 2027-08-15\n            title: Mariä Himmelfahrt\n          - date: 2027-10-26\n            title: Nationalfeiertag\n          - date: 2027-11-01\n            title: Allerheiligen\n          - date: 2027-12-08\n            title: Mariä Empfängnis\n          - date: 2027-12-25\n            title: Christtag\n          - date: 2027-12-26\n            title: Stefanitag\n          - date: 2028-01-01\n            title: Neujahr\n          - date: 2028-01-06\n            title: Heilige Drei Könige\n          - date: 2028-04-17\n            title: Ostermontag\n          - date: 2028-05-01\n            title: Staatsfeiertag\n          - date: 2028-05-25\n            title: Christi Himmelfahrt\n          - date: 2028-06-05\n            title: Pfingstmontag\n          - date: 2028-06-15\n            title: Fronleichnam\n          - date: 2028-08-15\n            title: Mariä Himmelfahrt\n          - date: 2028-10-26\n            title: Nationalfeiertag\n          - date: 2028-11-01\n            title: Allerheiligen\n          - date: 2028-12-08\n            title: Mariä Empfängnis\n          - date: 2028-12-25\n            title: Christtag\n          - date: 2028-12-26\n            title: Stefanitag\n          - date: 2029-01-01\n            title: Neujahr\n          - date: 2029-01-06\n            title: Heilige Drei Könige\n          - date: 2029-04-02\n            title: Ostermontag\n          - date: 2029-05-01\n            title: Staatsfeiertag\n          - date: 2029-05-10\n            title: Christi Himmelfahrt\n          - date: 2029-05-21\n            title: Pfingstmontag\n          - date: 2029-05-31\n            title: Fronleichnam\n          - date: 2029-08-15\n            title: Mariä Himmelfahrt\n          - date: 2029-10-26\n            title: Nationalfeiertag\n          - date: 2029-11-01\n            title: Allerheiligen\n          - date: 2029-12-08\n            title: Mariä Empfängnis\n          - date: 2029-12-25\n            title: Christtag\n          - date: 2029-12-26\n            title: Stefanitag\n          - date: 2030-01-01\n            title: Neujahr\n          - date: 2030-01-06\n            title: Heilige Drei Könige\n          - date: 2030-04-22\n            title: Ostermontag\n          - date: 2030-05-01\n            title: Staatsfeiertag\n          - date: 2030-05-30\n            title: Christi Himmelfahrt\n          - date: 2030-06-10\n            title: Pfingstmontag\n          - date: 2030-06-20\n            title: Fronleichnam\n          - date: 2030-08-15\n            title: Mariä Himmelfahrt\n          - date: 2030-10-26\n            title: Nationalfeiertag\n          - date: 2030-11-01\n            title: Allerheiligen\n          - date: 2030-12-08\n            title: Mariä Empfängnis\n          - date: 2030-12-25\n            title: Christtag\n          - date: 2030-12-26\n            title: Stefanitag\n          - date: 2031-01-01\n            title: Neujahr\n          - date: 2031-01-06\n            title: Heilige Drei Könige\n          - date: 2031-04-14\n            title: Ostermontag\n          - date: 2031-05-01\n            title: Staatsfeiertag\n          - date: 2031-05-22\n            title: Christi Himmelfahrt\n          - date: 2031-06-02\n            title: Pfingstmontag\n          - date: 2031-06-12\n            title: Fronleichnam\n          - date: 2031-08-15\n            title: Mariä Himmelfahrt\n          - date: 2031-10-26\n            title: Nationalfeiertag\n          - date: 2031-11-01\n            title: Allerheiligen\n          - date: 2031-12-08\n            title: Mariä Empfängnis\n          - date: 2031-12-25\n            title: Christtag\n          - date: 2031-12-26\n            title: Stefanitag\n          - date: 2032-01-01\n            title: Neujahr\n          - date: 2032-01-06\n            title: Heilige Drei Könige\n          - date: 2032-03-29\n            title: Ostermontag\n          - date: 2032-05-01\n            title: Staatsfeiertag\n          - date: 2032-05-06\n            title: Christi Himmelfahrt\n          - date: 2032-05-17\n            title: Pfingstmontag\n          - date: 2032-05-27\n            title: Fronleichnam\n          - date: 2032-08-15\n            title: Mariä Himmelfahrt\n          - date: 2032-10-26\n            title: Nationalfeiertag\n          - date: 2032-11-01\n            title: Allerheiligen\n          - date: 2032-12-08\n            title: Mariä Empfängnis\n          - date: 2032-12-25\n            title: Christtag\n          - date: 2032-12-26\n            title: Stefanitag\n          - date: 2033-01-01\n            title: Neujahr\n          - date: 2033-01-06\n            title: Heilige Drei Könige\n          - date: 2033-04-18\n            title: Ostermontag\n          - date: 2033-05-01\n            title: Staatsfeiertag\n          - date: 2033-05-26\n            title: Christi Himmelfahrt\n          - date: 2033-06-06\n            title: Pfingstmontag\n          - date: 2033-06-16\n            title: Fronleichnam\n          - date: 2023-07-31\n            title: Reini Day\n          - date: 2024-07-31\n            title: Reini Day\n          - date: 2025-07-31\n            title: Reini Day\n          - date: 2026-07-31\n            title: Reini Day\n          - date: 2027-07-31\n            title: Reini Day\n          - date: 2028-07-31\n            title: Reini Day\n          - date: 2029-07-31\n            title: Reini Day\n          - date: 2030-07-31\n            title: Reini Day\n          - date: 2031-07-31\n            title: Reini Day\n          - date: 2032-07-31\n            title: Reini Day\n          - date: 2033-07-31\n            title: Reini Day\n      title: '#name#'\n      validFrom: 2023-07-31\n      validTo: 2033-07-31\n      weekDays:\n        - 1\n        - 2\n        - 3\n        - 4\n        - 5\n      weekStart: 1\n```\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "An optional description for the Business Calendar\n"
                },
                "holidays": {
                    "$ref": "#/types/dynatrace:index/AutomationBusinessCalendarHolidays:AutomationBusinessCalendarHolidays",
                    "description": "A list of holidays valid in this calendar\n"
                },
                "title": {
                    "type": "string",
                    "description": "An official name for this holiday\n"
                },
                "validFrom": {
                    "type": "string",
                    "description": "The date from when on this calendar is valid from. Example: `2023-07-04` for July 4th 2023\n"
                },
                "validTo": {
                    "type": "string",
                    "description": "The date until when on this calendar is valid to. Example: `2023-07-04` for July 4th 2023\n"
                },
                "weekDays": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The days to be considered week days in this calendar. `1' =`Monday`,`2`=`Tuesday`,`3`=`Wednesday`,`4`=`Thursday`,`5`=`Friday`,`6`=`Saturday`,`7`=`Sunday`\n"
                },
                "weekStart": {
                    "type": "integer",
                    "description": "Specifies the day of the week that's considered to be the first day in the week. `1` for Monday, `7` for Sunday\n"
                }
            },
            "required": [
                "title"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "An optional description for the Business Calendar\n"
                },
                "holidays": {
                    "$ref": "#/types/dynatrace:index/AutomationBusinessCalendarHolidays:AutomationBusinessCalendarHolidays",
                    "description": "A list of holidays valid in this calendar\n"
                },
                "title": {
                    "type": "string",
                    "description": "An official name for this holiday\n"
                },
                "validFrom": {
                    "type": "string",
                    "description": "The date from when on this calendar is valid from. Example: `2023-07-04` for July 4th 2023\n"
                },
                "validTo": {
                    "type": "string",
                    "description": "The date until when on this calendar is valid to. Example: `2023-07-04` for July 4th 2023\n"
                },
                "weekDays": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The days to be considered week days in this calendar. `1' =`Monday`,`2`=`Tuesday`,`3`=`Wednesday`,`4`=`Thursday`,`5`=`Friday`,`6`=`Saturday`,`7`=`Sunday`\n"
                },
                "weekStart": {
                    "type": "integer",
                    "description": "Specifies the day of the week that's considered to be the first day in the week. `1` for Monday, `7` for Sunday\n"
                }
            },
            "requiredInputs": [
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AutomationBusinessCalendar resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "An optional description for the Business Calendar\n"
                    },
                    "holidays": {
                        "$ref": "#/types/dynatrace:index/AutomationBusinessCalendarHolidays:AutomationBusinessCalendarHolidays",
                        "description": "A list of holidays valid in this calendar\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "An official name for this holiday\n"
                    },
                    "validFrom": {
                        "type": "string",
                        "description": "The date from when on this calendar is valid from. Example: `2023-07-04` for July 4th 2023\n"
                    },
                    "validTo": {
                        "type": "string",
                        "description": "The date until when on this calendar is valid to. Example: `2023-07-04` for July 4th 2023\n"
                    },
                    "weekDays": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The days to be considered week days in this calendar. `1' =`Monday`,`2`=`Tuesday`,`3`=`Wednesday`,`4`=`Thursday`,`5`=`Friday`,`6`=`Saturday`,`7`=`Sunday`\n"
                    },
                    "weekStart": {
                        "type": "integer",
                        "description": "Specifies the day of the week that's considered to be the first day in the week. `1` for Monday, `7` for Sunday\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/automationSchedulingRule:AutomationSchedulingRule": {
            "description": "\u003e This resource is excluded by default in the export utility. You can, of course, specify that resource explicitly in order to export it. In that case, don't forget to specify the environment variables `DYNATRACE_AUTOMATION_CLIENT_ID` and `DYNATRACE_AUTOMATION_CLIENT_SECRET` for authentication.\n\n## Dynatrace Documentation\n\n- Dynatrace Workflows - https://www.dynatrace.com/support/help/platform-modules/cloud-automation/workflows\n\n## Prerequisites\n\nUsing this resource requires an OAuth client to be configured within your account settings.\nThe scopes of the OAuth Client need to include `View rules (automation:rules:read)` and `Create and edit rules (automation:rules:write)`.\n\nFinally the provider configuration requires the credentials for that OAuth Client.\nThe configuration section of your provider needs to look like this.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n\u003e In order to handle credentials in a secure manner we recommend to use the environment variables `DYNATRACE_AUTOMATION_CLIENT_ID` and `DYNATRACE_AUTOMATION_CLIENT_SECRET` as an alternative.\n\n## Resource Examples\n\n### Recurrence Rule\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\n\nconst calendar = new dynatrace.AutomationBusinessCalendar(\"calendar\", {\n    description: \"#name#\",\n    title: \"#name#\",\n    validFrom: \"2023-07-31\",\n    validTo: \"2033-07-31\",\n    weekDays: [\n        1,\n        2,\n        3,\n        4,\n        5,\n    ],\n    weekStart: 1,\n    holidays: {\n        holidays: [\n            {\n                date: \"2023-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2023-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2023-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2023-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2023-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2023-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2024-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2024-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2024-04-01\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2024-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2024-05-09\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2024-05-20\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2024-05-30\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2024-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2024-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2024-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2024-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2024-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2024-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2025-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2025-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2025-04-21\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2025-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2025-05-29\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2025-06-09\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2025-06-19\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2025-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2025-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2025-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2025-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2025-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2025-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2026-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2026-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2026-04-06\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2026-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2026-05-14\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2026-05-25\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2026-06-04\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2026-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2026-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2026-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2026-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2026-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2026-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2027-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2027-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2027-03-29\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2027-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2027-05-06\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2027-05-17\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2027-05-27\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2027-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2027-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2027-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2027-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2027-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2027-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2028-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2028-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2028-04-17\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2028-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2028-05-25\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2028-06-05\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2028-06-15\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2028-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2028-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2028-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2028-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2028-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2028-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2029-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2029-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2029-04-02\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2029-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2029-05-10\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2029-05-21\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2029-05-31\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2029-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2029-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2029-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2029-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2029-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2029-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2030-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2030-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2030-04-22\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2030-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2030-05-30\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2030-06-10\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2030-06-20\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2030-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2030-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2030-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2030-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2030-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2030-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2031-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2031-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2031-04-14\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2031-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2031-05-22\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2031-06-02\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2031-06-12\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2031-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2031-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2031-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2031-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2031-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2031-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2032-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2032-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2032-03-29\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2032-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2032-05-06\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2032-05-17\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2032-05-27\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2032-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2032-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2032-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2032-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2032-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2032-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2033-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2033-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2033-04-18\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2033-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2033-05-26\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2033-06-06\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2033-06-16\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2023-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2024-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2025-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2026-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2027-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2028-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2029-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2030-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2031-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2032-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2033-07-31\",\n                title: \"Reini Day\",\n            },\n        ],\n    },\n});\nconst _name_ = new dynatrace.AutomationSchedulingRule(\"#name#\", {\n    businessCalendar: calendar.id,\n    title: \"#name#\",\n    recurrence: {\n        datestart: \"2023-07-31\",\n        daysInMonths: [-1],\n        daysInYears: [\n            -2,\n            -1,\n            1,\n            2,\n            3,\n        ],\n        frequency: \"WEEKLY\",\n        interval: 33,\n        months: [\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n        ],\n        weekdays: [\n            \"MO\",\n            \"TU\",\n            \"WE\",\n        ],\n        weeks: [\n            -2,\n            -1,\n            1,\n            2,\n            3,\n        ],\n        workdays: \"WORKING\",\n    },\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\n\ncalendar = dynatrace.AutomationBusinessCalendar(\"calendar\",\n    description=\"#name#\",\n    title=\"#name#\",\n    valid_from=\"2023-07-31\",\n    valid_to=\"2033-07-31\",\n    week_days=[\n        1,\n        2,\n        3,\n        4,\n        5,\n    ],\n    week_start=1,\n    holidays=dynatrace.AutomationBusinessCalendarHolidaysArgs(\n        holidays=[\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-04-01\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-05-09\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-05-20\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-05-30\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-04-21\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-05-29\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-06-09\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-06-19\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-04-06\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-05-14\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-05-25\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-06-04\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-03-29\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-05-06\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-05-17\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-05-27\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-04-17\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-05-25\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-06-05\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-06-15\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-04-02\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-05-10\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-05-21\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-05-31\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-04-22\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-05-30\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-06-10\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-06-20\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-04-14\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-05-22\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-06-02\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-06-12\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-03-29\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-05-06\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-05-17\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-05-27\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-04-18\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-05-26\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-06-06\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-06-16\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-07-31\",\n                title=\"Reini Day\",\n            ),\n        ],\n    ))\n_name_ = dynatrace.AutomationSchedulingRule(\"#name#\",\n    business_calendar=calendar.id,\n    title=\"#name#\",\n    recurrence=dynatrace.AutomationSchedulingRuleRecurrenceArgs(\n        datestart=\"2023-07-31\",\n        days_in_months=[-1],\n        days_in_years=[\n            -2,\n            -1,\n            1,\n            2,\n            3,\n        ],\n        frequency=\"WEEKLY\",\n        interval=33,\n        months=[\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n        ],\n        weekdays=[\n            \"MO\",\n            \"TU\",\n            \"WE\",\n        ],\n        weeks=[\n            -2,\n            -1,\n            1,\n            2,\n            3,\n        ],\n        workdays=\"WORKING\",\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var calendar = new Dynatrace.AutomationBusinessCalendar(\"calendar\", new()\n    {\n        Description = \"#name#\",\n        Title = \"#name#\",\n        ValidFrom = \"2023-07-31\",\n        ValidTo = \"2033-07-31\",\n        WeekDays = new[]\n        {\n            1,\n            2,\n            3,\n            4,\n            5,\n        },\n        WeekStart = 1,\n        Holidays = new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysArgs\n        {\n            Holidays = new[]\n            {\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-04-01\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-05-09\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-05-20\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-05-30\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-04-21\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-05-29\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-06-09\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-06-19\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-04-06\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-05-14\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-05-25\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-06-04\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-03-29\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-05-06\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-05-17\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-05-27\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-04-17\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-05-25\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-06-05\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-06-15\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-04-02\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-05-10\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-05-21\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-05-31\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-04-22\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-05-30\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-06-10\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-06-20\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-04-14\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-05-22\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-06-02\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-06-12\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-03-29\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-05-06\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-05-17\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-05-27\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-04-18\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-05-26\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-06-06\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-06-16\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-07-31\",\n                    Title = \"Reini Day\",\n                },\n            },\n        },\n    });\n\n    var _name_ = new Dynatrace.AutomationSchedulingRule(\"#name#\", new()\n    {\n        BusinessCalendar = calendar.Id,\n        Title = \"#name#\",\n        Recurrence = new Dynatrace.Inputs.AutomationSchedulingRuleRecurrenceArgs\n        {\n            Datestart = \"2023-07-31\",\n            DaysInMonths = new[]\n            {\n                -1,\n            },\n            DaysInYears = new[]\n            {\n                -2,\n                -1,\n                1,\n                2,\n                3,\n            },\n            Frequency = \"WEEKLY\",\n            Interval = 33,\n            Months = new[]\n            {\n                1,\n                2,\n                3,\n                4,\n                5,\n                6,\n                7,\n                8,\n                9,\n                10,\n                11,\n                12,\n            },\n            Weekdays = new[]\n            {\n                \"MO\",\n                \"TU\",\n                \"WE\",\n            },\n            Weeks = new[]\n            {\n                -2,\n                -1,\n                1,\n                2,\n                3,\n            },\n            Workdays = \"WORKING\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tcalendar, err := dynatrace.NewAutomationBusinessCalendar(ctx, \"calendar\", \u0026dynatrace.AutomationBusinessCalendarArgs{\n\t\t\tDescription: pulumi.String(\"#name#\"),\n\t\t\tTitle:       pulumi.String(\"#name#\"),\n\t\t\tValidFrom:   pulumi.String(\"2023-07-31\"),\n\t\t\tValidTo:     pulumi.String(\"2033-07-31\"),\n\t\t\tWeekDays: pulumi.IntArray{\n\t\t\t\tpulumi.Int(1),\n\t\t\t\tpulumi.Int(2),\n\t\t\t\tpulumi.Int(3),\n\t\t\t\tpulumi.Int(4),\n\t\t\t\tpulumi.Int(5),\n\t\t\t},\n\t\t\tWeekStart: pulumi.Int(1),\n\t\t\tHolidays: \u0026dynatrace.AutomationBusinessCalendarHolidaysArgs{\n\t\t\t\tHolidays: dynatrace.AutomationBusinessCalendarHolidaysHolidayArray{\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-04-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-05-09\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-05-20\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-05-30\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-04-21\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-05-29\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-06-09\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-06-19\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-04-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-05-14\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-05-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-06-04\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-03-29\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-05-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-05-17\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-05-27\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-04-17\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-05-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-06-05\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-06-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-04-02\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-05-10\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-05-21\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-05-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-04-22\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-05-30\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-06-10\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-06-20\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-04-14\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-05-22\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-06-02\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-06-12\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-03-29\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-05-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-05-17\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-05-27\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-04-18\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-05-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-06-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-06-16\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dynatrace.NewAutomationSchedulingRule(ctx, \"#name#\", \u0026dynatrace.AutomationSchedulingRuleArgs{\n\t\t\tBusinessCalendar: calendar.ID(),\n\t\t\tTitle:            pulumi.String(\"#name#\"),\n\t\t\tRecurrence: \u0026dynatrace.AutomationSchedulingRuleRecurrenceArgs{\n\t\t\t\tDatestart: pulumi.String(\"2023-07-31\"),\n\t\t\t\tDaysInMonths: pulumi.IntArray{\n\t\t\t\t\t-1,\n\t\t\t\t},\n\t\t\t\tDaysInYears: pulumi.IntArray{\n\t\t\t\t\t-2,\n\t\t\t\t\t-1,\n\t\t\t\t\tpulumi.Int(1),\n\t\t\t\t\tpulumi.Int(2),\n\t\t\t\t\tpulumi.Int(3),\n\t\t\t\t},\n\t\t\t\tFrequency: pulumi.String(\"WEEKLY\"),\n\t\t\t\tInterval:  pulumi.Int(33),\n\t\t\t\tMonths: pulumi.IntArray{\n\t\t\t\t\tpulumi.Int(1),\n\t\t\t\t\tpulumi.Int(2),\n\t\t\t\t\tpulumi.Int(3),\n\t\t\t\t\tpulumi.Int(4),\n\t\t\t\t\tpulumi.Int(5),\n\t\t\t\t\tpulumi.Int(6),\n\t\t\t\t\tpulumi.Int(7),\n\t\t\t\t\tpulumi.Int(8),\n\t\t\t\t\tpulumi.Int(9),\n\t\t\t\t\tpulumi.Int(10),\n\t\t\t\t\tpulumi.Int(11),\n\t\t\t\t\tpulumi.Int(12),\n\t\t\t\t},\n\t\t\t\tWeekdays: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"MO\"),\n\t\t\t\t\tpulumi.String(\"TU\"),\n\t\t\t\t\tpulumi.String(\"WE\"),\n\t\t\t\t},\n\t\t\t\tWeeks: pulumi.IntArray{\n\t\t\t\t\t-2,\n\t\t\t\t\t-1,\n\t\t\t\t\tpulumi.Int(1),\n\t\t\t\t\tpulumi.Int(2),\n\t\t\t\t\tpulumi.Int(3),\n\t\t\t\t},\n\t\t\t\tWorkdays: pulumi.String(\"WORKING\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n### Fixed Offset Rule\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\n\nconst calendar = new dynatrace.AutomationBusinessCalendar(\"calendar\", {\n    description: \"#name#\",\n    title: \"#name#\",\n    validFrom: \"2023-07-31\",\n    validTo: \"2033-07-31\",\n    weekDays: [\n        1,\n        2,\n        3,\n        4,\n        5,\n    ],\n    weekStart: 1,\n    holidays: {\n        holidays: [\n            {\n                date: \"2023-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2023-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2023-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2023-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2023-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2023-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2024-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2024-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2024-04-01\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2024-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2024-05-09\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2024-05-20\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2024-05-30\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2024-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2024-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2024-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2024-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2024-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2024-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2025-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2025-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2025-04-21\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2025-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2025-05-29\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2025-06-09\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2025-06-19\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2025-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2025-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2025-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2025-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2025-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2025-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2026-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2026-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2026-04-06\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2026-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2026-05-14\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2026-05-25\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2026-06-04\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2026-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2026-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2026-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2026-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2026-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2026-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2027-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2027-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2027-03-29\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2027-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2027-05-06\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2027-05-17\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2027-05-27\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2027-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2027-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2027-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2027-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2027-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2027-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2028-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2028-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2028-04-17\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2028-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2028-05-25\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2028-06-05\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2028-06-15\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2028-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2028-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2028-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2028-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2028-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2028-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2029-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2029-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2029-04-02\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2029-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2029-05-10\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2029-05-21\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2029-05-31\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2029-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2029-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2029-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2029-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2029-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2029-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2030-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2030-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2030-04-22\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2030-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2030-05-30\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2030-06-10\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2030-06-20\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2030-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2030-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2030-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2030-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2030-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2030-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2031-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2031-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2031-04-14\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2031-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2031-05-22\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2031-06-02\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2031-06-12\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2031-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2031-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2031-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2031-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2031-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2031-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2032-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2032-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2032-03-29\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2032-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2032-05-06\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2032-05-17\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2032-05-27\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2032-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2032-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2032-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2032-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2032-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2032-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2033-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2033-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2033-04-18\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2033-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2033-05-26\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2033-06-06\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2033-06-16\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2023-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2024-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2025-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2026-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2027-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2028-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2029-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2030-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2031-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2032-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2033-07-31\",\n                title: \"Reini Day\",\n            },\n        ],\n    },\n});\nconst base = new dynatrace.AutomationSchedulingRule(\"base\", {\n    businessCalendar: calendar.id,\n    title: \"#name#\",\n    recurrence: {\n        datestart: \"2023-07-31\",\n        daysInMonths: [-1],\n        daysInYears: [\n            -2,\n            -1,\n            1,\n            2,\n            3,\n        ],\n        frequency: \"WEEKLY\",\n        interval: 33,\n        months: [\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n        ],\n        weekdays: [\n            \"MO\",\n            \"TU\",\n            \"WE\",\n        ],\n        weeks: [\n            -2,\n            -1,\n            1,\n            2,\n            3,\n        ],\n        workdays: \"WORKING\",\n    },\n});\nconst _name_ = new dynatrace.AutomationSchedulingRule(\"#name#\", {\n    title: \"#name#\",\n    fixedOffset: {\n        offset: 50,\n        rule: base.id,\n    },\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\n\ncalendar = dynatrace.AutomationBusinessCalendar(\"calendar\",\n    description=\"#name#\",\n    title=\"#name#\",\n    valid_from=\"2023-07-31\",\n    valid_to=\"2033-07-31\",\n    week_days=[\n        1,\n        2,\n        3,\n        4,\n        5,\n    ],\n    week_start=1,\n    holidays=dynatrace.AutomationBusinessCalendarHolidaysArgs(\n        holidays=[\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-04-01\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-05-09\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-05-20\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-05-30\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-04-21\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-05-29\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-06-09\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-06-19\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-04-06\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-05-14\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-05-25\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-06-04\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-03-29\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-05-06\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-05-17\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-05-27\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-04-17\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-05-25\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-06-05\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-06-15\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-04-02\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-05-10\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-05-21\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-05-31\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-04-22\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-05-30\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-06-10\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-06-20\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-04-14\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-05-22\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-06-02\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-06-12\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-03-29\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-05-06\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-05-17\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-05-27\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-04-18\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-05-26\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-06-06\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-06-16\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-07-31\",\n                title=\"Reini Day\",\n            ),\n        ],\n    ))\nbase = dynatrace.AutomationSchedulingRule(\"base\",\n    business_calendar=calendar.id,\n    title=\"#name#\",\n    recurrence=dynatrace.AutomationSchedulingRuleRecurrenceArgs(\n        datestart=\"2023-07-31\",\n        days_in_months=[-1],\n        days_in_years=[\n            -2,\n            -1,\n            1,\n            2,\n            3,\n        ],\n        frequency=\"WEEKLY\",\n        interval=33,\n        months=[\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n        ],\n        weekdays=[\n            \"MO\",\n            \"TU\",\n            \"WE\",\n        ],\n        weeks=[\n            -2,\n            -1,\n            1,\n            2,\n            3,\n        ],\n        workdays=\"WORKING\",\n    ))\n_name_ = dynatrace.AutomationSchedulingRule(\"#name#\",\n    title=\"#name#\",\n    fixed_offset=dynatrace.AutomationSchedulingRuleFixedOffsetArgs(\n        offset=50,\n        rule=base.id,\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var calendar = new Dynatrace.AutomationBusinessCalendar(\"calendar\", new()\n    {\n        Description = \"#name#\",\n        Title = \"#name#\",\n        ValidFrom = \"2023-07-31\",\n        ValidTo = \"2033-07-31\",\n        WeekDays = new[]\n        {\n            1,\n            2,\n            3,\n            4,\n            5,\n        },\n        WeekStart = 1,\n        Holidays = new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysArgs\n        {\n            Holidays = new[]\n            {\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-04-01\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-05-09\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-05-20\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-05-30\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-04-21\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-05-29\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-06-09\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-06-19\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-04-06\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-05-14\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-05-25\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-06-04\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-03-29\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-05-06\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-05-17\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-05-27\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-04-17\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-05-25\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-06-05\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-06-15\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-04-02\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-05-10\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-05-21\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-05-31\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-04-22\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-05-30\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-06-10\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-06-20\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-04-14\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-05-22\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-06-02\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-06-12\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-03-29\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-05-06\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-05-17\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-05-27\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-04-18\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-05-26\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-06-06\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-06-16\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-07-31\",\n                    Title = \"Reini Day\",\n                },\n            },\n        },\n    });\n\n    var @base = new Dynatrace.AutomationSchedulingRule(\"base\", new()\n    {\n        BusinessCalendar = calendar.Id,\n        Title = \"#name#\",\n        Recurrence = new Dynatrace.Inputs.AutomationSchedulingRuleRecurrenceArgs\n        {\n            Datestart = \"2023-07-31\",\n            DaysInMonths = new[]\n            {\n                -1,\n            },\n            DaysInYears = new[]\n            {\n                -2,\n                -1,\n                1,\n                2,\n                3,\n            },\n            Frequency = \"WEEKLY\",\n            Interval = 33,\n            Months = new[]\n            {\n                1,\n                2,\n                3,\n                4,\n                5,\n                6,\n                7,\n                8,\n                9,\n                10,\n                11,\n                12,\n            },\n            Weekdays = new[]\n            {\n                \"MO\",\n                \"TU\",\n                \"WE\",\n            },\n            Weeks = new[]\n            {\n                -2,\n                -1,\n                1,\n                2,\n                3,\n            },\n            Workdays = \"WORKING\",\n        },\n    });\n\n    var _name_ = new Dynatrace.AutomationSchedulingRule(\"#name#\", new()\n    {\n        Title = \"#name#\",\n        FixedOffset = new Dynatrace.Inputs.AutomationSchedulingRuleFixedOffsetArgs\n        {\n            Offset = 50,\n            Rule = @base.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tcalendar, err := dynatrace.NewAutomationBusinessCalendar(ctx, \"calendar\", \u0026dynatrace.AutomationBusinessCalendarArgs{\n\t\t\tDescription: pulumi.String(\"#name#\"),\n\t\t\tTitle:       pulumi.String(\"#name#\"),\n\t\t\tValidFrom:   pulumi.String(\"2023-07-31\"),\n\t\t\tValidTo:     pulumi.String(\"2033-07-31\"),\n\t\t\tWeekDays: pulumi.IntArray{\n\t\t\t\tpulumi.Int(1),\n\t\t\t\tpulumi.Int(2),\n\t\t\t\tpulumi.Int(3),\n\t\t\t\tpulumi.Int(4),\n\t\t\t\tpulumi.Int(5),\n\t\t\t},\n\t\t\tWeekStart: pulumi.Int(1),\n\t\t\tHolidays: \u0026dynatrace.AutomationBusinessCalendarHolidaysArgs{\n\t\t\t\tHolidays: dynatrace.AutomationBusinessCalendarHolidaysHolidayArray{\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-04-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-05-09\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-05-20\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-05-30\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-04-21\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-05-29\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-06-09\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-06-19\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-04-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-05-14\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-05-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-06-04\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-03-29\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-05-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-05-17\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-05-27\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-04-17\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-05-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-06-05\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-06-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-04-02\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-05-10\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-05-21\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-05-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-04-22\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-05-30\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-06-10\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-06-20\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-04-14\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-05-22\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-06-02\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-06-12\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-03-29\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-05-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-05-17\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-05-27\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-04-18\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-05-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-06-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-06-16\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tbase, err := dynatrace.NewAutomationSchedulingRule(ctx, \"base\", \u0026dynatrace.AutomationSchedulingRuleArgs{\n\t\t\tBusinessCalendar: calendar.ID(),\n\t\t\tTitle:            pulumi.String(\"#name#\"),\n\t\t\tRecurrence: \u0026dynatrace.AutomationSchedulingRuleRecurrenceArgs{\n\t\t\t\tDatestart: pulumi.String(\"2023-07-31\"),\n\t\t\t\tDaysInMonths: pulumi.IntArray{\n\t\t\t\t\t-1,\n\t\t\t\t},\n\t\t\t\tDaysInYears: pulumi.IntArray{\n\t\t\t\t\t-2,\n\t\t\t\t\t-1,\n\t\t\t\t\tpulumi.Int(1),\n\t\t\t\t\tpulumi.Int(2),\n\t\t\t\t\tpulumi.Int(3),\n\t\t\t\t},\n\t\t\t\tFrequency: pulumi.String(\"WEEKLY\"),\n\t\t\t\tInterval:  pulumi.Int(33),\n\t\t\t\tMonths: pulumi.IntArray{\n\t\t\t\t\tpulumi.Int(1),\n\t\t\t\t\tpulumi.Int(2),\n\t\t\t\t\tpulumi.Int(3),\n\t\t\t\t\tpulumi.Int(4),\n\t\t\t\t\tpulumi.Int(5),\n\t\t\t\t\tpulumi.Int(6),\n\t\t\t\t\tpulumi.Int(7),\n\t\t\t\t\tpulumi.Int(8),\n\t\t\t\t\tpulumi.Int(9),\n\t\t\t\t\tpulumi.Int(10),\n\t\t\t\t\tpulumi.Int(11),\n\t\t\t\t\tpulumi.Int(12),\n\t\t\t\t},\n\t\t\t\tWeekdays: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"MO\"),\n\t\t\t\t\tpulumi.String(\"TU\"),\n\t\t\t\t\tpulumi.String(\"WE\"),\n\t\t\t\t},\n\t\t\t\tWeeks: pulumi.IntArray{\n\t\t\t\t\t-2,\n\t\t\t\t\t-1,\n\t\t\t\t\tpulumi.Int(1),\n\t\t\t\t\tpulumi.Int(2),\n\t\t\t\t\tpulumi.Int(3),\n\t\t\t\t},\n\t\t\t\tWorkdays: pulumi.String(\"WORKING\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dynatrace.NewAutomationSchedulingRule(ctx, \"#name#\", \u0026dynatrace.AutomationSchedulingRuleArgs{\n\t\t\tTitle: pulumi.String(\"#name#\"),\n\t\t\tFixedOffset: \u0026dynatrace.AutomationSchedulingRuleFixedOffsetArgs{\n\t\t\t\tOffset: pulumi.Int(50),\n\t\t\t\tRule:   base.ID(),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n### Relative Offset rule\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\n\nconst calendar = new dynatrace.AutomationBusinessCalendar(\"calendar\", {\n    description: \"#name#\",\n    title: \"#name#\",\n    validFrom: \"2023-07-31\",\n    validTo: \"2033-07-31\",\n    weekDays: [\n        1,\n        2,\n        3,\n        4,\n        5,\n    ],\n    weekStart: 1,\n    holidays: {\n        holidays: [\n            {\n                date: \"2023-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2023-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2023-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2023-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2023-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2023-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2024-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2024-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2024-04-01\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2024-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2024-05-09\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2024-05-20\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2024-05-30\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2024-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2024-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2024-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2024-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2024-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2024-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2025-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2025-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2025-04-21\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2025-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2025-05-29\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2025-06-09\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2025-06-19\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2025-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2025-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2025-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2025-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2025-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2025-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2026-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2026-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2026-04-06\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2026-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2026-05-14\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2026-05-25\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2026-06-04\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2026-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2026-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2026-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2026-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2026-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2026-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2027-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2027-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2027-03-29\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2027-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2027-05-06\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2027-05-17\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2027-05-27\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2027-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2027-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2027-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2027-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2027-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2027-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2028-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2028-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2028-04-17\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2028-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2028-05-25\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2028-06-05\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2028-06-15\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2028-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2028-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2028-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2028-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2028-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2028-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2029-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2029-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2029-04-02\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2029-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2029-05-10\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2029-05-21\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2029-05-31\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2029-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2029-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2029-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2029-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2029-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2029-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2030-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2030-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2030-04-22\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2030-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2030-05-30\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2030-06-10\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2030-06-20\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2030-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2030-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2030-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2030-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2030-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2030-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2031-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2031-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2031-04-14\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2031-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2031-05-22\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2031-06-02\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2031-06-12\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2031-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2031-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2031-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2031-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2031-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2031-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2032-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2032-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2032-03-29\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2032-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2032-05-06\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2032-05-17\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2032-05-27\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2032-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2032-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2032-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2032-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2032-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2032-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2033-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2033-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2033-04-18\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2033-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2033-05-26\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2033-06-06\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2033-06-16\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2023-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2024-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2025-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2026-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2027-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2028-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2029-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2030-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2031-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2032-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2033-07-31\",\n                title: \"Reini Day\",\n            },\n        ],\n    },\n});\nconst base = new dynatrace.AutomationSchedulingRule(\"base\", {\n    businessCalendar: calendar.id,\n    title: \"#name#\",\n    recurrence: {\n        datestart: \"2023-07-31\",\n        daysInMonths: [-1],\n        daysInYears: [\n            -2,\n            -1,\n            1,\n            2,\n            3,\n        ],\n        frequency: \"WEEKLY\",\n        interval: 33,\n        months: [\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n        ],\n        weekdays: [\n            \"MO\",\n            \"TU\",\n            \"WE\",\n        ],\n        weeks: [\n            -2,\n            -1,\n            1,\n            2,\n            3,\n        ],\n        workdays: \"WORKING\",\n    },\n});\nconst source = new dynatrace.AutomationSchedulingRule(\"source\", {\n    businessCalendar: calendar.id,\n    title: \"#name#\",\n    recurrence: {\n        datestart: \"2023-07-31\",\n        daysInMonths: [-1],\n        daysInYears: [\n            -2,\n            -1,\n            1,\n            2,\n            3,\n        ],\n        frequency: \"WEEKLY\",\n        interval: 33,\n        months: [\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n        ],\n        weekdays: [\n            \"MO\",\n            \"TU\",\n            \"WE\",\n        ],\n        weeks: [\n            -2,\n            -1,\n            1,\n            2,\n            3,\n        ],\n        workdays: \"WORKING\",\n    },\n});\nconst target = new dynatrace.AutomationSchedulingRule(\"target\", {\n    title: \"#name#\",\n    fixedOffset: {\n        offset: 50,\n        rule: base.id,\n    },\n});\nconst _name_ = new dynatrace.AutomationSchedulingRule(\"#name#\", {\n    title: \"#name#\",\n    relativeOffset: {\n        direction: \"previous\",\n        sourceRule: source.id,\n        targetRule: target.id,\n    },\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\n\ncalendar = dynatrace.AutomationBusinessCalendar(\"calendar\",\n    description=\"#name#\",\n    title=\"#name#\",\n    valid_from=\"2023-07-31\",\n    valid_to=\"2033-07-31\",\n    week_days=[\n        1,\n        2,\n        3,\n        4,\n        5,\n    ],\n    week_start=1,\n    holidays=dynatrace.AutomationBusinessCalendarHolidaysArgs(\n        holidays=[\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-04-01\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-05-09\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-05-20\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-05-30\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-04-21\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-05-29\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-06-09\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-06-19\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-04-06\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-05-14\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-05-25\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-06-04\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-03-29\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-05-06\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-05-17\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-05-27\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-04-17\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-05-25\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-06-05\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-06-15\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-04-02\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-05-10\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-05-21\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-05-31\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-04-22\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-05-30\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-06-10\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-06-20\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-04-14\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-05-22\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-06-02\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-06-12\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-03-29\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-05-06\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-05-17\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-05-27\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-04-18\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-05-26\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-06-06\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-06-16\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-07-31\",\n                title=\"Reini Day\",\n            ),\n        ],\n    ))\nbase = dynatrace.AutomationSchedulingRule(\"base\",\n    business_calendar=calendar.id,\n    title=\"#name#\",\n    recurrence=dynatrace.AutomationSchedulingRuleRecurrenceArgs(\n        datestart=\"2023-07-31\",\n        days_in_months=[-1],\n        days_in_years=[\n            -2,\n            -1,\n            1,\n            2,\n            3,\n        ],\n        frequency=\"WEEKLY\",\n        interval=33,\n        months=[\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n        ],\n        weekdays=[\n            \"MO\",\n            \"TU\",\n            \"WE\",\n        ],\n        weeks=[\n            -2,\n            -1,\n            1,\n            2,\n            3,\n        ],\n        workdays=\"WORKING\",\n    ))\nsource = dynatrace.AutomationSchedulingRule(\"source\",\n    business_calendar=calendar.id,\n    title=\"#name#\",\n    recurrence=dynatrace.AutomationSchedulingRuleRecurrenceArgs(\n        datestart=\"2023-07-31\",\n        days_in_months=[-1],\n        days_in_years=[\n            -2,\n            -1,\n            1,\n            2,\n            3,\n        ],\n        frequency=\"WEEKLY\",\n        interval=33,\n        months=[\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n        ],\n        weekdays=[\n            \"MO\",\n            \"TU\",\n            \"WE\",\n        ],\n        weeks=[\n            -2,\n            -1,\n            1,\n            2,\n            3,\n        ],\n        workdays=\"WORKING\",\n    ))\ntarget = dynatrace.AutomationSchedulingRule(\"target\",\n    title=\"#name#\",\n    fixed_offset=dynatrace.AutomationSchedulingRuleFixedOffsetArgs(\n        offset=50,\n        rule=base.id,\n    ))\n_name_ = dynatrace.AutomationSchedulingRule(\"#name#\",\n    title=\"#name#\",\n    relative_offset=dynatrace.AutomationSchedulingRuleRelativeOffsetArgs(\n        direction=\"previous\",\n        source_rule=source.id,\n        target_rule=target.id,\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var calendar = new Dynatrace.AutomationBusinessCalendar(\"calendar\", new()\n    {\n        Description = \"#name#\",\n        Title = \"#name#\",\n        ValidFrom = \"2023-07-31\",\n        ValidTo = \"2033-07-31\",\n        WeekDays = new[]\n        {\n            1,\n            2,\n            3,\n            4,\n            5,\n        },\n        WeekStart = 1,\n        Holidays = new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysArgs\n        {\n            Holidays = new[]\n            {\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-04-01\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-05-09\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-05-20\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-05-30\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-04-21\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-05-29\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-06-09\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-06-19\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-04-06\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-05-14\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-05-25\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-06-04\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-03-29\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-05-06\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-05-17\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-05-27\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-04-17\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-05-25\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-06-05\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-06-15\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-04-02\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-05-10\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-05-21\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-05-31\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-04-22\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-05-30\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-06-10\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-06-20\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-04-14\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-05-22\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-06-02\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-06-12\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-03-29\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-05-06\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-05-17\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-05-27\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-04-18\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-05-26\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-06-06\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-06-16\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-07-31\",\n                    Title = \"Reini Day\",\n                },\n            },\n        },\n    });\n\n    var @base = new Dynatrace.AutomationSchedulingRule(\"base\", new()\n    {\n        BusinessCalendar = calendar.Id,\n        Title = \"#name#\",\n        Recurrence = new Dynatrace.Inputs.AutomationSchedulingRuleRecurrenceArgs\n        {\n            Datestart = \"2023-07-31\",\n            DaysInMonths = new[]\n            {\n                -1,\n            },\n            DaysInYears = new[]\n            {\n                -2,\n                -1,\n                1,\n                2,\n                3,\n            },\n            Frequency = \"WEEKLY\",\n            Interval = 33,\n            Months = new[]\n            {\n                1,\n                2,\n                3,\n                4,\n                5,\n                6,\n                7,\n                8,\n                9,\n                10,\n                11,\n                12,\n            },\n            Weekdays = new[]\n            {\n                \"MO\",\n                \"TU\",\n                \"WE\",\n            },\n            Weeks = new[]\n            {\n                -2,\n                -1,\n                1,\n                2,\n                3,\n            },\n            Workdays = \"WORKING\",\n        },\n    });\n\n    var source = new Dynatrace.AutomationSchedulingRule(\"source\", new()\n    {\n        BusinessCalendar = calendar.Id,\n        Title = \"#name#\",\n        Recurrence = new Dynatrace.Inputs.AutomationSchedulingRuleRecurrenceArgs\n        {\n            Datestart = \"2023-07-31\",\n            DaysInMonths = new[]\n            {\n                -1,\n            },\n            DaysInYears = new[]\n            {\n                -2,\n                -1,\n                1,\n                2,\n                3,\n            },\n            Frequency = \"WEEKLY\",\n            Interval = 33,\n            Months = new[]\n            {\n                1,\n                2,\n                3,\n                4,\n                5,\n                6,\n                7,\n                8,\n                9,\n                10,\n                11,\n                12,\n            },\n            Weekdays = new[]\n            {\n                \"MO\",\n                \"TU\",\n                \"WE\",\n            },\n            Weeks = new[]\n            {\n                -2,\n                -1,\n                1,\n                2,\n                3,\n            },\n            Workdays = \"WORKING\",\n        },\n    });\n\n    var target = new Dynatrace.AutomationSchedulingRule(\"target\", new()\n    {\n        Title = \"#name#\",\n        FixedOffset = new Dynatrace.Inputs.AutomationSchedulingRuleFixedOffsetArgs\n        {\n            Offset = 50,\n            Rule = @base.Id,\n        },\n    });\n\n    var _name_ = new Dynatrace.AutomationSchedulingRule(\"#name#\", new()\n    {\n        Title = \"#name#\",\n        RelativeOffset = new Dynatrace.Inputs.AutomationSchedulingRuleRelativeOffsetArgs\n        {\n            Direction = \"previous\",\n            SourceRule = source.Id,\n            TargetRule = target.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tcalendar, err := dynatrace.NewAutomationBusinessCalendar(ctx, \"calendar\", \u0026dynatrace.AutomationBusinessCalendarArgs{\n\t\t\tDescription: pulumi.String(\"#name#\"),\n\t\t\tTitle:       pulumi.String(\"#name#\"),\n\t\t\tValidFrom:   pulumi.String(\"2023-07-31\"),\n\t\t\tValidTo:     pulumi.String(\"2033-07-31\"),\n\t\t\tWeekDays: pulumi.IntArray{\n\t\t\t\tpulumi.Int(1),\n\t\t\t\tpulumi.Int(2),\n\t\t\t\tpulumi.Int(3),\n\t\t\t\tpulumi.Int(4),\n\t\t\t\tpulumi.Int(5),\n\t\t\t},\n\t\t\tWeekStart: pulumi.Int(1),\n\t\t\tHolidays: \u0026dynatrace.AutomationBusinessCalendarHolidaysArgs{\n\t\t\t\tHolidays: dynatrace.AutomationBusinessCalendarHolidaysHolidayArray{\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-04-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-05-09\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-05-20\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-05-30\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-04-21\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-05-29\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-06-09\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-06-19\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-04-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-05-14\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-05-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-06-04\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-03-29\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-05-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-05-17\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-05-27\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-04-17\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-05-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-06-05\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-06-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-04-02\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-05-10\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-05-21\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-05-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-04-22\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-05-30\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-06-10\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-06-20\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-04-14\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-05-22\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-06-02\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-06-12\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-03-29\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-05-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-05-17\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-05-27\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-04-18\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-05-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-06-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-06-16\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tbase, err := dynatrace.NewAutomationSchedulingRule(ctx, \"base\", \u0026dynatrace.AutomationSchedulingRuleArgs{\n\t\t\tBusinessCalendar: calendar.ID(),\n\t\t\tTitle:            pulumi.String(\"#name#\"),\n\t\t\tRecurrence: \u0026dynatrace.AutomationSchedulingRuleRecurrenceArgs{\n\t\t\t\tDatestart: pulumi.String(\"2023-07-31\"),\n\t\t\t\tDaysInMonths: pulumi.IntArray{\n\t\t\t\t\t-1,\n\t\t\t\t},\n\t\t\t\tDaysInYears: pulumi.IntArray{\n\t\t\t\t\t-2,\n\t\t\t\t\t-1,\n\t\t\t\t\tpulumi.Int(1),\n\t\t\t\t\tpulumi.Int(2),\n\t\t\t\t\tpulumi.Int(3),\n\t\t\t\t},\n\t\t\t\tFrequency: pulumi.String(\"WEEKLY\"),\n\t\t\t\tInterval:  pulumi.Int(33),\n\t\t\t\tMonths: pulumi.IntArray{\n\t\t\t\t\tpulumi.Int(1),\n\t\t\t\t\tpulumi.Int(2),\n\t\t\t\t\tpulumi.Int(3),\n\t\t\t\t\tpulumi.Int(4),\n\t\t\t\t\tpulumi.Int(5),\n\t\t\t\t\tpulumi.Int(6),\n\t\t\t\t\tpulumi.Int(7),\n\t\t\t\t\tpulumi.Int(8),\n\t\t\t\t\tpulumi.Int(9),\n\t\t\t\t\tpulumi.Int(10),\n\t\t\t\t\tpulumi.Int(11),\n\t\t\t\t\tpulumi.Int(12),\n\t\t\t\t},\n\t\t\t\tWeekdays: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"MO\"),\n\t\t\t\t\tpulumi.String(\"TU\"),\n\t\t\t\t\tpulumi.String(\"WE\"),\n\t\t\t\t},\n\t\t\t\tWeeks: pulumi.IntArray{\n\t\t\t\t\t-2,\n\t\t\t\t\t-1,\n\t\t\t\t\tpulumi.Int(1),\n\t\t\t\t\tpulumi.Int(2),\n\t\t\t\t\tpulumi.Int(3),\n\t\t\t\t},\n\t\t\t\tWorkdays: pulumi.String(\"WORKING\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tsource, err := dynatrace.NewAutomationSchedulingRule(ctx, \"source\", \u0026dynatrace.AutomationSchedulingRuleArgs{\n\t\t\tBusinessCalendar: calendar.ID(),\n\t\t\tTitle:            pulumi.String(\"#name#\"),\n\t\t\tRecurrence: \u0026dynatrace.AutomationSchedulingRuleRecurrenceArgs{\n\t\t\t\tDatestart: pulumi.String(\"2023-07-31\"),\n\t\t\t\tDaysInMonths: pulumi.IntArray{\n\t\t\t\t\t-1,\n\t\t\t\t},\n\t\t\t\tDaysInYears: pulumi.IntArray{\n\t\t\t\t\t-2,\n\t\t\t\t\t-1,\n\t\t\t\t\tpulumi.Int(1),\n\t\t\t\t\tpulumi.Int(2),\n\t\t\t\t\tpulumi.Int(3),\n\t\t\t\t},\n\t\t\t\tFrequency: pulumi.String(\"WEEKLY\"),\n\t\t\t\tInterval:  pulumi.Int(33),\n\t\t\t\tMonths: pulumi.IntArray{\n\t\t\t\t\tpulumi.Int(1),\n\t\t\t\t\tpulumi.Int(2),\n\t\t\t\t\tpulumi.Int(3),\n\t\t\t\t\tpulumi.Int(4),\n\t\t\t\t\tpulumi.Int(5),\n\t\t\t\t\tpulumi.Int(6),\n\t\t\t\t\tpulumi.Int(7),\n\t\t\t\t\tpulumi.Int(8),\n\t\t\t\t\tpulumi.Int(9),\n\t\t\t\t\tpulumi.Int(10),\n\t\t\t\t\tpulumi.Int(11),\n\t\t\t\t\tpulumi.Int(12),\n\t\t\t\t},\n\t\t\t\tWeekdays: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"MO\"),\n\t\t\t\t\tpulumi.String(\"TU\"),\n\t\t\t\t\tpulumi.String(\"WE\"),\n\t\t\t\t},\n\t\t\t\tWeeks: pulumi.IntArray{\n\t\t\t\t\t-2,\n\t\t\t\t\t-1,\n\t\t\t\t\tpulumi.Int(1),\n\t\t\t\t\tpulumi.Int(2),\n\t\t\t\t\tpulumi.Int(3),\n\t\t\t\t},\n\t\t\t\tWorkdays: pulumi.String(\"WORKING\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttarget, err := dynatrace.NewAutomationSchedulingRule(ctx, \"target\", \u0026dynatrace.AutomationSchedulingRuleArgs{\n\t\t\tTitle: pulumi.String(\"#name#\"),\n\t\t\tFixedOffset: \u0026dynatrace.AutomationSchedulingRuleFixedOffsetArgs{\n\t\t\t\tOffset: pulumi.Int(50),\n\t\t\t\tRule:   base.ID(),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dynatrace.NewAutomationSchedulingRule(ctx, \"#name#\", \u0026dynatrace.AutomationSchedulingRuleArgs{\n\t\t\tTitle: pulumi.String(\"#name#\"),\n\t\t\tRelativeOffset: \u0026dynatrace.AutomationSchedulingRuleRelativeOffsetArgs{\n\t\t\t\tDirection:  pulumi.String(\"previous\"),\n\t\t\t\tSourceRule: source.ID(),\n\t\t\t\tTargetRule: target.ID(),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n\n### Grouping Rule\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\n\nconst calendar = new dynatrace.AutomationBusinessCalendar(\"calendar\", {\n    description: \"#name#\",\n    title: \"#name#\",\n    validFrom: \"2023-07-31\",\n    validTo: \"2033-07-31\",\n    weekDays: [\n        1,\n        2,\n        3,\n        4,\n        5,\n    ],\n    weekStart: 1,\n    holidays: {\n        holidays: [\n            {\n                date: \"2023-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2023-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2023-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2023-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2023-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2023-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2024-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2024-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2024-04-01\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2024-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2024-05-09\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2024-05-20\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2024-05-30\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2024-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2024-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2024-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2024-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2024-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2024-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2025-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2025-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2025-04-21\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2025-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2025-05-29\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2025-06-09\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2025-06-19\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2025-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2025-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2025-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2025-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2025-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2025-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2026-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2026-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2026-04-06\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2026-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2026-05-14\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2026-05-25\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2026-06-04\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2026-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2026-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2026-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2026-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2026-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2026-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2027-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2027-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2027-03-29\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2027-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2027-05-06\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2027-05-17\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2027-05-27\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2027-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2027-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2027-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2027-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2027-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2027-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2028-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2028-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2028-04-17\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2028-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2028-05-25\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2028-06-05\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2028-06-15\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2028-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2028-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2028-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2028-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2028-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2028-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2029-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2029-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2029-04-02\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2029-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2029-05-10\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2029-05-21\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2029-05-31\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2029-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2029-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2029-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2029-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2029-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2029-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2030-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2030-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2030-04-22\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2030-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2030-05-30\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2030-06-10\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2030-06-20\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2030-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2030-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2030-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2030-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2030-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2030-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2031-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2031-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2031-04-14\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2031-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2031-05-22\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2031-06-02\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2031-06-12\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2031-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2031-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2031-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2031-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2031-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2031-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2032-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2032-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2032-03-29\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2032-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2032-05-06\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2032-05-17\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2032-05-27\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2032-08-15\",\n                title: \"Mariä Himmelfahrt\",\n            },\n            {\n                date: \"2032-10-26\",\n                title: \"Nationalfeiertag\",\n            },\n            {\n                date: \"2032-11-01\",\n                title: \"Allerheiligen\",\n            },\n            {\n                date: \"2032-12-08\",\n                title: \"Mariä Empfängnis\",\n            },\n            {\n                date: \"2032-12-25\",\n                title: \"Christtag\",\n            },\n            {\n                date: \"2032-12-26\",\n                title: \"Stefanitag\",\n            },\n            {\n                date: \"2033-01-01\",\n                title: \"Neujahr\",\n            },\n            {\n                date: \"2033-01-06\",\n                title: \"Heilige Drei Könige\",\n            },\n            {\n                date: \"2033-04-18\",\n                title: \"Ostermontag\",\n            },\n            {\n                date: \"2033-05-01\",\n                title: \"Staatsfeiertag\",\n            },\n            {\n                date: \"2033-05-26\",\n                title: \"Christi Himmelfahrt\",\n            },\n            {\n                date: \"2033-06-06\",\n                title: \"Pfingstmontag\",\n            },\n            {\n                date: \"2033-06-16\",\n                title: \"Fronleichnam\",\n            },\n            {\n                date: \"2023-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2024-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2025-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2026-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2027-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2028-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2029-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2030-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2031-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2032-07-31\",\n                title: \"Reini Day\",\n            },\n            {\n                date: \"2033-07-31\",\n                title: \"Reini Day\",\n            },\n        ],\n    },\n});\nconst subtract = new dynatrace.AutomationSchedulingRule(\"subtract\", {\n    businessCalendar: calendar.id,\n    title: \"#name#\",\n    recurrence: {\n        datestart: \"2029-07-31\",\n        frequency: \"DAILY\",\n        interval: 1,\n        workdays: \"WORKING\",\n    },\n});\nconst comba = new dynatrace.AutomationSchedulingRule(\"comba\", {\n    businessCalendar: calendar.id,\n    title: \"#name#\",\n    recurrence: {\n        datestart: \"2023-07-31\",\n        frequency: \"DAILY\",\n        interval: 1,\n        workdays: \"WORKING\",\n    },\n});\nconst combb = new dynatrace.AutomationSchedulingRule(\"combb\", {\n    businessCalendar: calendar.id,\n    title: \"#name#\",\n    recurrence: {\n        datestart: \"2023-07-31\",\n        frequency: \"DAILY\",\n        interval: 1,\n        workdays: \"WORKING\",\n    },\n});\nconst intersect = new dynatrace.AutomationSchedulingRule(\"intersect\", {\n    businessCalendar: calendar.id,\n    title: \"#name#\",\n    recurrence: {\n        datestart: \"2023-07-31\",\n        frequency: \"DAILY\",\n        interval: 1,\n        workdays: \"WORKING\",\n    },\n});\nconst _name_ = new dynatrace.AutomationSchedulingRule(\"#name#\", {\n    title: \"#name#\",\n    grouping: {\n        combines: [\n            comba.id,\n            combb.id,\n        ],\n        intersects: [intersect.id],\n        subtracts: [subtract.id],\n    },\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\n\ncalendar = dynatrace.AutomationBusinessCalendar(\"calendar\",\n    description=\"#name#\",\n    title=\"#name#\",\n    valid_from=\"2023-07-31\",\n    valid_to=\"2033-07-31\",\n    week_days=[\n        1,\n        2,\n        3,\n        4,\n        5,\n    ],\n    week_start=1,\n    holidays=dynatrace.AutomationBusinessCalendarHolidaysArgs(\n        holidays=[\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-04-01\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-05-09\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-05-20\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-05-30\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-04-21\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-05-29\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-06-09\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-06-19\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-04-06\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-05-14\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-05-25\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-06-04\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-03-29\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-05-06\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-05-17\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-05-27\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-04-17\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-05-25\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-06-05\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-06-15\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-04-02\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-05-10\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-05-21\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-05-31\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-04-22\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-05-30\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-06-10\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-06-20\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-04-14\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-05-22\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-06-02\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-06-12\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-03-29\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-05-06\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-05-17\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-05-27\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-08-15\",\n                title=\"Mariä Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-10-26\",\n                title=\"Nationalfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-11-01\",\n                title=\"Allerheiligen\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-12-08\",\n                title=\"Mariä Empfängnis\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-12-25\",\n                title=\"Christtag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-12-26\",\n                title=\"Stefanitag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-01-01\",\n                title=\"Neujahr\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-01-06\",\n                title=\"Heilige Drei Könige\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-04-18\",\n                title=\"Ostermontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-05-01\",\n                title=\"Staatsfeiertag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-05-26\",\n                title=\"Christi Himmelfahrt\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-06-06\",\n                title=\"Pfingstmontag\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-06-16\",\n                title=\"Fronleichnam\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2023-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2024-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2025-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2026-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2027-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2028-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2029-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2030-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2031-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2032-07-31\",\n                title=\"Reini Day\",\n            ),\n            dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs(\n                date=\"2033-07-31\",\n                title=\"Reini Day\",\n            ),\n        ],\n    ))\nsubtract = dynatrace.AutomationSchedulingRule(\"subtract\",\n    business_calendar=calendar.id,\n    title=\"#name#\",\n    recurrence=dynatrace.AutomationSchedulingRuleRecurrenceArgs(\n        datestart=\"2029-07-31\",\n        frequency=\"DAILY\",\n        interval=1,\n        workdays=\"WORKING\",\n    ))\ncomba = dynatrace.AutomationSchedulingRule(\"comba\",\n    business_calendar=calendar.id,\n    title=\"#name#\",\n    recurrence=dynatrace.AutomationSchedulingRuleRecurrenceArgs(\n        datestart=\"2023-07-31\",\n        frequency=\"DAILY\",\n        interval=1,\n        workdays=\"WORKING\",\n    ))\ncombb = dynatrace.AutomationSchedulingRule(\"combb\",\n    business_calendar=calendar.id,\n    title=\"#name#\",\n    recurrence=dynatrace.AutomationSchedulingRuleRecurrenceArgs(\n        datestart=\"2023-07-31\",\n        frequency=\"DAILY\",\n        interval=1,\n        workdays=\"WORKING\",\n    ))\nintersect = dynatrace.AutomationSchedulingRule(\"intersect\",\n    business_calendar=calendar.id,\n    title=\"#name#\",\n    recurrence=dynatrace.AutomationSchedulingRuleRecurrenceArgs(\n        datestart=\"2023-07-31\",\n        frequency=\"DAILY\",\n        interval=1,\n        workdays=\"WORKING\",\n    ))\n_name_ = dynatrace.AutomationSchedulingRule(\"#name#\",\n    title=\"#name#\",\n    grouping=dynatrace.AutomationSchedulingRuleGroupingArgs(\n        combines=[\n            comba.id,\n            combb.id,\n        ],\n        intersects=[intersect.id],\n        subtracts=[subtract.id],\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var calendar = new Dynatrace.AutomationBusinessCalendar(\"calendar\", new()\n    {\n        Description = \"#name#\",\n        Title = \"#name#\",\n        ValidFrom = \"2023-07-31\",\n        ValidTo = \"2033-07-31\",\n        WeekDays = new[]\n        {\n            1,\n            2,\n            3,\n            4,\n            5,\n        },\n        WeekStart = 1,\n        Holidays = new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysArgs\n        {\n            Holidays = new[]\n            {\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-04-01\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-05-09\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-05-20\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-05-30\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-04-21\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-05-29\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-06-09\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-06-19\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-04-06\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-05-14\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-05-25\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-06-04\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-03-29\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-05-06\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-05-17\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-05-27\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-04-17\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-05-25\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-06-05\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-06-15\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-04-02\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-05-10\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-05-21\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-05-31\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-04-22\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-05-30\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-06-10\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-06-20\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-04-14\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-05-22\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-06-02\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-06-12\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-03-29\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-05-06\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-05-17\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-05-27\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-08-15\",\n                    Title = \"Mariä Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-10-26\",\n                    Title = \"Nationalfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-11-01\",\n                    Title = \"Allerheiligen\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-12-08\",\n                    Title = \"Mariä Empfängnis\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-12-25\",\n                    Title = \"Christtag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-12-26\",\n                    Title = \"Stefanitag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-01-01\",\n                    Title = \"Neujahr\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-01-06\",\n                    Title = \"Heilige Drei Könige\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-04-18\",\n                    Title = \"Ostermontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-05-01\",\n                    Title = \"Staatsfeiertag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-05-26\",\n                    Title = \"Christi Himmelfahrt\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-06-06\",\n                    Title = \"Pfingstmontag\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-06-16\",\n                    Title = \"Fronleichnam\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2023-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2024-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2025-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2026-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2027-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2028-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2029-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2030-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2031-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2032-07-31\",\n                    Title = \"Reini Day\",\n                },\n                new Dynatrace.Inputs.AutomationBusinessCalendarHolidaysHolidayArgs\n                {\n                    Date = \"2033-07-31\",\n                    Title = \"Reini Day\",\n                },\n            },\n        },\n    });\n\n    var subtract = new Dynatrace.AutomationSchedulingRule(\"subtract\", new()\n    {\n        BusinessCalendar = calendar.Id,\n        Title = \"#name#\",\n        Recurrence = new Dynatrace.Inputs.AutomationSchedulingRuleRecurrenceArgs\n        {\n            Datestart = \"2029-07-31\",\n            Frequency = \"DAILY\",\n            Interval = 1,\n            Workdays = \"WORKING\",\n        },\n    });\n\n    var comba = new Dynatrace.AutomationSchedulingRule(\"comba\", new()\n    {\n        BusinessCalendar = calendar.Id,\n        Title = \"#name#\",\n        Recurrence = new Dynatrace.Inputs.AutomationSchedulingRuleRecurrenceArgs\n        {\n            Datestart = \"2023-07-31\",\n            Frequency = \"DAILY\",\n            Interval = 1,\n            Workdays = \"WORKING\",\n        },\n    });\n\n    var combb = new Dynatrace.AutomationSchedulingRule(\"combb\", new()\n    {\n        BusinessCalendar = calendar.Id,\n        Title = \"#name#\",\n        Recurrence = new Dynatrace.Inputs.AutomationSchedulingRuleRecurrenceArgs\n        {\n            Datestart = \"2023-07-31\",\n            Frequency = \"DAILY\",\n            Interval = 1,\n            Workdays = \"WORKING\",\n        },\n    });\n\n    var intersect = new Dynatrace.AutomationSchedulingRule(\"intersect\", new()\n    {\n        BusinessCalendar = calendar.Id,\n        Title = \"#name#\",\n        Recurrence = new Dynatrace.Inputs.AutomationSchedulingRuleRecurrenceArgs\n        {\n            Datestart = \"2023-07-31\",\n            Frequency = \"DAILY\",\n            Interval = 1,\n            Workdays = \"WORKING\",\n        },\n    });\n\n    var _name_ = new Dynatrace.AutomationSchedulingRule(\"#name#\", new()\n    {\n        Title = \"#name#\",\n        Grouping = new Dynatrace.Inputs.AutomationSchedulingRuleGroupingArgs\n        {\n            Combines = new[]\n            {\n                comba.Id,\n                combb.Id,\n            },\n            Intersects = new[]\n            {\n                intersect.Id,\n            },\n            Subtracts = new[]\n            {\n                subtract.Id,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tcalendar, err := dynatrace.NewAutomationBusinessCalendar(ctx, \"calendar\", \u0026dynatrace.AutomationBusinessCalendarArgs{\n\t\t\tDescription: pulumi.String(\"#name#\"),\n\t\t\tTitle:       pulumi.String(\"#name#\"),\n\t\t\tValidFrom:   pulumi.String(\"2023-07-31\"),\n\t\t\tValidTo:     pulumi.String(\"2033-07-31\"),\n\t\t\tWeekDays: pulumi.IntArray{\n\t\t\t\tpulumi.Int(1),\n\t\t\t\tpulumi.Int(2),\n\t\t\t\tpulumi.Int(3),\n\t\t\t\tpulumi.Int(4),\n\t\t\t\tpulumi.Int(5),\n\t\t\t},\n\t\t\tWeekStart: pulumi.Int(1),\n\t\t\tHolidays: \u0026dynatrace.AutomationBusinessCalendarHolidaysArgs{\n\t\t\t\tHolidays: dynatrace.AutomationBusinessCalendarHolidaysHolidayArray{\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-04-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-05-09\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-05-20\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-05-30\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-04-21\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-05-29\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-06-09\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-06-19\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-04-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-05-14\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-05-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-06-04\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-03-29\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-05-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-05-17\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-05-27\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-04-17\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-05-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-06-05\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-06-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-04-02\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-05-10\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-05-21\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-05-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-04-22\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-05-30\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-06-10\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-06-20\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-04-14\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-05-22\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-06-02\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-06-12\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-03-29\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-05-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-05-17\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-05-27\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-08-15\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-10-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Nationalfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-11-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Allerheiligen\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-12-08\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Mariä Empfängnis\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-12-25\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christtag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-12-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Stefanitag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-01-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Neujahr\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-01-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Heilige Drei Könige\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-04-18\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Ostermontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-05-01\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Staatsfeiertag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-05-26\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Christi Himmelfahrt\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-06-06\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Pfingstmontag\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-06-16\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Fronleichnam\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2023-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2024-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2025-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2026-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2027-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2028-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2029-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2030-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2031-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2032-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{\n\t\t\t\t\t\tDate:  pulumi.String(\"2033-07-31\"),\n\t\t\t\t\t\tTitle: pulumi.String(\"Reini Day\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tsubtract, err := dynatrace.NewAutomationSchedulingRule(ctx, \"subtract\", \u0026dynatrace.AutomationSchedulingRuleArgs{\n\t\t\tBusinessCalendar: calendar.ID(),\n\t\t\tTitle:            pulumi.String(\"#name#\"),\n\t\t\tRecurrence: \u0026dynatrace.AutomationSchedulingRuleRecurrenceArgs{\n\t\t\t\tDatestart: pulumi.String(\"2029-07-31\"),\n\t\t\t\tFrequency: pulumi.String(\"DAILY\"),\n\t\t\t\tInterval:  pulumi.Int(1),\n\t\t\t\tWorkdays:  pulumi.String(\"WORKING\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tcomba, err := dynatrace.NewAutomationSchedulingRule(ctx, \"comba\", \u0026dynatrace.AutomationSchedulingRuleArgs{\n\t\t\tBusinessCalendar: calendar.ID(),\n\t\t\tTitle:            pulumi.String(\"#name#\"),\n\t\t\tRecurrence: \u0026dynatrace.AutomationSchedulingRuleRecurrenceArgs{\n\t\t\t\tDatestart: pulumi.String(\"2023-07-31\"),\n\t\t\t\tFrequency: pulumi.String(\"DAILY\"),\n\t\t\t\tInterval:  pulumi.Int(1),\n\t\t\t\tWorkdays:  pulumi.String(\"WORKING\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tcombb, err := dynatrace.NewAutomationSchedulingRule(ctx, \"combb\", \u0026dynatrace.AutomationSchedulingRuleArgs{\n\t\t\tBusinessCalendar: calendar.ID(),\n\t\t\tTitle:            pulumi.String(\"#name#\"),\n\t\t\tRecurrence: \u0026dynatrace.AutomationSchedulingRuleRecurrenceArgs{\n\t\t\t\tDatestart: pulumi.String(\"2023-07-31\"),\n\t\t\t\tFrequency: pulumi.String(\"DAILY\"),\n\t\t\t\tInterval:  pulumi.Int(1),\n\t\t\t\tWorkdays:  pulumi.String(\"WORKING\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tintersect, err := dynatrace.NewAutomationSchedulingRule(ctx, \"intersect\", \u0026dynatrace.AutomationSchedulingRuleArgs{\n\t\t\tBusinessCalendar: calendar.ID(),\n\t\t\tTitle:            pulumi.String(\"#name#\"),\n\t\t\tRecurrence: \u0026dynatrace.AutomationSchedulingRuleRecurrenceArgs{\n\t\t\t\tDatestart: pulumi.String(\"2023-07-31\"),\n\t\t\t\tFrequency: pulumi.String(\"DAILY\"),\n\t\t\t\tInterval:  pulumi.Int(1),\n\t\t\t\tWorkdays:  pulumi.String(\"WORKING\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dynatrace.NewAutomationSchedulingRule(ctx, \"#name#\", \u0026dynatrace.AutomationSchedulingRuleArgs{\n\t\t\tTitle: pulumi.String(\"#name#\"),\n\t\t\tGrouping: \u0026dynatrace.AutomationSchedulingRuleGroupingArgs{\n\t\t\t\tCombines: pulumi.StringArray{\n\t\t\t\t\tcomba.ID(),\n\t\t\t\t\tcombb.ID(),\n\t\t\t\t},\n\t\t\t\tIntersects: pulumi.StringArray{\n\t\t\t\t\tintersect.ID(),\n\t\t\t\t},\n\t\t\t\tSubtracts: pulumi.StringArray{\n\t\t\t\t\tsubtract.ID(),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.AutomationBusinessCalendar;\nimport com.pulumi.dynatrace.AutomationBusinessCalendarArgs;\nimport com.pulumi.dynatrace.inputs.AutomationBusinessCalendarHolidaysArgs;\nimport com.pulumi.dynatrace.AutomationSchedulingRule;\nimport com.pulumi.dynatrace.AutomationSchedulingRuleArgs;\nimport com.pulumi.dynatrace.inputs.AutomationSchedulingRuleRecurrenceArgs;\nimport com.pulumi.dynatrace.inputs.AutomationSchedulingRuleGroupingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var calendar = new AutomationBusinessCalendar(\"calendar\", AutomationBusinessCalendarArgs.builder()        \n            .description(\"#name#\")\n            .title(\"#name#\")\n            .validFrom(\"2023-07-31\")\n            .validTo(\"2033-07-31\")\n            .weekDays(            \n                1,\n                2,\n                3,\n                4,\n                5)\n            .weekStart(1)\n            .holidays(AutomationBusinessCalendarHolidaysArgs.builder()\n                .holidays(                \n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2023-08-15\")\n                        .title(\"Mariä Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2023-10-26\")\n                        .title(\"Nationalfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2023-11-01\")\n                        .title(\"Allerheiligen\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2023-12-08\")\n                        .title(\"Mariä Empfängnis\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2023-12-25\")\n                        .title(\"Christtag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2023-12-26\")\n                        .title(\"Stefanitag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-01-01\")\n                        .title(\"Neujahr\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-01-06\")\n                        .title(\"Heilige Drei Könige\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-04-01\")\n                        .title(\"Ostermontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-05-01\")\n                        .title(\"Staatsfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-05-09\")\n                        .title(\"Christi Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-05-20\")\n                        .title(\"Pfingstmontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-05-30\")\n                        .title(\"Fronleichnam\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-08-15\")\n                        .title(\"Mariä Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-10-26\")\n                        .title(\"Nationalfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-11-01\")\n                        .title(\"Allerheiligen\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-12-08\")\n                        .title(\"Mariä Empfängnis\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-12-25\")\n                        .title(\"Christtag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-12-26\")\n                        .title(\"Stefanitag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-01-01\")\n                        .title(\"Neujahr\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-01-06\")\n                        .title(\"Heilige Drei Könige\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-04-21\")\n                        .title(\"Ostermontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-05-01\")\n                        .title(\"Staatsfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-05-29\")\n                        .title(\"Christi Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-06-09\")\n                        .title(\"Pfingstmontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-06-19\")\n                        .title(\"Fronleichnam\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-08-15\")\n                        .title(\"Mariä Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-10-26\")\n                        .title(\"Nationalfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-11-01\")\n                        .title(\"Allerheiligen\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-12-08\")\n                        .title(\"Mariä Empfängnis\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-12-25\")\n                        .title(\"Christtag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-12-26\")\n                        .title(\"Stefanitag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-01-01\")\n                        .title(\"Neujahr\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-01-06\")\n                        .title(\"Heilige Drei Könige\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-04-06\")\n                        .title(\"Ostermontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-05-01\")\n                        .title(\"Staatsfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-05-14\")\n                        .title(\"Christi Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-05-25\")\n                        .title(\"Pfingstmontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-06-04\")\n                        .title(\"Fronleichnam\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-08-15\")\n                        .title(\"Mariä Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-10-26\")\n                        .title(\"Nationalfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-11-01\")\n                        .title(\"Allerheiligen\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-12-08\")\n                        .title(\"Mariä Empfängnis\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-12-25\")\n                        .title(\"Christtag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-12-26\")\n                        .title(\"Stefanitag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-01-01\")\n                        .title(\"Neujahr\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-01-06\")\n                        .title(\"Heilige Drei Könige\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-03-29\")\n                        .title(\"Ostermontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-05-01\")\n                        .title(\"Staatsfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-05-06\")\n                        .title(\"Christi Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-05-17\")\n                        .title(\"Pfingstmontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-05-27\")\n                        .title(\"Fronleichnam\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-08-15\")\n                        .title(\"Mariä Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-10-26\")\n                        .title(\"Nationalfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-11-01\")\n                        .title(\"Allerheiligen\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-12-08\")\n                        .title(\"Mariä Empfängnis\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-12-25\")\n                        .title(\"Christtag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-12-26\")\n                        .title(\"Stefanitag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-01-01\")\n                        .title(\"Neujahr\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-01-06\")\n                        .title(\"Heilige Drei Könige\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-04-17\")\n                        .title(\"Ostermontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-05-01\")\n                        .title(\"Staatsfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-05-25\")\n                        .title(\"Christi Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-06-05\")\n                        .title(\"Pfingstmontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-06-15\")\n                        .title(\"Fronleichnam\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-08-15\")\n                        .title(\"Mariä Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-10-26\")\n                        .title(\"Nationalfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-11-01\")\n                        .title(\"Allerheiligen\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-12-08\")\n                        .title(\"Mariä Empfängnis\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-12-25\")\n                        .title(\"Christtag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-12-26\")\n                        .title(\"Stefanitag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-01-01\")\n                        .title(\"Neujahr\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-01-06\")\n                        .title(\"Heilige Drei Könige\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-04-02\")\n                        .title(\"Ostermontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-05-01\")\n                        .title(\"Staatsfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-05-10\")\n                        .title(\"Christi Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-05-21\")\n                        .title(\"Pfingstmontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-05-31\")\n                        .title(\"Fronleichnam\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-08-15\")\n                        .title(\"Mariä Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-10-26\")\n                        .title(\"Nationalfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-11-01\")\n                        .title(\"Allerheiligen\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-12-08\")\n                        .title(\"Mariä Empfängnis\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-12-25\")\n                        .title(\"Christtag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-12-26\")\n                        .title(\"Stefanitag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-01-01\")\n                        .title(\"Neujahr\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-01-06\")\n                        .title(\"Heilige Drei Könige\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-04-22\")\n                        .title(\"Ostermontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-05-01\")\n                        .title(\"Staatsfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-05-30\")\n                        .title(\"Christi Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-06-10\")\n                        .title(\"Pfingstmontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-06-20\")\n                        .title(\"Fronleichnam\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-08-15\")\n                        .title(\"Mariä Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-10-26\")\n                        .title(\"Nationalfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-11-01\")\n                        .title(\"Allerheiligen\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-12-08\")\n                        .title(\"Mariä Empfängnis\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-12-25\")\n                        .title(\"Christtag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-12-26\")\n                        .title(\"Stefanitag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-01-01\")\n                        .title(\"Neujahr\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-01-06\")\n                        .title(\"Heilige Drei Könige\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-04-14\")\n                        .title(\"Ostermontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-05-01\")\n                        .title(\"Staatsfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-05-22\")\n                        .title(\"Christi Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-06-02\")\n                        .title(\"Pfingstmontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-06-12\")\n                        .title(\"Fronleichnam\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-08-15\")\n                        .title(\"Mariä Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-10-26\")\n                        .title(\"Nationalfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-11-01\")\n                        .title(\"Allerheiligen\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-12-08\")\n                        .title(\"Mariä Empfängnis\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-12-25\")\n                        .title(\"Christtag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-12-26\")\n                        .title(\"Stefanitag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-01-01\")\n                        .title(\"Neujahr\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-01-06\")\n                        .title(\"Heilige Drei Könige\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-03-29\")\n                        .title(\"Ostermontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-05-01\")\n                        .title(\"Staatsfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-05-06\")\n                        .title(\"Christi Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-05-17\")\n                        .title(\"Pfingstmontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-05-27\")\n                        .title(\"Fronleichnam\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-08-15\")\n                        .title(\"Mariä Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-10-26\")\n                        .title(\"Nationalfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-11-01\")\n                        .title(\"Allerheiligen\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-12-08\")\n                        .title(\"Mariä Empfängnis\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-12-25\")\n                        .title(\"Christtag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-12-26\")\n                        .title(\"Stefanitag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2033-01-01\")\n                        .title(\"Neujahr\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2033-01-06\")\n                        .title(\"Heilige Drei Könige\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2033-04-18\")\n                        .title(\"Ostermontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2033-05-01\")\n                        .title(\"Staatsfeiertag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2033-05-26\")\n                        .title(\"Christi Himmelfahrt\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2033-06-06\")\n                        .title(\"Pfingstmontag\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2033-06-16\")\n                        .title(\"Fronleichnam\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2023-07-31\")\n                        .title(\"Reini Day\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2024-07-31\")\n                        .title(\"Reini Day\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2025-07-31\")\n                        .title(\"Reini Day\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2026-07-31\")\n                        .title(\"Reini Day\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2027-07-31\")\n                        .title(\"Reini Day\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2028-07-31\")\n                        .title(\"Reini Day\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2029-07-31\")\n                        .title(\"Reini Day\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2030-07-31\")\n                        .title(\"Reini Day\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2031-07-31\")\n                        .title(\"Reini Day\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2032-07-31\")\n                        .title(\"Reini Day\")\n                        .build(),\n                    AutomationBusinessCalendarHolidaysHolidayArgs.builder()\n                        .date(\"2033-07-31\")\n                        .title(\"Reini Day\")\n                        .build())\n                .build())\n            .build());\n\n        var subtract = new AutomationSchedulingRule(\"subtract\", AutomationSchedulingRuleArgs.builder()        \n            .businessCalendar(calendar.id())\n            .title(\"#name#\")\n            .recurrence(AutomationSchedulingRuleRecurrenceArgs.builder()\n                .datestart(\"2029-07-31\")\n                .frequency(\"DAILY\")\n                .interval(1)\n                .workdays(\"WORKING\")\n                .build())\n            .build());\n\n        var comba = new AutomationSchedulingRule(\"comba\", AutomationSchedulingRuleArgs.builder()        \n            .businessCalendar(calendar.id())\n            .title(\"#name#\")\n            .recurrence(AutomationSchedulingRuleRecurrenceArgs.builder()\n                .datestart(\"2023-07-31\")\n                .frequency(\"DAILY\")\n                .interval(1)\n                .workdays(\"WORKING\")\n                .build())\n            .build());\n\n        var combb = new AutomationSchedulingRule(\"combb\", AutomationSchedulingRuleArgs.builder()        \n            .businessCalendar(calendar.id())\n            .title(\"#name#\")\n            .recurrence(AutomationSchedulingRuleRecurrenceArgs.builder()\n                .datestart(\"2023-07-31\")\n                .frequency(\"DAILY\")\n                .interval(1)\n                .workdays(\"WORKING\")\n                .build())\n            .build());\n\n        var intersect = new AutomationSchedulingRule(\"intersect\", AutomationSchedulingRuleArgs.builder()        \n            .businessCalendar(calendar.id())\n            .title(\"#name#\")\n            .recurrence(AutomationSchedulingRuleRecurrenceArgs.builder()\n                .datestart(\"2023-07-31\")\n                .frequency(\"DAILY\")\n                .interval(1)\n                .workdays(\"WORKING\")\n                .build())\n            .build());\n\n        var _name_ = new AutomationSchedulingRule(\"#name#\", AutomationSchedulingRuleArgs.builder()        \n            .title(\"#name#\")\n            .grouping(AutomationSchedulingRuleGroupingArgs.builder()\n                .combines(                \n                    comba.id(),\n                    combb.id())\n                .intersects(intersect.id())\n                .subtracts(subtract.id())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  calendar:\n    type: dynatrace:AutomationBusinessCalendar\n    properties:\n      description: '#name#'\n      title: '#name#'\n      validFrom: 2023-07-31\n      validTo: 2033-07-31\n      weekDays:\n        - 1\n        - 2\n        - 3\n        - 4\n        - 5\n      weekStart: 1\n      holidays:\n        holidays:\n          - date: 2023-08-15\n            title: Mariä Himmelfahrt\n          - date: 2023-10-26\n            title: Nationalfeiertag\n          - date: 2023-11-01\n            title: Allerheiligen\n          - date: 2023-12-08\n            title: Mariä Empfängnis\n          - date: 2023-12-25\n            title: Christtag\n          - date: 2023-12-26\n            title: Stefanitag\n          - date: 2024-01-01\n            title: Neujahr\n          - date: 2024-01-06\n            title: Heilige Drei Könige\n          - date: 2024-04-01\n            title: Ostermontag\n          - date: 2024-05-01\n            title: Staatsfeiertag\n          - date: 2024-05-09\n            title: Christi Himmelfahrt\n          - date: 2024-05-20\n            title: Pfingstmontag\n          - date: 2024-05-30\n            title: Fronleichnam\n          - date: 2024-08-15\n            title: Mariä Himmelfahrt\n          - date: 2024-10-26\n            title: Nationalfeiertag\n          - date: 2024-11-01\n            title: Allerheiligen\n          - date: 2024-12-08\n            title: Mariä Empfängnis\n          - date: 2024-12-25\n            title: Christtag\n          - date: 2024-12-26\n            title: Stefanitag\n          - date: 2025-01-01\n            title: Neujahr\n          - date: 2025-01-06\n            title: Heilige Drei Könige\n          - date: 2025-04-21\n            title: Ostermontag\n          - date: 2025-05-01\n            title: Staatsfeiertag\n          - date: 2025-05-29\n            title: Christi Himmelfahrt\n          - date: 2025-06-09\n            title: Pfingstmontag\n          - date: 2025-06-19\n            title: Fronleichnam\n          - date: 2025-08-15\n            title: Mariä Himmelfahrt\n          - date: 2025-10-26\n            title: Nationalfeiertag\n          - date: 2025-11-01\n            title: Allerheiligen\n          - date: 2025-12-08\n            title: Mariä Empfängnis\n          - date: 2025-12-25\n            title: Christtag\n          - date: 2025-12-26\n            title: Stefanitag\n          - date: 2026-01-01\n            title: Neujahr\n          - date: 2026-01-06\n            title: Heilige Drei Könige\n          - date: 2026-04-06\n            title: Ostermontag\n          - date: 2026-05-01\n            title: Staatsfeiertag\n          - date: 2026-05-14\n            title: Christi Himmelfahrt\n          - date: 2026-05-25\n            title: Pfingstmontag\n          - date: 2026-06-04\n            title: Fronleichnam\n          - date: 2026-08-15\n            title: Mariä Himmelfahrt\n          - date: 2026-10-26\n            title: Nationalfeiertag\n          - date: 2026-11-01\n            title: Allerheiligen\n          - date: 2026-12-08\n            title: Mariä Empfängnis\n          - date: 2026-12-25\n            title: Christtag\n          - date: 2026-12-26\n            title: Stefanitag\n          - date: 2027-01-01\n            title: Neujahr\n          - date: 2027-01-06\n            title: Heilige Drei Könige\n          - date: 2027-03-29\n            title: Ostermontag\n          - date: 2027-05-01\n            title: Staatsfeiertag\n          - date: 2027-05-06\n            title: Christi Himmelfahrt\n          - date: 2027-05-17\n            title: Pfingstmontag\n          - date: 2027-05-27\n            title: Fronleichnam\n          - date: 2027-08-15\n            title: Mariä Himmelfahrt\n          - date: 2027-10-26\n            title: Nationalfeiertag\n          - date: 2027-11-01\n            title: Allerheiligen\n          - date: 2027-12-08\n            title: Mariä Empfängnis\n          - date: 2027-12-25\n            title: Christtag\n          - date: 2027-12-26\n            title: Stefanitag\n          - date: 2028-01-01\n            title: Neujahr\n          - date: 2028-01-06\n            title: Heilige Drei Könige\n          - date: 2028-04-17\n            title: Ostermontag\n          - date: 2028-05-01\n            title: Staatsfeiertag\n          - date: 2028-05-25\n            title: Christi Himmelfahrt\n          - date: 2028-06-05\n            title: Pfingstmontag\n          - date: 2028-06-15\n            title: Fronleichnam\n          - date: 2028-08-15\n            title: Mariä Himmelfahrt\n          - date: 2028-10-26\n            title: Nationalfeiertag\n          - date: 2028-11-01\n            title: Allerheiligen\n          - date: 2028-12-08\n            title: Mariä Empfängnis\n          - date: 2028-12-25\n            title: Christtag\n          - date: 2028-12-26\n            title: Stefanitag\n          - date: 2029-01-01\n            title: Neujahr\n          - date: 2029-01-06\n            title: Heilige Drei Könige\n          - date: 2029-04-02\n            title: Ostermontag\n          - date: 2029-05-01\n            title: Staatsfeiertag\n          - date: 2029-05-10\n            title: Christi Himmelfahrt\n          - date: 2029-05-21\n            title: Pfingstmontag\n          - date: 2029-05-31\n            title: Fronleichnam\n          - date: 2029-08-15\n            title: Mariä Himmelfahrt\n          - date: 2029-10-26\n            title: Nationalfeiertag\n          - date: 2029-11-01\n            title: Allerheiligen\n          - date: 2029-12-08\n            title: Mariä Empfängnis\n          - date: 2029-12-25\n            title: Christtag\n          - date: 2029-12-26\n            title: Stefanitag\n          - date: 2030-01-01\n            title: Neujahr\n          - date: 2030-01-06\n            title: Heilige Drei Könige\n          - date: 2030-04-22\n            title: Ostermontag\n          - date: 2030-05-01\n            title: Staatsfeiertag\n          - date: 2030-05-30\n            title: Christi Himmelfahrt\n          - date: 2030-06-10\n            title: Pfingstmontag\n          - date: 2030-06-20\n            title: Fronleichnam\n          - date: 2030-08-15\n            title: Mariä Himmelfahrt\n          - date: 2030-10-26\n            title: Nationalfeiertag\n          - date: 2030-11-01\n            title: Allerheiligen\n          - date: 2030-12-08\n            title: Mariä Empfängnis\n          - date: 2030-12-25\n            title: Christtag\n          - date: 2030-12-26\n            title: Stefanitag\n          - date: 2031-01-01\n            title: Neujahr\n          - date: 2031-01-06\n            title: Heilige Drei Könige\n          - date: 2031-04-14\n            title: Ostermontag\n          - date: 2031-05-01\n            title: Staatsfeiertag\n          - date: 2031-05-22\n            title: Christi Himmelfahrt\n          - date: 2031-06-02\n            title: Pfingstmontag\n          - date: 2031-06-12\n            title: Fronleichnam\n          - date: 2031-08-15\n            title: Mariä Himmelfahrt\n          - date: 2031-10-26\n            title: Nationalfeiertag\n          - date: 2031-11-01\n            title: Allerheiligen\n          - date: 2031-12-08\n            title: Mariä Empfängnis\n          - date: 2031-12-25\n            title: Christtag\n          - date: 2031-12-26\n            title: Stefanitag\n          - date: 2032-01-01\n            title: Neujahr\n          - date: 2032-01-06\n            title: Heilige Drei Könige\n          - date: 2032-03-29\n            title: Ostermontag\n          - date: 2032-05-01\n            title: Staatsfeiertag\n          - date: 2032-05-06\n            title: Christi Himmelfahrt\n          - date: 2032-05-17\n            title: Pfingstmontag\n          - date: 2032-05-27\n            title: Fronleichnam\n          - date: 2032-08-15\n            title: Mariä Himmelfahrt\n          - date: 2032-10-26\n            title: Nationalfeiertag\n          - date: 2032-11-01\n            title: Allerheiligen\n          - date: 2032-12-08\n            title: Mariä Empfängnis\n          - date: 2032-12-25\n            title: Christtag\n          - date: 2032-12-26\n            title: Stefanitag\n          - date: 2033-01-01\n            title: Neujahr\n          - date: 2033-01-06\n            title: Heilige Drei Könige\n          - date: 2033-04-18\n            title: Ostermontag\n          - date: 2033-05-01\n            title: Staatsfeiertag\n          - date: 2033-05-26\n            title: Christi Himmelfahrt\n          - date: 2033-06-06\n            title: Pfingstmontag\n          - date: 2033-06-16\n            title: Fronleichnam\n          - date: 2023-07-31\n            title: Reini Day\n          - date: 2024-07-31\n            title: Reini Day\n          - date: 2025-07-31\n            title: Reini Day\n          - date: 2026-07-31\n            title: Reini Day\n          - date: 2027-07-31\n            title: Reini Day\n          - date: 2028-07-31\n            title: Reini Day\n          - date: 2029-07-31\n            title: Reini Day\n          - date: 2030-07-31\n            title: Reini Day\n          - date: 2031-07-31\n            title: Reini Day\n          - date: 2032-07-31\n            title: Reini Day\n          - date: 2033-07-31\n            title: Reini Day\n  subtract:\n    type: dynatrace:AutomationSchedulingRule\n    properties:\n      businessCalendar: ${calendar.id}\n      title: '#name#'\n      recurrence:\n        datestart: 2029-07-31\n        frequency: DAILY\n        interval: 1\n        workdays: WORKING\n  comba:\n    type: dynatrace:AutomationSchedulingRule\n    properties:\n      businessCalendar: ${calendar.id}\n      title: '#name#'\n      recurrence:\n        datestart: 2023-07-31\n        frequency: DAILY\n        interval: 1\n        workdays: WORKING\n  combb:\n    type: dynatrace:AutomationSchedulingRule\n    properties:\n      businessCalendar: ${calendar.id}\n      title: '#name#'\n      recurrence:\n        datestart: 2023-07-31\n        frequency: DAILY\n        interval: 1\n        workdays: WORKING\n  intersect:\n    type: dynatrace:AutomationSchedulingRule\n    properties:\n      businessCalendar: ${calendar.id}\n      title: '#name#'\n      recurrence:\n        datestart: 2023-07-31\n        frequency: DAILY\n        interval: 1\n        workdays: WORKING\n  '#name#':\n    type: dynatrace:AutomationSchedulingRule\n    properties:\n      title: '#name#'\n      grouping:\n        combines:\n          - ${comba.id}\n          - ${combb.id}\n        intersects:\n          - ${intersect.id}\n        subtracts:\n          - ${subtract.id}\n```\n",
            "properties": {
                "businessCalendar": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "An optional description for the scheduling rule\n"
                },
                "fixedOffset": {
                    "$ref": "#/types/dynatrace:index/AutomationSchedulingRuleFixedOffset:AutomationSchedulingRuleFixedOffset"
                },
                "grouping": {
                    "$ref": "#/types/dynatrace:index/AutomationSchedulingRuleGrouping:AutomationSchedulingRuleGrouping"
                },
                "recurrence": {
                    "$ref": "#/types/dynatrace:index/AutomationSchedulingRuleRecurrence:AutomationSchedulingRuleRecurrence"
                },
                "relativeOffset": {
                    "$ref": "#/types/dynatrace:index/AutomationSchedulingRuleRelativeOffset:AutomationSchedulingRuleRelativeOffset"
                },
                "title": {
                    "type": "string",
                    "description": "The title / name of the scheduling rule\n"
                }
            },
            "required": [
                "title"
            ],
            "inputProperties": {
                "businessCalendar": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "An optional description for the scheduling rule\n"
                },
                "fixedOffset": {
                    "$ref": "#/types/dynatrace:index/AutomationSchedulingRuleFixedOffset:AutomationSchedulingRuleFixedOffset"
                },
                "grouping": {
                    "$ref": "#/types/dynatrace:index/AutomationSchedulingRuleGrouping:AutomationSchedulingRuleGrouping"
                },
                "recurrence": {
                    "$ref": "#/types/dynatrace:index/AutomationSchedulingRuleRecurrence:AutomationSchedulingRuleRecurrence"
                },
                "relativeOffset": {
                    "$ref": "#/types/dynatrace:index/AutomationSchedulingRuleRelativeOffset:AutomationSchedulingRuleRelativeOffset"
                },
                "title": {
                    "type": "string",
                    "description": "The title / name of the scheduling rule\n"
                }
            },
            "requiredInputs": [
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AutomationSchedulingRule resources.\n",
                "properties": {
                    "businessCalendar": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "An optional description for the scheduling rule\n"
                    },
                    "fixedOffset": {
                        "$ref": "#/types/dynatrace:index/AutomationSchedulingRuleFixedOffset:AutomationSchedulingRuleFixedOffset"
                    },
                    "grouping": {
                        "$ref": "#/types/dynatrace:index/AutomationSchedulingRuleGrouping:AutomationSchedulingRuleGrouping"
                    },
                    "recurrence": {
                        "$ref": "#/types/dynatrace:index/AutomationSchedulingRuleRecurrence:AutomationSchedulingRuleRecurrence"
                    },
                    "relativeOffset": {
                        "$ref": "#/types/dynatrace:index/AutomationSchedulingRuleRelativeOffset:AutomationSchedulingRuleRelativeOffset"
                    },
                    "title": {
                        "type": "string",
                        "description": "The title / name of the scheduling rule\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/automationWorkflow:AutomationWorkflow": {
            "description": "\u003e This resource is excluded by default in the export utility. You can, of course, specify that resource explicitly in order to export it. In that case, don't forget to specify the environment variables `DYNATRACE_AUTOMATION_CLIENT_ID` and `DYNATRACE_AUTOMATION_CLIENT_SECRET` for authentication.\n\n## Dynatrace Documentation\n\n- Dynatrace Workflows - https://www.dynatrace.com/support/help/platform-modules/cloud-automation/workflows\n\n## Prerequisites\n\nUsing this resource requires an OAuth client to be configured within your account settings.\nThe scopes of the OAuth Client need to include `View workflows (automation:workflows:read)` and `Create and edit workflows (automation:workflows:write)`.\n\nFinally the provider configuration requires the credentials for that OAuth Client.\nThe configuration section of your provider needs to look like this.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n\u003e In order to handle credentials in a secure manner we recommend to use the environment variables `DYNATRACE_AUTOMATION_CLIENT_ID` and `DYNATRACE_AUTOMATION_CLIENT_SECRET` as an alternative.\n\n## Resource Example Usage\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\n\nconst sampleWorklowTF = new dynatrace.AutomationWorkflow(\"sampleWorklowTF\", {\n    description: \"Desc\",\n    actor: \"########-####-####-####-############\",\n    title: \"Sample Worklow TF1\",\n    owner: \"########-####-####-####-############\",\n    \"private\": true,\n    tasks: {\n        tasks: [\n            {\n                name: \"http_request_1\",\n                description: \"Issue an HTTP request to any API\",\n                action: \"dynatrace.automations:http-function\",\n                active: true,\n                input: JSON.stringify({\n                    method: \"GET\",\n                    url: \"https://www.google.at/\",\n                }),\n                position: {\n                    x: 0,\n                    y: 1,\n                },\n            },\n            {\n                name: \"http_request_2\",\n                description: \"Issue an HTTP request to any API\",\n                action: \"dynatrace.automations:http-function\",\n                active: false,\n                input: JSON.stringify({\n                    method: \"GET\",\n                    url: \"https://www.second-task.com/\",\n                }),\n                conditions: {\n                    states: {\n                        http_request_1: \"SUCCESS\",\n                        run_javascript_1: \"OK\",\n                    },\n                    custom: \"\",\n                },\n                position: {\n                    x: -1,\n                    y: 2,\n                },\n                timeout: \"50000\",\n            },\n            {\n                name: \"http_request_3\",\n                description: \"Issue an HTTP request to any API\",\n                action: \"dynatrace.automations:http-function\",\n                active: false,\n                input: JSON.stringify({\n                    method: \"GET\",\n                    url: \"https://www.third-task.com\",\n                }),\n                conditions: {\n                    states: {\n                        http_request_2: \"OK\",\n                    },\n                    custom: \"{{http_request_1}}\",\n                },\n                position: {\n                    x: 0,\n                    y: 3,\n                },\n            },\n            {\n                name: \"run_javascript_1\",\n                description: \"Build a custom task running js Code\",\n                action: \"dynatrace.automations:run-javascript\",\n                active: false,\n                input: JSON.stringify({\n                    script: `// optional import of sdk modules\nimport { execution } from '@dynatrace-sdk/automation-utils';\n\nexport default async function ({ execution_id }) {\n  // your code goes here\n  // e.g. get the current execution\n  const ex = await execution(execution_id);\n  console.log('Automated script execution on behalf of', ex.trigger);\n  \n  return { triggeredBy: ex.trigger };\n}`,\n                }),\n                position: {\n                    x: -2,\n                    y: 1,\n                },\n            },\n        ],\n    },\n    trigger: {\n        event: {\n            active: false,\n            config: {\n                davisEvent: {\n                    entityTagsMatch: \"all\",\n                    entityTags: {\n                        asdf: \"\",\n                    },\n                    onProblemClose: false,\n                    types: [\"CUSTOM_ANNOTATION\"],\n                },\n            },\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport json\nimport lbrlabs_pulumi_dynatrace as dynatrace\n\nsample_worklow_tf = dynatrace.AutomationWorkflow(\"sampleWorklowTF\",\n    description=\"Desc\",\n    actor=\"########-####-####-####-############\",\n    title=\"Sample Worklow TF1\",\n    owner=\"########-####-####-####-############\",\n    private=True,\n    tasks=dynatrace.AutomationWorkflowTasksArgs(\n        tasks=[\n            dynatrace.AutomationWorkflowTasksTaskArgs(\n                name=\"http_request_1\",\n                description=\"Issue an HTTP request to any API\",\n                action=\"dynatrace.automations:http-function\",\n                active=True,\n                input=json.dumps({\n                    \"method\": \"GET\",\n                    \"url\": \"https://www.google.at/\",\n                }),\n                position=dynatrace.AutomationWorkflowTasksTaskPositionArgs(\n                    x=0,\n                    y=1,\n                ),\n            ),\n            dynatrace.AutomationWorkflowTasksTaskArgs(\n                name=\"http_request_2\",\n                description=\"Issue an HTTP request to any API\",\n                action=\"dynatrace.automations:http-function\",\n                active=False,\n                input=json.dumps({\n                    \"method\": \"GET\",\n                    \"url\": \"https://www.second-task.com/\",\n                }),\n                conditions=dynatrace.AutomationWorkflowTasksTaskConditionsArgs(\n                    states={\n                        \"http_request_1\": \"SUCCESS\",\n                        \"run_javascript_1\": \"OK\",\n                    },\n                    custom=\"\",\n                ),\n                position=dynatrace.AutomationWorkflowTasksTaskPositionArgs(\n                    x=-1,\n                    y=2,\n                ),\n                timeout=\"50000\",\n            ),\n            dynatrace.AutomationWorkflowTasksTaskArgs(\n                name=\"http_request_3\",\n                description=\"Issue an HTTP request to any API\",\n                action=\"dynatrace.automations:http-function\",\n                active=False,\n                input=json.dumps({\n                    \"method\": \"GET\",\n                    \"url\": \"https://www.third-task.com\",\n                }),\n                conditions=dynatrace.AutomationWorkflowTasksTaskConditionsArgs(\n                    states={\n                        \"http_request_2\": \"OK\",\n                    },\n                    custom=\"{{http_request_1}}\",\n                ),\n                position=dynatrace.AutomationWorkflowTasksTaskPositionArgs(\n                    x=0,\n                    y=3,\n                ),\n            ),\n            dynatrace.AutomationWorkflowTasksTaskArgs(\n                name=\"run_javascript_1\",\n                description=\"Build a custom task running js Code\",\n                action=\"dynatrace.automations:run-javascript\",\n                active=False,\n                input=json.dumps({\n                    \"script\": \"\"\"// optional import of sdk modules\nimport { execution } from '@dynatrace-sdk/automation-utils';\n\nexport default async function ({ execution_id }) {\n  // your code goes here\n  // e.g. get the current execution\n  const ex = await execution(execution_id);\n  console.log('Automated script execution on behalf of', ex.trigger);\n  \n  return { triggeredBy: ex.trigger };\n}\"\"\",\n                }),\n                position=dynatrace.AutomationWorkflowTasksTaskPositionArgs(\n                    x=-2,\n                    y=1,\n                ),\n            ),\n        ],\n    ),\n    trigger=dynatrace.AutomationWorkflowTriggerArgs(\n        event=dynatrace.AutomationWorkflowTriggerEventArgs(\n            active=False,\n            config=dynatrace.AutomationWorkflowTriggerEventConfigArgs(\n                davis_event=dynatrace.AutomationWorkflowTriggerEventConfigDavisEventArgs(\n                    entity_tags_match=\"all\",\n                    entity_tags={\n                        \"asdf\": \"\",\n                    },\n                    on_problem_close=False,\n                    types=[\"CUSTOM_ANNOTATION\"],\n                ),\n            ),\n        ),\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var sampleWorklowTF = new Dynatrace.AutomationWorkflow(\"sampleWorklowTF\", new()\n    {\n        Description = \"Desc\",\n        Actor = \"########-####-####-####-############\",\n        Title = \"Sample Worklow TF1\",\n        Owner = \"########-####-####-####-############\",\n        Private = true,\n        Tasks = new Dynatrace.Inputs.AutomationWorkflowTasksArgs\n        {\n            Tasks = new[]\n            {\n                new Dynatrace.Inputs.AutomationWorkflowTasksTaskArgs\n                {\n                    Name = \"http_request_1\",\n                    Description = \"Issue an HTTP request to any API\",\n                    Action = \"dynatrace.automations:http-function\",\n                    Active = true,\n                    Input = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n                    {\n                        [\"method\"] = \"GET\",\n                        [\"url\"] = \"https://www.google.at/\",\n                    }),\n                    Position = new Dynatrace.Inputs.AutomationWorkflowTasksTaskPositionArgs\n                    {\n                        X = 0,\n                        Y = 1,\n                    },\n                },\n                new Dynatrace.Inputs.AutomationWorkflowTasksTaskArgs\n                {\n                    Name = \"http_request_2\",\n                    Description = \"Issue an HTTP request to any API\",\n                    Action = \"dynatrace.automations:http-function\",\n                    Active = false,\n                    Input = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n                    {\n                        [\"method\"] = \"GET\",\n                        [\"url\"] = \"https://www.second-task.com/\",\n                    }),\n                    Conditions = new Dynatrace.Inputs.AutomationWorkflowTasksTaskConditionsArgs\n                    {\n                        States = \n                        {\n                            { \"http_request_1\", \"SUCCESS\" },\n                            { \"run_javascript_1\", \"OK\" },\n                        },\n                        Custom = \"\",\n                    },\n                    Position = new Dynatrace.Inputs.AutomationWorkflowTasksTaskPositionArgs\n                    {\n                        X = -1,\n                        Y = 2,\n                    },\n                    Timeout = \"50000\",\n                },\n                new Dynatrace.Inputs.AutomationWorkflowTasksTaskArgs\n                {\n                    Name = \"http_request_3\",\n                    Description = \"Issue an HTTP request to any API\",\n                    Action = \"dynatrace.automations:http-function\",\n                    Active = false,\n                    Input = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n                    {\n                        [\"method\"] = \"GET\",\n                        [\"url\"] = \"https://www.third-task.com\",\n                    }),\n                    Conditions = new Dynatrace.Inputs.AutomationWorkflowTasksTaskConditionsArgs\n                    {\n                        States = \n                        {\n                            { \"http_request_2\", \"OK\" },\n                        },\n                        Custom = \"{{http_request_1}}\",\n                    },\n                    Position = new Dynatrace.Inputs.AutomationWorkflowTasksTaskPositionArgs\n                    {\n                        X = 0,\n                        Y = 3,\n                    },\n                },\n                new Dynatrace.Inputs.AutomationWorkflowTasksTaskArgs\n                {\n                    Name = \"run_javascript_1\",\n                    Description = \"Build a custom task running js Code\",\n                    Action = \"dynatrace.automations:run-javascript\",\n                    Active = false,\n                    Input = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n                    {\n                        [\"script\"] = @\"// optional import of sdk modules\nimport { execution } from '@dynatrace-sdk/automation-utils';\n\nexport default async function ({ execution_id }) {\n  // your code goes here\n  // e.g. get the current execution\n  const ex = await execution(execution_id);\n  console.log('Automated script execution on behalf of', ex.trigger);\n  \n  return { triggeredBy: ex.trigger };\n}\",\n                    }),\n                    Position = new Dynatrace.Inputs.AutomationWorkflowTasksTaskPositionArgs\n                    {\n                        X = -2,\n                        Y = 1,\n                    },\n                },\n            },\n        },\n        Trigger = new Dynatrace.Inputs.AutomationWorkflowTriggerArgs\n        {\n            Event = new Dynatrace.Inputs.AutomationWorkflowTriggerEventArgs\n            {\n                Active = false,\n                Config = new Dynatrace.Inputs.AutomationWorkflowTriggerEventConfigArgs\n                {\n                    DavisEvent = new Dynatrace.Inputs.AutomationWorkflowTriggerEventConfigDavisEventArgs\n                    {\n                        EntityTagsMatch = \"all\",\n                        EntityTags = \n                        {\n                            { \"asdf\", \"\" },\n                        },\n                        OnProblemClose = false,\n                        Types = new[]\n                        {\n                            \"CUSTOM_ANNOTATION\",\n                        },\n                    },\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"method\": \"GET\",\n\t\t\t\"url\":    \"https://www.google.at/\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\ttmpJSON1, err := json.Marshal(map[string]interface{}{\n\t\t\t\"method\": \"GET\",\n\t\t\t\"url\":    \"https://www.second-task.com/\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson1 := string(tmpJSON1)\n\t\ttmpJSON2, err := json.Marshal(map[string]interface{}{\n\t\t\t\"method\": \"GET\",\n\t\t\t\"url\":    \"https://www.third-task.com\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson2 := string(tmpJSON2)\n\t\ttmpJSON3, err := json.Marshal(map[string]interface{}{\n\t\t\t\"script\": `// optional import of sdk modules\nimport { execution } from '@dynatrace-sdk/automation-utils';\n\nexport default async function ({ execution_id }) {\n  // your code goes here\n  // e.g. get the current execution\n  const ex = await execution(execution_id);\n  console.log('Automated script execution on behalf of', ex.trigger);\n  \n  return { triggeredBy: ex.trigger };\n}`,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson3 := string(tmpJSON3)\n\t\t_, err = dynatrace.NewAutomationWorkflow(ctx, \"sampleWorklowTF\", \u0026dynatrace.AutomationWorkflowArgs{\n\t\t\tDescription: pulumi.String(\"Desc\"),\n\t\t\tActor:       pulumi.String(\"########-####-####-####-############\"),\n\t\t\tTitle:       pulumi.String(\"Sample Worklow TF1\"),\n\t\t\tOwner:       pulumi.String(\"########-####-####-####-############\"),\n\t\t\tPrivate:     pulumi.Bool(true),\n\t\t\tTasks: \u0026dynatrace.AutomationWorkflowTasksArgs{\n\t\t\t\tTasks: dynatrace.AutomationWorkflowTasksTaskArray{\n\t\t\t\t\t\u0026dynatrace.AutomationWorkflowTasksTaskArgs{\n\t\t\t\t\t\tName:        pulumi.String(\"http_request_1\"),\n\t\t\t\t\t\tDescription: pulumi.String(\"Issue an HTTP request to any API\"),\n\t\t\t\t\t\tAction:      pulumi.String(\"dynatrace.automations:http-function\"),\n\t\t\t\t\t\tActive:      pulumi.Bool(true),\n\t\t\t\t\t\tInput:       pulumi.String(json0),\n\t\t\t\t\t\tPosition: \u0026dynatrace.AutomationWorkflowTasksTaskPositionArgs{\n\t\t\t\t\t\t\tX: pulumi.Int(0),\n\t\t\t\t\t\t\tY: pulumi.Int(1),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationWorkflowTasksTaskArgs{\n\t\t\t\t\t\tName:        pulumi.String(\"http_request_2\"),\n\t\t\t\t\t\tDescription: pulumi.String(\"Issue an HTTP request to any API\"),\n\t\t\t\t\t\tAction:      pulumi.String(\"dynatrace.automations:http-function\"),\n\t\t\t\t\t\tActive:      pulumi.Bool(false),\n\t\t\t\t\t\tInput:       pulumi.String(json1),\n\t\t\t\t\t\tConditions: \u0026dynatrace.AutomationWorkflowTasksTaskConditionsArgs{\n\t\t\t\t\t\t\tStates: pulumi.Map{\n\t\t\t\t\t\t\t\t\"http_request_1\":   pulumi.Any(\"SUCCESS\"),\n\t\t\t\t\t\t\t\t\"run_javascript_1\": pulumi.Any(\"OK\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tCustom: pulumi.String(\"\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tPosition: \u0026dynatrace.AutomationWorkflowTasksTaskPositionArgs{\n\t\t\t\t\t\t\tX: -1,\n\t\t\t\t\t\t\tY: pulumi.Int(2),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTimeout: pulumi.String(\"50000\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationWorkflowTasksTaskArgs{\n\t\t\t\t\t\tName:        pulumi.String(\"http_request_3\"),\n\t\t\t\t\t\tDescription: pulumi.String(\"Issue an HTTP request to any API\"),\n\t\t\t\t\t\tAction:      pulumi.String(\"dynatrace.automations:http-function\"),\n\t\t\t\t\t\tActive:      pulumi.Bool(false),\n\t\t\t\t\t\tInput:       pulumi.String(json2),\n\t\t\t\t\t\tConditions: \u0026dynatrace.AutomationWorkflowTasksTaskConditionsArgs{\n\t\t\t\t\t\t\tStates: pulumi.Map{\n\t\t\t\t\t\t\t\t\"http_request_2\": pulumi.Any(\"OK\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tCustom: pulumi.String(\"{{http_request_1}}\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tPosition: \u0026dynatrace.AutomationWorkflowTasksTaskPositionArgs{\n\t\t\t\t\t\t\tX: pulumi.Int(0),\n\t\t\t\t\t\t\tY: pulumi.Int(3),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.AutomationWorkflowTasksTaskArgs{\n\t\t\t\t\t\tName:        pulumi.String(\"run_javascript_1\"),\n\t\t\t\t\t\tDescription: pulumi.String(\"Build a custom task running js Code\"),\n\t\t\t\t\t\tAction:      pulumi.String(\"dynatrace.automations:run-javascript\"),\n\t\t\t\t\t\tActive:      pulumi.Bool(false),\n\t\t\t\t\t\tInput:       pulumi.String(json3),\n\t\t\t\t\t\tPosition: \u0026dynatrace.AutomationWorkflowTasksTaskPositionArgs{\n\t\t\t\t\t\t\tX: -2,\n\t\t\t\t\t\t\tY: pulumi.Int(1),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tTrigger: \u0026dynatrace.AutomationWorkflowTriggerArgs{\n\t\t\t\tEvent: \u0026dynatrace.AutomationWorkflowTriggerEventArgs{\n\t\t\t\t\tActive: pulumi.Bool(false),\n\t\t\t\t\tConfig: \u0026dynatrace.AutomationWorkflowTriggerEventConfigArgs{\n\t\t\t\t\t\tDavisEvent: \u0026dynatrace.AutomationWorkflowTriggerEventConfigDavisEventArgs{\n\t\t\t\t\t\t\tEntityTagsMatch: pulumi.String(\"all\"),\n\t\t\t\t\t\t\tEntityTags: pulumi.StringMap{\n\t\t\t\t\t\t\t\t\"asdf\": pulumi.String(\"\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tOnProblemClose: pulumi.Bool(false),\n\t\t\t\t\t\t\tTypes: pulumi.StringArray{\n\t\t\t\t\t\t\t\tpulumi.String(\"CUSTOM_ANNOTATION\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n",
            "properties": {
                "actor": {
                    "type": "string",
                    "description": "The user context the executions of the workflow will happen with\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description for this task\n"
                },
                "owner": {
                    "type": "string",
                    "description": "The ID of the owner of this workflow\n"
                },
                "private": {
                    "type": "boolean",
                    "description": "Defines whether this workflow is private to the owner or not. Default is `true`\n"
                },
                "tasks": {
                    "$ref": "#/types/dynatrace:index/AutomationWorkflowTasks:AutomationWorkflowTasks",
                    "description": "The tasks to run for every execution of this workflow\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title / name of the workflow\n"
                },
                "trigger": {
                    "$ref": "#/types/dynatrace:index/AutomationWorkflowTrigger:AutomationWorkflowTrigger",
                    "description": "Detailed configuration about the timing constraints that trigger the execution\n"
                }
            },
            "required": [
                "tasks",
                "title"
            ],
            "inputProperties": {
                "actor": {
                    "type": "string",
                    "description": "The user context the executions of the workflow will happen with\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description for this task\n"
                },
                "owner": {
                    "type": "string",
                    "description": "The ID of the owner of this workflow\n"
                },
                "private": {
                    "type": "boolean",
                    "description": "Defines whether this workflow is private to the owner or not. Default is `true`\n"
                },
                "tasks": {
                    "$ref": "#/types/dynatrace:index/AutomationWorkflowTasks:AutomationWorkflowTasks",
                    "description": "The tasks to run for every execution of this workflow\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title / name of the workflow\n"
                },
                "trigger": {
                    "$ref": "#/types/dynatrace:index/AutomationWorkflowTrigger:AutomationWorkflowTrigger",
                    "description": "Detailed configuration about the timing constraints that trigger the execution\n"
                }
            },
            "requiredInputs": [
                "tasks",
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AutomationWorkflow resources.\n",
                "properties": {
                    "actor": {
                        "type": "string",
                        "description": "The user context the executions of the workflow will happen with\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description for this task\n"
                    },
                    "owner": {
                        "type": "string",
                        "description": "The ID of the owner of this workflow\n"
                    },
                    "private": {
                        "type": "boolean",
                        "description": "Defines whether this workflow is private to the owner or not. Default is `true`\n"
                    },
                    "tasks": {
                        "$ref": "#/types/dynatrace:index/AutomationWorkflowTasks:AutomationWorkflowTasks",
                        "description": "The tasks to run for every execution of this workflow\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The title / name of the workflow\n"
                    },
                    "trigger": {
                        "$ref": "#/types/dynatrace:index/AutomationWorkflowTrigger:AutomationWorkflowTrigger",
                        "description": "Detailed configuration about the timing constraints that trigger the execution\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/automationWorkflowJira:AutomationWorkflowJira": {
            "properties": {
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Jira connection\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password of the Jira user\n",
                    "secret": true
                },
                "token": {
                    "type": "string",
                    "description": "Token for the selected authentication type\n",
                    "secret": true
                },
                "type": {
                    "type": "string",
                    "description": "Possible Values: `Basic`, `Cloud_token`, `Pat`\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL of the Jira server\n"
                },
                "user": {
                    "type": "string",
                    "description": "Username or E-Mail address\n"
                }
            },
            "required": [
                "insertAfter",
                "name",
                "type",
                "url"
            ],
            "inputProperties": {
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Jira connection\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password of the Jira user\n",
                    "secret": true
                },
                "token": {
                    "type": "string",
                    "description": "Token for the selected authentication type\n",
                    "secret": true
                },
                "type": {
                    "type": "string",
                    "description": "Possible Values: `Basic`, `Cloud_token`, `Pat`\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL of the Jira server\n"
                },
                "user": {
                    "type": "string",
                    "description": "Username or E-Mail address\n"
                }
            },
            "requiredInputs": [
                "type",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AutomationWorkflowJira resources.\n",
                "properties": {
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Jira connection\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password of the Jira user\n",
                        "secret": true
                    },
                    "token": {
                        "type": "string",
                        "description": "Token for the selected authentication type\n",
                        "secret": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Possible Values: `Basic`, `Cloud_token`, `Pat`\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "URL of the Jira server\n"
                    },
                    "user": {
                        "type": "string",
                        "description": "Username or E-Mail address\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/automationWorkflowSlack:AutomationWorkflowSlack": {
            "properties": {
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Slack connection\n"
                },
                "token": {
                    "type": "string",
                    "description": "The bot token obtained from the Slack App Management UI\n",
                    "secret": true
                }
            },
            "required": [
                "insertAfter",
                "name",
                "token"
            ],
            "inputProperties": {
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Slack connection\n"
                },
                "token": {
                    "type": "string",
                    "description": "The bot token obtained from the Slack App Management UI\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "token"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AutomationWorkflowSlack resources.\n",
                "properties": {
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Slack connection\n"
                    },
                    "token": {
                        "type": "string",
                        "description": "The bot token obtained from the Slack App Management UI\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/autotag:Autotag": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the auto-tag.\n"
                },
                "entitySelectorBasedRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagEntitySelectorBasedRule:AutotagEntitySelectorBasedRule"
                    },
                    "description": "A list of entity-selector based rules for management zone usage. If several rules are specified, the `or` logic applies\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the auto-tag, which is applied to entities. Additionally you can specify a **valueFormat** in the tag rule.\nIn that case the tag is used in the `name:valueFormat` format. For example you can extend the `Infrastructure` tag to\n`Infrastructure:Windows` and `Infrastructure:Linux`.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRule:AutotagRule"
                    },
                    "description": "A list of rules for management zone usage. Each rule is evaluated independently of all other rules\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the auto-tag.\n"
                },
                "entitySelectorBasedRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagEntitySelectorBasedRule:AutotagEntitySelectorBasedRule"
                    },
                    "description": "A list of entity-selector based rules for management zone usage. If several rules are specified, the `or` logic applies\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the auto-tag, which is applied to entities. Additionally you can specify a **valueFormat** in the tag rule.\nIn that case the tag is used in the `name:valueFormat` format. For example you can extend the `Infrastructure` tag to\n`Infrastructure:Windows` and `Infrastructure:Linux`.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AutotagRule:AutotagRule"
                    },
                    "description": "A list of rules for management zone usage. Each rule is evaluated independently of all other rules\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Autotag resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the auto-tag.\n"
                    },
                    "entitySelectorBasedRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/AutotagEntitySelectorBasedRule:AutotagEntitySelectorBasedRule"
                        },
                        "description": "A list of entity-selector based rules for management zone usage. If several rules are specified, the `or` logic applies\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the auto-tag, which is applied to entities. Additionally you can specify a **valueFormat** in the tag rule.\nIn that case the tag is used in the `name:valueFormat` format. For example you can extend the `Infrastructure` tag to\n`Infrastructure:Windows` and `Infrastructure:Linux`.\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/AutotagRule:AutotagRule"
                        },
                        "description": "A list of rules for management zone usage. Each rule is evaluated independently of all other rules\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/autotagRules:AutotagRules": {
            "description": "\u003e `dynatrace.AutotagV2` is the primary resource to manage auto tags. This particular resource allows you to manage a subset of tags of a given auto tag ID. The benefit of this is that it allows the flexibility of multiple users to manage the same automatically applied tag.\n\n\u003e This resource requires the API token scopes **Read settings** (`settings.read`) and **Write settings** (`settings.write`)\n\n## Dynatrace Documentation\n\n- Define and apply tags - https://www.dynatrace.com/support/help/how-to-use-dynatrace/tags-and-metadata/setup/how-to-define-tags\n\n- Settings API - https://www.dynatrace.com/support/help/dynatrace-api/environment-api/settings (schemaId: `builtin:tags.auto-tagging`)\n\nThe full documentation of the export feature is available here.\n\n## Resource Example Usage\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.AutotagRules;\nimport com.pulumi.dynatrace.AutotagRulesArgs;\nimport com.pulumi.dynatrace.inputs.AutotagRulesRulesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var avengers = new AutotagRules(\"avengers\", AutotagRulesArgs.builder()        \n            .autoTagId(\"vu9U3hXa3q0AAAABABlidWlsdGluOnRhZ3MuYXV0by10YWdnaW5nAAZ0ZW5hbnQABnRlbmFudAAkOTNjMDBkYzktY2FkMC0zMWY3LWEzZGQtMWQ4MDdjMWQwMjhivu9U3hXa3q0\")\n            .rules(AutotagRulesRulesArgs.builder()\n                .rules(                \n                    AutotagRulesRulesRuleArgs.builder()\n                        .attributeRule(AutotagRulesRulesRuleAttributeRuleArgs.builder()\n                            .conditions(AutotagRulesRulesRuleAttributeRuleConditionsArgs.builder()\n                                .condition(                                \n                                    %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference),\n                                    %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                                .build())\n                            .entityType(\"SERVICE\")\n                            .serviceToHostPropagation(true)\n                            .serviceToPgpropagation(true)\n                            .build())\n                        .enabled(true)\n                        .type(\"ME\")\n                        .valueFormat(\"Avengers\")\n                        .valueNormalization(\"Leave text as-is\")\n                        .build(),\n                    AutotagRulesRulesRuleArgs.builder()\n                        .attributeRule(AutotagRulesRulesRuleAttributeRuleArgs.builder()\n                            .conditions(AutotagRulesRulesRuleAttributeRuleConditionsArgs.builder()\n                                .condition(                                \n                                    %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference),\n                                    %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference),\n                                    %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                                .build())\n                            .entityType(\"SERVICE\")\n                            .serviceToHostPropagation(true)\n                            .serviceToPgpropagation(true)\n                            .build())\n                        .enabled(true)\n                        .type(\"ME\")\n                        .valueFormat(\"Avengers\")\n                        .valueNormalization(\"Leave text as-is\")\n                        .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  avengers:\n    type: dynatrace:AutotagRules\n    properties:\n      autoTagId: vu9U3hXa3q0AAAABABlidWlsdGluOnRhZ3MuYXV0by10YWdnaW5nAAZ0ZW5hbnQABnRlbmFudAAkOTNjMDBkYzktY2FkMC0zMWY3LWEzZGQtMWQ4MDdjMWQwMjhivu9U3hXa3q0\n      rules:\n        rules:\n          - attributeRule:\n              conditions:\n                condition:\n                  - caseSensitive: true\n                    key: SERVICE_DATABASE_NAME\n                    operator: EQUALS\n                    stringValue: AvengersA-1\n                  - caseSensitive: true\n                    key: SERVICE_DATABASE_NAME\n                    operator: EQUALS\n                    stringValue: AvengersA-2\n              entityType: SERVICE\n              serviceToHostPropagation: true\n              serviceToPgpropagation: true\n            enabled: true\n            type: ME\n            valueFormat: Avengers\n            valueNormalization: Leave text as-is\n          - attributeRule:\n              conditions:\n                condition:\n                  - caseSensitive: true\n                    key: SERVICE_DATABASE_NAME\n                    operator: EQUALS\n                    stringValue: AvengersB-1\n                  - caseSensitive: true\n                    key: SERVICE_DATABASE_NAME\n                    operator: EQUALS\n                    stringValue: AvengersB-2\n                  - caseSensitive: true\n                    key: SERVICE_DATABASE_NAME\n                    operator: EQUALS\n                    stringValue: AvengersB-3\n              entityType: SERVICE\n              serviceToHostPropagation: true\n              serviceToPgpropagation: true\n            enabled: true\n            type: ME\n            valueFormat: Avengers\n            valueNormalization: Leave text as-is\n```\n",
            "properties": {
                "autoTagId": {
                    "type": "string",
                    "description": "Automatically applied tag ID\n"
                },
                "currentState": {
                    "type": "string",
                    "description": "For internal use: current state of rules in JSON format\n"
                },
                "rules": {
                    "$ref": "#/types/dynatrace:index/AutotagRulesRules:AutotagRulesRules",
                    "description": "Rules\n"
                }
            },
            "required": [
                "autoTagId",
                "currentState"
            ],
            "inputProperties": {
                "autoTagId": {
                    "type": "string",
                    "description": "Automatically applied tag ID\n"
                },
                "currentState": {
                    "type": "string",
                    "description": "For internal use: current state of rules in JSON format\n"
                },
                "rules": {
                    "$ref": "#/types/dynatrace:index/AutotagRulesRules:AutotagRulesRules",
                    "description": "Rules\n"
                }
            },
            "requiredInputs": [
                "autoTagId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AutotagRules resources.\n",
                "properties": {
                    "autoTagId": {
                        "type": "string",
                        "description": "Automatically applied tag ID\n"
                    },
                    "currentState": {
                        "type": "string",
                        "description": "For internal use: current state of rules in JSON format\n"
                    },
                    "rules": {
                        "$ref": "#/types/dynatrace:index/AutotagRulesRules:AutotagRulesRules",
                        "description": "Rules\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/autotagV2:AutotagV2": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description\n"
                },
                "name": {
                    "type": "string",
                    "description": "Tag name\n"
                },
                "rules": {
                    "$ref": "#/types/dynatrace:index/AutotagV2Rules:AutotagV2Rules",
                    "description": "Rules\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description\n"
                },
                "name": {
                    "type": "string",
                    "description": "Tag name\n"
                },
                "rules": {
                    "$ref": "#/types/dynatrace:index/AutotagV2Rules:AutotagV2Rules",
                    "description": "Rules\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AutotagV2 resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Tag name\n"
                    },
                    "rules": {
                        "$ref": "#/types/dynatrace:index/AutotagV2Rules:AutotagV2Rules",
                        "description": "Rules\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/awsAnomalies:AwsAnomalies": {
            "properties": {
                "ec2CandidateHighCpuDetection": {
                    "$ref": "#/types/dynatrace:index/AwsAnomaliesEc2CandidateHighCpuDetection:AwsAnomaliesEc2CandidateHighCpuDetection",
                    "description": "no documentation available\n"
                },
                "elbHighConnectionErrorsDetection": {
                    "$ref": "#/types/dynatrace:index/AwsAnomaliesElbHighConnectionErrorsDetection:AwsAnomaliesElbHighConnectionErrorsDetection",
                    "description": "no documentation available\n"
                },
                "lambdaHighErrorRateDetection": {
                    "$ref": "#/types/dynatrace:index/AwsAnomaliesLambdaHighErrorRateDetection:AwsAnomaliesLambdaHighErrorRateDetection",
                    "description": "no documentation available\n"
                },
                "rdsHighCpuDetection": {
                    "$ref": "#/types/dynatrace:index/AwsAnomaliesRdsHighCpuDetection:AwsAnomaliesRdsHighCpuDetection",
                    "description": "no documentation available\n"
                },
                "rdsHighMemoryDetection": {
                    "$ref": "#/types/dynatrace:index/AwsAnomaliesRdsHighMemoryDetection:AwsAnomaliesRdsHighMemoryDetection",
                    "description": "no documentation available\n"
                },
                "rdsHighWriteReadLatencyDetection": {
                    "$ref": "#/types/dynatrace:index/AwsAnomaliesRdsHighWriteReadLatencyDetection:AwsAnomaliesRdsHighWriteReadLatencyDetection",
                    "description": "no documentation available\n"
                },
                "rdsLowStorageDetection": {
                    "$ref": "#/types/dynatrace:index/AwsAnomaliesRdsLowStorageDetection:AwsAnomaliesRdsLowStorageDetection",
                    "description": "no documentation available\n"
                },
                "rdsRestartsSequenceDetection": {
                    "$ref": "#/types/dynatrace:index/AwsAnomaliesRdsRestartsSequenceDetection:AwsAnomaliesRdsRestartsSequenceDetection",
                    "description": "no documentation available\n"
                }
            },
            "required": [
                "ec2CandidateHighCpuDetection",
                "elbHighConnectionErrorsDetection",
                "lambdaHighErrorRateDetection",
                "rdsHighCpuDetection",
                "rdsHighMemoryDetection",
                "rdsHighWriteReadLatencyDetection",
                "rdsLowStorageDetection",
                "rdsRestartsSequenceDetection"
            ],
            "inputProperties": {
                "ec2CandidateHighCpuDetection": {
                    "$ref": "#/types/dynatrace:index/AwsAnomaliesEc2CandidateHighCpuDetection:AwsAnomaliesEc2CandidateHighCpuDetection",
                    "description": "no documentation available\n"
                },
                "elbHighConnectionErrorsDetection": {
                    "$ref": "#/types/dynatrace:index/AwsAnomaliesElbHighConnectionErrorsDetection:AwsAnomaliesElbHighConnectionErrorsDetection",
                    "description": "no documentation available\n"
                },
                "lambdaHighErrorRateDetection": {
                    "$ref": "#/types/dynatrace:index/AwsAnomaliesLambdaHighErrorRateDetection:AwsAnomaliesLambdaHighErrorRateDetection",
                    "description": "no documentation available\n"
                },
                "rdsHighCpuDetection": {
                    "$ref": "#/types/dynatrace:index/AwsAnomaliesRdsHighCpuDetection:AwsAnomaliesRdsHighCpuDetection",
                    "description": "no documentation available\n"
                },
                "rdsHighMemoryDetection": {
                    "$ref": "#/types/dynatrace:index/AwsAnomaliesRdsHighMemoryDetection:AwsAnomaliesRdsHighMemoryDetection",
                    "description": "no documentation available\n"
                },
                "rdsHighWriteReadLatencyDetection": {
                    "$ref": "#/types/dynatrace:index/AwsAnomaliesRdsHighWriteReadLatencyDetection:AwsAnomaliesRdsHighWriteReadLatencyDetection",
                    "description": "no documentation available\n"
                },
                "rdsLowStorageDetection": {
                    "$ref": "#/types/dynatrace:index/AwsAnomaliesRdsLowStorageDetection:AwsAnomaliesRdsLowStorageDetection",
                    "description": "no documentation available\n"
                },
                "rdsRestartsSequenceDetection": {
                    "$ref": "#/types/dynatrace:index/AwsAnomaliesRdsRestartsSequenceDetection:AwsAnomaliesRdsRestartsSequenceDetection",
                    "description": "no documentation available\n"
                }
            },
            "requiredInputs": [
                "ec2CandidateHighCpuDetection",
                "elbHighConnectionErrorsDetection",
                "lambdaHighErrorRateDetection",
                "rdsHighCpuDetection",
                "rdsHighMemoryDetection",
                "rdsHighWriteReadLatencyDetection",
                "rdsLowStorageDetection",
                "rdsRestartsSequenceDetection"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AwsAnomalies resources.\n",
                "properties": {
                    "ec2CandidateHighCpuDetection": {
                        "$ref": "#/types/dynatrace:index/AwsAnomaliesEc2CandidateHighCpuDetection:AwsAnomaliesEc2CandidateHighCpuDetection",
                        "description": "no documentation available\n"
                    },
                    "elbHighConnectionErrorsDetection": {
                        "$ref": "#/types/dynatrace:index/AwsAnomaliesElbHighConnectionErrorsDetection:AwsAnomaliesElbHighConnectionErrorsDetection",
                        "description": "no documentation available\n"
                    },
                    "lambdaHighErrorRateDetection": {
                        "$ref": "#/types/dynatrace:index/AwsAnomaliesLambdaHighErrorRateDetection:AwsAnomaliesLambdaHighErrorRateDetection",
                        "description": "no documentation available\n"
                    },
                    "rdsHighCpuDetection": {
                        "$ref": "#/types/dynatrace:index/AwsAnomaliesRdsHighCpuDetection:AwsAnomaliesRdsHighCpuDetection",
                        "description": "no documentation available\n"
                    },
                    "rdsHighMemoryDetection": {
                        "$ref": "#/types/dynatrace:index/AwsAnomaliesRdsHighMemoryDetection:AwsAnomaliesRdsHighMemoryDetection",
                        "description": "no documentation available\n"
                    },
                    "rdsHighWriteReadLatencyDetection": {
                        "$ref": "#/types/dynatrace:index/AwsAnomaliesRdsHighWriteReadLatencyDetection:AwsAnomaliesRdsHighWriteReadLatencyDetection",
                        "description": "no documentation available\n"
                    },
                    "rdsLowStorageDetection": {
                        "$ref": "#/types/dynatrace:index/AwsAnomaliesRdsLowStorageDetection:AwsAnomaliesRdsLowStorageDetection",
                        "description": "no documentation available\n"
                    },
                    "rdsRestartsSequenceDetection": {
                        "$ref": "#/types/dynatrace:index/AwsAnomaliesRdsRestartsSequenceDetection:AwsAnomaliesRdsRestartsSequenceDetection",
                        "description": "no documentation available\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/awsCredentials:AwsCredentials": {
            "properties": {
                "authenticationData": {
                    "$ref": "#/types/dynatrace:index/AwsCredentialsAuthenticationData:AwsCredentialsAuthenticationData",
                    "description": "credentials for the AWS authentication\n"
                },
                "label": {
                    "type": "string",
                    "description": "The name of the credentials\n"
                },
                "partitionType": {
                    "type": "string",
                    "description": "The type of the AWS partition\n"
                },
                "removeDefaults": {
                    "type": "boolean",
                    "description": "Instructs the provider to remove the supporting services Dynatrace applies by default to newly created AWS Credentials. Supporting Services applied by via `dynatrace.AwsService` subsequently won't get touched.\n"
                },
                "supportingServicesManagedInDynatrace": {
                    "type": "boolean",
                    "description": "If enabled (`true`) the attribute `supporting_services` will not get synchronized with Dynatrace. You will be able to\nmanage them via WebUI without interference by Terraform.\n",
                    "deprecationMessage": "Supporting Services are no longer getting managed via this resource. Regardless of the value set here, this resource won't affect the supporting services during updates"
                },
                "supportingServicesToMonitors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AwsCredentialsSupportingServicesToMonitor:AwsCredentialsSupportingServicesToMonitor"
                    },
                    "description": "supporting services to be monitored\n",
                    "deprecationMessage": "Managing supporting services directly within AWS Credentials has been deprecated within the REST API. This attribute just exists for backwards compatibility. It no longer has an effect. For managing services use the resource `dynatrace_aws_service`"
                },
                "taggedOnly": {
                    "type": "boolean",
                    "description": "Monitor only resources which have specified AWS tags (`true`) or all resources (`false`)\n"
                },
                "tagsToMonitors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AwsCredentialsTagsToMonitor:AwsCredentialsTagsToMonitor"
                    },
                    "description": "AWS tags to be monitored. You can specify up to 10 tags. Only applicable when the **tagged_only** parameter is set to `true`\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n"
                }
            },
            "required": [
                "authenticationData",
                "partitionType",
                "taggedOnly"
            ],
            "inputProperties": {
                "authenticationData": {
                    "$ref": "#/types/dynatrace:index/AwsCredentialsAuthenticationData:AwsCredentialsAuthenticationData",
                    "description": "credentials for the AWS authentication\n"
                },
                "label": {
                    "type": "string",
                    "description": "The name of the credentials\n"
                },
                "partitionType": {
                    "type": "string",
                    "description": "The type of the AWS partition\n"
                },
                "removeDefaults": {
                    "type": "boolean",
                    "description": "Instructs the provider to remove the supporting services Dynatrace applies by default to newly created AWS Credentials. Supporting Services applied by via `dynatrace.AwsService` subsequently won't get touched.\n"
                },
                "supportingServicesManagedInDynatrace": {
                    "type": "boolean",
                    "description": "If enabled (`true`) the attribute `supporting_services` will not get synchronized with Dynatrace. You will be able to\nmanage them via WebUI without interference by Terraform.\n",
                    "deprecationMessage": "Supporting Services are no longer getting managed via this resource. Regardless of the value set here, this resource won't affect the supporting services during updates"
                },
                "supportingServicesToMonitors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AwsCredentialsSupportingServicesToMonitor:AwsCredentialsSupportingServicesToMonitor"
                    },
                    "description": "supporting services to be monitored\n",
                    "deprecationMessage": "Managing supporting services directly within AWS Credentials has been deprecated within the REST API. This attribute just exists for backwards compatibility. It no longer has an effect. For managing services use the resource `dynatrace_aws_service`"
                },
                "taggedOnly": {
                    "type": "boolean",
                    "description": "Monitor only resources which have specified AWS tags (`true`) or all resources (`false`)\n"
                },
                "tagsToMonitors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AwsCredentialsTagsToMonitor:AwsCredentialsTagsToMonitor"
                    },
                    "description": "AWS tags to be monitored. You can specify up to 10 tags. Only applicable when the **tagged_only** parameter is set to `true`\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n"
                }
            },
            "requiredInputs": [
                "authenticationData",
                "partitionType",
                "taggedOnly"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AwsCredentials resources.\n",
                "properties": {
                    "authenticationData": {
                        "$ref": "#/types/dynatrace:index/AwsCredentialsAuthenticationData:AwsCredentialsAuthenticationData",
                        "description": "credentials for the AWS authentication\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The name of the credentials\n"
                    },
                    "partitionType": {
                        "type": "string",
                        "description": "The type of the AWS partition\n"
                    },
                    "removeDefaults": {
                        "type": "boolean",
                        "description": "Instructs the provider to remove the supporting services Dynatrace applies by default to newly created AWS Credentials. Supporting Services applied by via `dynatrace.AwsService` subsequently won't get touched.\n"
                    },
                    "supportingServicesManagedInDynatrace": {
                        "type": "boolean",
                        "description": "If enabled (`true`) the attribute `supporting_services` will not get synchronized with Dynatrace. You will be able to\nmanage them via WebUI without interference by Terraform.\n",
                        "deprecationMessage": "Supporting Services are no longer getting managed via this resource. Regardless of the value set here, this resource won't affect the supporting services during updates"
                    },
                    "supportingServicesToMonitors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/AwsCredentialsSupportingServicesToMonitor:AwsCredentialsSupportingServicesToMonitor"
                        },
                        "description": "supporting services to be monitored\n",
                        "deprecationMessage": "Managing supporting services directly within AWS Credentials has been deprecated within the REST API. This attribute just exists for backwards compatibility. It no longer has an effect. For managing services use the resource `dynatrace_aws_service`"
                    },
                    "taggedOnly": {
                        "type": "boolean",
                        "description": "Monitor only resources which have specified AWS tags (`true`) or all resources (`false`)\n"
                    },
                    "tagsToMonitors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/AwsCredentialsTagsToMonitor:AwsCredentialsTagsToMonitor"
                        },
                        "description": "AWS tags to be monitored. You can specify up to 10 tags. Only applicable when the **tagged_only** parameter is set to `true`\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "Any attributes that aren't yet supported by this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/awsService:AwsService": {
            "description": "\u003e This resource is excluded by default in the export utility.\n\n\u003e This resource requires the API token scopes **Read configuration** (`ReadConfig`) and **Write configuration** (`WriteConfig`)\n\n## Dynatrace Documentation\n\n- Amazon Web Services - https://www.dynatrace.com/support/help/setup-and-configuration/setup-on-cloud-platforms/amazon-web-services/amazon-web-services-integrations/aws-service-metrics\n\n- AWS credentials API - https://www.dynatrace.com/support/help/dynatrace-api/configuration-api/aws-credentials-api\n\n## Resource Example Usage\n\nThis example utilizes the data source `dynatrace.getAwsSupportedServices` in order to query for a full list of all supported services.\nThe `for_each` loop within the resource `dynatrace.AwsService` configures each of these services to get utilized with the default metrics recommended by Dynatrace (`use_recommended_metrics`).\n\nIf you want to configure a different set of metrics for a specific service, a separate resource `dynatrace.AwsService` will be necessary for that. That allows you to configure the `metric` blocks according to your wishes.\nJust be aware of the fact, that Dynatrace enforces for most services a recommended set of metrics. All of them need to be part of your configuration in order to end up with a non-empty plan.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nexport = async () =\u003e {\n    const tERRAFORMSAMPLE = new dynatrace.AwsCredentials(\"tERRAFORMSAMPLE\", {\n        label: \"TERRAFORM-TEST-001\",\n        partitionType: \"AWS_DEFAULT\",\n        taggedOnly: false,\n        authenticationData: {\n            accountId: \"246186168471\",\n            iamRole: \"Dynatrace_monitoring_role_demo1\",\n        },\n        removeDefaults: true,\n    });\n    const supportedServices = await dynatrace.getAwsSupportedServices({});\n    const tERRAFORMSAMPLEServices: dynatrace.AwsService[] = [];\n    for (const range of Object.entries(supportedServices.services).map(([k, v]) =\u003e ({key: k, value: v}))) {\n        tERRAFORMSAMPLEServices.push(new dynatrace.AwsService(`tERRAFORMSAMPLEServices-${range.key}`, {\n            credentialsId: tERRAFORMSAMPLE.id,\n            useRecommendedMetrics: true,\n        }));\n    }\n}\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\nimport pulumi_dynatrace as dynatrace\n\nt_erraformsample = dynatrace.AwsCredentials(\"tERRAFORMSAMPLE\",\n    label=\"TERRAFORM-TEST-001\",\n    partition_type=\"AWS_DEFAULT\",\n    tagged_only=False,\n    authentication_data=dynatrace.AwsCredentialsAuthenticationDataArgs(\n        account_id=\"246186168471\",\n        iam_role=\"Dynatrace_monitoring_role_demo1\",\n    ),\n    remove_defaults=True)\nsupported_services = dynatrace.get_aws_supported_services()\nt_erraformsample_services = []\nfor range in [{\"key\": k, \"value\": v} for [k, v] in enumerate(supported_services.services)]:\n    t_erraformsample_services.append(dynatrace.AwsService(f\"tERRAFORMSAMPLEServices-{range['key']}\",\n        credentials_id=t_erraformsample.id,\n        use_recommended_metrics=True))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Threading.Tasks;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(async() =\u003e \n{\n    var tERRAFORMSAMPLE = new Dynatrace.AwsCredentials(\"tERRAFORMSAMPLE\", new()\n    {\n        Label = \"TERRAFORM-TEST-001\",\n        PartitionType = \"AWS_DEFAULT\",\n        TaggedOnly = false,\n        AuthenticationData = new Dynatrace.Inputs.AwsCredentialsAuthenticationDataArgs\n        {\n            AccountId = \"246186168471\",\n            IamRole = \"Dynatrace_monitoring_role_demo1\",\n        },\n        RemoveDefaults = true,\n    });\n\n    var supportedServices = await Dynatrace.GetAwsSupportedServices.InvokeAsync();\n\n    var tERRAFORMSAMPLEServices = new List\u003cDynatrace.AwsService\u003e();\n    foreach (var range in )\n    {\n        tERRAFORMSAMPLEServices.Add(new Dynatrace.AwsService($\"tERRAFORMSAMPLEServices-{range.Key}\", new()\n        {\n            CredentialsId = tERRAFORMSAMPLE.Id,\n            UseRecommendedMetrics = true,\n        }));\n    }\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttERRAFORMSAMPLE, err := dynatrace.NewAwsCredentials(ctx, \"tERRAFORMSAMPLE\", \u0026dynatrace.AwsCredentialsArgs{\n\t\t\tLabel:         pulumi.String(\"TERRAFORM-TEST-001\"),\n\t\t\tPartitionType: pulumi.String(\"AWS_DEFAULT\"),\n\t\t\tTaggedOnly:    pulumi.Bool(false),\n\t\t\tAuthenticationData: \u0026dynatrace.AwsCredentialsAuthenticationDataArgs{\n\t\t\t\tAccountId: pulumi.String(\"246186168471\"),\n\t\t\t\tIamRole:   pulumi.String(\"Dynatrace_monitoring_role_demo1\"),\n\t\t\t},\n\t\t\tRemoveDefaults: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tsupportedServices, err := dynatrace.GetAwsSupportedServices(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tvar tERRAFORMSAMPLEServices []*dynatrace.AwsService\n\t\tfor key0, _ := range supportedServices.Services {\n\t\t\t__res, err := dynatrace.NewAwsService(ctx, fmt.Sprintf(\"tERRAFORMSAMPLEServices-%v\", key0), \u0026dynatrace.AwsServiceArgs{\n\t\t\t\tCredentialsId:         tERRAFORMSAMPLE.ID(),\n\t\t\t\tUseRecommendedMetrics: pulumi.Bool(true),\n\t\t\t})\n\t\t\tif err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t\ttERRAFORMSAMPLEServices = append(tERRAFORMSAMPLEServices, __res)\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.AwsCredentials;\nimport com.pulumi.dynatrace.AwsCredentialsArgs;\nimport com.pulumi.dynatrace.inputs.AwsCredentialsAuthenticationDataArgs;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetAwsSupportedServicesArgs;\nimport com.pulumi.dynatrace.AwsService;\nimport com.pulumi.dynatrace.AwsServiceArgs;\nimport com.pulumi.codegen.internal.KeyedValue;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var tERRAFORMSAMPLE = new AwsCredentials(\"tERRAFORMSAMPLE\", AwsCredentialsArgs.builder()        \n            .label(\"TERRAFORM-TEST-001\")\n            .partitionType(\"AWS_DEFAULT\")\n            .taggedOnly(false)\n            .authenticationData(AwsCredentialsAuthenticationDataArgs.builder()\n                .accountId(\"246186168471\")\n                .iamRole(\"Dynatrace_monitoring_role_demo1\")\n                .build())\n            .removeDefaults(true)\n            .build());\n\n        final var supportedServices = DynatraceFunctions.getAwsSupportedServices();\n\n        final var tERRAFORMSAMPLEServices = supportedServices.applyValue(getAwsSupportedServicesResult -\u003e {\n            final var resources = new ArrayList\u003cAwsService\u003e();\n            for (var range : KeyedValue.of(getAwsSupportedServicesResult.services()) {\n                var resource = new AwsService(\"tERRAFORMSAMPLEServices-\" + range.key(), AwsServiceArgs.builder()                \n                    .credentialsId(tERRAFORMSAMPLE.id())\n                    .useRecommendedMetrics(true)\n                    .build());\n\n                resources.add(resource);\n            }\n\n            return resources;\n        });\n\n    }\n}\n```\n```yaml\nresources:\n  tERRAFORMSAMPLE:\n    type: dynatrace:AwsCredentials\n    properties:\n      label: TERRAFORM-TEST-001\n      partitionType: AWS_DEFAULT\n      taggedOnly: false\n      authenticationData:\n        accountId: '246186168471'\n        iamRole: Dynatrace_monitoring_role_demo1\n      removeDefaults: true\n  tERRAFORMSAMPLEServices:\n    type: dynatrace:AwsService\n    properties:\n      credentialsId: ${tERRAFORMSAMPLE.id}\n      useRecommendedMetrics: true\n    options: {}\nvariables:\n  supportedServices:\n    fn::invoke:\n      Function: dynatrace:getAwsSupportedServices\n      Arguments: {}\n```\n",
            "properties": {
                "builtIn": {
                    "type": "boolean",
                    "description": "This attribute is automatically set to `true` if Dynatrace considers the supporting service with the given name to be a built-in service\n"
                },
                "credentialsId": {
                    "type": "string",
                    "description": "the ID of the azure credentials this supported service belongs to\n"
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AwsServiceMetric:AwsServiceMetric"
                    },
                    "description": "A list of metrics to be monitored for this service. Depending on the service Dynatrace insists on a set of recommended\nmetrics to be configured for that service. If any of these recommended metrics is missing here, the Terraform Provider\nwill automatically add them during `terraform apply`. This usually results in a non-empty plan, until all of the\nrecommended metrics are present within your configuration. For services considered `built-in` by Dynatrace any metrics\nspecified here will be ignored - Dynatrace enforces a fixed set of metrics for these services.\n"
                },
                "name": {
                    "type": "string",
                    "description": "the name of the metric of the supporting service\n"
                },
                "requiredMetrics": {
                    "type": "string",
                    "description": "Used internally by the Terraform Provider in order to remember the metrics enforced by Dynatrace\n"
                },
                "useRecommendedMetrics": {
                    "type": "boolean",
                    "description": "If `true` Terraform will negotiate with the Dynatrace API about the recommended/enforced metrics to be applied. Any\n`metric` specified will be therefore ignored.\n"
                }
            },
            "required": [
                "builtIn",
                "credentialsId",
                "name",
                "requiredMetrics"
            ],
            "inputProperties": {
                "credentialsId": {
                    "type": "string",
                    "description": "the ID of the azure credentials this supported service belongs to\n",
                    "willReplaceOnChanges": true
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AwsServiceMetric:AwsServiceMetric"
                    },
                    "description": "A list of metrics to be monitored for this service. Depending on the service Dynatrace insists on a set of recommended\nmetrics to be configured for that service. If any of these recommended metrics is missing here, the Terraform Provider\nwill automatically add them during `terraform apply`. This usually results in a non-empty plan, until all of the\nrecommended metrics are present within your configuration. For services considered `built-in` by Dynatrace any metrics\nspecified here will be ignored - Dynatrace enforces a fixed set of metrics for these services.\n"
                },
                "name": {
                    "type": "string",
                    "description": "the name of the metric of the supporting service\n",
                    "willReplaceOnChanges": true
                },
                "useRecommendedMetrics": {
                    "type": "boolean",
                    "description": "If `true` Terraform will negotiate with the Dynatrace API about the recommended/enforced metrics to be applied. Any\n`metric` specified will be therefore ignored.\n"
                }
            },
            "requiredInputs": [
                "credentialsId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AwsService resources.\n",
                "properties": {
                    "builtIn": {
                        "type": "boolean",
                        "description": "This attribute is automatically set to `true` if Dynatrace considers the supporting service with the given name to be a built-in service\n"
                    },
                    "credentialsId": {
                        "type": "string",
                        "description": "the ID of the azure credentials this supported service belongs to\n",
                        "willReplaceOnChanges": true
                    },
                    "metrics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/AwsServiceMetric:AwsServiceMetric"
                        },
                        "description": "A list of metrics to be monitored for this service. Depending on the service Dynatrace insists on a set of recommended\nmetrics to be configured for that service. If any of these recommended metrics is missing here, the Terraform Provider\nwill automatically add them during `terraform apply`. This usually results in a non-empty plan, until all of the\nrecommended metrics are present within your configuration. For services considered `built-in` by Dynatrace any metrics\nspecified here will be ignored - Dynatrace enforces a fixed set of metrics for these services.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "the name of the metric of the supporting service\n",
                        "willReplaceOnChanges": true
                    },
                    "requiredMetrics": {
                        "type": "string",
                        "description": "Used internally by the Terraform Provider in order to remember the metrics enforced by Dynatrace\n"
                    },
                    "useRecommendedMetrics": {
                        "type": "boolean",
                        "description": "If `true` Terraform will negotiate with the Dynatrace API about the recommended/enforced metrics to be applied. Any\n`metric` specified will be therefore ignored.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/azureCredentials:AzureCredentials": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The monitoring is enabled (`true`) or disabled (`false`).  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected\n"
                },
                "appId": {
                    "type": "string",
                    "description": "The Application ID (also referred to as Client ID)  The combination of Application ID and Directory ID must be unique\n"
                },
                "autoTagging": {
                    "type": "boolean",
                    "description": "The automatic capture of Azure tags is on (`true`) or off (`false`)\n"
                },
                "directoryId": {
                    "type": "string",
                    "description": "The Directory ID (also referred to as Tenant ID)  The combination of Application ID and Directory ID must be unique\n"
                },
                "key": {
                    "type": "string",
                    "description": "The secret key associated with the Application ID.  For security reasons, GET requests return this field as `null`. Submit your key on creation or update of the configuration. If the field is omitted during an update, the old value remains unaffected.\n",
                    "secret": true
                },
                "label": {
                    "type": "string",
                    "description": "The unique name of the Azure credentials configuration.  Allowed characters are letters, numbers, and spaces. Also the special characters `.+-_` are allowed\n"
                },
                "monitorOnlyExcludingTagPairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AzureCredentialsMonitorOnlyExcludingTagPair:AzureCredentialsMonitorOnlyExcludingTagPair"
                    },
                    "description": "A list of Azure tags to be excluded from monitoring.  You can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`.\n"
                },
                "monitorOnlyTagPairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AzureCredentialsMonitorOnlyTagPair:AzureCredentialsMonitorOnlyTagPair"
                    },
                    "description": "A list of Azure tags to be monitored.  You can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`\n"
                },
                "monitorOnlyTaggedEntities": {
                    "type": "boolean",
                    "description": "Monitor only resources that have specified Azure tags (`true`) or all resources (`false`).\n"
                },
                "removeDefaults": {
                    "type": "boolean",
                    "description": "Instructs the provider to remove the supporting services Dynatrace applies by default to newly created Azure Credentials. Supporting Services applied by via `dynatrace.AzureService` subsequently won't get touched.\n"
                },
                "supportingServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AzureCredentialsSupportingService:AzureCredentialsSupportingService"
                    },
                    "description": "A list of Azure supporting services to be monitored. For each service there's a sublist of its metrics and the metrics' dimensions that should be monitored. All of these elements (services, metrics, dimensions) must have corresponding static definitions on the server.\n",
                    "deprecationMessage": "Assigning supported services directly when creating Azure Credentials is deprecated. Use the resource `dynatrace_azure_service` instead."
                },
                "supportingServicesManagedInDynatrace": {
                    "type": "boolean",
                    "description": "If enabled (`true`) the attribute `supporting_services` will not get synchronized with Dynatrace. You will be able to\nmanage them via WebUI without interference by Terraform.\n",
                    "deprecationMessage": "This attribute is deprecated and has no effect any more. It always defaults to `true`."
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n"
                }
            },
            "required": [
                "active",
                "monitorOnlyTaggedEntities"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "The monitoring is enabled (`true`) or disabled (`false`).  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected\n"
                },
                "appId": {
                    "type": "string",
                    "description": "The Application ID (also referred to as Client ID)  The combination of Application ID and Directory ID must be unique\n"
                },
                "autoTagging": {
                    "type": "boolean",
                    "description": "The automatic capture of Azure tags is on (`true`) or off (`false`)\n"
                },
                "directoryId": {
                    "type": "string",
                    "description": "The Directory ID (also referred to as Tenant ID)  The combination of Application ID and Directory ID must be unique\n"
                },
                "key": {
                    "type": "string",
                    "description": "The secret key associated with the Application ID.  For security reasons, GET requests return this field as `null`. Submit your key on creation or update of the configuration. If the field is omitted during an update, the old value remains unaffected.\n",
                    "secret": true
                },
                "label": {
                    "type": "string",
                    "description": "The unique name of the Azure credentials configuration.  Allowed characters are letters, numbers, and spaces. Also the special characters `.+-_` are allowed\n"
                },
                "monitorOnlyExcludingTagPairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AzureCredentialsMonitorOnlyExcludingTagPair:AzureCredentialsMonitorOnlyExcludingTagPair"
                    },
                    "description": "A list of Azure tags to be excluded from monitoring.  You can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`.\n"
                },
                "monitorOnlyTagPairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AzureCredentialsMonitorOnlyTagPair:AzureCredentialsMonitorOnlyTagPair"
                    },
                    "description": "A list of Azure tags to be monitored.  You can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`\n"
                },
                "monitorOnlyTaggedEntities": {
                    "type": "boolean",
                    "description": "Monitor only resources that have specified Azure tags (`true`) or all resources (`false`).\n"
                },
                "removeDefaults": {
                    "type": "boolean",
                    "description": "Instructs the provider to remove the supporting services Dynatrace applies by default to newly created Azure Credentials. Supporting Services applied by via `dynatrace.AzureService` subsequently won't get touched.\n"
                },
                "supportingServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AzureCredentialsSupportingService:AzureCredentialsSupportingService"
                    },
                    "description": "A list of Azure supporting services to be monitored. For each service there's a sublist of its metrics and the metrics' dimensions that should be monitored. All of these elements (services, metrics, dimensions) must have corresponding static definitions on the server.\n",
                    "deprecationMessage": "Assigning supported services directly when creating Azure Credentials is deprecated. Use the resource `dynatrace_azure_service` instead."
                },
                "supportingServicesManagedInDynatrace": {
                    "type": "boolean",
                    "description": "If enabled (`true`) the attribute `supporting_services` will not get synchronized with Dynatrace. You will be able to\nmanage them via WebUI without interference by Terraform.\n",
                    "deprecationMessage": "This attribute is deprecated and has no effect any more. It always defaults to `true`."
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n"
                }
            },
            "requiredInputs": [
                "active",
                "monitorOnlyTaggedEntities"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AzureCredentials resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "The monitoring is enabled (`true`) or disabled (`false`).  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected\n"
                    },
                    "appId": {
                        "type": "string",
                        "description": "The Application ID (also referred to as Client ID)  The combination of Application ID and Directory ID must be unique\n"
                    },
                    "autoTagging": {
                        "type": "boolean",
                        "description": "The automatic capture of Azure tags is on (`true`) or off (`false`)\n"
                    },
                    "directoryId": {
                        "type": "string",
                        "description": "The Directory ID (also referred to as Tenant ID)  The combination of Application ID and Directory ID must be unique\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The secret key associated with the Application ID.  For security reasons, GET requests return this field as `null`. Submit your key on creation or update of the configuration. If the field is omitted during an update, the old value remains unaffected.\n",
                        "secret": true
                    },
                    "label": {
                        "type": "string",
                        "description": "The unique name of the Azure credentials configuration.  Allowed characters are letters, numbers, and spaces. Also the special characters `.+-_` are allowed\n"
                    },
                    "monitorOnlyExcludingTagPairs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/AzureCredentialsMonitorOnlyExcludingTagPair:AzureCredentialsMonitorOnlyExcludingTagPair"
                        },
                        "description": "A list of Azure tags to be excluded from monitoring.  You can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`.\n"
                    },
                    "monitorOnlyTagPairs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/AzureCredentialsMonitorOnlyTagPair:AzureCredentialsMonitorOnlyTagPair"
                        },
                        "description": "A list of Azure tags to be monitored.  You can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`\n"
                    },
                    "monitorOnlyTaggedEntities": {
                        "type": "boolean",
                        "description": "Monitor only resources that have specified Azure tags (`true`) or all resources (`false`).\n"
                    },
                    "removeDefaults": {
                        "type": "boolean",
                        "description": "Instructs the provider to remove the supporting services Dynatrace applies by default to newly created Azure Credentials. Supporting Services applied by via `dynatrace.AzureService` subsequently won't get touched.\n"
                    },
                    "supportingServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/AzureCredentialsSupportingService:AzureCredentialsSupportingService"
                        },
                        "description": "A list of Azure supporting services to be monitored. For each service there's a sublist of its metrics and the metrics' dimensions that should be monitored. All of these elements (services, metrics, dimensions) must have corresponding static definitions on the server.\n",
                        "deprecationMessage": "Assigning supported services directly when creating Azure Credentials is deprecated. Use the resource `dynatrace_azure_service` instead."
                    },
                    "supportingServicesManagedInDynatrace": {
                        "type": "boolean",
                        "description": "If enabled (`true`) the attribute `supporting_services` will not get synchronized with Dynatrace. You will be able to\nmanage them via WebUI without interference by Terraform.\n",
                        "deprecationMessage": "This attribute is deprecated and has no effect any more. It always defaults to `true`."
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "Any attributes that aren't yet supported by this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/azureService:AzureService": {
            "description": "\u003e This resource is excluded by default in the export utility.\n\n\u003e This resource requires the API token scopes **Read configuration** (`ReadConfig`) and **Write configuration** (`WriteConfig`)\n\n## Dynatrace Documentation\n\n- Microsoft Azure monitoring - https://www.dynatrace.com/support/help/how-to-use-dynatrace/infrastructure-monitoring/cloud-platform-monitoring/microsoft-azure-services-monitoring\n\n- Azure credentials API - https://www.dynatrace.com/support/help/dynatrace-api/configuration-api/azure-credentials-api\n\n## Resource Example Usage\n\nThis example utilizes the data source `dynatrace.getAzureSupportedServices` in order to query for a full list of all supported services.\nThe `for_each` loop within the resource `dynatrace.AzureService` configures each of these services to get utilized with the default metrics recommended by Dynatrace (`use_recommended_metrics`).\n\nIf you want to configure a different set of metrics for a specific service, a separate resource `dynatrace.AzureService` will be necessary for that. That allows you to configure the `metric` blocks according to your wishes.\nJust be aware of the fact, that Dynatrace enforces for most services a recommended set of metrics. All of them need to be part of your configuration in order to end up with a non-empty plan.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nexport = async () =\u003e {\n    const tERRAFORMSAMPLE = new dynatrace.AzureCredentials(\"tERRAFORMSAMPLE\", {\n        active: false,\n        appId: \"ABCDE\",\n        autoTagging: true,\n        directoryId: \"ABCDE\",\n        label: \"TERRAFORM_SAMPLE\",\n        key: \"aaaa\",\n        monitorOnlyTaggedEntities: true,\n        monitorOnlyTagPairs: [{\n            name: \"string\",\n            value: \"string\",\n        }],\n    });\n    const supportedServices = await dynatrace.getAzureSupportedServices({\n        excepts: [\"AZURE_STORAGE_ACCOUNT\"],\n    });\n    const tERRAFORMSAMPLEServices: dynatrace.AzureService[] = [];\n    for (const range of Object.entries(supportedServices.services).map(([k, v]) =\u003e ({key: k, value: v}))) {\n        tERRAFORMSAMPLEServices.push(new dynatrace.AzureService(`tERRAFORMSAMPLEServices-${range.key}`, {\n            credentialsId: tERRAFORMSAMPLE.id,\n            useRecommendedMetrics: true,\n        }));\n    }\n}\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\nimport pulumi_dynatrace as dynatrace\n\nt_erraformsample = dynatrace.AzureCredentials(\"tERRAFORMSAMPLE\",\n    active=False,\n    app_id=\"ABCDE\",\n    auto_tagging=True,\n    directory_id=\"ABCDE\",\n    label=\"TERRAFORM_SAMPLE\",\n    key=\"aaaa\",\n    monitor_only_tagged_entities=True,\n    monitor_only_tag_pairs=[dynatrace.AzureCredentialsMonitorOnlyTagPairArgs(\n        name=\"string\",\n        value=\"string\",\n    )])\nsupported_services = dynatrace.get_azure_supported_services(excepts=[\"AZURE_STORAGE_ACCOUNT\"])\nt_erraformsample_services = []\nfor range in [{\"key\": k, \"value\": v} for [k, v] in enumerate(supported_services.services)]:\n    t_erraformsample_services.append(dynatrace.AzureService(f\"tERRAFORMSAMPLEServices-{range['key']}\",\n        credentials_id=t_erraformsample.id,\n        use_recommended_metrics=True))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Threading.Tasks;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(async() =\u003e \n{\n    var tERRAFORMSAMPLE = new Dynatrace.AzureCredentials(\"tERRAFORMSAMPLE\", new()\n    {\n        Active = false,\n        AppId = \"ABCDE\",\n        AutoTagging = true,\n        DirectoryId = \"ABCDE\",\n        Label = \"TERRAFORM_SAMPLE\",\n        Key = \"aaaa\",\n        MonitorOnlyTaggedEntities = true,\n        MonitorOnlyTagPairs = new[]\n        {\n            new Dynatrace.Inputs.AzureCredentialsMonitorOnlyTagPairArgs\n            {\n                Name = \"string\",\n                Value = \"string\",\n            },\n        },\n    });\n\n    var supportedServices = await Dynatrace.GetAzureSupportedServices.InvokeAsync(new()\n    {\n        Excepts = new[]\n        {\n            \"AZURE_STORAGE_ACCOUNT\",\n        },\n    });\n\n    var tERRAFORMSAMPLEServices = new List\u003cDynatrace.AzureService\u003e();\n    foreach (var range in )\n    {\n        tERRAFORMSAMPLEServices.Add(new Dynatrace.AzureService($\"tERRAFORMSAMPLEServices-{range.Key}\", new()\n        {\n            CredentialsId = tERRAFORMSAMPLE.Id,\n            UseRecommendedMetrics = true,\n        }));\n    }\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttERRAFORMSAMPLE, err := dynatrace.NewAzureCredentials(ctx, \"tERRAFORMSAMPLE\", \u0026dynatrace.AzureCredentialsArgs{\n\t\t\tActive:                    pulumi.Bool(false),\n\t\t\tAppId:                     pulumi.String(\"ABCDE\"),\n\t\t\tAutoTagging:               pulumi.Bool(true),\n\t\t\tDirectoryId:               pulumi.String(\"ABCDE\"),\n\t\t\tLabel:                     pulumi.String(\"TERRAFORM_SAMPLE\"),\n\t\t\tKey:                       pulumi.String(\"aaaa\"),\n\t\t\tMonitorOnlyTaggedEntities: pulumi.Bool(true),\n\t\t\tMonitorOnlyTagPairs: dynatrace.AzureCredentialsMonitorOnlyTagPairArray{\n\t\t\t\t\u0026dynatrace.AzureCredentialsMonitorOnlyTagPairArgs{\n\t\t\t\t\tName:  pulumi.String(\"string\"),\n\t\t\t\t\tValue: pulumi.String(\"string\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tsupportedServices, err := dynatrace.GetAzureSupportedServices(ctx, \u0026dynatrace.GetAzureSupportedServicesArgs{\n\t\t\tExcepts: []string{\n\t\t\t\t\"AZURE_STORAGE_ACCOUNT\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tvar tERRAFORMSAMPLEServices []*dynatrace.AzureService\n\t\tfor key0, _ := range supportedServices.Services {\n\t\t\t__res, err := dynatrace.NewAzureService(ctx, fmt.Sprintf(\"tERRAFORMSAMPLEServices-%v\", key0), \u0026dynatrace.AzureServiceArgs{\n\t\t\t\tCredentialsId:         tERRAFORMSAMPLE.ID(),\n\t\t\t\tUseRecommendedMetrics: pulumi.Bool(true),\n\t\t\t})\n\t\t\tif err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t\ttERRAFORMSAMPLEServices = append(tERRAFORMSAMPLEServices, __res)\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.AzureCredentials;\nimport com.pulumi.dynatrace.AzureCredentialsArgs;\nimport com.pulumi.dynatrace.inputs.AzureCredentialsMonitorOnlyTagPairArgs;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetAzureSupportedServicesArgs;\nimport com.pulumi.dynatrace.AzureService;\nimport com.pulumi.dynatrace.AzureServiceArgs;\nimport com.pulumi.codegen.internal.KeyedValue;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var tERRAFORMSAMPLE = new AzureCredentials(\"tERRAFORMSAMPLE\", AzureCredentialsArgs.builder()        \n            .active(false)\n            .appId(\"ABCDE\")\n            .autoTagging(true)\n            .directoryId(\"ABCDE\")\n            .label(\"TERRAFORM_SAMPLE\")\n            .key(\"aaaa\")\n            .monitorOnlyTaggedEntities(true)\n            .monitorOnlyTagPairs(AzureCredentialsMonitorOnlyTagPairArgs.builder()\n                .name(\"string\")\n                .value(\"string\")\n                .build())\n            .build());\n\n        final var supportedServices = DynatraceFunctions.getAzureSupportedServices(GetAzureSupportedServicesArgs.builder()\n            .excepts(\"AZURE_STORAGE_ACCOUNT\")\n            .build());\n\n        final var tERRAFORMSAMPLEServices = supportedServices.applyValue(getAzureSupportedServicesResult -\u003e {\n            final var resources = new ArrayList\u003cAzureService\u003e();\n            for (var range : KeyedValue.of(getAzureSupportedServicesResult.services()) {\n                var resource = new AzureService(\"tERRAFORMSAMPLEServices-\" + range.key(), AzureServiceArgs.builder()                \n                    .credentialsId(tERRAFORMSAMPLE.id())\n                    .useRecommendedMetrics(true)\n                    .build());\n\n                resources.add(resource);\n            }\n\n            return resources;\n        });\n\n    }\n}\n```\n```yaml\nresources:\n  tERRAFORMSAMPLE:\n    type: dynatrace:AzureCredentials\n    properties:\n      active: false\n      appId: ABCDE\n      autoTagging: true\n      directoryId: ABCDE\n      label: TERRAFORM_SAMPLE\n      key: aaaa\n      monitorOnlyTaggedEntities: true\n      monitorOnlyTagPairs:\n        - name: string\n          value: string\n  tERRAFORMSAMPLEServices:\n    type: dynatrace:AzureService\n    properties:\n      credentialsId: ${tERRAFORMSAMPLE.id}\n      useRecommendedMetrics: true\n    options: {}\nvariables:\n  supportedServices:\n    fn::invoke:\n      Function: dynatrace:getAzureSupportedServices\n      Arguments:\n        excepts:\n          - AZURE_STORAGE_ACCOUNT\n```\n",
            "properties": {
                "builtIn": {
                    "type": "boolean",
                    "description": "This attribute is automatically set to `true` if Dynatrace considers the supporting service with the given name to be a built-in service\n"
                },
                "credentialsId": {
                    "type": "string",
                    "description": "the ID of the azure credentials this supported service belongs to\n"
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AzureServiceMetric:AzureServiceMetric"
                    },
                    "description": "A list of metrics to be monitored for this service. Depending on the service Dynatrace insists on a set of recommended\nmetrics to be configured for that service. If any of these recommended metrics is missing here, the Terraform Provider\nwill automatically add them during `terraform apply`. This usually results in a non-empty plan, until all of the\nrecommended metrics are present within your configuration. For services considered `built-in` by Dynatrace any metrics\nspecified here will be ignored - Dynatrace enforces a fixed set of metrics for these services.\n"
                },
                "name": {
                    "type": "string",
                    "description": "the name of the metric of the supporting service\n"
                },
                "requiredMetrics": {
                    "type": "string",
                    "description": "Used internally by the Terraform Provider in order to remember the metrics enforced by Dynatrace\n"
                },
                "useRecommendedMetrics": {
                    "type": "boolean",
                    "description": "If `true` Terraform will negotiate with the Dynatrace API about the recommended/enforced metrics to be applied. Any\n`metric` specified will be therefore ignored.\n"
                }
            },
            "required": [
                "builtIn",
                "credentialsId",
                "name",
                "requiredMetrics"
            ],
            "inputProperties": {
                "credentialsId": {
                    "type": "string",
                    "description": "the ID of the azure credentials this supported service belongs to\n",
                    "willReplaceOnChanges": true
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/AzureServiceMetric:AzureServiceMetric"
                    },
                    "description": "A list of metrics to be monitored for this service. Depending on the service Dynatrace insists on a set of recommended\nmetrics to be configured for that service. If any of these recommended metrics is missing here, the Terraform Provider\nwill automatically add them during `terraform apply`. This usually results in a non-empty plan, until all of the\nrecommended metrics are present within your configuration. For services considered `built-in` by Dynatrace any metrics\nspecified here will be ignored - Dynatrace enforces a fixed set of metrics for these services.\n"
                },
                "name": {
                    "type": "string",
                    "description": "the name of the metric of the supporting service\n",
                    "willReplaceOnChanges": true
                },
                "useRecommendedMetrics": {
                    "type": "boolean",
                    "description": "If `true` Terraform will negotiate with the Dynatrace API about the recommended/enforced metrics to be applied. Any\n`metric` specified will be therefore ignored.\n"
                }
            },
            "requiredInputs": [
                "credentialsId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AzureService resources.\n",
                "properties": {
                    "builtIn": {
                        "type": "boolean",
                        "description": "This attribute is automatically set to `true` if Dynatrace considers the supporting service with the given name to be a built-in service\n"
                    },
                    "credentialsId": {
                        "type": "string",
                        "description": "the ID of the azure credentials this supported service belongs to\n",
                        "willReplaceOnChanges": true
                    },
                    "metrics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/AzureServiceMetric:AzureServiceMetric"
                        },
                        "description": "A list of metrics to be monitored for this service. Depending on the service Dynatrace insists on a set of recommended\nmetrics to be configured for that service. If any of these recommended metrics is missing here, the Terraform Provider\nwill automatically add them during `terraform apply`. This usually results in a non-empty plan, until all of the\nrecommended metrics are present within your configuration. For services considered `built-in` by Dynatrace any metrics\nspecified here will be ignored - Dynatrace enforces a fixed set of metrics for these services.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "the name of the metric of the supporting service\n",
                        "willReplaceOnChanges": true
                    },
                    "requiredMetrics": {
                        "type": "string",
                        "description": "Used internally by the Terraform Provider in order to remember the metrics enforced by Dynatrace\n"
                    },
                    "useRecommendedMetrics": {
                        "type": "boolean",
                        "description": "If `true` Terraform will negotiate with the Dynatrace API about the recommended/enforced metrics to be applied. Any\n`metric` specified will be therefore ignored.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/browserMonitor:BrowserMonitor": {
            "properties": {
                "anomalyDetection": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorAnomalyDetection:BrowserMonitorAnomalyDetection",
                    "description": "The anomaly detection configuration.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Performance threshold is enabled (`true`) or disabled (`false`)\n"
                },
                "frequency": {
                    "type": "integer",
                    "description": "The frequency of the monitor, in minutes.\n"
                },
                "keyPerformanceMetrics": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorKeyPerformanceMetrics:BrowserMonitorKeyPerformanceMetrics",
                    "description": "The key performance metrics configuration\n"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of locations from which the monitor is executed. To specify a location, use its entity ID.\n"
                },
                "manuallyAssignedApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of manually assigned applications.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the cookie. The following cookie names are now allowed: `dtCookie`, `dtLatC`, `dtPC`, `rxVisitor`, `rxlatency`, `rxpc`, `rxsession` and `rxvt`\n"
                },
                "script": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScript:BrowserMonitorScript",
                    "description": "The Browser Script\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorTag:BrowserMonitorTag"
                    },
                    "description": "A set of tags assigned to the monitor. You can specify only the value of the tag here and the `CONTEXTLESS` context and\nsource 'USER' will be added automatically.\n"
                }
            },
            "required": [
                "frequency",
                "keyPerformanceMetrics",
                "name"
            ],
            "inputProperties": {
                "anomalyDetection": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorAnomalyDetection:BrowserMonitorAnomalyDetection",
                    "description": "The anomaly detection configuration.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Performance threshold is enabled (`true`) or disabled (`false`)\n"
                },
                "frequency": {
                    "type": "integer",
                    "description": "The frequency of the monitor, in minutes.\n"
                },
                "keyPerformanceMetrics": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorKeyPerformanceMetrics:BrowserMonitorKeyPerformanceMetrics",
                    "description": "The key performance metrics configuration\n"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of locations from which the monitor is executed. To specify a location, use its entity ID.\n"
                },
                "manuallyAssignedApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of manually assigned applications.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the cookie. The following cookie names are now allowed: `dtCookie`, `dtLatC`, `dtPC`, `rxVisitor`, `rxlatency`, `rxpc`, `rxsession` and `rxvt`\n"
                },
                "script": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorScript:BrowserMonitorScript",
                    "description": "The Browser Script\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorTag:BrowserMonitorTag"
                    },
                    "description": "A set of tags assigned to the monitor. You can specify only the value of the tag here and the `CONTEXTLESS` context and\nsource 'USER' will be added automatically.\n"
                }
            },
            "requiredInputs": [
                "frequency",
                "keyPerformanceMetrics"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BrowserMonitor resources.\n",
                "properties": {
                    "anomalyDetection": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorAnomalyDetection:BrowserMonitorAnomalyDetection",
                        "description": "The anomaly detection configuration.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Performance threshold is enabled (`true`) or disabled (`false`)\n"
                    },
                    "frequency": {
                        "type": "integer",
                        "description": "The frequency of the monitor, in minutes.\n"
                    },
                    "keyPerformanceMetrics": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorKeyPerformanceMetrics:BrowserMonitorKeyPerformanceMetrics",
                        "description": "The key performance metrics configuration\n"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of locations from which the monitor is executed. To specify a location, use its entity ID.\n"
                    },
                    "manuallyAssignedApps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of manually assigned applications.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the cookie. The following cookie names are now allowed: `dtCookie`, `dtLatC`, `dtPC`, `rxVisitor`, `rxlatency`, `rxpc`, `rxsession` and `rxvt`\n"
                    },
                    "script": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorScript:BrowserMonitorScript",
                        "description": "The Browser Script\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/BrowserMonitorTag:BrowserMonitorTag"
                        },
                        "description": "A set of tags assigned to the monitor. You can specify only the value of the tag here and the `CONTEXTLESS` context and\nsource 'USER' will be added automatically.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/browserMonitorOutage:BrowserMonitorOutage": {
            "properties": {
                "globalConsecutiveOutageCountThreshold": {
                    "type": "integer",
                    "description": "(Field has overlap with `dynatrace.BrowserMonitor`) Alert if all locations are unable to access my web application\n"
                },
                "globalOutages": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.BrowserMonitor`) Generate a problem and send an alert when the monitor is unavailable at all configured locations.\n"
                },
                "localConsecutiveOutageCountThreshold": {
                    "type": "integer",
                    "description": "(Field has overlap with `dynatrace.BrowserMonitor`) are unable to access my web application\n"
                },
                "localLocationOutageCountThreshold": {
                    "type": "integer",
                    "description": "(Field has overlap with `dynatrace.BrowserMonitor`) Alert if at least\n"
                },
                "localOutages": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.BrowserMonitor`) Generate a problem and send an alert when the monitor is unavailable for one or more consecutive runs at any location.\n"
                },
                "retryOnError": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.BrowserMonitor`) When enabled, which is the default, failing monitor executions are retried immediately one time to avoid false positives and only the second result is used. When disabled, we use the first result right away.\nRequires ActiveGate version 1.207+ for private locations.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (SYNTHETIC_TEST). Omit this property if you want to cover the whole environment.\n"
                }
            },
            "required": [
                "globalOutages",
                "localOutages",
                "retryOnError"
            ],
            "inputProperties": {
                "globalConsecutiveOutageCountThreshold": {
                    "type": "integer",
                    "description": "(Field has overlap with `dynatrace.BrowserMonitor`) Alert if all locations are unable to access my web application\n"
                },
                "globalOutages": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.BrowserMonitor`) Generate a problem and send an alert when the monitor is unavailable at all configured locations.\n"
                },
                "localConsecutiveOutageCountThreshold": {
                    "type": "integer",
                    "description": "(Field has overlap with `dynatrace.BrowserMonitor`) are unable to access my web application\n"
                },
                "localLocationOutageCountThreshold": {
                    "type": "integer",
                    "description": "(Field has overlap with `dynatrace.BrowserMonitor`) Alert if at least\n"
                },
                "localOutages": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.BrowserMonitor`) Generate a problem and send an alert when the monitor is unavailable for one or more consecutive runs at any location.\n"
                },
                "retryOnError": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.BrowserMonitor`) When enabled, which is the default, failing monitor executions are retried immediately one time to avoid false positives and only the second result is used. When disabled, we use the first result right away.\nRequires ActiveGate version 1.207+ for private locations.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (SYNTHETIC_TEST). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "globalOutages",
                "localOutages",
                "retryOnError"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BrowserMonitorOutage resources.\n",
                "properties": {
                    "globalConsecutiveOutageCountThreshold": {
                        "type": "integer",
                        "description": "(Field has overlap with `dynatrace.BrowserMonitor`) Alert if all locations are unable to access my web application\n"
                    },
                    "globalOutages": {
                        "type": "boolean",
                        "description": "(Field has overlap with `dynatrace.BrowserMonitor`) Generate a problem and send an alert when the monitor is unavailable at all configured locations.\n"
                    },
                    "localConsecutiveOutageCountThreshold": {
                        "type": "integer",
                        "description": "(Field has overlap with `dynatrace.BrowserMonitor`) are unable to access my web application\n"
                    },
                    "localLocationOutageCountThreshold": {
                        "type": "integer",
                        "description": "(Field has overlap with `dynatrace.BrowserMonitor`) Alert if at least\n"
                    },
                    "localOutages": {
                        "type": "boolean",
                        "description": "(Field has overlap with `dynatrace.BrowserMonitor`) Generate a problem and send an alert when the monitor is unavailable for one or more consecutive runs at any location.\n"
                    },
                    "retryOnError": {
                        "type": "boolean",
                        "description": "(Field has overlap with `dynatrace.BrowserMonitor`) When enabled, which is the default, failing monitor executions are retried immediately one time to avoid false positives and only the second result is used. When disabled, we use the first result right away.\nRequires ActiveGate version 1.207+ for private locations.\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (SYNTHETIC_TEST). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/browserMonitorPerformance:BrowserMonitorPerformance": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (SYNTHETIC_TEST)\n"
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorPerformanceThresholds:BrowserMonitorPerformanceThresholds",
                    "description": "Performance thresholds\n"
                }
            },
            "required": [
                "enabled",
                "scope"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (SYNTHETIC_TEST)\n",
                    "willReplaceOnChanges": true
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/BrowserMonitorPerformanceThresholds:BrowserMonitorPerformanceThresholds",
                    "description": "Performance thresholds\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "scope"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BrowserMonitorPerformance resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (SYNTHETIC_TEST)\n",
                        "willReplaceOnChanges": true
                    },
                    "thresholds": {
                        "$ref": "#/types/dynatrace:index/BrowserMonitorPerformanceThresholds:BrowserMonitorPerformanceThresholds",
                        "description": "Performance thresholds\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/builtinProcessMonitoring:BuiltinProcessMonitoring": {
            "properties": {
                "aspnetcore": {
                    "type": "boolean",
                    "description": "Rule id: 3 - Do monitor processes if ASP.NET Core application path exists\n"
                },
                "aspnetcoreAgentlistener": {
                    "type": "boolean",
                    "description": "Rule id: 64 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Listener'\n"
                },
                "aspnetcoreAgentworker": {
                    "type": "boolean",
                    "description": "Rule id: 62 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Worker'\n"
                },
                "cf": {
                    "type": "boolean",
                    "description": "Rule id: 37 - Do monitor processes if Cloud Foundry application exists\n"
                },
                "cfAppsmanagerjs": {
                    "type": "boolean",
                    "description": "Do not monitor processes if Cloud Foundry application begins with 'apps-manager-js'\n"
                },
                "container": {
                    "type": "boolean",
                    "description": "Rule id: 41 - Do monitor processes if container name exists\n"
                },
                "dockerPauseamd64": {
                    "type": "boolean",
                    "description": "Rule id: 39 - Do not monitor processes if Docker stripped image contains 'pause-amd64'\n"
                },
                "exeAdapter": {
                    "type": "boolean",
                    "description": "Rule id: 7 - Do monitor processes if EXE name equals 'adapter'\n"
                },
                "exeAgentlistener": {
                    "type": "boolean",
                    "description": "Rule id: 63 - Do not monitor processes if EXE name contains 'Agent.Listener'\n"
                },
                "exeAgentworker": {
                    "type": "boolean",
                    "description": "Rule id: 61 - Do not monitor processes if EXE name contains 'Agent.Worker'\n"
                },
                "exeAuctioneer": {
                    "type": "boolean",
                    "description": "Rule id: 8 - Do monitor processes if EXE name equals 'auctioneer'\n"
                },
                "exeAuditbeat": {
                    "type": "boolean",
                    "description": "Rule id: 52 - Do not monitor processes if EXE name equals 'auditbeat'\n"
                },
                "exeBbs": {
                    "type": "boolean",
                    "description": "Rule id: 9 - Do monitor processes if EXE name equals 'bbs'\n"
                },
                "exeCaddy": {
                    "type": "boolean",
                    "description": "Rule id: 5 - Do monitor processes if EXE name equals 'caddy'\n"
                },
                "exeCaliconode": {
                    "type": "boolean",
                    "description": "Rule id: 58 - Do not monitor processes if EXE name equals 'calico-node'\n"
                },
                "exeCasclient": {
                    "type": "boolean",
                    "description": "Rule id: 59 - Do not monitor processes if EXE name equals 'casclient.exe'\n"
                },
                "exeCcuploader": {
                    "type": "boolean",
                    "description": "Rule id: 10 - Do monitor processes if EXE name equals 'cc-uploader'\n"
                },
                "exeDoppler": {
                    "type": "boolean",
                    "description": "Rule id: 11 - Do monitor processes if EXE name equals 'doppler'\n"
                },
                "exeFilebeat": {
                    "type": "boolean",
                    "description": "Rule id: 49 - Do not monitor processes if EXE name equals 'filebeat'\n"
                },
                "exeFlexnetjobexecutorservice": {
                    "type": "boolean",
                    "description": "Rule id: 65 - Do not monitor processes if EXE name equals 'FlexNetJobExecutorService'\n"
                },
                "exeFlexnetmaintenanceremotingservice": {
                    "type": "boolean",
                    "description": "Rule id: 66 - Do not monitor processes if EXE name equals 'FlexNetMaintenanceRemotingService'\n"
                },
                "exeFunctionbeat": {
                    "type": "boolean",
                    "description": "Rule id: 54 - Do not monitor processes if EXE name equals 'functionbeat'\n"
                },
                "exeGorouter": {
                    "type": "boolean",
                    "description": "Rule id: 12 - Do monitor processes if EXE name equals 'gorouter'\n"
                },
                "exeGrootfs": {
                    "type": "boolean",
                    "description": "Rule id: 55 - Do not monitor processes if EXE name equals 'grootfs'\n"
                },
                "exeHeartbeat": {
                    "type": "boolean",
                    "description": "Rule id: 53 - Do not monitor processes if EXE name equals 'heartbeat'\n"
                },
                "exeInfluxd": {
                    "type": "boolean",
                    "description": "Rule id: 6 - Do monitor processes if EXE name equals 'influxd'\n"
                },
                "exeLocket": {
                    "type": "boolean",
                    "description": "Rule id: 13 - Do monitor processes if EXE name equals 'locket'\n"
                },
                "exeMetricbeat": {
                    "type": "boolean",
                    "description": "Rule id: 50 - Do not monitor processes if EXE name equals 'metricbeat'\n"
                },
                "exeMetron": {
                    "type": "boolean",
                    "description": "Rule id: 14 - Do monitor processes if EXE name equals 'metron'\n"
                },
                "exeMqsi": {
                    "type": "boolean",
                    "description": "Rule id: 48 - Do not monitor processes if EXE name begins with 'mqsi'\n"
                },
                "exeOc": {
                    "type": "boolean",
                    "description": "Rule id: 44 - Do not monitor processes if EXE name equals 'oc'\n"
                },
                "exeOpenhandlecollector": {
                    "type": "boolean",
                    "description": "Rule id: 71 - Do not monitor processes if EXE name equals 'openhandlecollector.exe'\n"
                },
                "exeOptcnibinhostlocal": {
                    "type": "boolean",
                    "description": "Rule id: 46 - Do not monitor processes if EXE path equals '/opt/cni/bin/host-local'\n"
                },
                "exePacketbeat": {
                    "type": "boolean",
                    "description": "Rule id: 51 - Do not monitor processes if EXE name equals 'packetbeat'\n"
                },
                "exePhpcgi": {
                    "type": "boolean",
                    "description": "Rule id: 2 - Do not monitor processes if EXE name equals 'php-cgi'\n"
                },
                "exeRep": {
                    "type": "boolean",
                    "description": "Rule id: 16 - Do monitor processes if EXE name equals 'rep'\n"
                },
                "exeRouteemitter": {
                    "type": "boolean",
                    "description": "Rule id: 17 - Do monitor processes if EXE name equals 'route-emitter'\n"
                },
                "exeRouteregistrar": {
                    "type": "boolean",
                    "description": "Rule id: 18 - Do monitor processes if EXE name equals 'route-registrar'\n"
                },
                "exeRoutingapi": {
                    "type": "boolean",
                    "description": "Rule id: 19 - Do monitor processes if EXE name equals 'routing-api'\n"
                },
                "exeSchedular": {
                    "type": "boolean",
                    "description": "Rule id: 20 - Do monitor processes if EXE name equals 'scheduler'\n"
                },
                "exeSilkdaemon": {
                    "type": "boolean",
                    "description": "Rule id: 21 - Do monitor processes if EXE name equals 'silk-daemon'\n"
                },
                "exeSwitchboard": {
                    "type": "boolean",
                    "description": "Rule id: 22 - Do monitor processes if EXE name equals 'switchboard'\n"
                },
                "exeSyslogdrainbinder": {
                    "type": "boolean",
                    "description": "Rule id: 23 - Do monitor processes if EXE name equals 'syslog*drain*binder'\n"
                },
                "exeTardis": {
                    "type": "boolean",
                    "description": "Rule id: 56 - Do not monitor processes if EXE name equals 'tardis'\n"
                },
                "exeTmpbuildpacks": {
                    "type": "boolean",
                    "description": "Rule id: 43 - Do not monitor processes if EXE path begins with '/tmp/buildpacks/'\n"
                },
                "exeTpswatcher": {
                    "type": "boolean",
                    "description": "Rule id: 24 - Do monitor processes if EXE name equals 'tps-watcher'\n"
                },
                "exeTrafficcontroller": {
                    "type": "boolean",
                    "description": "Rule id: 25 - Do monitor processes if EXE name equals 'trafficcontroller'\n"
                },
                "exeUipath": {
                    "type": "boolean",
                    "description": "Rule id: 70 - Do not monitor processes if EXE name contains 'UiPath'\n"
                },
                "exeUserbinpiper": {
                    "type": "boolean",
                    "description": "Rule id: 67 - Do not monitor processes if EXE path equals '/usr/bin/piper'\n"
                },
                "exeW3wp": {
                    "type": "boolean",
                    "description": "Rule id: 4 - Do monitor processes if EXE name equals 'w3wp.exe'\n"
                },
                "goStatic": {
                    "type": "boolean",
                    "description": "Rule id: 47 - Do not monitor processes if Go Binary Linkage equals 'static'\n"
                },
                "hostGroupId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                },
                "jarDtibmmqconnector": {
                    "type": "boolean",
                    "description": "Rule id: 60 - Do not monitor processes if JAR file name equals 'dynatrace*ibm*mq_connector.jar'\n"
                },
                "jarEclipseequinox": {
                    "type": "boolean",
                    "description": "Rule id: 57 - Do not monitor processes if Java JAR file begins with 'org.eclipse.equinox.launcher'\n"
                },
                "k8sCassandraoperator": {
                    "type": "boolean",
                    "description": "Rule id: 69 - Do not monitor processes if Kubernetes container name equals 'cassandra-operator'\n"
                },
                "k8sContainerpod": {
                    "type": "boolean",
                    "description": "Rule id: 38 - Do not monitor processes if Kubernetes container name equals 'POD'\n"
                },
                "k8sNamespace": {
                    "type": "boolean",
                    "description": "Rule id: 40 - Do monitor processes if Kubernetes namespace exists\n"
                },
                "nodeBinpm2": {
                    "type": "boolean",
                    "description": "Do not monitor processes if Node.js script equals 'bin/pm2'\n"
                },
                "nodeCorepack": {
                    "type": "boolean",
                    "description": "Rule id: 68 - Do not monitor processes if Node.js application equals 'corepack'\n"
                },
                "nodeGrunt": {
                    "type": "boolean",
                    "description": "Rule id: 28 - Do not monitor processes if Node.js application base directory ends with '/node_modules/grunt'\n"
                },
                "nodeGulpcli": {
                    "type": "boolean",
                    "description": "Do not monitor processes if Node.js application base directory ends with '/node_modules/gulp-cli'\n"
                },
                "nodeNodegyp": {
                    "type": "boolean",
                    "description": "Rule id: 33 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-gyp'\n"
                },
                "nodeNodepregyp": {
                    "type": "boolean",
                    "description": "Rule id: 32 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-pre-gyp'\n"
                },
                "nodeNpm": {
                    "type": "boolean",
                    "description": "Rule id: 27 - Do not monitor processes if Node.js application base directory ends with '/node_modules/npm'\n"
                },
                "nodePrebuildinstall": {
                    "type": "boolean",
                    "description": "Rule id: 26 - Do not monitor processes if Node.js application base directory ends with '/node_modules/prebuild-install'\n"
                },
                "nodeTypescript": {
                    "type": "boolean",
                    "description": "Rule id: 29 - Do not monitor processes if Node.js application base directory ends with '/node_modules/typescript'\n"
                },
                "nodeYarn": {
                    "type": "boolean",
                    "description": "Rule id: 45 - Do not monitor processes if Node.js application equals 'yarn'\n"
                },
                "phpScript": {
                    "type": "boolean",
                    "description": "(v1.274) Rule id: 1 - Do not monitor processes if PHP script exists\n"
                }
            },
            "inputProperties": {
                "aspnetcore": {
                    "type": "boolean",
                    "description": "Rule id: 3 - Do monitor processes if ASP.NET Core application path exists\n"
                },
                "aspnetcoreAgentlistener": {
                    "type": "boolean",
                    "description": "Rule id: 64 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Listener'\n"
                },
                "aspnetcoreAgentworker": {
                    "type": "boolean",
                    "description": "Rule id: 62 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Worker'\n"
                },
                "cf": {
                    "type": "boolean",
                    "description": "Rule id: 37 - Do monitor processes if Cloud Foundry application exists\n"
                },
                "cfAppsmanagerjs": {
                    "type": "boolean",
                    "description": "Do not monitor processes if Cloud Foundry application begins with 'apps-manager-js'\n"
                },
                "container": {
                    "type": "boolean",
                    "description": "Rule id: 41 - Do monitor processes if container name exists\n"
                },
                "dockerPauseamd64": {
                    "type": "boolean",
                    "description": "Rule id: 39 - Do not monitor processes if Docker stripped image contains 'pause-amd64'\n"
                },
                "exeAdapter": {
                    "type": "boolean",
                    "description": "Rule id: 7 - Do monitor processes if EXE name equals 'adapter'\n"
                },
                "exeAgentlistener": {
                    "type": "boolean",
                    "description": "Rule id: 63 - Do not monitor processes if EXE name contains 'Agent.Listener'\n"
                },
                "exeAgentworker": {
                    "type": "boolean",
                    "description": "Rule id: 61 - Do not monitor processes if EXE name contains 'Agent.Worker'\n"
                },
                "exeAuctioneer": {
                    "type": "boolean",
                    "description": "Rule id: 8 - Do monitor processes if EXE name equals 'auctioneer'\n"
                },
                "exeAuditbeat": {
                    "type": "boolean",
                    "description": "Rule id: 52 - Do not monitor processes if EXE name equals 'auditbeat'\n"
                },
                "exeBbs": {
                    "type": "boolean",
                    "description": "Rule id: 9 - Do monitor processes if EXE name equals 'bbs'\n"
                },
                "exeCaddy": {
                    "type": "boolean",
                    "description": "Rule id: 5 - Do monitor processes if EXE name equals 'caddy'\n"
                },
                "exeCaliconode": {
                    "type": "boolean",
                    "description": "Rule id: 58 - Do not monitor processes if EXE name equals 'calico-node'\n"
                },
                "exeCasclient": {
                    "type": "boolean",
                    "description": "Rule id: 59 - Do not monitor processes if EXE name equals 'casclient.exe'\n"
                },
                "exeCcuploader": {
                    "type": "boolean",
                    "description": "Rule id: 10 - Do monitor processes if EXE name equals 'cc-uploader'\n"
                },
                "exeDoppler": {
                    "type": "boolean",
                    "description": "Rule id: 11 - Do monitor processes if EXE name equals 'doppler'\n"
                },
                "exeFilebeat": {
                    "type": "boolean",
                    "description": "Rule id: 49 - Do not monitor processes if EXE name equals 'filebeat'\n"
                },
                "exeFlexnetjobexecutorservice": {
                    "type": "boolean",
                    "description": "Rule id: 65 - Do not monitor processes if EXE name equals 'FlexNetJobExecutorService'\n"
                },
                "exeFlexnetmaintenanceremotingservice": {
                    "type": "boolean",
                    "description": "Rule id: 66 - Do not monitor processes if EXE name equals 'FlexNetMaintenanceRemotingService'\n"
                },
                "exeFunctionbeat": {
                    "type": "boolean",
                    "description": "Rule id: 54 - Do not monitor processes if EXE name equals 'functionbeat'\n"
                },
                "exeGorouter": {
                    "type": "boolean",
                    "description": "Rule id: 12 - Do monitor processes if EXE name equals 'gorouter'\n"
                },
                "exeGrootfs": {
                    "type": "boolean",
                    "description": "Rule id: 55 - Do not monitor processes if EXE name equals 'grootfs'\n"
                },
                "exeHeartbeat": {
                    "type": "boolean",
                    "description": "Rule id: 53 - Do not monitor processes if EXE name equals 'heartbeat'\n"
                },
                "exeInfluxd": {
                    "type": "boolean",
                    "description": "Rule id: 6 - Do monitor processes if EXE name equals 'influxd'\n"
                },
                "exeLocket": {
                    "type": "boolean",
                    "description": "Rule id: 13 - Do monitor processes if EXE name equals 'locket'\n"
                },
                "exeMetricbeat": {
                    "type": "boolean",
                    "description": "Rule id: 50 - Do not monitor processes if EXE name equals 'metricbeat'\n"
                },
                "exeMetron": {
                    "type": "boolean",
                    "description": "Rule id: 14 - Do monitor processes if EXE name equals 'metron'\n"
                },
                "exeMqsi": {
                    "type": "boolean",
                    "description": "Rule id: 48 - Do not monitor processes if EXE name begins with 'mqsi'\n"
                },
                "exeOc": {
                    "type": "boolean",
                    "description": "Rule id: 44 - Do not monitor processes if EXE name equals 'oc'\n"
                },
                "exeOpenhandlecollector": {
                    "type": "boolean",
                    "description": "Rule id: 71 - Do not monitor processes if EXE name equals 'openhandlecollector.exe'\n"
                },
                "exeOptcnibinhostlocal": {
                    "type": "boolean",
                    "description": "Rule id: 46 - Do not monitor processes if EXE path equals '/opt/cni/bin/host-local'\n"
                },
                "exePacketbeat": {
                    "type": "boolean",
                    "description": "Rule id: 51 - Do not monitor processes if EXE name equals 'packetbeat'\n"
                },
                "exePhpcgi": {
                    "type": "boolean",
                    "description": "Rule id: 2 - Do not monitor processes if EXE name equals 'php-cgi'\n"
                },
                "exeRep": {
                    "type": "boolean",
                    "description": "Rule id: 16 - Do monitor processes if EXE name equals 'rep'\n"
                },
                "exeRouteemitter": {
                    "type": "boolean",
                    "description": "Rule id: 17 - Do monitor processes if EXE name equals 'route-emitter'\n"
                },
                "exeRouteregistrar": {
                    "type": "boolean",
                    "description": "Rule id: 18 - Do monitor processes if EXE name equals 'route-registrar'\n"
                },
                "exeRoutingapi": {
                    "type": "boolean",
                    "description": "Rule id: 19 - Do monitor processes if EXE name equals 'routing-api'\n"
                },
                "exeSchedular": {
                    "type": "boolean",
                    "description": "Rule id: 20 - Do monitor processes if EXE name equals 'scheduler'\n"
                },
                "exeSilkdaemon": {
                    "type": "boolean",
                    "description": "Rule id: 21 - Do monitor processes if EXE name equals 'silk-daemon'\n"
                },
                "exeSwitchboard": {
                    "type": "boolean",
                    "description": "Rule id: 22 - Do monitor processes if EXE name equals 'switchboard'\n"
                },
                "exeSyslogdrainbinder": {
                    "type": "boolean",
                    "description": "Rule id: 23 - Do monitor processes if EXE name equals 'syslog*drain*binder'\n"
                },
                "exeTardis": {
                    "type": "boolean",
                    "description": "Rule id: 56 - Do not monitor processes if EXE name equals 'tardis'\n"
                },
                "exeTmpbuildpacks": {
                    "type": "boolean",
                    "description": "Rule id: 43 - Do not monitor processes if EXE path begins with '/tmp/buildpacks/'\n"
                },
                "exeTpswatcher": {
                    "type": "boolean",
                    "description": "Rule id: 24 - Do monitor processes if EXE name equals 'tps-watcher'\n"
                },
                "exeTrafficcontroller": {
                    "type": "boolean",
                    "description": "Rule id: 25 - Do monitor processes if EXE name equals 'trafficcontroller'\n"
                },
                "exeUipath": {
                    "type": "boolean",
                    "description": "Rule id: 70 - Do not monitor processes if EXE name contains 'UiPath'\n"
                },
                "exeUserbinpiper": {
                    "type": "boolean",
                    "description": "Rule id: 67 - Do not monitor processes if EXE path equals '/usr/bin/piper'\n"
                },
                "exeW3wp": {
                    "type": "boolean",
                    "description": "Rule id: 4 - Do monitor processes if EXE name equals 'w3wp.exe'\n"
                },
                "goStatic": {
                    "type": "boolean",
                    "description": "Rule id: 47 - Do not monitor processes if Go Binary Linkage equals 'static'\n"
                },
                "hostGroupId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                },
                "jarDtibmmqconnector": {
                    "type": "boolean",
                    "description": "Rule id: 60 - Do not monitor processes if JAR file name equals 'dynatrace*ibm*mq_connector.jar'\n"
                },
                "jarEclipseequinox": {
                    "type": "boolean",
                    "description": "Rule id: 57 - Do not monitor processes if Java JAR file begins with 'org.eclipse.equinox.launcher'\n"
                },
                "k8sCassandraoperator": {
                    "type": "boolean",
                    "description": "Rule id: 69 - Do not monitor processes if Kubernetes container name equals 'cassandra-operator'\n"
                },
                "k8sContainerpod": {
                    "type": "boolean",
                    "description": "Rule id: 38 - Do not monitor processes if Kubernetes container name equals 'POD'\n"
                },
                "k8sNamespace": {
                    "type": "boolean",
                    "description": "Rule id: 40 - Do monitor processes if Kubernetes namespace exists\n"
                },
                "nodeBinpm2": {
                    "type": "boolean",
                    "description": "Do not monitor processes if Node.js script equals 'bin/pm2'\n"
                },
                "nodeCorepack": {
                    "type": "boolean",
                    "description": "Rule id: 68 - Do not monitor processes if Node.js application equals 'corepack'\n"
                },
                "nodeGrunt": {
                    "type": "boolean",
                    "description": "Rule id: 28 - Do not monitor processes if Node.js application base directory ends with '/node_modules/grunt'\n"
                },
                "nodeGulpcli": {
                    "type": "boolean",
                    "description": "Do not monitor processes if Node.js application base directory ends with '/node_modules/gulp-cli'\n"
                },
                "nodeNodegyp": {
                    "type": "boolean",
                    "description": "Rule id: 33 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-gyp'\n"
                },
                "nodeNodepregyp": {
                    "type": "boolean",
                    "description": "Rule id: 32 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-pre-gyp'\n"
                },
                "nodeNpm": {
                    "type": "boolean",
                    "description": "Rule id: 27 - Do not monitor processes if Node.js application base directory ends with '/node_modules/npm'\n"
                },
                "nodePrebuildinstall": {
                    "type": "boolean",
                    "description": "Rule id: 26 - Do not monitor processes if Node.js application base directory ends with '/node_modules/prebuild-install'\n"
                },
                "nodeTypescript": {
                    "type": "boolean",
                    "description": "Rule id: 29 - Do not monitor processes if Node.js application base directory ends with '/node_modules/typescript'\n"
                },
                "nodeYarn": {
                    "type": "boolean",
                    "description": "Rule id: 45 - Do not monitor processes if Node.js application equals 'yarn'\n"
                },
                "phpScript": {
                    "type": "boolean",
                    "description": "(v1.274) Rule id: 1 - Do not monitor processes if PHP script exists\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BuiltinProcessMonitoring resources.\n",
                "properties": {
                    "aspnetcore": {
                        "type": "boolean",
                        "description": "Rule id: 3 - Do monitor processes if ASP.NET Core application path exists\n"
                    },
                    "aspnetcoreAgentlistener": {
                        "type": "boolean",
                        "description": "Rule id: 64 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Listener'\n"
                    },
                    "aspnetcoreAgentworker": {
                        "type": "boolean",
                        "description": "Rule id: 62 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Worker'\n"
                    },
                    "cf": {
                        "type": "boolean",
                        "description": "Rule id: 37 - Do monitor processes if Cloud Foundry application exists\n"
                    },
                    "cfAppsmanagerjs": {
                        "type": "boolean",
                        "description": "Do not monitor processes if Cloud Foundry application begins with 'apps-manager-js'\n"
                    },
                    "container": {
                        "type": "boolean",
                        "description": "Rule id: 41 - Do monitor processes if container name exists\n"
                    },
                    "dockerPauseamd64": {
                        "type": "boolean",
                        "description": "Rule id: 39 - Do not monitor processes if Docker stripped image contains 'pause-amd64'\n"
                    },
                    "exeAdapter": {
                        "type": "boolean",
                        "description": "Rule id: 7 - Do monitor processes if EXE name equals 'adapter'\n"
                    },
                    "exeAgentlistener": {
                        "type": "boolean",
                        "description": "Rule id: 63 - Do not monitor processes if EXE name contains 'Agent.Listener'\n"
                    },
                    "exeAgentworker": {
                        "type": "boolean",
                        "description": "Rule id: 61 - Do not monitor processes if EXE name contains 'Agent.Worker'\n"
                    },
                    "exeAuctioneer": {
                        "type": "boolean",
                        "description": "Rule id: 8 - Do monitor processes if EXE name equals 'auctioneer'\n"
                    },
                    "exeAuditbeat": {
                        "type": "boolean",
                        "description": "Rule id: 52 - Do not monitor processes if EXE name equals 'auditbeat'\n"
                    },
                    "exeBbs": {
                        "type": "boolean",
                        "description": "Rule id: 9 - Do monitor processes if EXE name equals 'bbs'\n"
                    },
                    "exeCaddy": {
                        "type": "boolean",
                        "description": "Rule id: 5 - Do monitor processes if EXE name equals 'caddy'\n"
                    },
                    "exeCaliconode": {
                        "type": "boolean",
                        "description": "Rule id: 58 - Do not monitor processes if EXE name equals 'calico-node'\n"
                    },
                    "exeCasclient": {
                        "type": "boolean",
                        "description": "Rule id: 59 - Do not monitor processes if EXE name equals 'casclient.exe'\n"
                    },
                    "exeCcuploader": {
                        "type": "boolean",
                        "description": "Rule id: 10 - Do monitor processes if EXE name equals 'cc-uploader'\n"
                    },
                    "exeDoppler": {
                        "type": "boolean",
                        "description": "Rule id: 11 - Do monitor processes if EXE name equals 'doppler'\n"
                    },
                    "exeFilebeat": {
                        "type": "boolean",
                        "description": "Rule id: 49 - Do not monitor processes if EXE name equals 'filebeat'\n"
                    },
                    "exeFlexnetjobexecutorservice": {
                        "type": "boolean",
                        "description": "Rule id: 65 - Do not monitor processes if EXE name equals 'FlexNetJobExecutorService'\n"
                    },
                    "exeFlexnetmaintenanceremotingservice": {
                        "type": "boolean",
                        "description": "Rule id: 66 - Do not monitor processes if EXE name equals 'FlexNetMaintenanceRemotingService'\n"
                    },
                    "exeFunctionbeat": {
                        "type": "boolean",
                        "description": "Rule id: 54 - Do not monitor processes if EXE name equals 'functionbeat'\n"
                    },
                    "exeGorouter": {
                        "type": "boolean",
                        "description": "Rule id: 12 - Do monitor processes if EXE name equals 'gorouter'\n"
                    },
                    "exeGrootfs": {
                        "type": "boolean",
                        "description": "Rule id: 55 - Do not monitor processes if EXE name equals 'grootfs'\n"
                    },
                    "exeHeartbeat": {
                        "type": "boolean",
                        "description": "Rule id: 53 - Do not monitor processes if EXE name equals 'heartbeat'\n"
                    },
                    "exeInfluxd": {
                        "type": "boolean",
                        "description": "Rule id: 6 - Do monitor processes if EXE name equals 'influxd'\n"
                    },
                    "exeLocket": {
                        "type": "boolean",
                        "description": "Rule id: 13 - Do monitor processes if EXE name equals 'locket'\n"
                    },
                    "exeMetricbeat": {
                        "type": "boolean",
                        "description": "Rule id: 50 - Do not monitor processes if EXE name equals 'metricbeat'\n"
                    },
                    "exeMetron": {
                        "type": "boolean",
                        "description": "Rule id: 14 - Do monitor processes if EXE name equals 'metron'\n"
                    },
                    "exeMqsi": {
                        "type": "boolean",
                        "description": "Rule id: 48 - Do not monitor processes if EXE name begins with 'mqsi'\n"
                    },
                    "exeOc": {
                        "type": "boolean",
                        "description": "Rule id: 44 - Do not monitor processes if EXE name equals 'oc'\n"
                    },
                    "exeOpenhandlecollector": {
                        "type": "boolean",
                        "description": "Rule id: 71 - Do not monitor processes if EXE name equals 'openhandlecollector.exe'\n"
                    },
                    "exeOptcnibinhostlocal": {
                        "type": "boolean",
                        "description": "Rule id: 46 - Do not monitor processes if EXE path equals '/opt/cni/bin/host-local'\n"
                    },
                    "exePacketbeat": {
                        "type": "boolean",
                        "description": "Rule id: 51 - Do not monitor processes if EXE name equals 'packetbeat'\n"
                    },
                    "exePhpcgi": {
                        "type": "boolean",
                        "description": "Rule id: 2 - Do not monitor processes if EXE name equals 'php-cgi'\n"
                    },
                    "exeRep": {
                        "type": "boolean",
                        "description": "Rule id: 16 - Do monitor processes if EXE name equals 'rep'\n"
                    },
                    "exeRouteemitter": {
                        "type": "boolean",
                        "description": "Rule id: 17 - Do monitor processes if EXE name equals 'route-emitter'\n"
                    },
                    "exeRouteregistrar": {
                        "type": "boolean",
                        "description": "Rule id: 18 - Do monitor processes if EXE name equals 'route-registrar'\n"
                    },
                    "exeRoutingapi": {
                        "type": "boolean",
                        "description": "Rule id: 19 - Do monitor processes if EXE name equals 'routing-api'\n"
                    },
                    "exeSchedular": {
                        "type": "boolean",
                        "description": "Rule id: 20 - Do monitor processes if EXE name equals 'scheduler'\n"
                    },
                    "exeSilkdaemon": {
                        "type": "boolean",
                        "description": "Rule id: 21 - Do monitor processes if EXE name equals 'silk-daemon'\n"
                    },
                    "exeSwitchboard": {
                        "type": "boolean",
                        "description": "Rule id: 22 - Do monitor processes if EXE name equals 'switchboard'\n"
                    },
                    "exeSyslogdrainbinder": {
                        "type": "boolean",
                        "description": "Rule id: 23 - Do monitor processes if EXE name equals 'syslog*drain*binder'\n"
                    },
                    "exeTardis": {
                        "type": "boolean",
                        "description": "Rule id: 56 - Do not monitor processes if EXE name equals 'tardis'\n"
                    },
                    "exeTmpbuildpacks": {
                        "type": "boolean",
                        "description": "Rule id: 43 - Do not monitor processes if EXE path begins with '/tmp/buildpacks/'\n"
                    },
                    "exeTpswatcher": {
                        "type": "boolean",
                        "description": "Rule id: 24 - Do monitor processes if EXE name equals 'tps-watcher'\n"
                    },
                    "exeTrafficcontroller": {
                        "type": "boolean",
                        "description": "Rule id: 25 - Do monitor processes if EXE name equals 'trafficcontroller'\n"
                    },
                    "exeUipath": {
                        "type": "boolean",
                        "description": "Rule id: 70 - Do not monitor processes if EXE name contains 'UiPath'\n"
                    },
                    "exeUserbinpiper": {
                        "type": "boolean",
                        "description": "Rule id: 67 - Do not monitor processes if EXE path equals '/usr/bin/piper'\n"
                    },
                    "exeW3wp": {
                        "type": "boolean",
                        "description": "Rule id: 4 - Do monitor processes if EXE name equals 'w3wp.exe'\n"
                    },
                    "goStatic": {
                        "type": "boolean",
                        "description": "Rule id: 47 - Do not monitor processes if Go Binary Linkage equals 'static'\n"
                    },
                    "hostGroupId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    },
                    "jarDtibmmqconnector": {
                        "type": "boolean",
                        "description": "Rule id: 60 - Do not monitor processes if JAR file name equals 'dynatrace*ibm*mq_connector.jar'\n"
                    },
                    "jarEclipseequinox": {
                        "type": "boolean",
                        "description": "Rule id: 57 - Do not monitor processes if Java JAR file begins with 'org.eclipse.equinox.launcher'\n"
                    },
                    "k8sCassandraoperator": {
                        "type": "boolean",
                        "description": "Rule id: 69 - Do not monitor processes if Kubernetes container name equals 'cassandra-operator'\n"
                    },
                    "k8sContainerpod": {
                        "type": "boolean",
                        "description": "Rule id: 38 - Do not monitor processes if Kubernetes container name equals 'POD'\n"
                    },
                    "k8sNamespace": {
                        "type": "boolean",
                        "description": "Rule id: 40 - Do monitor processes if Kubernetes namespace exists\n"
                    },
                    "nodeBinpm2": {
                        "type": "boolean",
                        "description": "Do not monitor processes if Node.js script equals 'bin/pm2'\n"
                    },
                    "nodeCorepack": {
                        "type": "boolean",
                        "description": "Rule id: 68 - Do not monitor processes if Node.js application equals 'corepack'\n"
                    },
                    "nodeGrunt": {
                        "type": "boolean",
                        "description": "Rule id: 28 - Do not monitor processes if Node.js application base directory ends with '/node_modules/grunt'\n"
                    },
                    "nodeGulpcli": {
                        "type": "boolean",
                        "description": "Do not monitor processes if Node.js application base directory ends with '/node_modules/gulp-cli'\n"
                    },
                    "nodeNodegyp": {
                        "type": "boolean",
                        "description": "Rule id: 33 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-gyp'\n"
                    },
                    "nodeNodepregyp": {
                        "type": "boolean",
                        "description": "Rule id: 32 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-pre-gyp'\n"
                    },
                    "nodeNpm": {
                        "type": "boolean",
                        "description": "Rule id: 27 - Do not monitor processes if Node.js application base directory ends with '/node_modules/npm'\n"
                    },
                    "nodePrebuildinstall": {
                        "type": "boolean",
                        "description": "Rule id: 26 - Do not monitor processes if Node.js application base directory ends with '/node_modules/prebuild-install'\n"
                    },
                    "nodeTypescript": {
                        "type": "boolean",
                        "description": "Rule id: 29 - Do not monitor processes if Node.js application base directory ends with '/node_modules/typescript'\n"
                    },
                    "nodeYarn": {
                        "type": "boolean",
                        "description": "Rule id: 45 - Do not monitor processes if Node.js application equals 'yarn'\n"
                    },
                    "phpScript": {
                        "type": "boolean",
                        "description": "(v1.274) Rule id: 1 - Do not monitor processes if PHP script exists\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/businessEventsBuckets:BusinessEventsBuckets": {
            "properties": {
                "bucketName": {
                    "type": "string",
                    "description": "Events will be stored in the selected bucket. Analyze bucket contents in the [log \u0026 event viewer.](https://www.terraform.io/ui/logs-events?advancedQueryMode=true\u0026query=fetch+bizevents)\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "matcher": {
                    "type": "string",
                    "description": "[See our documentation](https://dt-url.net/bp234rv)\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Rule name\n"
                }
            },
            "required": [
                "bucketName",
                "enabled",
                "insertAfter",
                "matcher",
                "ruleName"
            ],
            "inputProperties": {
                "bucketName": {
                    "type": "string",
                    "description": "Events will be stored in the selected bucket. Analyze bucket contents in the [log \u0026 event viewer.](https://www.terraform.io/ui/logs-events?advancedQueryMode=true\u0026query=fetch+bizevents)\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "matcher": {
                    "type": "string",
                    "description": "[See our documentation](https://dt-url.net/bp234rv)\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Rule name\n"
                }
            },
            "requiredInputs": [
                "bucketName",
                "enabled",
                "matcher",
                "ruleName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BusinessEventsBuckets resources.\n",
                "properties": {
                    "bucketName": {
                        "type": "string",
                        "description": "Events will be stored in the selected bucket. Analyze bucket contents in the [log \u0026 event viewer.](https://www.terraform.io/ui/logs-events?advancedQueryMode=true\u0026query=fetch+bizevents)\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "matcher": {
                        "type": "string",
                        "description": "[See our documentation](https://dt-url.net/bp234rv)\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "Rule name\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/businessEventsMetrics:BusinessEventsMetrics": {
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "no documentation available\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key\n"
                },
                "matcher": {
                    "type": "string",
                    "description": "[See our documentation](https://dt-url.net/bp234rv)\n"
                },
                "measure": {
                    "type": "string",
                    "description": "Possible Values: `ATTRIBUTE`, `OCCURRENCE`\n"
                },
                "measureAttribute": {
                    "type": "string",
                    "description": "Attribute\n"
                }
            },
            "required": [
                "enabled",
                "key",
                "matcher",
                "measure"
            ],
            "inputProperties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "no documentation available\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key\n"
                },
                "matcher": {
                    "type": "string",
                    "description": "[See our documentation](https://dt-url.net/bp234rv)\n"
                },
                "measure": {
                    "type": "string",
                    "description": "Possible Values: `ATTRIBUTE`, `OCCURRENCE`\n"
                },
                "measureAttribute": {
                    "type": "string",
                    "description": "Attribute\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "key",
                "matcher",
                "measure"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BusinessEventsMetrics resources.\n",
                "properties": {
                    "dimensions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "no documentation available\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "Key\n"
                    },
                    "matcher": {
                        "type": "string",
                        "description": "[See our documentation](https://dt-url.net/bp234rv)\n"
                    },
                    "measure": {
                        "type": "string",
                        "description": "Possible Values: `ATTRIBUTE`, `OCCURRENCE`\n"
                    },
                    "measureAttribute": {
                        "type": "string",
                        "description": "Attribute\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/businessEventsOneagent:BusinessEventsOneagent": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "event": {
                    "$ref": "#/types/dynatrace:index/BusinessEventsOneagentEvent:BusinessEventsOneagentEvent",
                    "description": "Event meta data\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Rule name\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n"
                },
                "triggers": {
                    "$ref": "#/types/dynatrace:index/BusinessEventsOneagentTriggers:BusinessEventsOneagentTriggers",
                    "description": "Define conditions to trigger business events from incoming web requests. Triggers are connected by AND logic per capture rule. If you set multiple trigger rules, all of them need to be fulfilled to capture a business event.\n"
                }
            },
            "required": [
                "enabled",
                "event",
                "insertAfter",
                "ruleName",
                "triggers"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "event": {
                    "$ref": "#/types/dynatrace:index/BusinessEventsOneagentEvent:BusinessEventsOneagentEvent",
                    "description": "Event meta data\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Rule name\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                },
                "triggers": {
                    "$ref": "#/types/dynatrace:index/BusinessEventsOneagentTriggers:BusinessEventsOneagentTriggers",
                    "description": "Define conditions to trigger business events from incoming web requests. Triggers are connected by AND logic per capture rule. If you set multiple trigger rules, all of them need to be fulfilled to capture a business event.\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "event",
                "ruleName",
                "triggers"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BusinessEventsOneagent resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "event": {
                        "$ref": "#/types/dynatrace:index/BusinessEventsOneagentEvent:BusinessEventsOneagentEvent",
                        "description": "Event meta data\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "Rule name\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    },
                    "triggers": {
                        "$ref": "#/types/dynatrace:index/BusinessEventsOneagentTriggers:BusinessEventsOneagentTriggers",
                        "description": "Define conditions to trigger business events from incoming web requests. Triggers are connected by AND logic per capture rule. If you set multiple trigger rules, all of them need to be fulfilled to capture a business event.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/businessEventsProcessing:BusinessEventsProcessing": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this\ninstance regarding order. If not specified when creating the setting will be added to the end of the list. If not\nspecified during update the order will remain untouched\n"
                },
                "matcher": {
                    "type": "string",
                    "description": "[See our documentation](https://dt-url.net/bp234rv)\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Rule name\n"
                },
                "ruleTesting": {
                    "$ref": "#/types/dynatrace:index/BusinessEventsProcessingRuleTesting:BusinessEventsProcessingRuleTesting",
                    "description": "## Rule testing ### 1. Paste an event sample\n"
                },
                "script": {
                    "type": "string",
                    "description": "[See our documentation](https://dt-url.net/pz030w5)\n"
                },
                "transformationFields": {
                    "$ref": "#/types/dynatrace:index/BusinessEventsProcessingTransformationFields:BusinessEventsProcessingTransformationFields",
                    "description": "Transformation fields\n"
                }
            },
            "required": [
                "enabled",
                "insertAfter",
                "matcher",
                "ruleName",
                "ruleTesting",
                "script"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this\ninstance regarding order. If not specified when creating the setting will be added to the end of the list. If not\nspecified during update the order will remain untouched\n"
                },
                "matcher": {
                    "type": "string",
                    "description": "[See our documentation](https://dt-url.net/bp234rv)\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Rule name\n"
                },
                "ruleTesting": {
                    "$ref": "#/types/dynatrace:index/BusinessEventsProcessingRuleTesting:BusinessEventsProcessingRuleTesting",
                    "description": "## Rule testing ### 1. Paste an event sample\n"
                },
                "script": {
                    "type": "string",
                    "description": "[See our documentation](https://dt-url.net/pz030w5)\n"
                },
                "transformationFields": {
                    "$ref": "#/types/dynatrace:index/BusinessEventsProcessingTransformationFields:BusinessEventsProcessingTransformationFields",
                    "description": "Transformation fields\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "matcher",
                "ruleName",
                "ruleTesting",
                "script"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BusinessEventsProcessing resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this\ninstance regarding order. If not specified when creating the setting will be added to the end of the list. If not\nspecified during update the order will remain untouched\n"
                    },
                    "matcher": {
                        "type": "string",
                        "description": "[See our documentation](https://dt-url.net/bp234rv)\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "Rule name\n"
                    },
                    "ruleTesting": {
                        "$ref": "#/types/dynatrace:index/BusinessEventsProcessingRuleTesting:BusinessEventsProcessingRuleTesting",
                        "description": "## Rule testing ### 1. Paste an event sample\n"
                    },
                    "script": {
                        "type": "string",
                        "description": "[See our documentation](https://dt-url.net/pz030w5)\n"
                    },
                    "transformationFields": {
                        "$ref": "#/types/dynatrace:index/BusinessEventsProcessingTransformationFields:BusinessEventsProcessingTransformationFields",
                        "description": "Transformation fields\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/businessEventsSecurityContext:BusinessEventsSecurityContext": {
            "properties": {
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "securityContextRule": {
                    "$ref": "#/types/dynatrace:index/BusinessEventsSecurityContextSecurityContextRule:BusinessEventsSecurityContextSecurityContextRule",
                    "description": "no documentation available\n"
                }
            },
            "required": [
                "insertAfter",
                "securityContextRule"
            ],
            "inputProperties": {
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "securityContextRule": {
                    "$ref": "#/types/dynatrace:index/BusinessEventsSecurityContextSecurityContextRule:BusinessEventsSecurityContextSecurityContextRule",
                    "description": "no documentation available\n"
                }
            },
            "requiredInputs": [
                "securityContextRule"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BusinessEventsSecurityContext resources.\n",
                "properties": {
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "securityContextRule": {
                        "$ref": "#/types/dynatrace:index/BusinessEventsSecurityContextSecurityContextRule:BusinessEventsSecurityContextSecurityContextRule",
                        "description": "no documentation available\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/calculatedMobileMetric:CalculatedMobileMetric": {
            "properties": {
                "appIdentifier": {
                    "type": "string",
                    "description": "The Dynatrace entity ID of the application to which the metric belongs.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Descriptor of a calculated mobile/custom app metric.\n"
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CalculatedMobileMetricDimension:CalculatedMobileMetricDimension"
                    },
                    "description": "Parameters of a definition of a calculated mobile/custom app metric.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The metric is enabled (`true`) or disabled (`false`)\n"
                },
                "metricKey": {
                    "type": "string",
                    "description": "The unique key of the calculated mobile/custom app metric.\n"
                },
                "metricType": {
                    "type": "string",
                    "description": "The type of the metric. Possible values: [ REPORTED*ERROR*COUNT, USER*ACTION*DURATION, WEB*REQUEST*COUNT, WEB*REQUEST*ERROR_COUNT ]\n"
                },
                "name": {
                    "type": "string",
                    "description": "The displayed name of the metric.\n"
                },
                "userActionFilter": {
                    "$ref": "#/types/dynatrace:index/CalculatedMobileMetricUserActionFilter:CalculatedMobileMetricUserActionFilter",
                    "description": "Parameters of a definition of a calculated mobile/custom app metric.\n"
                }
            },
            "required": [
                "appIdentifier",
                "enabled",
                "metricKey",
                "metricType",
                "name"
            ],
            "inputProperties": {
                "appIdentifier": {
                    "type": "string",
                    "description": "The Dynatrace entity ID of the application to which the metric belongs.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Descriptor of a calculated mobile/custom app metric.\n"
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CalculatedMobileMetricDimension:CalculatedMobileMetricDimension"
                    },
                    "description": "Parameters of a definition of a calculated mobile/custom app metric.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The metric is enabled (`true`) or disabled (`false`)\n"
                },
                "metricKey": {
                    "type": "string",
                    "description": "The unique key of the calculated mobile/custom app metric.\n",
                    "willReplaceOnChanges": true
                },
                "metricType": {
                    "type": "string",
                    "description": "The type of the metric. Possible values: [ REPORTED*ERROR*COUNT, USER*ACTION*DURATION, WEB*REQUEST*COUNT, WEB*REQUEST*ERROR_COUNT ]\n"
                },
                "name": {
                    "type": "string",
                    "description": "The displayed name of the metric.\n"
                },
                "userActionFilter": {
                    "$ref": "#/types/dynatrace:index/CalculatedMobileMetricUserActionFilter:CalculatedMobileMetricUserActionFilter",
                    "description": "Parameters of a definition of a calculated mobile/custom app metric.\n"
                }
            },
            "requiredInputs": [
                "appIdentifier",
                "enabled",
                "metricKey",
                "metricType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CalculatedMobileMetric resources.\n",
                "properties": {
                    "appIdentifier": {
                        "type": "string",
                        "description": "The Dynatrace entity ID of the application to which the metric belongs.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Descriptor of a calculated mobile/custom app metric.\n"
                    },
                    "dimensions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/CalculatedMobileMetricDimension:CalculatedMobileMetricDimension"
                        },
                        "description": "Parameters of a definition of a calculated mobile/custom app metric.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The metric is enabled (`true`) or disabled (`false`)\n"
                    },
                    "metricKey": {
                        "type": "string",
                        "description": "The unique key of the calculated mobile/custom app metric.\n",
                        "willReplaceOnChanges": true
                    },
                    "metricType": {
                        "type": "string",
                        "description": "The type of the metric. Possible values: [ REPORTED*ERROR*COUNT, USER*ACTION*DURATION, WEB*REQUEST*COUNT, WEB*REQUEST*ERROR_COUNT ]\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The displayed name of the metric.\n"
                    },
                    "userActionFilter": {
                        "$ref": "#/types/dynatrace:index/CalculatedMobileMetricUserActionFilter:CalculatedMobileMetricUserActionFilter",
                        "description": "Parameters of a definition of a calculated mobile/custom app metric.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/calculatedServiceMetric:CalculatedServiceMetric": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CalculatedServiceMetricCondition:CalculatedServiceMetricCondition"
                    },
                    "description": "The set of conditions for the metric usage. **All** the specified conditions must be fulfilled to use the metric\n"
                },
                "description": {
                    "type": "string",
                    "description": "The displayed description of the metric\n"
                },
                "dimensionDefinition": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricDimensionDefinition:CalculatedServiceMetricDimensionDefinition",
                    "description": "Parameters of a definition of a calculated service metric\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The metric is enabled (`true`) or disabled (`false`)\n"
                },
                "entityId": {
                    "type": "string",
                    "description": "Restricts the metric usage to the specified service. This field is mutually exclusive with the `management_zones` field\n"
                },
                "ignoreMutedRequests": {
                    "type": "boolean",
                    "description": "Metric should (true) or not (false) ignore muted requests.\n"
                },
                "managementZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Restricts the metric usage to specified management zones. This field is mutually exclusive with the `entity_id` field\n"
                },
                "metricDefinition": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricMetricDefinition:CalculatedServiceMetricMetricDefinition",
                    "description": "The definition of a calculated service metric\n"
                },
                "metricKey": {
                    "type": "string",
                    "description": "The key of the calculated service metric\n"
                },
                "name": {
                    "type": "string",
                    "description": "The displayed name of the metric\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit of the metric. Possible values are `BIT`, `BIT_PER_HOUR`, `BIT_PER_MINUTE`, `BIT_PER_SECOND`, `BYTE`,\n`BYTE_PER_HOUR`, `BYTE_PER_MINUTE`, `BYTE_PER_SECOND`, `CORES`, `COUNT`, `DAY`, `DECIBEL_MILLI_WATT`, `GIBI_BYTE`,\n`GIGA`, `GIGA_BYTE`, `HOUR`, `KIBI_BYTE`, `KIBI_BYTE_PER_HOUR`, `KIBI_BYTE_PER_MINUTE`, `KIBI_BYTE_PER_SECOND`, `KILO`,\n`KILO_BYTE`, `KILO_BYTE_PER_HOUR`, `KILO_BYTE_PER_MINUTE`, `KILO_BYTE_PER_SECOND`, `MEBI_BYTE`, `MEBI_BYTE_PER_HOUR`,\n`MEBI_BYTE_PER_MINUTE`, `MEBI_BYTE_PER_SECOND`, `MEGA`, `MEGA_BYTE`, `MEGA_BYTE_PER_HOUR`, `MEGA_BYTE_PER_MINUTE`,\n`MEGA_BYTE_PER_SECOND`, `MICRO_SECOND`, `MILLI_CORES`, `MILLI_SECOND`, `MILLI_SECOND_PER_MINUTE`, `MINUTE`, `MONTH`,\n`MSU`, `NANO_SECOND`, `NANO_SECOND_PER_MINUTE`, `NOT_APPLICABLE`, `PERCENT`, `PER_HOUR`, `PER_MINUTE`, `PER_SECOND`,\n`PIXEL`, `PROMILLE`, `RATIO`, `SECOND`, `STATE`, `UNSPECIFIED`, `WEEK` and `YEAR`\n"
                },
                "unitDisplayName": {
                    "type": "string",
                    "description": "The display name of the metric's unit. Only applicable when the **unit** parameter is set to `UNSPECIFIED`\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "required": [
                "metricKey",
                "name",
                "unit"
            ],
            "inputProperties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CalculatedServiceMetricCondition:CalculatedServiceMetricCondition"
                    },
                    "description": "The set of conditions for the metric usage. **All** the specified conditions must be fulfilled to use the metric\n"
                },
                "description": {
                    "type": "string",
                    "description": "The displayed description of the metric\n"
                },
                "dimensionDefinition": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricDimensionDefinition:CalculatedServiceMetricDimensionDefinition",
                    "description": "Parameters of a definition of a calculated service metric\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The metric is enabled (`true`) or disabled (`false`)\n"
                },
                "entityId": {
                    "type": "string",
                    "description": "Restricts the metric usage to the specified service. This field is mutually exclusive with the `management_zones` field\n"
                },
                "ignoreMutedRequests": {
                    "type": "boolean",
                    "description": "Metric should (true) or not (false) ignore muted requests.\n"
                },
                "managementZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Restricts the metric usage to specified management zones. This field is mutually exclusive with the `entity_id` field\n"
                },
                "metricDefinition": {
                    "$ref": "#/types/dynatrace:index/CalculatedServiceMetricMetricDefinition:CalculatedServiceMetricMetricDefinition",
                    "description": "The definition of a calculated service metric\n"
                },
                "metricKey": {
                    "type": "string",
                    "description": "The key of the calculated service metric\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The displayed name of the metric\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit of the metric. Possible values are `BIT`, `BIT_PER_HOUR`, `BIT_PER_MINUTE`, `BIT_PER_SECOND`, `BYTE`,\n`BYTE_PER_HOUR`, `BYTE_PER_MINUTE`, `BYTE_PER_SECOND`, `CORES`, `COUNT`, `DAY`, `DECIBEL_MILLI_WATT`, `GIBI_BYTE`,\n`GIGA`, `GIGA_BYTE`, `HOUR`, `KIBI_BYTE`, `KIBI_BYTE_PER_HOUR`, `KIBI_BYTE_PER_MINUTE`, `KIBI_BYTE_PER_SECOND`, `KILO`,\n`KILO_BYTE`, `KILO_BYTE_PER_HOUR`, `KILO_BYTE_PER_MINUTE`, `KILO_BYTE_PER_SECOND`, `MEBI_BYTE`, `MEBI_BYTE_PER_HOUR`,\n`MEBI_BYTE_PER_MINUTE`, `MEBI_BYTE_PER_SECOND`, `MEGA`, `MEGA_BYTE`, `MEGA_BYTE_PER_HOUR`, `MEGA_BYTE_PER_MINUTE`,\n`MEGA_BYTE_PER_SECOND`, `MICRO_SECOND`, `MILLI_CORES`, `MILLI_SECOND`, `MILLI_SECOND_PER_MINUTE`, `MINUTE`, `MONTH`,\n`MSU`, `NANO_SECOND`, `NANO_SECOND_PER_MINUTE`, `NOT_APPLICABLE`, `PERCENT`, `PER_HOUR`, `PER_MINUTE`, `PER_SECOND`,\n`PIXEL`, `PROMILLE`, `RATIO`, `SECOND`, `STATE`, `UNSPECIFIED`, `WEEK` and `YEAR`\n"
                },
                "unitDisplayName": {
                    "type": "string",
                    "description": "The display name of the metric's unit. Only applicable when the **unit** parameter is set to `UNSPECIFIED`\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "requiredInputs": [
                "metricKey",
                "unit"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CalculatedServiceMetric resources.\n",
                "properties": {
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/CalculatedServiceMetricCondition:CalculatedServiceMetricCondition"
                        },
                        "description": "The set of conditions for the metric usage. **All** the specified conditions must be fulfilled to use the metric\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The displayed description of the metric\n"
                    },
                    "dimensionDefinition": {
                        "$ref": "#/types/dynatrace:index/CalculatedServiceMetricDimensionDefinition:CalculatedServiceMetricDimensionDefinition",
                        "description": "Parameters of a definition of a calculated service metric\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The metric is enabled (`true`) or disabled (`false`)\n"
                    },
                    "entityId": {
                        "type": "string",
                        "description": "Restricts the metric usage to the specified service. This field is mutually exclusive with the `management_zones` field\n"
                    },
                    "ignoreMutedRequests": {
                        "type": "boolean",
                        "description": "Metric should (true) or not (false) ignore muted requests.\n"
                    },
                    "managementZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Restricts the metric usage to specified management zones. This field is mutually exclusive with the `entity_id` field\n"
                    },
                    "metricDefinition": {
                        "$ref": "#/types/dynatrace:index/CalculatedServiceMetricMetricDefinition:CalculatedServiceMetricMetricDefinition",
                        "description": "The definition of a calculated service metric\n"
                    },
                    "metricKey": {
                        "type": "string",
                        "description": "The key of the calculated service metric\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The displayed name of the metric\n"
                    },
                    "unit": {
                        "type": "string",
                        "description": "The unit of the metric. Possible values are `BIT`, `BIT_PER_HOUR`, `BIT_PER_MINUTE`, `BIT_PER_SECOND`, `BYTE`,\n`BYTE_PER_HOUR`, `BYTE_PER_MINUTE`, `BYTE_PER_SECOND`, `CORES`, `COUNT`, `DAY`, `DECIBEL_MILLI_WATT`, `GIBI_BYTE`,\n`GIGA`, `GIGA_BYTE`, `HOUR`, `KIBI_BYTE`, `KIBI_BYTE_PER_HOUR`, `KIBI_BYTE_PER_MINUTE`, `KIBI_BYTE_PER_SECOND`, `KILO`,\n`KILO_BYTE`, `KILO_BYTE_PER_HOUR`, `KILO_BYTE_PER_MINUTE`, `KILO_BYTE_PER_SECOND`, `MEBI_BYTE`, `MEBI_BYTE_PER_HOUR`,\n`MEBI_BYTE_PER_MINUTE`, `MEBI_BYTE_PER_SECOND`, `MEGA`, `MEGA_BYTE`, `MEGA_BYTE_PER_HOUR`, `MEGA_BYTE_PER_MINUTE`,\n`MEGA_BYTE_PER_SECOND`, `MICRO_SECOND`, `MILLI_CORES`, `MILLI_SECOND`, `MILLI_SECOND_PER_MINUTE`, `MINUTE`, `MONTH`,\n`MSU`, `NANO_SECOND`, `NANO_SECOND_PER_MINUTE`, `NOT_APPLICABLE`, `PERCENT`, `PER_HOUR`, `PER_MINUTE`, `PER_SECOND`,\n`PIXEL`, `PROMILLE`, `RATIO`, `SECOND`, `STATE`, `UNSPECIFIED`, `WEEK` and `YEAR`\n"
                    },
                    "unitDisplayName": {
                        "type": "string",
                        "description": "The display name of the metric's unit. Only applicable when the **unit** parameter is set to `UNSPECIFIED`\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/calculatedSyntheticMetric:CalculatedSyntheticMetric": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Descriptor of a calculated synthetic metric.\n"
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CalculatedSyntheticMetricDimension:CalculatedSyntheticMetricDimension"
                    },
                    "description": "Dimension of the calculated synthetic metric.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The metric is enabled (`true`) or disabled (`false`)\n"
                },
                "filter": {
                    "$ref": "#/types/dynatrace:index/CalculatedSyntheticMetricFilter:CalculatedSyntheticMetricFilter",
                    "description": "Filter of the calculated synthetic metric.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The type of the synthetic metric. Possible values: [ ApplicationCache, Callback, CumulativeLayoutShift, DNSLookup, DOMComplete, DOMContentLoaded, DOMInteractive, FailedRequestsResources, FirstContentfulPaint, FirstInputDelay, FirstInputStart, FirstPaint, HTMLDownloaded, HttpErrors, JavaScriptErrors, LargestContentfulPaint, LoadEventEnd, LoadEventStart, LongTasks, NavigationStart, OnDOMContentLoaded, OnLoad, Processing, RedirectTime, Request, RequestStart, ResourceCount, Response, SecureConnect, SpeedIndex, TCPConnect, TimeToFirstByte, TotalDuration, TransferSize, UserActionDuration, VisuallyComplete ]\n"
                },
                "metricKey": {
                    "type": "string",
                    "description": "The unique key of the calculated synthetic metric.\n"
                },
                "monitorIdentifier": {
                    "type": "string",
                    "description": "The Dynatrace entity ID of the monitor to which the metric belongs.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The displayed name of the metric.\n"
                }
            },
            "required": [
                "enabled",
                "metric",
                "metricKey",
                "monitorIdentifier",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Descriptor of a calculated synthetic metric.\n"
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CalculatedSyntheticMetricDimension:CalculatedSyntheticMetricDimension"
                    },
                    "description": "Dimension of the calculated synthetic metric.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The metric is enabled (`true`) or disabled (`false`)\n"
                },
                "filter": {
                    "$ref": "#/types/dynatrace:index/CalculatedSyntheticMetricFilter:CalculatedSyntheticMetricFilter",
                    "description": "Filter of the calculated synthetic metric.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The type of the synthetic metric. Possible values: [ ApplicationCache, Callback, CumulativeLayoutShift, DNSLookup, DOMComplete, DOMContentLoaded, DOMInteractive, FailedRequestsResources, FirstContentfulPaint, FirstInputDelay, FirstInputStart, FirstPaint, HTMLDownloaded, HttpErrors, JavaScriptErrors, LargestContentfulPaint, LoadEventEnd, LoadEventStart, LongTasks, NavigationStart, OnDOMContentLoaded, OnLoad, Processing, RedirectTime, Request, RequestStart, ResourceCount, Response, SecureConnect, SpeedIndex, TCPConnect, TimeToFirstByte, TotalDuration, TransferSize, UserActionDuration, VisuallyComplete ]\n"
                },
                "metricKey": {
                    "type": "string",
                    "description": "The unique key of the calculated synthetic metric.\n",
                    "willReplaceOnChanges": true
                },
                "monitorIdentifier": {
                    "type": "string",
                    "description": "The Dynatrace entity ID of the monitor to which the metric belongs.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The displayed name of the metric.\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "metric",
                "metricKey",
                "monitorIdentifier"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CalculatedSyntheticMetric resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Descriptor of a calculated synthetic metric.\n"
                    },
                    "dimensions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/CalculatedSyntheticMetricDimension:CalculatedSyntheticMetricDimension"
                        },
                        "description": "Dimension of the calculated synthetic metric.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The metric is enabled (`true`) or disabled (`false`)\n"
                    },
                    "filter": {
                        "$ref": "#/types/dynatrace:index/CalculatedSyntheticMetricFilter:CalculatedSyntheticMetricFilter",
                        "description": "Filter of the calculated synthetic metric.\n"
                    },
                    "metric": {
                        "type": "string",
                        "description": "The type of the synthetic metric. Possible values: [ ApplicationCache, Callback, CumulativeLayoutShift, DNSLookup, DOMComplete, DOMContentLoaded, DOMInteractive, FailedRequestsResources, FirstContentfulPaint, FirstInputDelay, FirstInputStart, FirstPaint, HTMLDownloaded, HttpErrors, JavaScriptErrors, LargestContentfulPaint, LoadEventEnd, LoadEventStart, LongTasks, NavigationStart, OnDOMContentLoaded, OnLoad, Processing, RedirectTime, Request, RequestStart, ResourceCount, Response, SecureConnect, SpeedIndex, TCPConnect, TimeToFirstByte, TotalDuration, TransferSize, UserActionDuration, VisuallyComplete ]\n"
                    },
                    "metricKey": {
                        "type": "string",
                        "description": "The unique key of the calculated synthetic metric.\n",
                        "willReplaceOnChanges": true
                    },
                    "monitorIdentifier": {
                        "type": "string",
                        "description": "The Dynatrace entity ID of the monitor to which the metric belongs.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The displayed name of the metric.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/calculatedWebMetric:CalculatedWebMetric": {
            "properties": {
                "appIdentifier": {
                    "type": "string",
                    "description": "The Dynatrace entity ID of the application to which the metric belongs.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Descriptor of a calculated web metric.\n"
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CalculatedWebMetricDimension:CalculatedWebMetricDimension"
                    },
                    "description": "Parameters of a definition of a calculated web metric.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The metric is enabled (`true`) or disabled (`false`)\n"
                },
                "metricDefinition": {
                    "$ref": "#/types/dynatrace:index/CalculatedWebMetricMetricDefinition:CalculatedWebMetricMetricDefinition",
                    "description": "The definition of a calculated web metric.\n"
                },
                "metricKey": {
                    "type": "string",
                    "description": "The unique key of the calculated web metric.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The displayed name of the metric.\n"
                },
                "userActionFilter": {
                    "$ref": "#/types/dynatrace:index/CalculatedWebMetricUserActionFilter:CalculatedWebMetricUserActionFilter",
                    "description": "Parameters of a definition of a calculated web metric.\n"
                }
            },
            "required": [
                "appIdentifier",
                "enabled",
                "metricDefinition",
                "metricKey",
                "name"
            ],
            "inputProperties": {
                "appIdentifier": {
                    "type": "string",
                    "description": "The Dynatrace entity ID of the application to which the metric belongs.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Descriptor of a calculated web metric.\n"
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CalculatedWebMetricDimension:CalculatedWebMetricDimension"
                    },
                    "description": "Parameters of a definition of a calculated web metric.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The metric is enabled (`true`) or disabled (`false`)\n"
                },
                "metricDefinition": {
                    "$ref": "#/types/dynatrace:index/CalculatedWebMetricMetricDefinition:CalculatedWebMetricMetricDefinition",
                    "description": "The definition of a calculated web metric.\n"
                },
                "metricKey": {
                    "type": "string",
                    "description": "The unique key of the calculated web metric.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The displayed name of the metric.\n"
                },
                "userActionFilter": {
                    "$ref": "#/types/dynatrace:index/CalculatedWebMetricUserActionFilter:CalculatedWebMetricUserActionFilter",
                    "description": "Parameters of a definition of a calculated web metric.\n"
                }
            },
            "requiredInputs": [
                "appIdentifier",
                "enabled",
                "metricDefinition",
                "metricKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CalculatedWebMetric resources.\n",
                "properties": {
                    "appIdentifier": {
                        "type": "string",
                        "description": "The Dynatrace entity ID of the application to which the metric belongs.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Descriptor of a calculated web metric.\n"
                    },
                    "dimensions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/CalculatedWebMetricDimension:CalculatedWebMetricDimension"
                        },
                        "description": "Parameters of a definition of a calculated web metric.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The metric is enabled (`true`) or disabled (`false`)\n"
                    },
                    "metricDefinition": {
                        "$ref": "#/types/dynatrace:index/CalculatedWebMetricMetricDefinition:CalculatedWebMetricMetricDefinition",
                        "description": "The definition of a calculated web metric.\n"
                    },
                    "metricKey": {
                        "type": "string",
                        "description": "The unique key of the calculated web metric.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The displayed name of the metric.\n"
                    },
                    "userActionFilter": {
                        "$ref": "#/types/dynatrace:index/CalculatedWebMetricUserActionFilter:CalculatedWebMetricUserActionFilter",
                        "description": "Parameters of a definition of a calculated web metric.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/cloudFoundry:CloudFoundry": {
            "properties": {
                "activeGateGroup": {
                    "type": "string",
                    "description": "ActiveGate group\n"
                },
                "apiUrl": {
                    "type": "string",
                    "description": "Cloud Foundry API Target\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "label": {
                    "type": "string",
                    "description": "Name this connection\n"
                },
                "loginUrl": {
                    "type": "string",
                    "description": "Cloud Foundry Authentication Endpoint\n"
                },
                "password": {
                    "type": "string",
                    "description": "Cloud Foundry Password\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "Cloud Foundry Username\n"
                }
            },
            "required": [
                "apiUrl",
                "enabled",
                "label",
                "loginUrl",
                "password",
                "username"
            ],
            "inputProperties": {
                "activeGateGroup": {
                    "type": "string",
                    "description": "ActiveGate group\n"
                },
                "apiUrl": {
                    "type": "string",
                    "description": "Cloud Foundry API Target\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "label": {
                    "type": "string",
                    "description": "Name this connection\n"
                },
                "loginUrl": {
                    "type": "string",
                    "description": "Cloud Foundry Authentication Endpoint\n"
                },
                "password": {
                    "type": "string",
                    "description": "Cloud Foundry Password\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "Cloud Foundry Username\n"
                }
            },
            "requiredInputs": [
                "apiUrl",
                "enabled",
                "label",
                "loginUrl",
                "password",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudFoundry resources.\n",
                "properties": {
                    "activeGateGroup": {
                        "type": "string",
                        "description": "ActiveGate group\n"
                    },
                    "apiUrl": {
                        "type": "string",
                        "description": "Cloud Foundry API Target\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "Name this connection\n"
                    },
                    "loginUrl": {
                        "type": "string",
                        "description": "Cloud Foundry Authentication Endpoint\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Cloud Foundry Password\n",
                        "secret": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Cloud Foundry Username\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/cloudappWorkloaddetection:CloudappWorkloaddetection": {
            "properties": {
                "cloudFoundry": {
                    "$ref": "#/types/dynatrace:index/CloudappWorkloaddetectionCloudFoundry:CloudappWorkloaddetectionCloudFoundry",
                    "description": "Enable this setting to get * Processes of Cloud Foundry application instances merged into process groups by Cloud\nFoundry application. * Container resource metrics (Container group instance entities) and [related\nscreens](https://www.dynatrace.com/support/help/shortlink/container-groups).\n"
                },
                "docker": {
                    "$ref": "#/types/dynatrace:index/CloudappWorkloaddetectionDocker:CloudappWorkloaddetectionDocker",
                    "description": "Enable this setting for plain Docker environments to get * Container resource metrics (Container group instance\nentities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups).\n"
                },
                "kubernetes": {
                    "$ref": "#/types/dynatrace:index/CloudappWorkloaddetectionKubernetes:CloudappWorkloaddetectionKubernetes",
                    "description": "Enable this setting to get * Insights into your Kubernetes namespaces, workloads and pods (cloud application namespace,\ncloud application and cloud application instance and entities). * Container resource metrics (container group instance\nentities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups). * Similar workloads\nmerged into process groups based on defined rules (see below). * Version detection for services that run in Kubernetes\nworkloads.\n"
                }
            },
            "required": [
                "cloudFoundry",
                "docker",
                "kubernetes"
            ],
            "inputProperties": {
                "cloudFoundry": {
                    "$ref": "#/types/dynatrace:index/CloudappWorkloaddetectionCloudFoundry:CloudappWorkloaddetectionCloudFoundry",
                    "description": "Enable this setting to get * Processes of Cloud Foundry application instances merged into process groups by Cloud\nFoundry application. * Container resource metrics (Container group instance entities) and [related\nscreens](https://www.dynatrace.com/support/help/shortlink/container-groups).\n"
                },
                "docker": {
                    "$ref": "#/types/dynatrace:index/CloudappWorkloaddetectionDocker:CloudappWorkloaddetectionDocker",
                    "description": "Enable this setting for plain Docker environments to get * Container resource metrics (Container group instance\nentities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups).\n"
                },
                "kubernetes": {
                    "$ref": "#/types/dynatrace:index/CloudappWorkloaddetectionKubernetes:CloudappWorkloaddetectionKubernetes",
                    "description": "Enable this setting to get * Insights into your Kubernetes namespaces, workloads and pods (cloud application namespace,\ncloud application and cloud application instance and entities). * Container resource metrics (container group instance\nentities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups). * Similar workloads\nmerged into process groups based on defined rules (see below). * Version detection for services that run in Kubernetes\nworkloads.\n"
                }
            },
            "requiredInputs": [
                "cloudFoundry",
                "docker",
                "kubernetes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudappWorkloaddetection resources.\n",
                "properties": {
                    "cloudFoundry": {
                        "$ref": "#/types/dynatrace:index/CloudappWorkloaddetectionCloudFoundry:CloudappWorkloaddetectionCloudFoundry",
                        "description": "Enable this setting to get * Processes of Cloud Foundry application instances merged into process groups by Cloud\nFoundry application. * Container resource metrics (Container group instance entities) and [related\nscreens](https://www.dynatrace.com/support/help/shortlink/container-groups).\n"
                    },
                    "docker": {
                        "$ref": "#/types/dynatrace:index/CloudappWorkloaddetectionDocker:CloudappWorkloaddetectionDocker",
                        "description": "Enable this setting for plain Docker environments to get * Container resource metrics (Container group instance\nentities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups).\n"
                    },
                    "kubernetes": {
                        "$ref": "#/types/dynatrace:index/CloudappWorkloaddetectionKubernetes:CloudappWorkloaddetectionKubernetes",
                        "description": "Enable this setting to get * Insights into your Kubernetes namespaces, workloads and pods (cloud application namespace,\ncloud application and cloud application instance and entities). * Container resource metrics (container group instance\nentities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups). * Similar workloads\nmerged into process groups based on defined rules (see below). * Version detection for services that run in Kubernetes\nworkloads.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/cloudfoundryCredentials:CloudfoundryCredentials": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.\n"
                },
                "apiUrl": {
                    "type": "string",
                    "description": "The URL of the Cloud Foundry foundation credentials.  The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.\n"
                },
                "loginUrl": {
                    "type": "string",
                    "description": "The login URL of the Cloud Foundry foundation credentials. The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Cloud Foundry foundation credentials.  Allowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the Cloud Foundry foundation credentials.\n",
                    "secret": true
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username of the Cloud Foundry foundation credentials.  Leading and trailing whitespaces are not allowed.\n"
                }
            },
            "required": [
                "apiUrl",
                "loginUrl",
                "name",
                "username"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "The monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.\n"
                },
                "apiUrl": {
                    "type": "string",
                    "description": "The URL of the Cloud Foundry foundation credentials.  The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.\n"
                },
                "loginUrl": {
                    "type": "string",
                    "description": "The login URL of the Cloud Foundry foundation credentials. The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Cloud Foundry foundation credentials.  Allowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the Cloud Foundry foundation credentials.\n",
                    "secret": true
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username of the Cloud Foundry foundation credentials.  Leading and trailing whitespaces are not allowed.\n"
                }
            },
            "requiredInputs": [
                "apiUrl",
                "loginUrl",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudfoundryCredentials resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "The monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.\n"
                    },
                    "apiUrl": {
                        "type": "string",
                        "description": "The URL of the Cloud Foundry foundation credentials.  The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.\n"
                    },
                    "loginUrl": {
                        "type": "string",
                        "description": "The login URL of the Cloud Foundry foundation credentials. The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Cloud Foundry foundation credentials.  Allowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the Cloud Foundry foundation credentials.\n",
                        "secret": true
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "Any attributes that aren't yet supported by this provider\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username of the Cloud Foundry foundation credentials.  Leading and trailing whitespaces are not allowed.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/connectivityAlerts:ConnectivityAlerts": {
            "properties": {
                "connectivityAlerts": {
                    "type": "boolean",
                    "description": "TCP connectivity problems\n",
                    "language": {
                        "csharp": {
                            "name": "EnableConnectivityAlerts"
                        }
                    }
                },
                "processGroupId": {
                    "type": "string",
                    "description": "The scope of this settings\n"
                }
            },
            "required": [
                "connectivityAlerts",
                "processGroupId"
            ],
            "inputProperties": {
                "connectivityAlerts": {
                    "type": "boolean",
                    "description": "TCP connectivity problems\n",
                    "language": {
                        "csharp": {
                            "name": "EnableConnectivityAlerts"
                        }
                    }
                },
                "processGroupId": {
                    "type": "string",
                    "description": "The scope of this settings\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "connectivityAlerts",
                "processGroupId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ConnectivityAlerts resources.\n",
                "properties": {
                    "connectivityAlerts": {
                        "type": "boolean",
                        "description": "TCP connectivity problems\n",
                        "language": {
                            "csharp": {
                                "name": "EnableConnectivityAlerts"
                            }
                        }
                    },
                    "processGroupId": {
                        "type": "string",
                        "description": "The scope of this settings\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/containerBuiltinRule:ContainerBuiltinRule": {
            "properties": {
                "ignoreDockerPauseContainer": {
                    "type": "boolean",
                    "description": "Disable monitoring of platform internal pause containers in Kubernetes and OpenShift.\n"
                },
                "ignoreKubernetesPauseContainer": {
                    "type": "boolean",
                    "description": "Disable monitoring of platform internal pause containers in Kubernetes and OpenShift.\n"
                },
                "ignoreOpenShiftBuildPodName": {
                    "type": "boolean",
                    "description": "Disable monitoring of intermediate containers created during image build.\n"
                },
                "ignoreOpenShiftSdnNamespace": {
                    "type": "boolean",
                    "description": "Disable monitoring of platform internal containers in the openshift-sdn namespace.\n"
                }
            },
            "required": [
                "ignoreDockerPauseContainer",
                "ignoreKubernetesPauseContainer",
                "ignoreOpenShiftBuildPodName",
                "ignoreOpenShiftSdnNamespace"
            ],
            "inputProperties": {
                "ignoreDockerPauseContainer": {
                    "type": "boolean",
                    "description": "Disable monitoring of platform internal pause containers in Kubernetes and OpenShift.\n"
                },
                "ignoreKubernetesPauseContainer": {
                    "type": "boolean",
                    "description": "Disable monitoring of platform internal pause containers in Kubernetes and OpenShift.\n"
                },
                "ignoreOpenShiftBuildPodName": {
                    "type": "boolean",
                    "description": "Disable monitoring of intermediate containers created during image build.\n"
                },
                "ignoreOpenShiftSdnNamespace": {
                    "type": "boolean",
                    "description": "Disable monitoring of platform internal containers in the openshift-sdn namespace.\n"
                }
            },
            "requiredInputs": [
                "ignoreDockerPauseContainer",
                "ignoreKubernetesPauseContainer",
                "ignoreOpenShiftBuildPodName",
                "ignoreOpenShiftSdnNamespace"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContainerBuiltinRule resources.\n",
                "properties": {
                    "ignoreDockerPauseContainer": {
                        "type": "boolean",
                        "description": "Disable monitoring of platform internal pause containers in Kubernetes and OpenShift.\n"
                    },
                    "ignoreKubernetesPauseContainer": {
                        "type": "boolean",
                        "description": "Disable monitoring of platform internal pause containers in Kubernetes and OpenShift.\n"
                    },
                    "ignoreOpenShiftBuildPodName": {
                        "type": "boolean",
                        "description": "Disable monitoring of intermediate containers created during image build.\n"
                    },
                    "ignoreOpenShiftSdnNamespace": {
                        "type": "boolean",
                        "description": "Disable monitoring of platform internal containers in the openshift-sdn namespace.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/containerRegistry:ContainerRegistry": {
            "properties": {
                "containerRegistry": {
                    "type": "string",
                    "description": "Typically set without protocol. Leave empty to use default configuration\n"
                }
            },
            "inputProperties": {
                "containerRegistry": {
                    "type": "string",
                    "description": "Typically set without protocol. Leave empty to use default configuration\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContainerRegistry resources.\n",
                "properties": {
                    "containerRegistry": {
                        "type": "string",
                        "description": "Typically set without protocol. Leave empty to use default configuration\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/containerRule:ContainerRule": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Possible Values: `MONITORING_OFF`, `MONITORING_ON`\n"
                },
                "operator": {
                    "type": "string",
                    "description": "Possible Values: `CONTAINS`, `ENDS`, `EQUALS`, `EXISTS`, `NOT_CONTAINS`, `NOT_ENDS`, `NOT_EQUALS`, `NOT_EXISTS`, `NOT_STARTS`, `STARTS`\n"
                },
                "property": {
                    "type": "string",
                    "description": "Possible Values: `CONTAINER_NAME`, `IMAGE_NAME`, `KUBERNETES_BASEPODNAME`, `KUBERNETES_CONTAINERNAME`, `KUBERNETES_FULLPODNAME`, `KUBERNETES_NAMESPACE`, `KUBERNETES_PODUID`\n"
                },
                "value": {
                    "type": "string",
                    "description": "Condition value\n"
                }
            },
            "required": [
                "enabled",
                "insertAfter",
                "mode",
                "operator",
                "property"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Possible Values: `MONITORING_OFF`, `MONITORING_ON`\n"
                },
                "operator": {
                    "type": "string",
                    "description": "Possible Values: `CONTAINS`, `ENDS`, `EQUALS`, `EXISTS`, `NOT_CONTAINS`, `NOT_ENDS`, `NOT_EQUALS`, `NOT_EXISTS`, `NOT_STARTS`, `STARTS`\n"
                },
                "property": {
                    "type": "string",
                    "description": "Possible Values: `CONTAINER_NAME`, `IMAGE_NAME`, `KUBERNETES_BASEPODNAME`, `KUBERNETES_CONTAINERNAME`, `KUBERNETES_FULLPODNAME`, `KUBERNETES_NAMESPACE`, `KUBERNETES_PODUID`\n"
                },
                "value": {
                    "type": "string",
                    "description": "Condition value\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "mode",
                "operator",
                "property"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContainerRule resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Possible Values: `MONITORING_OFF`, `MONITORING_ON`\n"
                    },
                    "operator": {
                        "type": "string",
                        "description": "Possible Values: `CONTAINS`, `ENDS`, `EQUALS`, `EXISTS`, `NOT_CONTAINS`, `NOT_ENDS`, `NOT_EQUALS`, `NOT_EXISTS`, `NOT_STARTS`, `STARTS`\n"
                    },
                    "property": {
                        "type": "string",
                        "description": "Possible Values: `CONTAINER_NAME`, `IMAGE_NAME`, `KUBERNETES_BASEPODNAME`, `KUBERNETES_CONTAINERNAME`, `KUBERNETES_FULLPODNAME`, `KUBERNETES_NAMESPACE`, `KUBERNETES_PODUID`\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "Condition value\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/containerTechnology:ContainerTechnology": {
            "properties": {
                "boshProcessManager": {
                    "type": "boolean",
                    "description": "Platform: Cloud Foundry\n"
                },
                "containerd": {
                    "type": "boolean",
                    "description": "Platform: Kubernetes Status: Released Operating system: Linux Min agent version: 1.169\n"
                },
                "crio": {
                    "type": "boolean",
                    "description": "Platform: Kubernetes Status: Released Operating system: Linux Min agent version: 1.163\n"
                },
                "docker": {
                    "type": "boolean",
                    "description": "Platform: Docker and Kubernetes Status: Released Operating system: Linux\n"
                },
                "dockerWindows": {
                    "type": "boolean",
                    "description": "Platform: Docker Status: Early adopter Operating system: Windows Min agent version: 1.149\n"
                },
                "garden": {
                    "type": "boolean",
                    "description": "Platform: Cloud Foundry Status: Released Operating system: Linux Min agent version: 1.133\n"
                },
                "podman": {
                    "type": "boolean",
                    "description": "Platform: Podman Status: Released Operating system: Linux Min agent version: 1.267\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n"
                },
                "winc": {
                    "type": "boolean",
                    "description": "Platform: Cloud Foundry Status: Early adopter Operating system: Windows Min agent version: 1.175\n"
                }
            },
            "required": [
                "boshProcessManager",
                "containerd",
                "crio",
                "docker",
                "dockerWindows",
                "garden",
                "podman",
                "winc"
            ],
            "inputProperties": {
                "boshProcessManager": {
                    "type": "boolean",
                    "description": "Platform: Cloud Foundry\n"
                },
                "containerd": {
                    "type": "boolean",
                    "description": "Platform: Kubernetes Status: Released Operating system: Linux Min agent version: 1.169\n"
                },
                "crio": {
                    "type": "boolean",
                    "description": "Platform: Kubernetes Status: Released Operating system: Linux Min agent version: 1.163\n"
                },
                "docker": {
                    "type": "boolean",
                    "description": "Platform: Docker and Kubernetes Status: Released Operating system: Linux\n"
                },
                "dockerWindows": {
                    "type": "boolean",
                    "description": "Platform: Docker Status: Early adopter Operating system: Windows Min agent version: 1.149\n"
                },
                "garden": {
                    "type": "boolean",
                    "description": "Platform: Cloud Foundry Status: Released Operating system: Linux Min agent version: 1.133\n"
                },
                "podman": {
                    "type": "boolean",
                    "description": "Platform: Podman Status: Released Operating system: Linux Min agent version: 1.267\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                },
                "winc": {
                    "type": "boolean",
                    "description": "Platform: Cloud Foundry Status: Early adopter Operating system: Windows Min agent version: 1.175\n"
                }
            },
            "requiredInputs": [
                "boshProcessManager",
                "containerd",
                "crio",
                "docker",
                "dockerWindows",
                "garden",
                "podman",
                "winc"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContainerTechnology resources.\n",
                "properties": {
                    "boshProcessManager": {
                        "type": "boolean",
                        "description": "Platform: Cloud Foundry\n"
                    },
                    "containerd": {
                        "type": "boolean",
                        "description": "Platform: Kubernetes Status: Released Operating system: Linux Min agent version: 1.169\n"
                    },
                    "crio": {
                        "type": "boolean",
                        "description": "Platform: Kubernetes Status: Released Operating system: Linux Min agent version: 1.163\n"
                    },
                    "docker": {
                        "type": "boolean",
                        "description": "Platform: Docker and Kubernetes Status: Released Operating system: Linux\n"
                    },
                    "dockerWindows": {
                        "type": "boolean",
                        "description": "Platform: Docker Status: Early adopter Operating system: Windows Min agent version: 1.149\n"
                    },
                    "garden": {
                        "type": "boolean",
                        "description": "Platform: Cloud Foundry Status: Released Operating system: Linux Min agent version: 1.133\n"
                    },
                    "podman": {
                        "type": "boolean",
                        "description": "Platform: Podman Status: Released Operating system: Linux Min agent version: 1.267\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    },
                    "winc": {
                        "type": "boolean",
                        "description": "Platform: Cloud Foundry Status: Early adopter Operating system: Windows Min agent version: 1.175\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/crashdumpAnalytics:CrashdumpAnalytics": {
            "properties": {
                "enableCrashDumpAnalytics": {
                    "type": "boolean",
                    "description": "Control the automatic crash dump analytics feature. It's strongly recommended to keep this option enabled. Disabling this feature will stop receiving information about potential problems\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                }
            },
            "required": [
                "enableCrashDumpAnalytics",
                "hostId"
            ],
            "inputProperties": {
                "enableCrashDumpAnalytics": {
                    "type": "boolean",
                    "description": "Control the automatic crash dump analytics feature. It's strongly recommended to keep this option enabled. Disabling this feature will stop receiving information about potential problems\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                }
            },
            "requiredInputs": [
                "enableCrashDumpAnalytics",
                "hostId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CrashdumpAnalytics resources.\n",
                "properties": {
                    "enableCrashDumpAnalytics": {
                        "type": "boolean",
                        "description": "Control the automatic crash dump analytics feature. It's strongly recommended to keep this option enabled. Disabling this feature will stop receiving information about potential problems\n"
                    },
                    "hostId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/credentials:Credentials": {
            "properties": {
                "allowContextlessRequests": {
                    "type": "boolean",
                    "description": "Allow ad-hoc functions to access the credential details (requires the APP_ENGINE scope).\n"
                },
                "certificate": {
                    "type": "string",
                    "description": "Required for Hashicorp Certificate. The ID of Credentials within the Certificate Vault holding the certificate\n"
                },
                "credentialUsageSummaries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CredentialsCredentialUsageSummary:CredentialsCredentialUsageSummary"
                    },
                    "description": "The list contains summary data related to the use of credentials\n",
                    "deprecationMessage": "`credential_usage_summary` will be removed in future versions. It's not getting filled anymore, because it's runtime data"
                },
                "description": {
                    "type": "string",
                    "description": "A short description of the credentials set\n"
                },
                "external": {
                    "$ref": "#/types/dynatrace:index/CredentialsExternal:CredentialsExternal",
                    "description": "External Vault Configuration\n"
                },
                "format": {
                    "type": "string",
                    "description": "The certificate format. Possible values are `PEM`, `PKCS12` and `UNKNOWN`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the credentials set\n"
                },
                "ownerAccessOnly": {
                    "type": "boolean",
                    "description": "The credentials set is available to every user (`false`) or to owner only (`true`)\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the credential. Note: Terraform treats an empty string for a value as if the attribute was absent. If\nyou want to set an empty password, use the value `--empty--`.\n",
                    "secret": true
                },
                "public": {
                    "type": "boolean",
                    "description": "For certificate authentication specifies whether it's public certificate auth (`true`) or not (`false`).\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of the credentials set. Possible values are `ALL`, `EXTENSION` and `SYNTHETIC`\n",
                    "deprecationMessage": "Deprecated(v279), please use `scopes` instead."
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The set of scopes of the credentials set. Possible values are `ALL`, `EXTENSION` and `SYNTHETIC`\n"
                },
                "token": {
                    "type": "string",
                    "description": "Token in the string format. Specifying a token implies `Token Authentication`.\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "The username of the credentials set.\n",
                    "secret": true
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "allowContextlessRequests": {
                    "type": "boolean",
                    "description": "Allow ad-hoc functions to access the credential details (requires the APP_ENGINE scope).\n"
                },
                "certificate": {
                    "type": "string",
                    "description": "Required for Hashicorp Certificate. The ID of Credentials within the Certificate Vault holding the certificate\n"
                },
                "credentialUsageSummaries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CredentialsCredentialUsageSummary:CredentialsCredentialUsageSummary"
                    },
                    "description": "The list contains summary data related to the use of credentials\n",
                    "deprecationMessage": "`credential_usage_summary` will be removed in future versions. It's not getting filled anymore, because it's runtime data"
                },
                "description": {
                    "type": "string",
                    "description": "A short description of the credentials set\n"
                },
                "external": {
                    "$ref": "#/types/dynatrace:index/CredentialsExternal:CredentialsExternal",
                    "description": "External Vault Configuration\n"
                },
                "format": {
                    "type": "string",
                    "description": "The certificate format. Possible values are `PEM`, `PKCS12` and `UNKNOWN`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the credentials set\n"
                },
                "ownerAccessOnly": {
                    "type": "boolean",
                    "description": "The credentials set is available to every user (`false`) or to owner only (`true`)\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of the credential. Note: Terraform treats an empty string for a value as if the attribute was absent. If\nyou want to set an empty password, use the value `--empty--`.\n",
                    "secret": true
                },
                "public": {
                    "type": "boolean",
                    "description": "For certificate authentication specifies whether it's public certificate auth (`true`) or not (`false`).\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of the credentials set. Possible values are `ALL`, `EXTENSION` and `SYNTHETIC`\n",
                    "deprecationMessage": "Deprecated(v279), please use `scopes` instead."
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The set of scopes of the credentials set. Possible values are `ALL`, `EXTENSION` and `SYNTHETIC`\n"
                },
                "token": {
                    "type": "string",
                    "description": "Token in the string format. Specifying a token implies `Token Authentication`.\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "The username of the credentials set.\n",
                    "secret": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Credentials resources.\n",
                "properties": {
                    "allowContextlessRequests": {
                        "type": "boolean",
                        "description": "Allow ad-hoc functions to access the credential details (requires the APP_ENGINE scope).\n"
                    },
                    "certificate": {
                        "type": "string",
                        "description": "Required for Hashicorp Certificate. The ID of Credentials within the Certificate Vault holding the certificate\n"
                    },
                    "credentialUsageSummaries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/CredentialsCredentialUsageSummary:CredentialsCredentialUsageSummary"
                        },
                        "description": "The list contains summary data related to the use of credentials\n",
                        "deprecationMessage": "`credential_usage_summary` will be removed in future versions. It's not getting filled anymore, because it's runtime data"
                    },
                    "description": {
                        "type": "string",
                        "description": "A short description of the credentials set\n"
                    },
                    "external": {
                        "$ref": "#/types/dynatrace:index/CredentialsExternal:CredentialsExternal",
                        "description": "External Vault Configuration\n"
                    },
                    "format": {
                        "type": "string",
                        "description": "The certificate format. Possible values are `PEM`, `PKCS12` and `UNKNOWN`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the credentials set\n"
                    },
                    "ownerAccessOnly": {
                        "type": "boolean",
                        "description": "The credentials set is available to every user (`false`) or to owner only (`true`)\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the credential. Note: Terraform treats an empty string for a value as if the attribute was absent. If\nyou want to set an empty password, use the value `--empty--`.\n",
                        "secret": true
                    },
                    "public": {
                        "type": "boolean",
                        "description": "For certificate authentication specifies whether it's public certificate auth (`true`) or not (`false`).\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of the credentials set. Possible values are `ALL`, `EXTENSION` and `SYNTHETIC`\n",
                        "deprecationMessage": "Deprecated(v279), please use `scopes` instead."
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The set of scopes of the credentials set. Possible values are `ALL`, `EXTENSION` and `SYNTHETIC`\n"
                    },
                    "token": {
                        "type": "string",
                        "description": "Token in the string format. Specifying a token implies `Token Authentication`.\n",
                        "secret": true
                    },
                    "username": {
                        "type": "string",
                        "description": "The username of the credentials set.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/customAnomalies:CustomAnomalies": {
            "properties": {
                "aggregationType": {
                    "type": "string",
                    "description": "How the metric data points are aggregated for the evaluation. The timeseries must support this aggregation\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the metric event\n"
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesDimension:CustomAnomaliesDimension"
                    },
                    "description": "Defines the dimensions of the metric to alert on. The filters are combined by conjunction\n"
                },
                "disabledReason": {
                    "type": "string",
                    "description": "The reason of automatic disabling.  The `NONE` means config was not disabled automatically. Possible values are `METRIC_DEFINITION_INCONSISTENCY`, `NONE`, `TOO_MANY_DIMS` and `TOPX_FORCIBLY_DEACTIVATED`\n",
                    "deprecationMessage": "This property is not meant to be configured from the outside. It will get removed completely in future versions"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The metric event is enabled (`true`) or disabled (`false`)\n"
                },
                "metricId": {
                    "type": "string",
                    "description": "The ID of the metric evaluated by the metric event\n"
                },
                "metricSelector": {
                    "type": "string",
                    "description": "The metric selector that should be executed\n"
                },
                "name": {
                    "type": "string",
                    "description": "No documentation available\n"
                },
                "primaryDimensionKey": {
                    "type": "string",
                    "description": "Defines which dimension key should be used for the **alertingScope**\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesScope:CustomAnomaliesScope"
                    },
                    "description": "Defines the scope of the metric event. Only one filter is allowed per filter type, except for tags, where up to 3 are allowed. The filters are combined by conjunction\n"
                },
                "severity": {
                    "type": "string",
                    "description": "The type of the event to trigger on the threshold violation.  The `CUSTOM_ALERT` type is not correlated with other alerts. The `INFO` type does not open a problem\n"
                },
                "strategy": {
                    "$ref": "#/types/dynatrace:index/CustomAnomaliesStrategy:CustomAnomaliesStrategy",
                    "description": "A monitoring strategy for a metric event config. This is the base version of the monitoring strategy, depending on the type,  the actual JSON may contain additional fields\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "warningReason": {
                    "type": "string",
                    "description": "The reason of a warning set on the config. The `NONE` means config has no warnings. The other supported value is `TOO_MANY_DIMS`\n",
                    "deprecationMessage": "This property is not meant to be configured from the outside. It will get removed completely in future versions"
                }
            },
            "required": [
                "description",
                "enabled",
                "name",
                "strategy"
            ],
            "inputProperties": {
                "aggregationType": {
                    "type": "string",
                    "description": "How the metric data points are aggregated for the evaluation. The timeseries must support this aggregation\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the metric event\n"
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesDimension:CustomAnomaliesDimension"
                    },
                    "description": "Defines the dimensions of the metric to alert on. The filters are combined by conjunction\n"
                },
                "disabledReason": {
                    "type": "string",
                    "description": "The reason of automatic disabling.  The `NONE` means config was not disabled automatically. Possible values are `METRIC_DEFINITION_INCONSISTENCY`, `NONE`, `TOO_MANY_DIMS` and `TOPX_FORCIBLY_DEACTIVATED`\n",
                    "deprecationMessage": "This property is not meant to be configured from the outside. It will get removed completely in future versions"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The metric event is enabled (`true`) or disabled (`false`)\n"
                },
                "metricId": {
                    "type": "string",
                    "description": "The ID of the metric evaluated by the metric event\n"
                },
                "metricSelector": {
                    "type": "string",
                    "description": "The metric selector that should be executed\n"
                },
                "name": {
                    "type": "string",
                    "description": "No documentation available\n"
                },
                "primaryDimensionKey": {
                    "type": "string",
                    "description": "Defines which dimension key should be used for the **alertingScope**\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesScope:CustomAnomaliesScope"
                    },
                    "description": "Defines the scope of the metric event. Only one filter is allowed per filter type, except for tags, where up to 3 are allowed. The filters are combined by conjunction\n"
                },
                "severity": {
                    "type": "string",
                    "description": "The type of the event to trigger on the threshold violation.  The `CUSTOM_ALERT` type is not correlated with other alerts. The `INFO` type does not open a problem\n"
                },
                "strategy": {
                    "$ref": "#/types/dynatrace:index/CustomAnomaliesStrategy:CustomAnomaliesStrategy",
                    "description": "A monitoring strategy for a metric event config. This is the base version of the monitoring strategy, depending on the type,  the actual JSON may contain additional fields\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                },
                "warningReason": {
                    "type": "string",
                    "description": "The reason of a warning set on the config. The `NONE` means config has no warnings. The other supported value is `TOO_MANY_DIMS`\n",
                    "deprecationMessage": "This property is not meant to be configured from the outside. It will get removed completely in future versions"
                }
            },
            "requiredInputs": [
                "description",
                "enabled",
                "strategy"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomAnomalies resources.\n",
                "properties": {
                    "aggregationType": {
                        "type": "string",
                        "description": "How the metric data points are aggregated for the evaluation. The timeseries must support this aggregation\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the metric event\n"
                    },
                    "dimensions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/CustomAnomaliesDimension:CustomAnomaliesDimension"
                        },
                        "description": "Defines the dimensions of the metric to alert on. The filters are combined by conjunction\n"
                    },
                    "disabledReason": {
                        "type": "string",
                        "description": "The reason of automatic disabling.  The `NONE` means config was not disabled automatically. Possible values are `METRIC_DEFINITION_INCONSISTENCY`, `NONE`, `TOO_MANY_DIMS` and `TOPX_FORCIBLY_DEACTIVATED`\n",
                        "deprecationMessage": "This property is not meant to be configured from the outside. It will get removed completely in future versions"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The metric event is enabled (`true`) or disabled (`false`)\n"
                    },
                    "metricId": {
                        "type": "string",
                        "description": "The ID of the metric evaluated by the metric event\n"
                    },
                    "metricSelector": {
                        "type": "string",
                        "description": "The metric selector that should be executed\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "No documentation available\n"
                    },
                    "primaryDimensionKey": {
                        "type": "string",
                        "description": "Defines which dimension key should be used for the **alertingScope**\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/CustomAnomaliesScope:CustomAnomaliesScope"
                        },
                        "description": "Defines the scope of the metric event. Only one filter is allowed per filter type, except for tags, where up to 3 are allowed. The filters are combined by conjunction\n"
                    },
                    "severity": {
                        "type": "string",
                        "description": "The type of the event to trigger on the threshold violation.  The `CUSTOM_ALERT` type is not correlated with other alerts. The `INFO` type does not open a problem\n"
                    },
                    "strategy": {
                        "$ref": "#/types/dynatrace:index/CustomAnomaliesStrategy:CustomAnomaliesStrategy",
                        "description": "A monitoring strategy for a metric event config. This is the base version of the monitoring strategy, depending on the type,  the actual JSON may contain additional fields\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                    },
                    "warningReason": {
                        "type": "string",
                        "description": "The reason of a warning set on the config. The `NONE` means config has no warnings. The other supported value is `TOO_MANY_DIMS`\n",
                        "deprecationMessage": "This property is not meant to be configured from the outside. It will get removed completely in future versions"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/customAppAnomalies:CustomAppAnomalies": {
            "properties": {
                "errorRateIncrease": {
                    "$ref": "#/types/dynatrace:index/CustomAppAnomaliesErrorRateIncrease:CustomAppAnomaliesErrorRateIncrease",
                    "description": "Error rate increase\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (DEVICE*APPLICATION*METHOD CUSTOM_APPLICATION environment)\n"
                },
                "slowUserActions": {
                    "$ref": "#/types/dynatrace:index/CustomAppAnomaliesSlowUserActions:CustomAppAnomaliesSlowUserActions",
                    "description": "Slow user actions\n"
                },
                "unexpectedHighLoad": {
                    "$ref": "#/types/dynatrace:index/CustomAppAnomaliesUnexpectedHighLoad:CustomAppAnomaliesUnexpectedHighLoad",
                    "description": "Unexpected high load\n"
                },
                "unexpectedLowLoad": {
                    "$ref": "#/types/dynatrace:index/CustomAppAnomaliesUnexpectedLowLoad:CustomAppAnomaliesUnexpectedLowLoad",
                    "description": "Unexpected low load\n"
                }
            },
            "required": [
                "errorRateIncrease",
                "slowUserActions",
                "unexpectedHighLoad",
                "unexpectedLowLoad"
            ],
            "inputProperties": {
                "errorRateIncrease": {
                    "$ref": "#/types/dynatrace:index/CustomAppAnomaliesErrorRateIncrease:CustomAppAnomaliesErrorRateIncrease",
                    "description": "Error rate increase\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (DEVICE*APPLICATION*METHOD CUSTOM_APPLICATION environment)\n",
                    "willReplaceOnChanges": true
                },
                "slowUserActions": {
                    "$ref": "#/types/dynatrace:index/CustomAppAnomaliesSlowUserActions:CustomAppAnomaliesSlowUserActions",
                    "description": "Slow user actions\n"
                },
                "unexpectedHighLoad": {
                    "$ref": "#/types/dynatrace:index/CustomAppAnomaliesUnexpectedHighLoad:CustomAppAnomaliesUnexpectedHighLoad",
                    "description": "Unexpected high load\n"
                },
                "unexpectedLowLoad": {
                    "$ref": "#/types/dynatrace:index/CustomAppAnomaliesUnexpectedLowLoad:CustomAppAnomaliesUnexpectedLowLoad",
                    "description": "Unexpected low load\n"
                }
            },
            "requiredInputs": [
                "errorRateIncrease",
                "slowUserActions",
                "unexpectedHighLoad",
                "unexpectedLowLoad"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomAppAnomalies resources.\n",
                "properties": {
                    "errorRateIncrease": {
                        "$ref": "#/types/dynatrace:index/CustomAppAnomaliesErrorRateIncrease:CustomAppAnomaliesErrorRateIncrease",
                        "description": "Error rate increase\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (DEVICE*APPLICATION*METHOD CUSTOM_APPLICATION environment)\n",
                        "willReplaceOnChanges": true
                    },
                    "slowUserActions": {
                        "$ref": "#/types/dynatrace:index/CustomAppAnomaliesSlowUserActions:CustomAppAnomaliesSlowUserActions",
                        "description": "Slow user actions\n"
                    },
                    "unexpectedHighLoad": {
                        "$ref": "#/types/dynatrace:index/CustomAppAnomaliesUnexpectedHighLoad:CustomAppAnomaliesUnexpectedHighLoad",
                        "description": "Unexpected high load\n"
                    },
                    "unexpectedLowLoad": {
                        "$ref": "#/types/dynatrace:index/CustomAppAnomaliesUnexpectedLowLoad:CustomAppAnomaliesUnexpectedLowLoad",
                        "description": "Unexpected low load\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/customAppCrashRate:CustomAppCrashRate": {
            "properties": {
                "crashRateIncrease": {
                    "$ref": "#/types/dynatrace:index/CustomAppCrashRateCrashRateIncrease:CustomAppCrashRateCrashRateIncrease",
                    "description": "Crash rate increase\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (CUSTOM_APPLICATION environment)\n"
                }
            },
            "required": [
                "crashRateIncrease"
            ],
            "inputProperties": {
                "crashRateIncrease": {
                    "$ref": "#/types/dynatrace:index/CustomAppCrashRateCrashRateIncrease:CustomAppCrashRateCrashRateIncrease",
                    "description": "Crash rate increase\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (CUSTOM_APPLICATION environment)\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "crashRateIncrease"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomAppCrashRate resources.\n",
                "properties": {
                    "crashRateIncrease": {
                        "$ref": "#/types/dynatrace:index/CustomAppCrashRateCrashRateIncrease:CustomAppCrashRateCrashRateIncrease",
                        "description": "Crash rate increase\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (CUSTOM_APPLICATION environment)\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/customAppEnablement:CustomAppEnablement": {
            "properties": {
                "rum": {
                    "$ref": "#/types/dynatrace:index/CustomAppEnablementRum:CustomAppEnablementRum",
                    "description": "Capture and analyze all user actions within your application. Enable [Real User Monitoring (RUM)](https://dt-url.net/1n2b0prq) to monitor and improve your application's performance, identify errors, and gain insight into your user's behavior and experience.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (CUSTOM_APPLICATION). Omit this property if you want to cover the whole environment.\n"
                }
            },
            "required": [
                "rum"
            ],
            "inputProperties": {
                "rum": {
                    "$ref": "#/types/dynatrace:index/CustomAppEnablementRum:CustomAppEnablementRum",
                    "description": "Capture and analyze all user actions within your application. Enable [Real User Monitoring (RUM)](https://dt-url.net/1n2b0prq) to monitor and improve your application's performance, identify errors, and gain insight into your user's behavior and experience.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (CUSTOM_APPLICATION). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "rum"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomAppEnablement resources.\n",
                "properties": {
                    "rum": {
                        "$ref": "#/types/dynatrace:index/CustomAppEnablementRum:CustomAppEnablementRum",
                        "description": "Capture and analyze all user actions within your application. Enable [Real User Monitoring (RUM)](https://dt-url.net/1n2b0prq) to monitor and improve your application's performance, identify errors, and gain insight into your user's behavior and experience.\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (CUSTOM_APPLICATION). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/customDevice:CustomDevice": {
            "description": "\u003e This resource requires the API token scopes **Read entities** (`entities.read`) and **Write entities** (`entities.write`)\n\n## Dynatrace Documentation\n\n- Monitored entities API - https://www.dynatrace.com/support/help/dynatrace-api/environment-api/entity-v2 \n\n## Resource Example Usage\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\n\nconst _name_ = new dynatrace.CustomDevice(\"#name#\", {\n    customDeviceId: \"customDeviceId\",\n    displayName: \"customDevicename\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\n\n_name_ = dynatrace.CustomDevice(\"#name#\",\n    custom_device_id=\"customDeviceId\",\n    display_name=\"customDevicename\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var _name_ = new Dynatrace.CustomDevice(\"#name#\", new()\n    {\n        CustomDeviceId = \"customDeviceId\",\n        DisplayName = \"customDevicename\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dynatrace.NewCustomDevice(ctx, \"#name#\", \u0026dynatrace.CustomDeviceArgs{\n\t\t\tCustomDeviceId: pulumi.String(\"customDeviceId\"),\n\t\t\tDisplayName:    pulumi.String(\"customDevicename\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.CustomDevice;\nimport com.pulumi.dynatrace.CustomDeviceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var _name_ = new CustomDevice(\"#name#\", CustomDeviceArgs.builder()        \n            .customDeviceId(\"customDeviceId\")\n            .displayName(\"customDevicename\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  '#name#':\n    type: dynatrace:CustomDevice\n    properties:\n      customDeviceId: customDeviceId\n      displayName: customDevicename\n```\n",
            "properties": {
                "configUrl": {
                    "type": "string",
                    "description": "The URL of a configuration web page for the custom device, such as a login page for a firewall or router.\n"
                },
                "customDeviceId": {
                    "type": "string",
                    "description": "The unique name of the custom device. This Id can either be provided in the resource or generated by Terraform when the\nresource is created. If you use the ID of an existing device, the respective parameters will be updated\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The name of the custom device, displayed in the UI.\n"
                },
                "dnsNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of DNS names related to the custom device.\n"
                },
                "entityId": {
                    "type": "string",
                    "description": "The Dynatrace EntityID of this resource. If you need to refer to this custom device within other resources you want to use this ID\n"
                },
                "faviconUrl": {
                    "type": "string",
                    "description": "The icon to be displayed for your custom component within Smartscape. Provide the full URL of the icon file.\n"
                },
                "group": {
                    "type": "string",
                    "description": "User defined group of entity. Changing the group requires a new custom device to be created.\n"
                },
                "ipAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of IP addresses that belong to the custom device.\n"
                },
                "listenPorts": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The list of ports the custom devices listens to.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The list of key-value pair properties that will be shown beneath the infographics of your custom device.\n",
                    "deprecationMessage": "Please use the attribute `props` instead"
                },
                "props": {
                    "type": "string",
                    "description": "The list of key-value pair properties that will be shown beneath the infographics of your custom device.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The technology type definition of the custom device.\n"
                },
                "uiBased": {
                    "type": "boolean",
                    "description": "If `true` the custom device will be handled as if it was created via UI. It will be refreshed automatically and won't age out. This attribute is taken into consideration when creating the custom device. Changing it afterwards won't have an effect.\n"
                }
            },
            "required": [
                "customDeviceId",
                "displayName",
                "entityId",
                "group",
                "type"
            ],
            "inputProperties": {
                "configUrl": {
                    "type": "string",
                    "description": "The URL of a configuration web page for the custom device, such as a login page for a firewall or router.\n"
                },
                "customDeviceId": {
                    "type": "string",
                    "description": "The unique name of the custom device. This Id can either be provided in the resource or generated by Terraform when the\nresource is created. If you use the ID of an existing device, the respective parameters will be updated\n",
                    "willReplaceOnChanges": true
                },
                "displayName": {
                    "type": "string",
                    "description": "The name of the custom device, displayed in the UI.\n"
                },
                "dnsNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of DNS names related to the custom device.\n"
                },
                "faviconUrl": {
                    "type": "string",
                    "description": "The icon to be displayed for your custom component within Smartscape. Provide the full URL of the icon file.\n"
                },
                "group": {
                    "type": "string",
                    "description": "User defined group of entity. Changing the group requires a new custom device to be created.\n",
                    "willReplaceOnChanges": true
                },
                "ipAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of IP addresses that belong to the custom device.\n"
                },
                "listenPorts": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The list of ports the custom devices listens to.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The list of key-value pair properties that will be shown beneath the infographics of your custom device.\n",
                    "deprecationMessage": "Please use the attribute `props` instead"
                },
                "props": {
                    "type": "string",
                    "description": "The list of key-value pair properties that will be shown beneath the infographics of your custom device.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The technology type definition of the custom device.\n"
                },
                "uiBased": {
                    "type": "boolean",
                    "description": "If `true` the custom device will be handled as if it was created via UI. It will be refreshed automatically and won't age out. This attribute is taken into consideration when creating the custom device. Changing it afterwards won't have an effect.\n"
                }
            },
            "requiredInputs": [
                "displayName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomDevice resources.\n",
                "properties": {
                    "configUrl": {
                        "type": "string",
                        "description": "The URL of a configuration web page for the custom device, such as a login page for a firewall or router.\n"
                    },
                    "customDeviceId": {
                        "type": "string",
                        "description": "The unique name of the custom device. This Id can either be provided in the resource or generated by Terraform when the\nresource is created. If you use the ID of an existing device, the respective parameters will be updated\n",
                        "willReplaceOnChanges": true
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The name of the custom device, displayed in the UI.\n"
                    },
                    "dnsNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of DNS names related to the custom device.\n"
                    },
                    "entityId": {
                        "type": "string",
                        "description": "The Dynatrace EntityID of this resource. If you need to refer to this custom device within other resources you want to use this ID\n"
                    },
                    "faviconUrl": {
                        "type": "string",
                        "description": "The icon to be displayed for your custom component within Smartscape. Provide the full URL of the icon file.\n"
                    },
                    "group": {
                        "type": "string",
                        "description": "User defined group of entity. Changing the group requires a new custom device to be created.\n",
                        "willReplaceOnChanges": true
                    },
                    "ipAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of IP addresses that belong to the custom device.\n"
                    },
                    "listenPorts": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The list of ports the custom devices listens to.\n"
                    },
                    "properties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The list of key-value pair properties that will be shown beneath the infographics of your custom device.\n",
                        "deprecationMessage": "Please use the attribute `props` instead"
                    },
                    "props": {
                        "type": "string",
                        "description": "The list of key-value pair properties that will be shown beneath the infographics of your custom device.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The technology type definition of the custom device.\n"
                    },
                    "uiBased": {
                        "type": "boolean",
                        "description": "If `true` the custom device will be handled as if it was created via UI. It will be refreshed automatically and won't age out. This attribute is taken into consideration when creating the custom device. Changing it afterwards won't have an effect.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/customService:CustomService": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Rule enabled/disabled\n"
                },
                "name": {
                    "type": "string",
                    "description": "The full name of the class / the name to match the class name with\n"
                },
                "processGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of process groups the custom service should belong to\n"
                },
                "queueEntryPoint": {
                    "type": "boolean",
                    "description": "The queue entry point flag. Set to `true` for custom messaging services\n"
                },
                "queueEntryPointType": {
                    "type": "string",
                    "description": "The queue entry point type (IBM*MQ, JMS, KAFKA, MSMQ or RABBIT*MQ)\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomServiceRule:CustomServiceRule"
                    },
                    "description": "The list of rules defining the custom service\n"
                },
                "technology": {
                    "type": "string",
                    "description": "Matcher applying to the file name (ENDS*WITH, EQUALS or STARTS*WITH). Default value is ENDS_WITH (if applicable)\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "required": [
                "enabled",
                "name",
                "technology"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Rule enabled/disabled\n"
                },
                "name": {
                    "type": "string",
                    "description": "The full name of the class / the name to match the class name with\n"
                },
                "processGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of process groups the custom service should belong to\n"
                },
                "queueEntryPoint": {
                    "type": "boolean",
                    "description": "The queue entry point flag. Set to `true` for custom messaging services\n"
                },
                "queueEntryPointType": {
                    "type": "string",
                    "description": "The queue entry point type (IBM*MQ, JMS, KAFKA, MSMQ or RABBIT*MQ)\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/CustomServiceRule:CustomServiceRule"
                    },
                    "description": "The list of rules defining the custom service\n"
                },
                "technology": {
                    "type": "string",
                    "description": "Matcher applying to the file name (ENDS*WITH, EQUALS or STARTS*WITH). Default value is ENDS_WITH (if applicable)\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "technology"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomService resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Rule enabled/disabled\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The full name of the class / the name to match the class name with\n"
                    },
                    "processGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of process groups the custom service should belong to\n"
                    },
                    "queueEntryPoint": {
                        "type": "boolean",
                        "description": "The queue entry point flag. Set to `true` for custom messaging services\n"
                    },
                    "queueEntryPointType": {
                        "type": "string",
                        "description": "The queue entry point type (IBM*MQ, JMS, KAFKA, MSMQ or RABBIT*MQ)\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/CustomServiceRule:CustomServiceRule"
                        },
                        "description": "The list of rules defining the custom service\n"
                    },
                    "technology": {
                        "type": "string",
                        "description": "Matcher applying to the file name (ENDS*WITH, EQUALS or STARTS*WITH). Default value is ENDS_WITH (if applicable)\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/customTags:CustomTags": {
            "properties": {
                "currentState": {
                    "type": "string",
                    "description": "For internal use: current state of tags in JSON format\n"
                },
                "entitySelector": {
                    "type": "string",
                    "description": "Specifies the entities where you want to update tags\n"
                },
                "matchedEntities": {
                    "type": "integer",
                    "description": "The number of monitored entities where the tags have been added.\n"
                },
                "tags": {
                    "$ref": "#/types/dynatrace:index/CustomTagsTags:CustomTagsTags",
                    "description": "Specifies the entities where you want to update tags\n"
                }
            },
            "required": [
                "currentState",
                "entitySelector",
                "matchedEntities",
                "tags"
            ],
            "inputProperties": {
                "currentState": {
                    "type": "string",
                    "description": "For internal use: current state of tags in JSON format\n"
                },
                "entitySelector": {
                    "type": "string",
                    "description": "Specifies the entities where you want to update tags\n",
                    "willReplaceOnChanges": true
                },
                "matchedEntities": {
                    "type": "integer",
                    "description": "The number of monitored entities where the tags have been added.\n"
                },
                "tags": {
                    "$ref": "#/types/dynatrace:index/CustomTagsTags:CustomTagsTags",
                    "description": "Specifies the entities where you want to update tags\n"
                }
            },
            "requiredInputs": [
                "entitySelector",
                "tags"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomTags resources.\n",
                "properties": {
                    "currentState": {
                        "type": "string",
                        "description": "For internal use: current state of tags in JSON format\n"
                    },
                    "entitySelector": {
                        "type": "string",
                        "description": "Specifies the entities where you want to update tags\n",
                        "willReplaceOnChanges": true
                    },
                    "matchedEntities": {
                        "type": "integer",
                        "description": "The number of monitored entities where the tags have been added.\n"
                    },
                    "tags": {
                        "$ref": "#/types/dynatrace:index/CustomTagsTags:CustomTagsTags",
                        "description": "Specifies the entities where you want to update tags\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/customUnits:CustomUnits": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Unit description should provide additional information about the new unit\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unit name has to be unique and is used as identifier.\n"
                },
                "pluralName": {
                    "type": "string",
                    "description": "Unit plural name represent the plural form of the unit name.\n"
                },
                "symbol": {
                    "type": "string",
                    "description": "Unit symbol has to be unique.\n"
                }
            },
            "required": [
                "description",
                "name",
                "pluralName",
                "symbol"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Unit description should provide additional information about the new unit\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unit name has to be unique and is used as identifier.\n"
                },
                "pluralName": {
                    "type": "string",
                    "description": "Unit plural name represent the plural form of the unit name.\n"
                },
                "symbol": {
                    "type": "string",
                    "description": "Unit symbol has to be unique.\n"
                }
            },
            "requiredInputs": [
                "description",
                "pluralName",
                "symbol"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomUnits resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Unit description should provide additional information about the new unit\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unit name has to be unique and is used as identifier.\n"
                    },
                    "pluralName": {
                        "type": "string",
                        "description": "Unit plural name represent the plural form of the unit name.\n"
                    },
                    "symbol": {
                        "type": "string",
                        "description": "Unit symbol has to be unique.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/dashboard:Dashboard": {
            "properties": {
                "dashboardMetadata": {
                    "$ref": "#/types/dynatrace:index/DashboardDashboardMetadata:DashboardDashboardMetadata",
                    "description": "contains parameters of a dashboard\n"
                },
                "metadata": {
                    "$ref": "#/types/dynatrace:index/DashboardMetadata:DashboardMetadata",
                    "description": "`metadata` exists for backwards compatibility but shouldn't get specified anymore\n",
                    "deprecationMessage": "`metadata` exists for backwards compatibility but shouldn't get specified anymore"
                },
                "tiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DashboardTile:DashboardTile"
                    },
                    "description": "the tiles this Dashboard consist of\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "inputProperties": {
                "dashboardMetadata": {
                    "$ref": "#/types/dynatrace:index/DashboardDashboardMetadata:DashboardDashboardMetadata",
                    "description": "contains parameters of a dashboard\n"
                },
                "metadata": {
                    "$ref": "#/types/dynatrace:index/DashboardMetadata:DashboardMetadata",
                    "description": "`metadata` exists for backwards compatibility but shouldn't get specified anymore\n",
                    "deprecationMessage": "`metadata` exists for backwards compatibility but shouldn't get specified anymore"
                },
                "tiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/DashboardTile:DashboardTile"
                    },
                    "description": "the tiles this Dashboard consist of\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Dashboard resources.\n",
                "properties": {
                    "dashboardMetadata": {
                        "$ref": "#/types/dynatrace:index/DashboardDashboardMetadata:DashboardDashboardMetadata",
                        "description": "contains parameters of a dashboard\n"
                    },
                    "metadata": {
                        "$ref": "#/types/dynatrace:index/DashboardMetadata:DashboardMetadata",
                        "description": "`metadata` exists for backwards compatibility but shouldn't get specified anymore\n",
                        "deprecationMessage": "`metadata` exists for backwards compatibility but shouldn't get specified anymore"
                    },
                    "tiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/DashboardTile:DashboardTile"
                        },
                        "description": "the tiles this Dashboard consist of\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/dashboardSharing:DashboardSharing": {
            "description": "\u003e This is a child resource of dynatrace_json_dashboard, therefore it is automatically retrieved with the dashboard. \n\n\u003e This resource requires the API token scopes **Read configuration** (`ReadConfig`) and **Write configuration** (`WriteConfig`)\n\n## Dynatrace Documentation\n\n- Share Dynatrace dashboards - https://www.dynatrace.com/support/help/how-to-use-dynatrace/dashboards-and-charts/dashboards/share-dashboards\n\n- Dashboards API - https://www.dynatrace.com/support/help/dynatrace-api/configuration-api/dashboards-api\n",
            "properties": {
                "dashboardId": {
                    "type": "string",
                    "description": "The Dynatrace entity ID of the dashboard\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The dashboard is shared (`true`) or private (`false`). Make sure that this value is aligned with the attribute `shared` of the resources `dynatrace.Dashboard` and `dynatrace.JsonDashboard`. Otherwise you will encounter non-empty plans.\n"
                },
                "muted": {
                    "type": "boolean",
                    "description": "Reserved for internal use by the provider\n"
                },
                "permissions": {
                    "$ref": "#/types/dynatrace:index/DashboardSharingPermissions:DashboardSharingPermissions",
                    "description": "Access permissions of the dashboard\n"
                },
                "preset": {
                    "type": "boolean",
                    "description": "If `true` the dashboard will be marked as preset. Setting this attribute to `true` will automatically enforce a specific set of permissions - Dashboards flagged as Preset are shared by default. Make sure that this value is aligned with the attribute `preset` of the resources `dynatrace.Dashboard` and `dynatrace.JsonDashboard`. Otherwise you will encounter non-empty plans.\n"
                },
                "public": {
                    "$ref": "#/types/dynatrace:index/DashboardSharingPublic:DashboardSharingPublic",
                    "description": "Configuration of the [anonymous access](https://dt-url.net/ov03sf1) to the dashboard\n"
                }
            },
            "required": [
                "dashboardId",
                "muted"
            ],
            "inputProperties": {
                "dashboardId": {
                    "type": "string",
                    "description": "The Dynatrace entity ID of the dashboard\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The dashboard is shared (`true`) or private (`false`). Make sure that this value is aligned with the attribute `shared` of the resources `dynatrace.Dashboard` and `dynatrace.JsonDashboard`. Otherwise you will encounter non-empty plans.\n"
                },
                "permissions": {
                    "$ref": "#/types/dynatrace:index/DashboardSharingPermissions:DashboardSharingPermissions",
                    "description": "Access permissions of the dashboard\n"
                },
                "preset": {
                    "type": "boolean",
                    "description": "If `true` the dashboard will be marked as preset. Setting this attribute to `true` will automatically enforce a specific set of permissions - Dashboards flagged as Preset are shared by default. Make sure that this value is aligned with the attribute `preset` of the resources `dynatrace.Dashboard` and `dynatrace.JsonDashboard`. Otherwise you will encounter non-empty plans.\n"
                },
                "public": {
                    "$ref": "#/types/dynatrace:index/DashboardSharingPublic:DashboardSharingPublic",
                    "description": "Configuration of the [anonymous access](https://dt-url.net/ov03sf1) to the dashboard\n"
                }
            },
            "requiredInputs": [
                "dashboardId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DashboardSharing resources.\n",
                "properties": {
                    "dashboardId": {
                        "type": "string",
                        "description": "The Dynatrace entity ID of the dashboard\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The dashboard is shared (`true`) or private (`false`). Make sure that this value is aligned with the attribute `shared` of the resources `dynatrace.Dashboard` and `dynatrace.JsonDashboard`. Otherwise you will encounter non-empty plans.\n"
                    },
                    "muted": {
                        "type": "boolean",
                        "description": "Reserved for internal use by the provider\n"
                    },
                    "permissions": {
                        "$ref": "#/types/dynatrace:index/DashboardSharingPermissions:DashboardSharingPermissions",
                        "description": "Access permissions of the dashboard\n"
                    },
                    "preset": {
                        "type": "boolean",
                        "description": "If `true` the dashboard will be marked as preset. Setting this attribute to `true` will automatically enforce a specific set of permissions - Dashboards flagged as Preset are shared by default. Make sure that this value is aligned with the attribute `preset` of the resources `dynatrace.Dashboard` and `dynatrace.JsonDashboard`. Otherwise you will encounter non-empty plans.\n"
                    },
                    "public": {
                        "$ref": "#/types/dynatrace:index/DashboardSharingPublic:DashboardSharingPublic",
                        "description": "Configuration of the [anonymous access](https://dt-url.net/ov03sf1) to the dashboard\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/dashboardsAllowlist:DashboardsAllowlist": {
            "properties": {
                "allowlist": {
                    "$ref": "#/types/dynatrace:index/DashboardsAllowlistAllowlist:DashboardsAllowlistAllowlist",
                    "description": "List of URL pattern matchers\n"
                }
            },
            "inputProperties": {
                "allowlist": {
                    "$ref": "#/types/dynatrace:index/DashboardsAllowlistAllowlist:DashboardsAllowlistAllowlist",
                    "description": "List of URL pattern matchers\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DashboardsAllowlist resources.\n",
                "properties": {
                    "allowlist": {
                        "$ref": "#/types/dynatrace:index/DashboardsAllowlistAllowlist:DashboardsAllowlistAllowlist",
                        "description": "List of URL pattern matchers\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/dashboardsGeneral:DashboardsGeneral": {
            "properties": {
                "defaultDashboardList": {
                    "$ref": "#/types/dynatrace:index/DashboardsGeneralDefaultDashboardList:DashboardsGeneralDefaultDashboardList",
                    "description": "Configure home dashboard for selected user group. The selected preset dashboard will be loaded as default landing page for this environment.\n"
                },
                "enablePublicSharing": {
                    "type": "boolean",
                    "description": "Allow users to grant anonymous access to dashboards. No sign-in will be required to view those dashboards read-only.\n"
                }
            },
            "required": [
                "enablePublicSharing"
            ],
            "inputProperties": {
                "defaultDashboardList": {
                    "$ref": "#/types/dynatrace:index/DashboardsGeneralDefaultDashboardList:DashboardsGeneralDefaultDashboardList",
                    "description": "Configure home dashboard for selected user group. The selected preset dashboard will be loaded as default landing page for this environment.\n"
                },
                "enablePublicSharing": {
                    "type": "boolean",
                    "description": "Allow users to grant anonymous access to dashboards. No sign-in will be required to view those dashboards read-only.\n"
                }
            },
            "requiredInputs": [
                "enablePublicSharing"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DashboardsGeneral resources.\n",
                "properties": {
                    "defaultDashboardList": {
                        "$ref": "#/types/dynatrace:index/DashboardsGeneralDefaultDashboardList:DashboardsGeneralDefaultDashboardList",
                        "description": "Configure home dashboard for selected user group. The selected preset dashboard will be loaded as default landing page for this environment.\n"
                    },
                    "enablePublicSharing": {
                        "type": "boolean",
                        "description": "Allow users to grant anonymous access to dashboards. No sign-in will be required to view those dashboards read-only.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/dashboardsPresets:DashboardsPresets": {
            "properties": {
                "dashboardPresetsList": {
                    "$ref": "#/types/dynatrace:index/DashboardsPresetsDashboardPresetsList:DashboardsPresetsDashboardPresetsList",
                    "description": "Show selected preset to respective user group only.\n"
                },
                "enableDashboardPresets": {
                    "type": "boolean",
                    "description": "Dashboard presets are visible to all users by default. For a pristine environment you may disable them entirely or opt to manually limit visibility to selected user groups.\n"
                }
            },
            "required": [
                "enableDashboardPresets"
            ],
            "inputProperties": {
                "dashboardPresetsList": {
                    "$ref": "#/types/dynatrace:index/DashboardsPresetsDashboardPresetsList:DashboardsPresetsDashboardPresetsList",
                    "description": "Show selected preset to respective user group only.\n"
                },
                "enableDashboardPresets": {
                    "type": "boolean",
                    "description": "Dashboard presets are visible to all users by default. For a pristine environment you may disable them entirely or opt to manually limit visibility to selected user groups.\n"
                }
            },
            "requiredInputs": [
                "enableDashboardPresets"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DashboardsPresets resources.\n",
                "properties": {
                    "dashboardPresetsList": {
                        "$ref": "#/types/dynatrace:index/DashboardsPresetsDashboardPresetsList:DashboardsPresetsDashboardPresetsList",
                        "description": "Show selected preset to respective user group only.\n"
                    },
                    "enableDashboardPresets": {
                        "type": "boolean",
                        "description": "Dashboard presets are visible to all users by default. For a pristine environment you may disable them entirely or opt to manually limit visibility to selected user groups.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/dataPrivacy:DataPrivacy": {
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                },
                "dataCollection": {
                    "$ref": "#/types/dynatrace:index/DataPrivacyDataCollection:DataPrivacyDataCollection",
                    "description": "To provide your end users with the ability to decide for themselves if their activities should be tracked to measure\napplication performance and usage, enable opt-in mode.\n"
                },
                "doNotTrack": {
                    "$ref": "#/types/dynatrace:index/DataPrivacyDoNotTrack:DataPrivacyDoNotTrack",
                    "description": "Most modern web browsers have a privacy feature called [\"Do Not Track\"](https://dt-url.net/sb3n0pnl) that individual\nusers may have enabled on their devices. Customize how Dynatrace should behave when it encounters this setting.\n"
                },
                "masking": {
                    "$ref": "#/types/dynatrace:index/DataPrivacyMasking:DataPrivacyMasking",
                    "description": "no documentation available\n"
                },
                "userTracking": {
                    "$ref": "#/types/dynatrace:index/DataPrivacyUserTracking:DataPrivacyUserTracking",
                    "description": "User tracking\n"
                }
            },
            "required": [
                "dataCollection",
                "doNotTrack",
                "masking",
                "userTracking"
            ],
            "inputProperties": {
                "applicationId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                },
                "dataCollection": {
                    "$ref": "#/types/dynatrace:index/DataPrivacyDataCollection:DataPrivacyDataCollection",
                    "description": "To provide your end users with the ability to decide for themselves if their activities should be tracked to measure\napplication performance and usage, enable opt-in mode.\n"
                },
                "doNotTrack": {
                    "$ref": "#/types/dynatrace:index/DataPrivacyDoNotTrack:DataPrivacyDoNotTrack",
                    "description": "Most modern web browsers have a privacy feature called [\"Do Not Track\"](https://dt-url.net/sb3n0pnl) that individual\nusers may have enabled on their devices. Customize how Dynatrace should behave when it encounters this setting.\n"
                },
                "masking": {
                    "$ref": "#/types/dynatrace:index/DataPrivacyMasking:DataPrivacyMasking",
                    "description": "no documentation available\n"
                },
                "userTracking": {
                    "$ref": "#/types/dynatrace:index/DataPrivacyUserTracking:DataPrivacyUserTracking",
                    "description": "User tracking\n"
                }
            },
            "requiredInputs": [
                "dataCollection",
                "doNotTrack",
                "masking",
                "userTracking"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DataPrivacy resources.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    },
                    "dataCollection": {
                        "$ref": "#/types/dynatrace:index/DataPrivacyDataCollection:DataPrivacyDataCollection",
                        "description": "To provide your end users with the ability to decide for themselves if their activities should be tracked to measure\napplication performance and usage, enable opt-in mode.\n"
                    },
                    "doNotTrack": {
                        "$ref": "#/types/dynatrace:index/DataPrivacyDoNotTrack:DataPrivacyDoNotTrack",
                        "description": "Most modern web browsers have a privacy feature called [\"Do Not Track\"](https://dt-url.net/sb3n0pnl) that individual\nusers may have enabled on their devices. Customize how Dynatrace should behave when it encounters this setting.\n"
                    },
                    "masking": {
                        "$ref": "#/types/dynatrace:index/DataPrivacyMasking:DataPrivacyMasking",
                        "description": "no documentation available\n"
                    },
                    "userTracking": {
                        "$ref": "#/types/dynatrace:index/DataPrivacyUserTracking:DataPrivacyUserTracking",
                        "description": "User tracking\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/databaseAnomalies:DatabaseAnomalies": {
            "properties": {
                "dbConnectFailures": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesDbConnectFailures:DatabaseAnomaliesDbConnectFailures",
                    "description": "Parameters of the failed database connections detection.  The alert is triggered when failed connections number exceeds **connectionFailsCount** during any **timePeriodMinutes** minutes period\n"
                },
                "failureRate": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesFailureRate:DatabaseAnomaliesFailureRate",
                    "description": "Configuration of failure rate increase detection\n"
                },
                "load": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesLoad:DatabaseAnomaliesLoad",
                    "description": "Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are `FIFTEEN_REQUESTS_PER_MINUTE`, `FIVE_REQUESTS_PER_MINUTE`, `ONE_REQUEST_PER_MINUTE` and `TEN_REQUESTS_PER_MINUTE`\n"
                },
                "responseTime": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesResponseTime:DatabaseAnomaliesResponseTime",
                    "description": "Configuration of response time degradation detection\n"
                }
            },
            "inputProperties": {
                "dbConnectFailures": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesDbConnectFailures:DatabaseAnomaliesDbConnectFailures",
                    "description": "Parameters of the failed database connections detection.  The alert is triggered when failed connections number exceeds **connectionFailsCount** during any **timePeriodMinutes** minutes period\n"
                },
                "failureRate": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesFailureRate:DatabaseAnomaliesFailureRate",
                    "description": "Configuration of failure rate increase detection\n"
                },
                "load": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesLoad:DatabaseAnomaliesLoad",
                    "description": "Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are `FIFTEEN_REQUESTS_PER_MINUTE`, `FIVE_REQUESTS_PER_MINUTE`, `ONE_REQUEST_PER_MINUTE` and `TEN_REQUESTS_PER_MINUTE`\n"
                },
                "responseTime": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesResponseTime:DatabaseAnomaliesResponseTime",
                    "description": "Configuration of response time degradation detection\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DatabaseAnomalies resources.\n",
                "properties": {
                    "dbConnectFailures": {
                        "$ref": "#/types/dynatrace:index/DatabaseAnomaliesDbConnectFailures:DatabaseAnomaliesDbConnectFailures",
                        "description": "Parameters of the failed database connections detection.  The alert is triggered when failed connections number exceeds **connectionFailsCount** during any **timePeriodMinutes** minutes period\n"
                    },
                    "failureRate": {
                        "$ref": "#/types/dynatrace:index/DatabaseAnomaliesFailureRate:DatabaseAnomaliesFailureRate",
                        "description": "Configuration of failure rate increase detection\n"
                    },
                    "load": {
                        "$ref": "#/types/dynatrace:index/DatabaseAnomaliesLoad:DatabaseAnomaliesLoad",
                        "description": "Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are `FIFTEEN_REQUESTS_PER_MINUTE`, `FIVE_REQUESTS_PER_MINUTE`, `ONE_REQUEST_PER_MINUTE` and `TEN_REQUESTS_PER_MINUTE`\n"
                    },
                    "responseTime": {
                        "$ref": "#/types/dynatrace:index/DatabaseAnomaliesResponseTime:DatabaseAnomaliesResponseTime",
                        "description": "Configuration of response time degradation detection\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/databaseAnomaliesV2:DatabaseAnomaliesV2": {
            "properties": {
                "databaseConnections": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2DatabaseConnections:DatabaseAnomaliesV2DatabaseConnections",
                    "description": "Alert if the number of failed database connects within the specified time exceeds the specified absolute threshold:\n"
                },
                "failureRate": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2FailureRate:DatabaseAnomaliesV2FailureRate",
                    "description": "Failure rate\n"
                },
                "loadDrops": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2LoadDrops:DatabaseAnomaliesV2LoadDrops",
                    "description": "Alert if the observed load is lower than the expected load by a specified margin for a specified amount of time.\n"
                },
                "loadSpikes": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2LoadSpikes:DatabaseAnomaliesV2LoadSpikes",
                    "description": "Alert if the observed load exceeds the expected load by a specified margin for a specified amount of time.\n"
                },
                "responseTime": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2ResponseTime:DatabaseAnomaliesV2ResponseTime",
                    "description": "Response time\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope for the database anomaly detection\n"
                }
            },
            "required": [
                "databaseConnections",
                "failureRate",
                "loadDrops",
                "loadSpikes",
                "responseTime",
                "scope"
            ],
            "inputProperties": {
                "databaseConnections": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2DatabaseConnections:DatabaseAnomaliesV2DatabaseConnections",
                    "description": "Alert if the number of failed database connects within the specified time exceeds the specified absolute threshold:\n"
                },
                "failureRate": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2FailureRate:DatabaseAnomaliesV2FailureRate",
                    "description": "Failure rate\n"
                },
                "loadDrops": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2LoadDrops:DatabaseAnomaliesV2LoadDrops",
                    "description": "Alert if the observed load is lower than the expected load by a specified margin for a specified amount of time.\n"
                },
                "loadSpikes": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2LoadSpikes:DatabaseAnomaliesV2LoadSpikes",
                    "description": "Alert if the observed load exceeds the expected load by a specified margin for a specified amount of time.\n"
                },
                "responseTime": {
                    "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2ResponseTime:DatabaseAnomaliesV2ResponseTime",
                    "description": "Response time\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope for the database anomaly detection\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "databaseConnections",
                "failureRate",
                "loadDrops",
                "loadSpikes",
                "responseTime",
                "scope"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DatabaseAnomaliesV2 resources.\n",
                "properties": {
                    "databaseConnections": {
                        "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2DatabaseConnections:DatabaseAnomaliesV2DatabaseConnections",
                        "description": "Alert if the number of failed database connects within the specified time exceeds the specified absolute threshold:\n"
                    },
                    "failureRate": {
                        "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2FailureRate:DatabaseAnomaliesV2FailureRate",
                        "description": "Failure rate\n"
                    },
                    "loadDrops": {
                        "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2LoadDrops:DatabaseAnomaliesV2LoadDrops",
                        "description": "Alert if the observed load is lower than the expected load by a specified margin for a specified amount of time.\n"
                    },
                    "loadSpikes": {
                        "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2LoadSpikes:DatabaseAnomaliesV2LoadSpikes",
                        "description": "Alert if the observed load exceeds the expected load by a specified margin for a specified amount of time.\n"
                    },
                    "responseTime": {
                        "$ref": "#/types/dynatrace:index/DatabaseAnomaliesV2ResponseTime:DatabaseAnomaliesV2ResponseTime",
                        "description": "Response time\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope for the database anomaly detection\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/dbAppFeatureFlags:DbAppFeatureFlags": {
            "properties": {
                "booleanValue": {
                    "type": "boolean",
                    "description": "State of boolean feature flag\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the feature\n"
                },
                "numberValue": {
                    "type": "integer",
                    "description": "State of numeric feature flag\n"
                },
                "stringValue": {
                    "type": "string",
                    "description": "State of textual feature flag\n"
                },
                "type": {
                    "type": "string",
                    "description": "Possible Values: `Boolean`, `Number`, `String`\n"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "inputProperties": {
                "booleanValue": {
                    "type": "boolean",
                    "description": "State of boolean feature flag\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the feature\n"
                },
                "numberValue": {
                    "type": "integer",
                    "description": "State of numeric feature flag\n"
                },
                "stringValue": {
                    "type": "string",
                    "description": "State of textual feature flag\n"
                },
                "type": {
                    "type": "string",
                    "description": "Possible Values: `Boolean`, `Number`, `String`\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DbAppFeatureFlags resources.\n",
                "properties": {
                    "booleanValue": {
                        "type": "boolean",
                        "description": "State of boolean feature flag\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the feature\n"
                    },
                    "numberValue": {
                        "type": "integer",
                        "description": "State of numeric feature flag\n"
                    },
                    "stringValue": {
                        "type": "string",
                        "description": "State of textual feature flag\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Possible Values: `Boolean`, `Number`, `String`\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/dduPool:DduPool": {
            "description": "!\u003e This resource API endpoint has been deprecated.\n\n\u003e This resource requires the API token scopes **Read settings** (`settings.read`) and **Write settings** (`settings.write`)\n\n## Dynatrace Documentation\n\n- DDU Pools - https://www.dynatrace.com/support/help/monitoring-consumption/davis-data-units#ddu-pools\n\n- Settings API - https://www.dynatrace.com/support/help/dynatrace-api/environment-api/settings (schemaId: `builtin:accounting.ddu.limit`)\n\n## Resource Example Usage\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\n\nconst _name_ = new dynatrace.DduPool(\"#name#\", {\n    events: {\n        enabled: true,\n        type: \"MONTHLY\",\n        value: 125,\n    },\n    logMonitoring: {\n        enabled: true,\n        type: \"MONTHLY\",\n        value: 124,\n    },\n    metrics: {\n        enabled: true,\n        type: \"MONTHLY\",\n        value: 123,\n    },\n    serverless: {\n        enabled: true,\n        type: \"MONTHLY\",\n        value: 126,\n    },\n    traces: {\n        enabled: true,\n        type: \"MONTHLY\",\n        value: 127,\n    },\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\n\n_name_ = dynatrace.DduPool(\"#name#\",\n    events=dynatrace.DduPoolEventsArgs(\n        enabled=True,\n        type=\"MONTHLY\",\n        value=125,\n    ),\n    log_monitoring=dynatrace.DduPoolLogMonitoringArgs(\n        enabled=True,\n        type=\"MONTHLY\",\n        value=124,\n    ),\n    metrics=dynatrace.DduPoolMetricsArgs(\n        enabled=True,\n        type=\"MONTHLY\",\n        value=123,\n    ),\n    serverless=dynatrace.DduPoolServerlessArgs(\n        enabled=True,\n        type=\"MONTHLY\",\n        value=126,\n    ),\n    traces=dynatrace.DduPoolTracesArgs(\n        enabled=True,\n        type=\"MONTHLY\",\n        value=127,\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var _name_ = new Dynatrace.DduPool(\"#name#\", new()\n    {\n        Events = new Dynatrace.Inputs.DduPoolEventsArgs\n        {\n            Enabled = true,\n            Type = \"MONTHLY\",\n            Value = 125,\n        },\n        LogMonitoring = new Dynatrace.Inputs.DduPoolLogMonitoringArgs\n        {\n            Enabled = true,\n            Type = \"MONTHLY\",\n            Value = 124,\n        },\n        Metrics = new Dynatrace.Inputs.DduPoolMetricsArgs\n        {\n            Enabled = true,\n            Type = \"MONTHLY\",\n            Value = 123,\n        },\n        Serverless = new Dynatrace.Inputs.DduPoolServerlessArgs\n        {\n            Enabled = true,\n            Type = \"MONTHLY\",\n            Value = 126,\n        },\n        Traces = new Dynatrace.Inputs.DduPoolTracesArgs\n        {\n            Enabled = true,\n            Type = \"MONTHLY\",\n            Value = 127,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dynatrace.NewDduPool(ctx, \"#name#\", \u0026dynatrace.DduPoolArgs{\n\t\t\tEvents: \u0026dynatrace.DduPoolEventsArgs{\n\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\tType:    pulumi.String(\"MONTHLY\"),\n\t\t\t\tValue:   pulumi.Int(125),\n\t\t\t},\n\t\t\tLogMonitoring: \u0026dynatrace.DduPoolLogMonitoringArgs{\n\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\tType:    pulumi.String(\"MONTHLY\"),\n\t\t\t\tValue:   pulumi.Int(124),\n\t\t\t},\n\t\t\tMetrics: \u0026dynatrace.DduPoolMetricsArgs{\n\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\tType:    pulumi.String(\"MONTHLY\"),\n\t\t\t\tValue:   pulumi.Int(123),\n\t\t\t},\n\t\t\tServerless: \u0026dynatrace.DduPoolServerlessArgs{\n\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\tType:    pulumi.String(\"MONTHLY\"),\n\t\t\t\tValue:   pulumi.Int(126),\n\t\t\t},\n\t\t\tTraces: \u0026dynatrace.DduPoolTracesArgs{\n\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\tType:    pulumi.String(\"MONTHLY\"),\n\t\t\t\tValue:   pulumi.Int(127),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DduPool;\nimport com.pulumi.dynatrace.DduPoolArgs;\nimport com.pulumi.dynatrace.inputs.DduPoolEventsArgs;\nimport com.pulumi.dynatrace.inputs.DduPoolLogMonitoringArgs;\nimport com.pulumi.dynatrace.inputs.DduPoolMetricsArgs;\nimport com.pulumi.dynatrace.inputs.DduPoolServerlessArgs;\nimport com.pulumi.dynatrace.inputs.DduPoolTracesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var _name_ = new DduPool(\"#name#\", DduPoolArgs.builder()        \n            .events(DduPoolEventsArgs.builder()\n                .enabled(true)\n                .type(\"MONTHLY\")\n                .value(125)\n                .build())\n            .logMonitoring(DduPoolLogMonitoringArgs.builder()\n                .enabled(true)\n                .type(\"MONTHLY\")\n                .value(124)\n                .build())\n            .metrics(DduPoolMetricsArgs.builder()\n                .enabled(true)\n                .type(\"MONTHLY\")\n                .value(123)\n                .build())\n            .serverless(DduPoolServerlessArgs.builder()\n                .enabled(true)\n                .type(\"MONTHLY\")\n                .value(126)\n                .build())\n            .traces(DduPoolTracesArgs.builder()\n                .enabled(true)\n                .type(\"MONTHLY\")\n                .value(127)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  '#name#':\n    type: dynatrace:DduPool\n    properties:\n      events:\n        enabled: true\n        type: MONTHLY\n        value: 125\n      logMonitoring:\n        enabled: true\n        type: MONTHLY\n        value: 124\n      metrics:\n        enabled: true\n        type: MONTHLY\n        value: 123\n      serverless:\n        enabled: true\n        type: MONTHLY\n        value: 126\n      traces:\n        enabled: true\n        type: MONTHLY\n        value: 127\n```\n",
            "properties": {
                "events": {
                    "$ref": "#/types/dynatrace:index/DduPoolEvents:DduPoolEvents",
                    "description": "DDU pool settings for Events\n"
                },
                "logMonitoring": {
                    "$ref": "#/types/dynatrace:index/DduPoolLogMonitoring:DduPoolLogMonitoring",
                    "description": "DDU pool settings for Log Monitoring\n"
                },
                "metrics": {
                    "$ref": "#/types/dynatrace:index/DduPoolMetrics:DduPoolMetrics",
                    "description": "DDU pool settings for Metrics\n"
                },
                "serverless": {
                    "$ref": "#/types/dynatrace:index/DduPoolServerless:DduPoolServerless",
                    "description": "DDU pool settings for Serverless\n"
                },
                "traces": {
                    "$ref": "#/types/dynatrace:index/DduPoolTraces:DduPoolTraces",
                    "description": "DDU pool settings for Traces\n"
                }
            },
            "inputProperties": {
                "events": {
                    "$ref": "#/types/dynatrace:index/DduPoolEvents:DduPoolEvents",
                    "description": "DDU pool settings for Events\n"
                },
                "logMonitoring": {
                    "$ref": "#/types/dynatrace:index/DduPoolLogMonitoring:DduPoolLogMonitoring",
                    "description": "DDU pool settings for Log Monitoring\n"
                },
                "metrics": {
                    "$ref": "#/types/dynatrace:index/DduPoolMetrics:DduPoolMetrics",
                    "description": "DDU pool settings for Metrics\n"
                },
                "serverless": {
                    "$ref": "#/types/dynatrace:index/DduPoolServerless:DduPoolServerless",
                    "description": "DDU pool settings for Serverless\n"
                },
                "traces": {
                    "$ref": "#/types/dynatrace:index/DduPoolTraces:DduPoolTraces",
                    "description": "DDU pool settings for Traces\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DduPool resources.\n",
                "properties": {
                    "events": {
                        "$ref": "#/types/dynatrace:index/DduPoolEvents:DduPoolEvents",
                        "description": "DDU pool settings for Events\n"
                    },
                    "logMonitoring": {
                        "$ref": "#/types/dynatrace:index/DduPoolLogMonitoring:DduPoolLogMonitoring",
                        "description": "DDU pool settings for Log Monitoring\n"
                    },
                    "metrics": {
                        "$ref": "#/types/dynatrace:index/DduPoolMetrics:DduPoolMetrics",
                        "description": "DDU pool settings for Metrics\n"
                    },
                    "serverless": {
                        "$ref": "#/types/dynatrace:index/DduPoolServerless:DduPoolServerless",
                        "description": "DDU pool settings for Serverless\n"
                    },
                    "traces": {
                        "$ref": "#/types/dynatrace:index/DduPoolTraces:DduPoolTraces",
                        "description": "DDU pool settings for Traces\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/declarativeGrouping:DeclarativeGrouping": {
            "properties": {
                "detection": {
                    "$ref": "#/types/dynatrace:index/DeclarativeGroupingDetection:DeclarativeGroupingDetection",
                    "description": "Enter a descriptive process group display name and a unique identifier that Dynatrace can use to recognize this process\ngroup.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this\ninstance regarding order. If not specified when creating the setting will be added to the end of the list. If not\nspecified during update the order will remain untouched\n"
                },
                "name": {
                    "type": "string",
                    "description": "Monitored technology name\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n"
                }
            },
            "required": [
                "enabled",
                "insertAfter",
                "name"
            ],
            "inputProperties": {
                "detection": {
                    "$ref": "#/types/dynatrace:index/DeclarativeGroupingDetection:DeclarativeGroupingDetection",
                    "description": "Enter a descriptive process group display name and a unique identifier that Dynatrace can use to recognize this process\ngroup.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this\ninstance regarding order. If not specified when creating the setting will be added to the end of the list. If not\nspecified during update the order will remain untouched\n"
                },
                "name": {
                    "type": "string",
                    "description": "Monitored technology name\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DeclarativeGrouping resources.\n",
                "properties": {
                    "detection": {
                        "$ref": "#/types/dynatrace:index/DeclarativeGroupingDetection:DeclarativeGroupingDetection",
                        "description": "Enter a descriptive process group display name and a unique identifier that Dynatrace can use to recognize this process\ngroup.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this\ninstance regarding order. If not specified when creating the setting will be added to the end of the list. If not\nspecified during update the order will remain untouched\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Monitored technology name\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/directShares:DirectShares": {
            "description": "\u003e This resource is currently not covered by the export utility.\n\n## Dynatrace Documentation\n\n- Dynatrace Documents - https://########.apps.dynatrace.com/platform/swagger-ui/index.html?urls.primaryName=Document%20Service\n\n## Prerequisites\n\nUsing this resource requires an OAuth client to be configured within your account settings.\nThe scopes of the OAuth Client need to include `Read direct-shares (document:direct-shares:read)`, `Write direct-shares (document:direct-shares:write)`, `Delete direct-shares (document:direct-shares:delete)`.\n\nFinally the provider configuration requires the credentials for that OAuth Client.\nThe configuration section of your provider needs to look like this.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n\n\u003e In order to handle credentials in a secure manner we recommend to use the environment variables `DYNATRACE_AUTOMATION_CLIENT_ID` and `DYNATRACE_AUTOMATION_CLIENT_SECRET` as an alternative.\n\n## Resource Example Usage\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\n\nconst _this = new dynatrace.DirectShares(\"this\", {\n    access: \"read-write\",\n    documentId: \"441564f0-23c9-40ef-b344-18c02c23d712\",\n    recipients: {\n        recipients: [\n            {\n                id: \"441664f0-23c9-40ef-b344-18c02c23d787\",\n                type: \"user\",\n            },\n            {\n                id: \"441664f0-23c9-40ef-b344-18c02c23d788\",\n                type: \"group\",\n            },\n        ],\n    },\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\n\nthis = dynatrace.DirectShares(\"this\",\n    access=\"read-write\",\n    document_id=\"441564f0-23c9-40ef-b344-18c02c23d712\",\n    recipients=dynatrace.DirectSharesRecipientsArgs(\n        recipients=[\n            dynatrace.DirectSharesRecipientsRecipientArgs(\n                id=\"441664f0-23c9-40ef-b344-18c02c23d787\",\n                type=\"user\",\n            ),\n            dynatrace.DirectSharesRecipientsRecipientArgs(\n                id=\"441664f0-23c9-40ef-b344-18c02c23d788\",\n                type=\"group\",\n            ),\n        ],\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var @this = new Dynatrace.DirectShares(\"this\", new()\n    {\n        Access = \"read-write\",\n        DocumentId = \"441564f0-23c9-40ef-b344-18c02c23d712\",\n        Recipients = new Dynatrace.Inputs.DirectSharesRecipientsArgs\n        {\n            Recipients = new[]\n            {\n                new Dynatrace.Inputs.DirectSharesRecipientsRecipientArgs\n                {\n                    Id = \"441664f0-23c9-40ef-b344-18c02c23d787\",\n                    Type = \"user\",\n                },\n                new Dynatrace.Inputs.DirectSharesRecipientsRecipientArgs\n                {\n                    Id = \"441664f0-23c9-40ef-b344-18c02c23d788\",\n                    Type = \"group\",\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dynatrace.NewDirectShares(ctx, \"this\", \u0026dynatrace.DirectSharesArgs{\n\t\t\tAccess:     pulumi.String(\"read-write\"),\n\t\t\tDocumentId: pulumi.String(\"441564f0-23c9-40ef-b344-18c02c23d712\"),\n\t\t\tRecipients: \u0026dynatrace.DirectSharesRecipientsArgs{\n\t\t\t\tRecipients: dynatrace.DirectSharesRecipientsRecipientArray{\n\t\t\t\t\t\u0026dynatrace.DirectSharesRecipientsRecipientArgs{\n\t\t\t\t\t\tId:   pulumi.String(\"441664f0-23c9-40ef-b344-18c02c23d787\"),\n\t\t\t\t\t\tType: pulumi.String(\"user\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026dynatrace.DirectSharesRecipientsRecipientArgs{\n\t\t\t\t\t\tId:   pulumi.String(\"441664f0-23c9-40ef-b344-18c02c23d788\"),\n\t\t\t\t\t\tType: pulumi.String(\"group\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DirectShares;\nimport com.pulumi.dynatrace.DirectSharesArgs;\nimport com.pulumi.dynatrace.inputs.DirectSharesRecipientsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var this_ = new DirectShares(\"this\", DirectSharesArgs.builder()        \n            .access(\"read-write\")\n            .documentId(\"441564f0-23c9-40ef-b344-18c02c23d712\")\n            .recipients(DirectSharesRecipientsArgs.builder()\n                .recipients(                \n                    DirectSharesRecipientsRecipientArgs.builder()\n                        .id(\"441664f0-23c9-40ef-b344-18c02c23d787\")\n                        .type(\"user\")\n                        .build(),\n                    DirectSharesRecipientsRecipientArgs.builder()\n                        .id(\"441664f0-23c9-40ef-b344-18c02c23d788\")\n                        .type(\"group\")\n                        .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  this:\n    type: dynatrace:DirectShares\n    properties:\n      access: read-write\n      documentId: 441564f0-23c9-40ef-b344-18c02c23d712\n      recipients:\n        recipients:\n          - id: 441664f0-23c9-40ef-b344-18c02c23d787\n            type: user\n          - id: 441664f0-23c9-40ef-b344-18c02c23d788\n            type: group\n```\n",
            "properties": {
                "access": {
                    "type": "string",
                    "description": "Access grants. Possible values are `read` and `read-write`\n"
                },
                "documentId": {
                    "type": "string",
                    "description": "Document ID\n"
                },
                "recipients": {
                    "$ref": "#/types/dynatrace:index/DirectSharesRecipients:DirectSharesRecipients",
                    "description": "Recipients of the direct share\n"
                }
            },
            "required": [
                "documentId",
                "recipients"
            ],
            "inputProperties": {
                "access": {
                    "type": "string",
                    "description": "Access grants. Possible values are `read` and `read-write`\n",
                    "willReplaceOnChanges": true
                },
                "documentId": {
                    "type": "string",
                    "description": "Document ID\n"
                },
                "recipients": {
                    "$ref": "#/types/dynatrace:index/DirectSharesRecipients:DirectSharesRecipients",
                    "description": "Recipients of the direct share\n"
                }
            },
            "requiredInputs": [
                "documentId",
                "recipients"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DirectShares resources.\n",
                "properties": {
                    "access": {
                        "type": "string",
                        "description": "Access grants. Possible values are `read` and `read-write`\n",
                        "willReplaceOnChanges": true
                    },
                    "documentId": {
                        "type": "string",
                        "description": "Document ID\n"
                    },
                    "recipients": {
                        "$ref": "#/types/dynatrace:index/DirectSharesRecipients:DirectSharesRecipients",
                        "description": "Recipients of the direct share\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/diskAnalytics:DiskAnalytics": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "The Disk Analytics feature requires an extension to be added to your environment. The Disk Analytics extension consumes custom metrics and [Davis data units](https://www.dynatrace.com/support/help/shortlink/metric-cost-calculation).\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP)\n"
                }
            },
            "required": [
                "enabled",
                "scope"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "The Disk Analytics feature requires an extension to be added to your environment. The Disk Analytics extension consumes custom metrics and [Davis data units](https://www.dynatrace.com/support/help/shortlink/metric-cost-calculation).\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP)\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enabled",
                "scope"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DiskAnalytics resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "The Disk Analytics feature requires an extension to be added to your environment. The Disk Analytics extension consumes custom metrics and [Davis data units](https://www.dynatrace.com/support/help/shortlink/metric-cost-calculation).\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (HOST, HOST_GROUP)\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/diskAnomalies:DiskAnomalies": {
            "properties": {
                "diskName": {
                    "$ref": "#/types/dynatrace:index/DiskAnomaliesDiskName:DiskAnomaliesDiskName",
                    "description": "Narrows the rule usage down to disks, matching the specified criteria\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Disk event rule enabled/disabled\n"
                },
                "hostGroupId": {
                    "type": "string",
                    "description": "Narrows the rule usage down to disks that run on hosts that themselves run on the specified host group\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric to monitor. Possible values are: `LOW_DISK_SPACE`, `LOW_INODES`, `READ_TIME_EXCEEDING` and `WRITE_TIME_EXCEEDING`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the disk event rule\n"
                },
                "samples": {
                    "type": "integer",
                    "description": "The number of samples to evaluate\n"
                },
                "tags": {
                    "$ref": "#/types/dynatrace:index/DiskAnomaliesTags:DiskAnomaliesTags",
                    "description": "Narrows the rule usage down to the hosts matching the specified tags\n"
                },
                "threshold": {
                    "type": "number",
                    "description": "The threshold to trigger disk event.   * A percentage for `LowDiskSpace` or `LowInodes` metrics.   * In milliseconds for `ReadTimeExceeding` or `WriteTimeExceeding` metrics\n"
                },
                "violatingSamples": {
                    "type": "integer",
                    "description": "The number of samples that must violate the threshold to trigger an event. Must not exceed the number of evaluated samples\n"
                }
            },
            "required": [
                "enabled",
                "metric",
                "name",
                "samples",
                "threshold",
                "violatingSamples"
            ],
            "inputProperties": {
                "diskName": {
                    "$ref": "#/types/dynatrace:index/DiskAnomaliesDiskName:DiskAnomaliesDiskName",
                    "description": "Narrows the rule usage down to disks, matching the specified criteria\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Disk event rule enabled/disabled\n"
                },
                "hostGroupId": {
                    "type": "string",
                    "description": "Narrows the rule usage down to disks that run on hosts that themselves run on the specified host group\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The metric to monitor. Possible values are: `LOW_DISK_SPACE`, `LOW_INODES`, `READ_TIME_EXCEEDING` and `WRITE_TIME_EXCEEDING`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the disk event rule\n"
                },
                "samples": {
                    "type": "integer",
                    "description": "The number of samples to evaluate\n"
                },
                "tags": {
                    "$ref": "#/types/dynatrace:index/DiskAnomaliesTags:DiskAnomaliesTags",
                    "description": "Narrows the rule usage down to the hosts matching the specified tags\n"
                },
                "threshold": {
                    "type": "number",
                    "description": "The threshold to trigger disk event.   * A percentage for `LowDiskSpace` or `LowInodes` metrics.   * In milliseconds for `ReadTimeExceeding` or `WriteTimeExceeding` metrics\n"
                },
                "violatingSamples": {
                    "type": "integer",
                    "description": "The number of samples that must violate the threshold to trigger an event. Must not exceed the number of evaluated samples\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "metric",
                "samples",
                "threshold",
                "violatingSamples"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DiskAnomalies resources.\n",
                "properties": {
                    "diskName": {
                        "$ref": "#/types/dynatrace:index/DiskAnomaliesDiskName:DiskAnomaliesDiskName",
                        "description": "Narrows the rule usage down to disks, matching the specified criteria\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Disk event rule enabled/disabled\n"
                    },
                    "hostGroupId": {
                        "type": "string",
                        "description": "Narrows the rule usage down to disks that run on hosts that themselves run on the specified host group\n"
                    },
                    "metric": {
                        "type": "string",
                        "description": "The metric to monitor. Possible values are: `LOW_DISK_SPACE`, `LOW_INODES`, `READ_TIME_EXCEEDING` and `WRITE_TIME_EXCEEDING`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the disk event rule\n"
                    },
                    "samples": {
                        "type": "integer",
                        "description": "The number of samples to evaluate\n"
                    },
                    "tags": {
                        "$ref": "#/types/dynatrace:index/DiskAnomaliesTags:DiskAnomaliesTags",
                        "description": "Narrows the rule usage down to the hosts matching the specified tags\n"
                    },
                    "threshold": {
                        "type": "number",
                        "description": "The threshold to trigger disk event.   * A percentage for `LowDiskSpace` or `LowInodes` metrics.   * In milliseconds for `ReadTimeExceeding` or `WriteTimeExceeding` metrics\n"
                    },
                    "violatingSamples": {
                        "type": "integer",
                        "description": "The number of samples that must violate the threshold to trigger an event. Must not exceed the number of evaluated samples\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/diskAnomaliesV2:DiskAnomaliesV2": {
            "properties": {
                "disk": {
                    "$ref": "#/types/dynatrace:index/DiskAnomaliesV2Disk:DiskAnomaliesV2Disk",
                    "description": "Disk\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope for the disk anomaly detection\n"
                }
            },
            "required": [
                "disk",
                "scope"
            ],
            "inputProperties": {
                "disk": {
                    "$ref": "#/types/dynatrace:index/DiskAnomaliesV2Disk:DiskAnomaliesV2Disk",
                    "description": "Disk\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope for the disk anomaly detection\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "disk",
                "scope"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DiskAnomaliesV2 resources.\n",
                "properties": {
                    "disk": {
                        "$ref": "#/types/dynatrace:index/DiskAnomaliesV2Disk:DiskAnomaliesV2Disk",
                        "description": "Disk\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope for the disk anomaly detection\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/diskAnomalyRules:DiskAnomalyRules": {
            "properties": {
                "diskNameFilter": {
                    "$ref": "#/types/dynatrace:index/DiskAnomalyRulesDiskNameFilter:DiskAnomalyRulesDiskNameFilter",
                    "description": "Only apply to disks whose name matches\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "hostGroupId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "Possible Values: `LOW_DISK_SPACE`, `LOW_INODES`, `READ_TIME_EXCEEDING`, `WRITE_TIME_EXCEEDING`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name\n"
                },
                "sampleLimit": {
                    "$ref": "#/types/dynatrace:index/DiskAnomalyRulesSampleLimit:DiskAnomalyRulesSampleLimit",
                    "description": "Only alert if the threshold was violated in at least *n* of the last *m* samples\n"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only apply to hosts that have the following tags\n"
                },
                "thresholdMilliseconds": {
                    "type": "number",
                    "description": "Alert if higher than\n"
                },
                "thresholdPercent": {
                    "type": "number",
                    "description": "Alert if lower than\n"
                }
            },
            "required": [
                "diskNameFilter",
                "enabled",
                "metric",
                "name",
                "sampleLimit"
            ],
            "inputProperties": {
                "diskNameFilter": {
                    "$ref": "#/types/dynatrace:index/DiskAnomalyRulesDiskNameFilter:DiskAnomalyRulesDiskNameFilter",
                    "description": "Only apply to disks whose name matches\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "hostGroupId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                },
                "metric": {
                    "type": "string",
                    "description": "Possible Values: `LOW_DISK_SPACE`, `LOW_INODES`, `READ_TIME_EXCEEDING`, `WRITE_TIME_EXCEEDING`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name\n"
                },
                "sampleLimit": {
                    "$ref": "#/types/dynatrace:index/DiskAnomalyRulesSampleLimit:DiskAnomalyRulesSampleLimit",
                    "description": "Only alert if the threshold was violated in at least *n* of the last *m* samples\n"
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only apply to hosts that have the following tags\n"
                },
                "thresholdMilliseconds": {
                    "type": "number",
                    "description": "Alert if higher than\n"
                },
                "thresholdPercent": {
                    "type": "number",
                    "description": "Alert if lower than\n"
                }
            },
            "requiredInputs": [
                "diskNameFilter",
                "enabled",
                "metric",
                "sampleLimit"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DiskAnomalyRules resources.\n",
                "properties": {
                    "diskNameFilter": {
                        "$ref": "#/types/dynatrace:index/DiskAnomalyRulesDiskNameFilter:DiskAnomalyRulesDiskNameFilter",
                        "description": "Only apply to disks whose name matches\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "hostGroupId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    },
                    "metric": {
                        "type": "string",
                        "description": "Possible Values: `LOW_DISK_SPACE`, `LOW_INODES`, `READ_TIME_EXCEEDING`, `WRITE_TIME_EXCEEDING`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name\n"
                    },
                    "sampleLimit": {
                        "$ref": "#/types/dynatrace:index/DiskAnomalyRulesSampleLimit:DiskAnomalyRulesSampleLimit",
                        "description": "Only alert if the threshold was violated in at least *n* of the last *m* samples\n"
                    },
                    "tagFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Only apply to hosts that have the following tags\n"
                    },
                    "thresholdMilliseconds": {
                        "type": "number",
                        "description": "Alert if higher than\n"
                    },
                    "thresholdPercent": {
                        "type": "number",
                        "description": "Alert if lower than\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/diskOptions:DiskOptions": {
            "properties": {
                "disableNfsDiskMonitoring": {
                    "type": "boolean",
                    "description": "Deactivate NFS monitoring on all supported systems\n"
                },
                "exclusions": {
                    "$ref": "#/types/dynatrace:index/DiskOptionsExclusions:DiskOptionsExclusions",
                    "description": "OneAgent automatically detects and monitors all your mount points, however you can create exception rules to remove\ndisks from the monitoring list.\n"
                },
                "nfsShowAll": {
                    "type": "boolean",
                    "description": "When disabled OneAgent will try to deduplicate some of nfs disks. Disabled by default, applies only to Linux hosts.\nRequires OneAgent 1.209 or later\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n"
                }
            },
            "inputProperties": {
                "disableNfsDiskMonitoring": {
                    "type": "boolean",
                    "description": "Deactivate NFS monitoring on all supported systems\n"
                },
                "exclusions": {
                    "$ref": "#/types/dynatrace:index/DiskOptionsExclusions:DiskOptionsExclusions",
                    "description": "OneAgent automatically detects and monitors all your mount points, however you can create exception rules to remove\ndisks from the monitoring list.\n"
                },
                "nfsShowAll": {
                    "type": "boolean",
                    "description": "When disabled OneAgent will try to deduplicate some of nfs disks. Disabled by default, applies only to Linux hosts.\nRequires OneAgent 1.209 or later\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DiskOptions resources.\n",
                "properties": {
                    "disableNfsDiskMonitoring": {
                        "type": "boolean",
                        "description": "Deactivate NFS monitoring on all supported systems\n"
                    },
                    "exclusions": {
                        "$ref": "#/types/dynatrace:index/DiskOptionsExclusions:DiskOptionsExclusions",
                        "description": "OneAgent automatically detects and monitors all your mount points, however you can create exception rules to remove\ndisks from the monitoring list.\n"
                    },
                    "nfsShowAll": {
                        "type": "boolean",
                        "description": "When disabled OneAgent will try to deduplicate some of nfs disks. Disabled by default, applies only to Linux hosts.\nRequires OneAgent 1.209 or later\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/diskSpecificAnomaliesV2:DiskSpecificAnomaliesV2": {
            "properties": {
                "diskId": {
                    "type": "string",
                    "description": "The id for the disk anomaly detection\n"
                },
                "diskLowInodesDetection": {
                    "$ref": "#/types/dynatrace:index/DiskSpecificAnomaliesV2DiskLowInodesDetection:DiskSpecificAnomaliesV2DiskLowInodesDetection",
                    "description": "no documentation available\n"
                },
                "diskLowSpaceDetection": {
                    "$ref": "#/types/dynatrace:index/DiskSpecificAnomaliesV2DiskLowSpaceDetection:DiskSpecificAnomaliesV2DiskLowSpaceDetection",
                    "description": "no documentation available\n"
                },
                "diskSlowWritesAndReadsDetection": {
                    "$ref": "#/types/dynatrace:index/DiskSpecificAnomaliesV2DiskSlowWritesAndReadsDetection:DiskSpecificAnomaliesV2DiskSlowWritesAndReadsDetection",
                    "description": "no documentation available\n"
                },
                "overrideDiskLowSpaceDetection": {
                    "type": "boolean",
                    "description": "Override low disk space detection settings\n"
                },
                "overrideLowInodesDetection": {
                    "type": "boolean",
                    "description": "Override low inodes detection settings\n"
                },
                "overrideSlowWritesAndReadsDetection": {
                    "type": "boolean",
                    "description": "Override slow writes and reads detection settings\n"
                }
            },
            "required": [
                "diskId",
                "overrideDiskLowSpaceDetection",
                "overrideLowInodesDetection",
                "overrideSlowWritesAndReadsDetection"
            ],
            "inputProperties": {
                "diskId": {
                    "type": "string",
                    "description": "The id for the disk anomaly detection\n",
                    "willReplaceOnChanges": true
                },
                "diskLowInodesDetection": {
                    "$ref": "#/types/dynatrace:index/DiskSpecificAnomaliesV2DiskLowInodesDetection:DiskSpecificAnomaliesV2DiskLowInodesDetection",
                    "description": "no documentation available\n"
                },
                "diskLowSpaceDetection": {
                    "$ref": "#/types/dynatrace:index/DiskSpecificAnomaliesV2DiskLowSpaceDetection:DiskSpecificAnomaliesV2DiskLowSpaceDetection",
                    "description": "no documentation available\n"
                },
                "diskSlowWritesAndReadsDetection": {
                    "$ref": "#/types/dynatrace:index/DiskSpecificAnomaliesV2DiskSlowWritesAndReadsDetection:DiskSpecificAnomaliesV2DiskSlowWritesAndReadsDetection",
                    "description": "no documentation available\n"
                },
                "overrideDiskLowSpaceDetection": {
                    "type": "boolean",
                    "description": "Override low disk space detection settings\n"
                },
                "overrideLowInodesDetection": {
                    "type": "boolean",
                    "description": "Override low inodes detection settings\n"
                },
                "overrideSlowWritesAndReadsDetection": {
                    "type": "boolean",
                    "description": "Override slow writes and reads detection settings\n"
                }
            },
            "requiredInputs": [
                "diskId",
                "overrideDiskLowSpaceDetection",
                "overrideLowInodesDetection",
                "overrideSlowWritesAndReadsDetection"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DiskSpecificAnomaliesV2 resources.\n",
                "properties": {
                    "diskId": {
                        "type": "string",
                        "description": "The id for the disk anomaly detection\n",
                        "willReplaceOnChanges": true
                    },
                    "diskLowInodesDetection": {
                        "$ref": "#/types/dynatrace:index/DiskSpecificAnomaliesV2DiskLowInodesDetection:DiskSpecificAnomaliesV2DiskLowInodesDetection",
                        "description": "no documentation available\n"
                    },
                    "diskLowSpaceDetection": {
                        "$ref": "#/types/dynatrace:index/DiskSpecificAnomaliesV2DiskLowSpaceDetection:DiskSpecificAnomaliesV2DiskLowSpaceDetection",
                        "description": "no documentation available\n"
                    },
                    "diskSlowWritesAndReadsDetection": {
                        "$ref": "#/types/dynatrace:index/DiskSpecificAnomaliesV2DiskSlowWritesAndReadsDetection:DiskSpecificAnomaliesV2DiskSlowWritesAndReadsDetection",
                        "description": "no documentation available\n"
                    },
                    "overrideDiskLowSpaceDetection": {
                        "type": "boolean",
                        "description": "Override low disk space detection settings\n"
                    },
                    "overrideLowInodesDetection": {
                        "type": "boolean",
                        "description": "Override low inodes detection settings\n"
                    },
                    "overrideSlowWritesAndReadsDetection": {
                        "type": "boolean",
                        "description": "Override slow writes and reads detection settings\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/document:Document": {
            "description": "\u003e This resource is excluded by default in the export utility. You can, of course, specify that resource explicitly in order to export it. In that case, don't forget to specify the environment variables `DYNATRACE_AUTOMATION_CLIENT_ID` and `DYNATRACE_AUTOMATION_CLIENT_SECRET` for authentication.\n\n## Dynatrace Documentation\n\n- Dynatrace Documents - https://########.apps.dynatrace.com/platform/swagger-ui/index.html?urls.primaryName=Document%20Service\n\n## Prerequisites\n\nUsing this resource requires an OAuth client to be configured within your account settings.\nThe scopes of the OAuth Client need to include `Create and edit documents (document:documents:write)`, `View documents (document:documents:read)`, `Delete documents (document:documents:delete)`.\n\nFinally the provider configuration requires the credentials for that OAuth Client.\nThe configuration section of your provider needs to look like this.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n\n\u003e In order to handle credentials in a secure manner we recommend to use the environment variables `DYNATRACE_AUTOMATION_CLIENT_ID` and `DYNATRACE_AUTOMATION_CLIENT_SECRET` as an alternative.\n",
            "properties": {
                "actor": {
                    "type": "string",
                    "description": "The user context the executions of the document will happen with\n"
                },
                "content": {
                    "type": "string",
                    "description": "Document content as JSON\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name/name of the document\n"
                },
                "owner": {
                    "type": "string",
                    "description": "The ID of the owner of this document\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the document. Possible Values are `dashboard` and `notebook`\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version of the document\n"
                }
            },
            "required": [
                "actor",
                "content",
                "name",
                "owner",
                "type",
                "version"
            ],
            "inputProperties": {
                "actor": {
                    "type": "string",
                    "description": "The user context the executions of the document will happen with\n"
                },
                "content": {
                    "type": "string",
                    "description": "Document content as JSON\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name/name of the document\n"
                },
                "owner": {
                    "type": "string",
                    "description": "The ID of the owner of this document\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the document. Possible Values are `dashboard` and `notebook`\n"
                }
            },
            "requiredInputs": [
                "content",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Document resources.\n",
                "properties": {
                    "actor": {
                        "type": "string",
                        "description": "The user context the executions of the document will happen with\n"
                    },
                    "content": {
                        "type": "string",
                        "description": "Document content as JSON\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name/name of the document\n"
                    },
                    "owner": {
                        "type": "string",
                        "description": "The ID of the owner of this document\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the document. Possible Values are `dashboard` and `notebook`\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "The version of the document\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/emailNotification:EmailNotification": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "bccs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of the email BCC-recipients\n"
                },
                "body": {
                    "type": "string",
                    "description": "The template of the email notification.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "ccs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of the email CC-recipients\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "notifyClosedProblems": {
                    "type": "boolean",
                    "description": "Send email if problem is closed\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email notifications\n"
                },
                "tos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of the email recipients\n"
                }
            },
            "required": [
                "body",
                "legacyId",
                "name",
                "profile",
                "subject",
                "tos"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "bccs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of the email BCC-recipients\n"
                },
                "body": {
                    "type": "string",
                    "description": "The template of the email notification.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "ccs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of the email CC-recipients\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "notifyClosedProblems": {
                    "type": "boolean",
                    "description": "Send email if problem is closed\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email notifications\n"
                },
                "tos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of the email recipients\n"
                }
            },
            "requiredInputs": [
                "body",
                "profile",
                "subject",
                "tos"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EmailNotification resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                    },
                    "bccs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of the email BCC-recipients\n"
                    },
                    "body": {
                        "type": "string",
                        "description": "The template of the email notification.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                    },
                    "ccs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of the email CC-recipients\n"
                    },
                    "legacyId": {
                        "type": "string",
                        "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the notification configuration\n"
                    },
                    "notifyClosedProblems": {
                        "type": "boolean",
                        "description": "Send email if problem is closed\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "The ID of the associated alerting profile\n"
                    },
                    "subject": {
                        "type": "string",
                        "description": "The subject of the email notifications\n"
                    },
                    "tos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of the email recipients\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/environment:Environment": {
            "description": "\u003e This resource requires the cluster API token scope **Service Provider API** (`ServiceProviderAPI`)\n\n## Dynatrace Documentation\n\n- Manage your monitoring environments - https://www.dynatrace.com/support/help/setup-and-configuration/dynatrace-managed/operation/manage-your-monitoring-environments\n\n- Cluster API v2 - Environments - https://www.dynatrace.com/support/help/shortlink/cluster-api#environments\n",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The display name of the environment\n"
                },
                "quotas": {
                    "$ref": "#/types/dynatrace:index/EnvironmentQuotas:EnvironmentQuotas",
                    "description": "Environment level consumption and quotas information\n"
                },
                "state": {
                    "type": "string",
                    "description": "Indicates whether the environment is enabled or disabled. Possible values are `ENABLED` and `DISABLED`. The default value is ENABLED\n"
                },
                "storage": {
                    "$ref": "#/types/dynatrace:index/EnvironmentStorage:EnvironmentStorage",
                    "description": "Environment level storage usage and limit information\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of tags that are assigned to this environment. Every tag can have a maximum length of 100 characters\n"
                },
                "trial": {
                    "type": "boolean",
                    "description": "Specifies whether the environment is a trial environment or a non-trial environment. Creating a trial environment is only possible if your license allows that. The default value is false (non-trial)\n"
                }
            },
            "required": [
                "name",
                "state",
                "storage"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The display name of the environment\n"
                },
                "quotas": {
                    "$ref": "#/types/dynatrace:index/EnvironmentQuotas:EnvironmentQuotas",
                    "description": "Environment level consumption and quotas information\n"
                },
                "state": {
                    "type": "string",
                    "description": "Indicates whether the environment is enabled or disabled. Possible values are `ENABLED` and `DISABLED`. The default value is ENABLED\n"
                },
                "storage": {
                    "$ref": "#/types/dynatrace:index/EnvironmentStorage:EnvironmentStorage",
                    "description": "Environment level storage usage and limit information\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of tags that are assigned to this environment. Every tag can have a maximum length of 100 characters\n"
                },
                "trial": {
                    "type": "boolean",
                    "description": "Specifies whether the environment is a trial environment or a non-trial environment. Creating a trial environment is only possible if your license allows that. The default value is false (non-trial)\n"
                }
            },
            "requiredInputs": [
                "state",
                "storage"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Environment resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The display name of the environment\n"
                    },
                    "quotas": {
                        "$ref": "#/types/dynatrace:index/EnvironmentQuotas:EnvironmentQuotas",
                        "description": "Environment level consumption and quotas information\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Indicates whether the environment is enabled or disabled. Possible values are `ENABLED` and `DISABLED`. The default value is ENABLED\n"
                    },
                    "storage": {
                        "$ref": "#/types/dynatrace:index/EnvironmentStorage:EnvironmentStorage",
                        "description": "Environment level storage usage and limit information\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of tags that are assigned to this environment. Every tag can have a maximum length of 100 characters\n"
                    },
                    "trial": {
                        "type": "boolean",
                        "description": "Specifies whether the environment is a trial environment or a non-trial environment. Creating a trial environment is only possible if your license allows that. The default value is false (non-trial)\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/eulaSettings:EulaSettings": {
            "properties": {
                "enableEula": {
                    "type": "boolean",
                    "description": "Display end user terms to new users logging in to the environment\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (environment)\n"
                }
            },
            "required": [
                "enableEula"
            ],
            "inputProperties": {
                "enableEula": {
                    "type": "boolean",
                    "description": "Display end user terms to new users logging in to the environment\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (environment)\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enableEula"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EulaSettings resources.\n",
                "properties": {
                    "enableEula": {
                        "type": "boolean",
                        "description": "Display end user terms to new users logging in to the environment\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (environment)\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/extensionExecutionController:ExtensionExecutionController": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "ingestActive": {
                    "type": "boolean",
                    "description": "Enable local HTTP Metric, Log and Event Ingest API\n"
                },
                "performanceProfile": {
                    "type": "string",
                    "description": "Possible Values: `DEFAULT`, `HIGH`\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n"
                },
                "statsdActive": {
                    "type": "boolean",
                    "description": "Enable Dynatrace StatsD\n"
                }
            },
            "required": [
                "enabled"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "ingestActive": {
                    "type": "boolean",
                    "description": "Enable local HTTP Metric, Log and Event Ingest API\n"
                },
                "performanceProfile": {
                    "type": "string",
                    "description": "Possible Values: `DEFAULT`, `HIGH`\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                },
                "statsdActive": {
                    "type": "boolean",
                    "description": "Enable Dynatrace StatsD\n"
                }
            },
            "requiredInputs": [
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ExtensionExecutionController resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "ingestActive": {
                        "type": "boolean",
                        "description": "Enable local HTTP Metric, Log and Event Ingest API\n"
                    },
                    "performanceProfile": {
                        "type": "string",
                        "description": "Possible Values: `DEFAULT`, `HIGH`\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    },
                    "statsdActive": {
                        "type": "boolean",
                        "description": "Enable Dynatrace StatsD\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/extensionExecutionRemote:ExtensionExecutionRemote": {
            "properties": {
                "performanceProfile": {
                    "type": "string",
                    "description": "Select performance profile for Extension Execution Controller [Documentation](https://www.dynatrace.com/support/help/shortlink/extensions-concepts#resource-consumption)\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (ENVIRONMENT*ACTIVE*GATE)\n"
                }
            },
            "required": [
                "performanceProfile",
                "scope"
            ],
            "inputProperties": {
                "performanceProfile": {
                    "type": "string",
                    "description": "Select performance profile for Extension Execution Controller [Documentation](https://www.dynatrace.com/support/help/shortlink/extensions-concepts#resource-consumption)\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (ENVIRONMENT*ACTIVE*GATE)\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "performanceProfile",
                "scope"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ExtensionExecutionRemote resources.\n",
                "properties": {
                    "performanceProfile": {
                        "type": "string",
                        "description": "Select performance profile for Extension Execution Controller [Documentation](https://www.dynatrace.com/support/help/shortlink/extensions-concepts#resource-consumption)\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (ENVIRONMENT*ACTIVE*GATE)\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/failureDetectionParameters:FailureDetectionParameters": {
            "properties": {
                "brokenLinks": {
                    "$ref": "#/types/dynatrace:index/FailureDetectionParametersBrokenLinks:FailureDetectionParametersBrokenLinks",
                    "description": "HTTP 404 response codes are thrown when a web server can't find a certain page. 404s are classified as broken links on the client side and therefore aren't considered to be service failures. By enabling this setting, you can have 404s treated as server-side service failures.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description\n"
                },
                "exceptionRules": {
                    "$ref": "#/types/dynatrace:index/FailureDetectionParametersExceptionRules:FailureDetectionParametersExceptionRules",
                    "description": "Customize failure detection for specific exceptions and errors\n"
                },
                "httpResponseCodes": {
                    "$ref": "#/types/dynatrace:index/FailureDetectionParametersHttpResponseCodes:FailureDetectionParametersHttpResponseCodes",
                    "description": "HTTP response codes\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name\n"
                }
            },
            "required": [
                "brokenLinks",
                "exceptionRules",
                "httpResponseCodes",
                "name"
            ],
            "inputProperties": {
                "brokenLinks": {
                    "$ref": "#/types/dynatrace:index/FailureDetectionParametersBrokenLinks:FailureDetectionParametersBrokenLinks",
                    "description": "HTTP 404 response codes are thrown when a web server can't find a certain page. 404s are classified as broken links on the client side and therefore aren't considered to be service failures. By enabling this setting, you can have 404s treated as server-side service failures.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description\n"
                },
                "exceptionRules": {
                    "$ref": "#/types/dynatrace:index/FailureDetectionParametersExceptionRules:FailureDetectionParametersExceptionRules",
                    "description": "Customize failure detection for specific exceptions and errors\n"
                },
                "httpResponseCodes": {
                    "$ref": "#/types/dynatrace:index/FailureDetectionParametersHttpResponseCodes:FailureDetectionParametersHttpResponseCodes",
                    "description": "HTTP response codes\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name\n"
                }
            },
            "requiredInputs": [
                "brokenLinks",
                "exceptionRules",
                "httpResponseCodes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FailureDetectionParameters resources.\n",
                "properties": {
                    "brokenLinks": {
                        "$ref": "#/types/dynatrace:index/FailureDetectionParametersBrokenLinks:FailureDetectionParametersBrokenLinks",
                        "description": "HTTP 404 response codes are thrown when a web server can't find a certain page. 404s are classified as broken links on the client side and therefore aren't considered to be service failures. By enabling this setting, you can have 404s treated as server-side service failures.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description\n"
                    },
                    "exceptionRules": {
                        "$ref": "#/types/dynatrace:index/FailureDetectionParametersExceptionRules:FailureDetectionParametersExceptionRules",
                        "description": "Customize failure detection for specific exceptions and errors\n"
                    },
                    "httpResponseCodes": {
                        "$ref": "#/types/dynatrace:index/FailureDetectionParametersHttpResponseCodes:FailureDetectionParametersHttpResponseCodes",
                        "description": "HTTP response codes\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/failureDetectionRules:FailureDetectionRules": {
            "properties": {
                "conditions": {
                    "$ref": "#/types/dynatrace:index/FailureDetectionRulesConditions:FailureDetectionRulesConditions",
                    "description": "Conditions\n"
                },
                "description": {
                    "type": "string",
                    "description": "Rule description\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "name": {
                    "type": "string",
                    "description": "Rule name\n"
                },
                "parameterId": {
                    "type": "string",
                    "description": "Failure detection parameters\n"
                }
            },
            "required": [
                "conditions",
                "enabled",
                "insertAfter",
                "name",
                "parameterId"
            ],
            "inputProperties": {
                "conditions": {
                    "$ref": "#/types/dynatrace:index/FailureDetectionRulesConditions:FailureDetectionRulesConditions",
                    "description": "Conditions\n"
                },
                "description": {
                    "type": "string",
                    "description": "Rule description\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "name": {
                    "type": "string",
                    "description": "Rule name\n"
                },
                "parameterId": {
                    "type": "string",
                    "description": "Failure detection parameters\n"
                }
            },
            "requiredInputs": [
                "conditions",
                "enabled",
                "parameterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FailureDetectionRules resources.\n",
                "properties": {
                    "conditions": {
                        "$ref": "#/types/dynatrace:index/FailureDetectionRulesConditions:FailureDetectionRulesConditions",
                        "description": "Conditions\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Rule description\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Rule name\n"
                    },
                    "parameterId": {
                        "type": "string",
                        "description": "Failure detection parameters\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/frequentIssues:FrequentIssues": {
            "properties": {
                "detectApps": {
                    "type": "boolean",
                    "description": "Detect frequent issues within applications, enabled (`true`) or disabled (`false`)\n"
                },
                "detectInfra": {
                    "type": "boolean",
                    "description": "Detect frequent issues within infrastructure, enabled (`true`) or disabled (`false`)\n"
                },
                "detectTxn": {
                    "type": "boolean",
                    "description": "Detect frequent issues within transactions and services, enabled (`true`) or disabled (`false`)\n"
                }
            },
            "required": [
                "detectApps",
                "detectInfra",
                "detectTxn"
            ],
            "inputProperties": {
                "detectApps": {
                    "type": "boolean",
                    "description": "Detect frequent issues within applications, enabled (`true`) or disabled (`false`)\n"
                },
                "detectInfra": {
                    "type": "boolean",
                    "description": "Detect frequent issues within infrastructure, enabled (`true`) or disabled (`false`)\n"
                },
                "detectTxn": {
                    "type": "boolean",
                    "description": "Detect frequent issues within transactions and services, enabled (`true`) or disabled (`false`)\n"
                }
            },
            "requiredInputs": [
                "detectApps",
                "detectInfra",
                "detectTxn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FrequentIssues resources.\n",
                "properties": {
                    "detectApps": {
                        "type": "boolean",
                        "description": "Detect frequent issues within applications, enabled (`true`) or disabled (`false`)\n"
                    },
                    "detectInfra": {
                        "type": "boolean",
                        "description": "Detect frequent issues within infrastructure, enabled (`true`) or disabled (`false`)\n"
                    },
                    "detectTxn": {
                        "type": "boolean",
                        "description": "Detect frequent issues within transactions and services, enabled (`true`) or disabled (`false`)\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/genericRelationships:GenericRelationships": {
            "properties": {
                "createdBy": {
                    "type": "string",
                    "description": "The user or extension that created this relationship.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "fromRole": {
                    "type": "string",
                    "description": "Specify a role for the source entity. If both source and destination type are the same, referring different roles will allow identification of a relationships direction. If role is left blank, any role of the source type is considered for the relationship.\n"
                },
                "fromType": {
                    "type": "string",
                    "description": "Define an entity type as the source of the relationship.\n"
                },
                "sources": {
                    "$ref": "#/types/dynatrace:index/GenericRelationshipsSources:GenericRelationshipsSources",
                    "description": "Specify all sources which should be evaluated for this relationship rule. The relationship is only created when any of the filters match.\n"
                },
                "toRole": {
                    "type": "string",
                    "description": "Specify a role for the destination entity. If both source and destination type are the same, referring different roles will allow identification of a relationships direction. If role is left blank, any role of the destination type is considered for the relationship.\n"
                },
                "toType": {
                    "type": "string",
                    "description": "Define an entity type as the destination of the relationship. You can choose the same type as the source type. In this case you also may assign different roles for source and destination for having directed relationships.\n"
                },
                "typeOfRelation": {
                    "type": "string",
                    "description": "Possible Values: `CALLS`, `CHILD_OF`, `INSTANCE_OF`, `PART_OF`, `RUNS_ON`, `SAME_AS`\n"
                }
            },
            "required": [
                "createdBy",
                "enabled",
                "fromType",
                "sources",
                "toType",
                "typeOfRelation"
            ],
            "inputProperties": {
                "createdBy": {
                    "type": "string",
                    "description": "The user or extension that created this relationship.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "fromRole": {
                    "type": "string",
                    "description": "Specify a role for the source entity. If both source and destination type are the same, referring different roles will allow identification of a relationships direction. If role is left blank, any role of the source type is considered for the relationship.\n"
                },
                "fromType": {
                    "type": "string",
                    "description": "Define an entity type as the source of the relationship.\n"
                },
                "sources": {
                    "$ref": "#/types/dynatrace:index/GenericRelationshipsSources:GenericRelationshipsSources",
                    "description": "Specify all sources which should be evaluated for this relationship rule. The relationship is only created when any of the filters match.\n"
                },
                "toRole": {
                    "type": "string",
                    "description": "Specify a role for the destination entity. If both source and destination type are the same, referring different roles will allow identification of a relationships direction. If role is left blank, any role of the destination type is considered for the relationship.\n"
                },
                "toType": {
                    "type": "string",
                    "description": "Define an entity type as the destination of the relationship. You can choose the same type as the source type. In this case you also may assign different roles for source and destination for having directed relationships.\n"
                },
                "typeOfRelation": {
                    "type": "string",
                    "description": "Possible Values: `CALLS`, `CHILD_OF`, `INSTANCE_OF`, `PART_OF`, `RUNS_ON`, `SAME_AS`\n"
                }
            },
            "requiredInputs": [
                "createdBy",
                "enabled",
                "fromType",
                "sources",
                "toType",
                "typeOfRelation"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GenericRelationships resources.\n",
                "properties": {
                    "createdBy": {
                        "type": "string",
                        "description": "The user or extension that created this relationship.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "fromRole": {
                        "type": "string",
                        "description": "Specify a role for the source entity. If both source and destination type are the same, referring different roles will allow identification of a relationships direction. If role is left blank, any role of the source type is considered for the relationship.\n"
                    },
                    "fromType": {
                        "type": "string",
                        "description": "Define an entity type as the source of the relationship.\n"
                    },
                    "sources": {
                        "$ref": "#/types/dynatrace:index/GenericRelationshipsSources:GenericRelationshipsSources",
                        "description": "Specify all sources which should be evaluated for this relationship rule. The relationship is only created when any of the filters match.\n"
                    },
                    "toRole": {
                        "type": "string",
                        "description": "Specify a role for the destination entity. If both source and destination type are the same, referring different roles will allow identification of a relationships direction. If role is left blank, any role of the destination type is considered for the relationship.\n"
                    },
                    "toType": {
                        "type": "string",
                        "description": "Define an entity type as the destination of the relationship. You can choose the same type as the source type. In this case you also may assign different roles for source and destination for having directed relationships.\n"
                    },
                    "typeOfRelation": {
                        "type": "string",
                        "description": "Possible Values: `CALLS`, `CHILD_OF`, `INSTANCE_OF`, `PART_OF`, `RUNS_ON`, `SAME_AS`\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/genericSetting:GenericSetting": {
            "properties": {
                "localStorage": {
                    "type": "string"
                },
                "schema": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "localStorage",
                "schema",
                "scope",
                "value"
            ],
            "inputProperties": {
                "schema": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "schema",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GenericSetting resources.\n",
                "properties": {
                    "localStorage": {
                        "type": "string"
                    },
                    "schema": {
                        "type": "string"
                    },
                    "scope": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/genericTypes:GenericTypes": {
            "properties": {
                "createdBy": {
                    "type": "string",
                    "description": "The user or extension that created this type.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The human readable attribute name for this extraction rule. Leave blank to use the key as the display name.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "name": {
                    "type": "string",
                    "description": "The entity type name. This type name must be unique and must not be changed after creation.\n"
                },
                "rules": {
                    "$ref": "#/types/dynatrace:index/GenericTypesRules:GenericTypesRules",
                    "description": "Specify a list of rules which are evaluated in order. When **any** rule matches, the entity defined according to that rule will be extracted. Subsequent rules will not be evaluated.\n"
                }
            },
            "required": [
                "createdBy",
                "displayName",
                "enabled",
                "insertAfter",
                "name",
                "rules"
            ],
            "inputProperties": {
                "createdBy": {
                    "type": "string",
                    "description": "The user or extension that created this type.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The human readable attribute name for this extraction rule. Leave blank to use the key as the display name.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "name": {
                    "type": "string",
                    "description": "The entity type name. This type name must be unique and must not be changed after creation.\n"
                },
                "rules": {
                    "$ref": "#/types/dynatrace:index/GenericTypesRules:GenericTypesRules",
                    "description": "Specify a list of rules which are evaluated in order. When **any** rule matches, the entity defined according to that rule will be extracted. Subsequent rules will not be evaluated.\n"
                }
            },
            "requiredInputs": [
                "createdBy",
                "displayName",
                "enabled",
                "rules"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GenericTypes resources.\n",
                "properties": {
                    "createdBy": {
                        "type": "string",
                        "description": "The user or extension that created this type.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The human readable attribute name for this extraction rule. Leave blank to use the key as the display name.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The entity type name. This type name must be unique and must not be changed after creation.\n"
                    },
                    "rules": {
                        "$ref": "#/types/dynatrace:index/GenericTypesRules:GenericTypesRules",
                        "description": "Specify a list of rules which are evaluated in order. When **any** rule matches, the entity defined according to that rule will be extracted. Subsequent rules will not be evaluated.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/geolocation:Geolocation": {
            "properties": {
                "displayWorldmap": {
                    "type": "boolean",
                    "description": "Display the world map\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (environment-default). Omit this property if you want to cover the whole environment.\n"
                }
            },
            "required": [
                "displayWorldmap"
            ],
            "inputProperties": {
                "displayWorldmap": {
                    "type": "boolean",
                    "description": "Display the world map\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (environment-default). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "displayWorldmap"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Geolocation resources.\n",
                "properties": {
                    "displayWorldmap": {
                        "type": "boolean",
                        "description": "Display the world map\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (environment-default). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/grailMetricsAllowall:GrailMetricsAllowall": {
            "properties": {
                "allowAll": {
                    "type": "boolean",
                    "description": "When enabled every custom metric will be ingested to Grail. Warning: this setting can cause [unexpected billing!](https://docs.dynatrace.com/docs/dynatrace-api/environment-api/metric-v2/best-practices#avoid-high-cardinality-limits)\n"
                }
            },
            "required": [
                "allowAll"
            ],
            "inputProperties": {
                "allowAll": {
                    "type": "boolean",
                    "description": "When enabled every custom metric will be ingested to Grail. Warning: this setting can cause [unexpected billing!](https://docs.dynatrace.com/docs/dynatrace-api/environment-api/metric-v2/best-practices#avoid-high-cardinality-limits)\n"
                }
            },
            "requiredInputs": [
                "allowAll"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GrailMetricsAllowall resources.\n",
                "properties": {
                    "allowAll": {
                        "type": "boolean",
                        "description": "When enabled every custom metric will be ingested to Grail. Warning: this setting can cause [unexpected billing!](https://docs.dynatrace.com/docs/dynatrace-api/environment-api/metric-v2/best-practices#avoid-high-cardinality-limits)\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/grailMetricsAllowlist:GrailMetricsAllowlist": {
            "properties": {
                "allowRules": {
                    "$ref": "#/types/dynatrace:index/GrailMetricsAllowlistAllowRules:GrailMetricsAllowlistAllowRules",
                    "description": "Specify rules for forwarding metrics\n"
                }
            },
            "inputProperties": {
                "allowRules": {
                    "$ref": "#/types/dynatrace:index/GrailMetricsAllowlistAllowRules:GrailMetricsAllowlistAllowRules",
                    "description": "Specify rules for forwarding metrics\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GrailMetricsAllowlist resources.\n",
                "properties": {
                    "allowRules": {
                        "$ref": "#/types/dynatrace:index/GrailMetricsAllowlistAllowRules:GrailMetricsAllowlistAllowRules",
                        "description": "Specify rules for forwarding metrics\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/grailSecurityContext:GrailSecurityContext": {
            "properties": {
                "destinationProperty": {
                    "type": "string",
                    "description": "The case-sensitive name of a property of the destination type.\n"
                },
                "entityType": {
                    "type": "string",
                    "description": "Type of the entity whose security context to override.\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                }
            },
            "required": [
                "destinationProperty",
                "entityType",
                "insertAfter"
            ],
            "inputProperties": {
                "destinationProperty": {
                    "type": "string",
                    "description": "The case-sensitive name of a property of the destination type.\n"
                },
                "entityType": {
                    "type": "string",
                    "description": "Type of the entity whose security context to override.\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                }
            },
            "requiredInputs": [
                "destinationProperty",
                "entityType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GrailSecurityContext resources.\n",
                "properties": {
                    "destinationProperty": {
                        "type": "string",
                        "description": "The case-sensitive name of a property of the destination type.\n"
                    },
                    "entityType": {
                        "type": "string",
                        "description": "Type of the entity whose security context to override.\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/hostAnomalies:HostAnomalies": {
            "properties": {
                "connections": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesConnections:HostAnomaliesConnections",
                    "description": "Configuration of lost connection detection\n"
                },
                "cpu": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesCpu:HostAnomaliesCpu",
                    "description": "Configuration of high CPU saturation detection\n"
                },
                "disks": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesDisks:HostAnomaliesDisks",
                    "description": "Configuration of disk related anomalies\n"
                },
                "gc": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesGc:HostAnomaliesGc",
                    "description": "Configuration of high Garbage Collector activity detection\n"
                },
                "java": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesJava:HostAnomaliesJava",
                    "description": "Configuration of Java related anomalies\n"
                },
                "memory": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesMemory:HostAnomaliesMemory",
                    "description": "Configuration of high memory usage detection\n"
                },
                "network": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesNetwork:HostAnomaliesNetwork",
                    "description": "Configuration of network related anomalies\n"
                }
            },
            "inputProperties": {
                "connections": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesConnections:HostAnomaliesConnections",
                    "description": "Configuration of lost connection detection\n"
                },
                "cpu": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesCpu:HostAnomaliesCpu",
                    "description": "Configuration of high CPU saturation detection\n"
                },
                "disks": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesDisks:HostAnomaliesDisks",
                    "description": "Configuration of disk related anomalies\n"
                },
                "gc": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesGc:HostAnomaliesGc",
                    "description": "Configuration of high Garbage Collector activity detection\n"
                },
                "java": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesJava:HostAnomaliesJava",
                    "description": "Configuration of Java related anomalies\n"
                },
                "memory": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesMemory:HostAnomaliesMemory",
                    "description": "Configuration of high memory usage detection\n"
                },
                "network": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesNetwork:HostAnomaliesNetwork",
                    "description": "Configuration of network related anomalies\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HostAnomalies resources.\n",
                "properties": {
                    "connections": {
                        "$ref": "#/types/dynatrace:index/HostAnomaliesConnections:HostAnomaliesConnections",
                        "description": "Configuration of lost connection detection\n"
                    },
                    "cpu": {
                        "$ref": "#/types/dynatrace:index/HostAnomaliesCpu:HostAnomaliesCpu",
                        "description": "Configuration of high CPU saturation detection\n"
                    },
                    "disks": {
                        "$ref": "#/types/dynatrace:index/HostAnomaliesDisks:HostAnomaliesDisks",
                        "description": "Configuration of disk related anomalies\n"
                    },
                    "gc": {
                        "$ref": "#/types/dynatrace:index/HostAnomaliesGc:HostAnomaliesGc",
                        "description": "Configuration of high Garbage Collector activity detection\n"
                    },
                    "java": {
                        "$ref": "#/types/dynatrace:index/HostAnomaliesJava:HostAnomaliesJava",
                        "description": "Configuration of Java related anomalies\n"
                    },
                    "memory": {
                        "$ref": "#/types/dynatrace:index/HostAnomaliesMemory:HostAnomaliesMemory",
                        "description": "Configuration of high memory usage detection\n"
                    },
                    "network": {
                        "$ref": "#/types/dynatrace:index/HostAnomaliesNetwork:HostAnomaliesNetwork",
                        "description": "Configuration of network related anomalies\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/hostAnomaliesV2:HostAnomaliesV2": {
            "properties": {
                "host": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2Host:HostAnomaliesV2Host",
                    "description": "Hosts\n"
                },
                "network": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2Network:HostAnomaliesV2Network",
                    "description": "Network\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST HOST_GROUP environment)\n"
                }
            },
            "required": [
                "host",
                "network",
                "scope"
            ],
            "inputProperties": {
                "host": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2Host:HostAnomaliesV2Host",
                    "description": "Hosts\n"
                },
                "network": {
                    "$ref": "#/types/dynatrace:index/HostAnomaliesV2Network:HostAnomaliesV2Network",
                    "description": "Network\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST HOST_GROUP environment)\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "host",
                "network",
                "scope"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HostAnomaliesV2 resources.\n",
                "properties": {
                    "host": {
                        "$ref": "#/types/dynatrace:index/HostAnomaliesV2Host:HostAnomaliesV2Host",
                        "description": "Hosts\n"
                    },
                    "network": {
                        "$ref": "#/types/dynatrace:index/HostAnomaliesV2Network:HostAnomaliesV2Network",
                        "description": "Network\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (HOST HOST_GROUP environment)\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/hostMonitoring:HostMonitoring": {
            "properties": {
                "autoInjection": {
                    "type": "boolean",
                    "description": "An auto-injection disabled with [oneagentctl](https://dt-url.net/oneagentctl) takes precedence over this setting and cannot be changed from the Dynatrace web UI.\n",
                    "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_host_monitoring_advanced` to configure this field."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "fullStack": {
                    "type": "boolean",
                    "description": "Dynatrace uses full-stack monitoring by default, to monitor every aspect of your environment, including all processes, services, and applications detected on your hosts.\n",
                    "deprecationMessage": "This attribute is not supported anymore by the Dynatrace API"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                }
            },
            "required": [
                "enabled",
                "hostId"
            ],
            "inputProperties": {
                "autoInjection": {
                    "type": "boolean",
                    "description": "An auto-injection disabled with [oneagentctl](https://dt-url.net/oneagentctl) takes precedence over this setting and cannot be changed from the Dynatrace web UI.\n",
                    "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_host_monitoring_advanced` to configure this field."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "fullStack": {
                    "type": "boolean",
                    "description": "Dynatrace uses full-stack monitoring by default, to monitor every aspect of your environment, including all processes, services, and applications detected on your hosts.\n",
                    "deprecationMessage": "This attribute is not supported anymore by the Dynatrace API"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enabled",
                "hostId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HostMonitoring resources.\n",
                "properties": {
                    "autoInjection": {
                        "type": "boolean",
                        "description": "An auto-injection disabled with [oneagentctl](https://dt-url.net/oneagentctl) takes precedence over this setting and cannot be changed from the Dynatrace web UI.\n",
                        "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_host_monitoring_advanced` to configure this field."
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "fullStack": {
                        "type": "boolean",
                        "description": "Dynatrace uses full-stack monitoring by default, to monitor every aspect of your environment, including all processes, services, and applications detected on your hosts.\n",
                        "deprecationMessage": "This attribute is not supported anymore by the Dynatrace API"
                    },
                    "hostId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/hostMonitoringAdvanced:HostMonitoringAdvanced": {
            "properties": {
                "codeModuleInjection": {
                    "type": "boolean",
                    "description": "Inject CodeModules in Discovery mode.\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                },
                "processAgentInjection": {
                    "type": "boolean",
                    "description": "Disabling this via [oneagentctl](https://dt-url.net/oneagentctl) takes precedence over this setting and cannot be changed from the Dynatrace web UI.\n"
                }
            },
            "required": [
                "hostId",
                "processAgentInjection"
            ],
            "inputProperties": {
                "codeModuleInjection": {
                    "type": "boolean",
                    "description": "Inject CodeModules in Discovery mode.\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                },
                "processAgentInjection": {
                    "type": "boolean",
                    "description": "Disabling this via [oneagentctl](https://dt-url.net/oneagentctl) takes precedence over this setting and cannot be changed from the Dynatrace web UI.\n"
                }
            },
            "requiredInputs": [
                "hostId",
                "processAgentInjection"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HostMonitoringAdvanced resources.\n",
                "properties": {
                    "codeModuleInjection": {
                        "type": "boolean",
                        "description": "Inject CodeModules in Discovery mode.\n"
                    },
                    "hostId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                    },
                    "processAgentInjection": {
                        "type": "boolean",
                        "description": "Disabling this via [oneagentctl](https://dt-url.net/oneagentctl) takes precedence over this setting and cannot be changed from the Dynatrace web UI.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/hostMonitoringMode:HostMonitoringMode": {
            "properties": {
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                },
                "monitoringMode": {
                    "type": "string",
                    "description": "Possible Values: `DISCOVERY`, `FULL_STACK`, `INFRA_ONLY`\n"
                }
            },
            "required": [
                "hostId",
                "monitoringMode"
            ],
            "inputProperties": {
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                },
                "monitoringMode": {
                    "type": "string",
                    "description": "Possible Values: `DISCOVERY`, `FULL_STACK`, `INFRA_ONLY`\n"
                }
            },
            "requiredInputs": [
                "hostId",
                "monitoringMode"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HostMonitoringMode resources.\n",
                "properties": {
                    "hostId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    },
                    "monitoringMode": {
                        "type": "string",
                        "description": "Possible Values: `DISCOVERY`, `FULL_STACK`, `INFRA_ONLY`\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/hostNaming:HostNaming": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingCondition:HostNamingCondition"
                    },
                    "description": "A list of matching conditions of the rule. The rule applies only if **all** conditions are fulfilled\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The rule is enabled (`true`) or disabled (`false`)\n"
                },
                "format": {
                    "type": "string",
                    "description": "The name to be assigned to matching entities. You can use the following placeholders here: *\n`{AwsAutoScalingGroup:Name}` * `{AwsAvailabilityZone:Name}` * `{AwsElasticLoadBalancer:Name}` *\n`{AwsRelationalDatabaseService:DBName}` * `{AwsRelationalDatabaseService:Endpoint}` *\n`{AwsRelationalDatabaseService:Engine}` * `{AwsRelationalDatabaseService:InstanceClass}` *\n`{AwsRelationalDatabaseService:Name}` * `{AwsRelationalDatabaseService:Port}` * `{AzureRegion:Name}` *\n`{AzureScaleSet:Name}` * `{AzureVm:Name}` * `{CloudFoundryOrganization:Name}` * `{CustomDevice:DetectedName}` *\n`{CustomDevice:DnsName}` * `{CustomDevice:IpAddress}` * `{CustomDevice:Port}` *\n`{DockerContainerGroupInstance:ContainerName}` * `{DockerContainerGroupInstance:FullImageName}` *\n`{DockerContainerGroupInstance:ImageVersion}` * `{DockerContainerGroupInstance:StrippedImageName}` *\n`{ESXIHost:HardwareModel}` * `{ESXIHost:HardwareVendor}` * `{ESXIHost:Name}` * `{ESXIHost:ProductName}` *\n`{ESXIHost:ProductVersion}` * `{Ec2Instance:AmiId}` * `{Ec2Instance:BeanstalkEnvironmentName}` *\n`{Ec2Instance:InstanceId}` * `{Ec2Instance:InstanceType}` * `{Ec2Instance:LocalHostName}` * `{Ec2Instance:Name}` *\n`{Ec2Instance:PublicHostName}` * `{Ec2Instance:SecurityGroup}` * `{GoogleComputeInstance:Id}` *\n`{GoogleComputeInstance:IpAddresses}` * `{GoogleComputeInstance:MachineType}` * `{GoogleComputeInstance:Name}` *\n`{GoogleComputeInstance:ProjectId}` * `{GoogleComputeInstance:Project}` * `{Host:AWSNameTag}` *\n`{Host:AixLogicalCpuCount}` * `{Host:AzureHostName}` * `{Host:AzureSiteName}` * `{Host:BoshDeploymentId}` *\n`{Host:BoshInstanceId}` * `{Host:BoshInstanceName}` * `{Host:BoshName}` * `{Host:BoshStemcellVersion}` *\n`{Host:CpuCores}` * `{Host:DetectedName}` * `{Host:Environment:AppName}` * `{Host:Environment:BoshReleaseVersion}` *\n`{Host:Environment:Environment}` * `{Host:Environment:Link}` * `{Host:Environment:Organization}` *\n`{Host:Environment:Owner}` * `{Host:Environment:Support}` * `{Host:IpAddress}` * `{Host:LogicalCpuCores}` *\n`{Host:OneAgentCustomHostName}` * `{Host:OperatingSystemVersion}` * `{Host:PaasMemoryLimit}` * `{HostGroup:Name}` *\n`{KubernetesCluster:Name}` * `{KubernetesNode:DetectedName}` * `{OpenstackAvailabilityZone:Name}` *\n`{OpenstackZone:Name}` * `{OpenstackComputeNode:Name}` * `{OpenstackProject:Name}` * `{OpenstackVm:InstanceType}` *\n`{OpenstackVm:Name}` * `{OpenstackVm:SecurityGroup}` * `{ProcessGroup:AmazonECRImageAccountId}` *\n`{ProcessGroup:AmazonECRImageRegion}` * `{ProcessGroup:AmazonECSCluster}` * `{ProcessGroup:AmazonECSContainerName}` *\n`{ProcessGroup:AmazonECSFamily}` * `{ProcessGroup:AmazonECSRevision}` * `{ProcessGroup:AmazonLambdaFunctionName}` *\n`{ProcessGroup:AmazonRegion}` * `{ProcessGroup:ApacheConfigPath}` * `{ProcessGroup:ApacheSparkMasterIpAddress}` *\n`{ProcessGroup:AspDotNetCoreApplicationPath}` * `{ProcessGroup:AspDotNetCoreApplicationPath}` *\n`{ProcessGroup:AzureHostName}` * `{ProcessGroup:AzureSiteName}` * `{ProcessGroup:CassandraClusterName}` *\n`{ProcessGroup:CatalinaBase}` * `{ProcessGroup:CatalinaHome}` * `{ProcessGroup:CloudFoundryAppId}` *\n`{ProcessGroup:CloudFoundryAppName}` * `{ProcessGroup:CloudFoundryInstanceIndex}` * `{ProcessGroup:CloudFoundrySpaceId}`\n* `{ProcessGroup:CloudFoundrySpaceName}` * `{ProcessGroup:ColdFusionJvmConfigFile}` *\n`{ProcessGroup:ColdFusionServiceName}` * `{ProcessGroup:CommandLineArgs}` * `{ProcessGroup:DetectedName}` *\n`{ProcessGroup:DotNetCommandPath}` * `{ProcessGroup:DotNetCommand}` * `{ProcessGroup:DotNetClusterId}` *\n`{ProcessGroup:DotNetNodeId}` * `{ProcessGroup:ElasticsearchClusterName}` * `{ProcessGroup:ElasticsearchNodeName}` *\n`{ProcessGroup:EquinoxConfigPath}` * `{ProcessGroup:ExeName}` * `{ProcessGroup:ExePath}` *\n`{ProcessGroup:GlassFishDomainName}` * `{ProcessGroup:GlassFishInstanceName}` * `{ProcessGroup:GoogleAppEngineInstance}`\n* `{ProcessGroup:GoogleAppEngineService}` * `{ProcessGroup:GoogleCloudProject}` * `{ProcessGroup:HybrisBinDirectory}` *\n`{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisDataDirectory}` *\n`{ProcessGroup:IBMCicsRegion}` * `{ProcessGroup:IBMCtgName}` * `{ProcessGroup:IBMImsConnectRegion}` *\n`{ProcessGroup:IBMImsControlRegion}` * `{ProcessGroup:IBMImsMessageProcessingRegion}` *\n`{ProcessGroup:IBMImsSoapGwName}` * `{ProcessGroup:IBMIntegrationNodeName}` * `{ProcessGroup:IBMIntegrationServerName}`\n* `{ProcessGroup:IISAppPool}` * `{ProcessGroup:IISRoleName}` * `{ProcessGroup:JbossHome}` * `{ProcessGroup:JbossMode}` *\n`{ProcessGroup:JbossServerName}` * `{ProcessGroup:JavaJarFile}` * `{ProcessGroup:JavaJarPath}` *\n`{ProcessGroup:JavaMainCLass}` * `{ProcessGroup:KubernetesBasePodName}` * `{ProcessGroup:KubernetesContainerName}` *\n`{ProcessGroup:KubernetesFullPodName}` * `{ProcessGroup:KubernetesNamespace}` * `{ProcessGroup:KubernetesPodUid}` *\n`{ProcessGroup:MssqlInstanceName}` * `{ProcessGroup:NodeJsAppBaseDirectory}` * `{ProcessGroup:NodeJsAppName}` *\n`{ProcessGroup:NodeJsScriptName}` * `{ProcessGroup:OracleSid}` * `{ProcessGroup:PHPScriptPath}` *\n`{ProcessGroup:PHPWorkingDirectory}` * `{ProcessGroup:Ports}` * `{ProcessGroup:RubyAppRootPath}` *\n`{ProcessGroup:RubyScriptPath}` * `{ProcessGroup:SoftwareAGInstallRoot}` *\n`{ProcessGroup:SoftwareAGProductPropertyName}` * `{ProcessGroup:SpringBootAppName}` *\n`{ProcessGroup:SpringBootProfileName}` * `{ProcessGroup:SpringBootStartupClass}` *\n`{ProcessGroup:TIBCOBusinessWorksAppNodeName}` * `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}` *\n`{ProcessGroup:TIBCOBusinessWorksCeAppName}` * `{ProcessGroup:TIBCOBusinessWorksCeVersion}` *\n`{ProcessGroup:TIBCOBusinessWorksDomainName}` * `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}` *\n`{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}` * `{ProcessGroup:TIBCOBusinessWorksHome}` *\n`{ProcessGroup:VarnishInstanceName}` * `{ProcessGroup:WebLogicClusterName}` * `{ProcessGroup:WebLogicDomainName}` *\n`{ProcessGroup:WebLogicHome}` * `{ProcessGroup:WebLogicName}` * `{ProcessGroup:WebSphereCellName}` *\n`{ProcessGroup:WebSphereClusterName}` * `{ProcessGroup:WebSphereNodeName}` * `{ProcessGroup:WebSphereServerName}` *\n`{ProcessGroup:ActorSystem}` * `{Service:STGServerName}` * `{Service:DatabaseHostName}` * `{Service:DatabaseName}` *\n`{Service:DatabaseVendor}` * `{Service:DetectedName}` * `{Service:EndpointPath}` * `{Service:EndpointPathGatewayUrl}` *\n`{Service:IIBApplicationName}` * `{Service:MessageListenerClassName}` * `{Service:Port}` * `{Service:PublicDomainName}`\n* `{Service:RemoteEndpoint}` * `{Service:RemoteName}` * `{Service:WebApplicationId}` * `{Service:WebContextRoot}` *\n`{Service:WebServerName}` * `{Service:WebServiceNamespace}` * `{Service:WebServiceName}` * `{VmwareDatacenter:Name}` *\n`{VmwareVm:Name}\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "required": [
                "enabled",
                "format",
                "name"
            ],
            "inputProperties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HostNamingCondition:HostNamingCondition"
                    },
                    "description": "A list of matching conditions of the rule. The rule applies only if **all** conditions are fulfilled\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The rule is enabled (`true`) or disabled (`false`)\n"
                },
                "format": {
                    "type": "string",
                    "description": "The name to be assigned to matching entities. You can use the following placeholders here: *\n`{AwsAutoScalingGroup:Name}` * `{AwsAvailabilityZone:Name}` * `{AwsElasticLoadBalancer:Name}` *\n`{AwsRelationalDatabaseService:DBName}` * `{AwsRelationalDatabaseService:Endpoint}` *\n`{AwsRelationalDatabaseService:Engine}` * `{AwsRelationalDatabaseService:InstanceClass}` *\n`{AwsRelationalDatabaseService:Name}` * `{AwsRelationalDatabaseService:Port}` * `{AzureRegion:Name}` *\n`{AzureScaleSet:Name}` * `{AzureVm:Name}` * `{CloudFoundryOrganization:Name}` * `{CustomDevice:DetectedName}` *\n`{CustomDevice:DnsName}` * `{CustomDevice:IpAddress}` * `{CustomDevice:Port}` *\n`{DockerContainerGroupInstance:ContainerName}` * `{DockerContainerGroupInstance:FullImageName}` *\n`{DockerContainerGroupInstance:ImageVersion}` * `{DockerContainerGroupInstance:StrippedImageName}` *\n`{ESXIHost:HardwareModel}` * `{ESXIHost:HardwareVendor}` * `{ESXIHost:Name}` * `{ESXIHost:ProductName}` *\n`{ESXIHost:ProductVersion}` * `{Ec2Instance:AmiId}` * `{Ec2Instance:BeanstalkEnvironmentName}` *\n`{Ec2Instance:InstanceId}` * `{Ec2Instance:InstanceType}` * `{Ec2Instance:LocalHostName}` * `{Ec2Instance:Name}` *\n`{Ec2Instance:PublicHostName}` * `{Ec2Instance:SecurityGroup}` * `{GoogleComputeInstance:Id}` *\n`{GoogleComputeInstance:IpAddresses}` * `{GoogleComputeInstance:MachineType}` * `{GoogleComputeInstance:Name}` *\n`{GoogleComputeInstance:ProjectId}` * `{GoogleComputeInstance:Project}` * `{Host:AWSNameTag}` *\n`{Host:AixLogicalCpuCount}` * `{Host:AzureHostName}` * `{Host:AzureSiteName}` * `{Host:BoshDeploymentId}` *\n`{Host:BoshInstanceId}` * `{Host:BoshInstanceName}` * `{Host:BoshName}` * `{Host:BoshStemcellVersion}` *\n`{Host:CpuCores}` * `{Host:DetectedName}` * `{Host:Environment:AppName}` * `{Host:Environment:BoshReleaseVersion}` *\n`{Host:Environment:Environment}` * `{Host:Environment:Link}` * `{Host:Environment:Organization}` *\n`{Host:Environment:Owner}` * `{Host:Environment:Support}` * `{Host:IpAddress}` * `{Host:LogicalCpuCores}` *\n`{Host:OneAgentCustomHostName}` * `{Host:OperatingSystemVersion}` * `{Host:PaasMemoryLimit}` * `{HostGroup:Name}` *\n`{KubernetesCluster:Name}` * `{KubernetesNode:DetectedName}` * `{OpenstackAvailabilityZone:Name}` *\n`{OpenstackZone:Name}` * `{OpenstackComputeNode:Name}` * `{OpenstackProject:Name}` * `{OpenstackVm:InstanceType}` *\n`{OpenstackVm:Name}` * `{OpenstackVm:SecurityGroup}` * `{ProcessGroup:AmazonECRImageAccountId}` *\n`{ProcessGroup:AmazonECRImageRegion}` * `{ProcessGroup:AmazonECSCluster}` * `{ProcessGroup:AmazonECSContainerName}` *\n`{ProcessGroup:AmazonECSFamily}` * `{ProcessGroup:AmazonECSRevision}` * `{ProcessGroup:AmazonLambdaFunctionName}` *\n`{ProcessGroup:AmazonRegion}` * `{ProcessGroup:ApacheConfigPath}` * `{ProcessGroup:ApacheSparkMasterIpAddress}` *\n`{ProcessGroup:AspDotNetCoreApplicationPath}` * `{ProcessGroup:AspDotNetCoreApplicationPath}` *\n`{ProcessGroup:AzureHostName}` * `{ProcessGroup:AzureSiteName}` * `{ProcessGroup:CassandraClusterName}` *\n`{ProcessGroup:CatalinaBase}` * `{ProcessGroup:CatalinaHome}` * `{ProcessGroup:CloudFoundryAppId}` *\n`{ProcessGroup:CloudFoundryAppName}` * `{ProcessGroup:CloudFoundryInstanceIndex}` * `{ProcessGroup:CloudFoundrySpaceId}`\n* `{ProcessGroup:CloudFoundrySpaceName}` * `{ProcessGroup:ColdFusionJvmConfigFile}` *\n`{ProcessGroup:ColdFusionServiceName}` * `{ProcessGroup:CommandLineArgs}` * `{ProcessGroup:DetectedName}` *\n`{ProcessGroup:DotNetCommandPath}` * `{ProcessGroup:DotNetCommand}` * `{ProcessGroup:DotNetClusterId}` *\n`{ProcessGroup:DotNetNodeId}` * `{ProcessGroup:ElasticsearchClusterName}` * `{ProcessGroup:ElasticsearchNodeName}` *\n`{ProcessGroup:EquinoxConfigPath}` * `{ProcessGroup:ExeName}` * `{ProcessGroup:ExePath}` *\n`{ProcessGroup:GlassFishDomainName}` * `{ProcessGroup:GlassFishInstanceName}` * `{ProcessGroup:GoogleAppEngineInstance}`\n* `{ProcessGroup:GoogleAppEngineService}` * `{ProcessGroup:GoogleCloudProject}` * `{ProcessGroup:HybrisBinDirectory}` *\n`{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisDataDirectory}` *\n`{ProcessGroup:IBMCicsRegion}` * `{ProcessGroup:IBMCtgName}` * `{ProcessGroup:IBMImsConnectRegion}` *\n`{ProcessGroup:IBMImsControlRegion}` * `{ProcessGroup:IBMImsMessageProcessingRegion}` *\n`{ProcessGroup:IBMImsSoapGwName}` * `{ProcessGroup:IBMIntegrationNodeName}` * `{ProcessGroup:IBMIntegrationServerName}`\n* `{ProcessGroup:IISAppPool}` * `{ProcessGroup:IISRoleName}` * `{ProcessGroup:JbossHome}` * `{ProcessGroup:JbossMode}` *\n`{ProcessGroup:JbossServerName}` * `{ProcessGroup:JavaJarFile}` * `{ProcessGroup:JavaJarPath}` *\n`{ProcessGroup:JavaMainCLass}` * `{ProcessGroup:KubernetesBasePodName}` * `{ProcessGroup:KubernetesContainerName}` *\n`{ProcessGroup:KubernetesFullPodName}` * `{ProcessGroup:KubernetesNamespace}` * `{ProcessGroup:KubernetesPodUid}` *\n`{ProcessGroup:MssqlInstanceName}` * `{ProcessGroup:NodeJsAppBaseDirectory}` * `{ProcessGroup:NodeJsAppName}` *\n`{ProcessGroup:NodeJsScriptName}` * `{ProcessGroup:OracleSid}` * `{ProcessGroup:PHPScriptPath}` *\n`{ProcessGroup:PHPWorkingDirectory}` * `{ProcessGroup:Ports}` * `{ProcessGroup:RubyAppRootPath}` *\n`{ProcessGroup:RubyScriptPath}` * `{ProcessGroup:SoftwareAGInstallRoot}` *\n`{ProcessGroup:SoftwareAGProductPropertyName}` * `{ProcessGroup:SpringBootAppName}` *\n`{ProcessGroup:SpringBootProfileName}` * `{ProcessGroup:SpringBootStartupClass}` *\n`{ProcessGroup:TIBCOBusinessWorksAppNodeName}` * `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}` *\n`{ProcessGroup:TIBCOBusinessWorksCeAppName}` * `{ProcessGroup:TIBCOBusinessWorksCeVersion}` *\n`{ProcessGroup:TIBCOBusinessWorksDomainName}` * `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}` *\n`{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}` * `{ProcessGroup:TIBCOBusinessWorksHome}` *\n`{ProcessGroup:VarnishInstanceName}` * `{ProcessGroup:WebLogicClusterName}` * `{ProcessGroup:WebLogicDomainName}` *\n`{ProcessGroup:WebLogicHome}` * `{ProcessGroup:WebLogicName}` * `{ProcessGroup:WebSphereCellName}` *\n`{ProcessGroup:WebSphereClusterName}` * `{ProcessGroup:WebSphereNodeName}` * `{ProcessGroup:WebSphereServerName}` *\n`{ProcessGroup:ActorSystem}` * `{Service:STGServerName}` * `{Service:DatabaseHostName}` * `{Service:DatabaseName}` *\n`{Service:DatabaseVendor}` * `{Service:DetectedName}` * `{Service:EndpointPath}` * `{Service:EndpointPathGatewayUrl}` *\n`{Service:IIBApplicationName}` * `{Service:MessageListenerClassName}` * `{Service:Port}` * `{Service:PublicDomainName}`\n* `{Service:RemoteEndpoint}` * `{Service:RemoteName}` * `{Service:WebApplicationId}` * `{Service:WebContextRoot}` *\n`{Service:WebServerName}` * `{Service:WebServiceNamespace}` * `{Service:WebServiceName}` * `{VmwareDatacenter:Name}` *\n`{VmwareVm:Name}\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "format"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HostNaming resources.\n",
                "properties": {
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/HostNamingCondition:HostNamingCondition"
                        },
                        "description": "A list of matching conditions of the rule. The rule applies only if **all** conditions are fulfilled\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The rule is enabled (`true`) or disabled (`false`)\n"
                    },
                    "format": {
                        "type": "string",
                        "description": "The name to be assigned to matching entities. You can use the following placeholders here: *\n`{AwsAutoScalingGroup:Name}` * `{AwsAvailabilityZone:Name}` * `{AwsElasticLoadBalancer:Name}` *\n`{AwsRelationalDatabaseService:DBName}` * `{AwsRelationalDatabaseService:Endpoint}` *\n`{AwsRelationalDatabaseService:Engine}` * `{AwsRelationalDatabaseService:InstanceClass}` *\n`{AwsRelationalDatabaseService:Name}` * `{AwsRelationalDatabaseService:Port}` * `{AzureRegion:Name}` *\n`{AzureScaleSet:Name}` * `{AzureVm:Name}` * `{CloudFoundryOrganization:Name}` * `{CustomDevice:DetectedName}` *\n`{CustomDevice:DnsName}` * `{CustomDevice:IpAddress}` * `{CustomDevice:Port}` *\n`{DockerContainerGroupInstance:ContainerName}` * `{DockerContainerGroupInstance:FullImageName}` *\n`{DockerContainerGroupInstance:ImageVersion}` * `{DockerContainerGroupInstance:StrippedImageName}` *\n`{ESXIHost:HardwareModel}` * `{ESXIHost:HardwareVendor}` * `{ESXIHost:Name}` * `{ESXIHost:ProductName}` *\n`{ESXIHost:ProductVersion}` * `{Ec2Instance:AmiId}` * `{Ec2Instance:BeanstalkEnvironmentName}` *\n`{Ec2Instance:InstanceId}` * `{Ec2Instance:InstanceType}` * `{Ec2Instance:LocalHostName}` * `{Ec2Instance:Name}` *\n`{Ec2Instance:PublicHostName}` * `{Ec2Instance:SecurityGroup}` * `{GoogleComputeInstance:Id}` *\n`{GoogleComputeInstance:IpAddresses}` * `{GoogleComputeInstance:MachineType}` * `{GoogleComputeInstance:Name}` *\n`{GoogleComputeInstance:ProjectId}` * `{GoogleComputeInstance:Project}` * `{Host:AWSNameTag}` *\n`{Host:AixLogicalCpuCount}` * `{Host:AzureHostName}` * `{Host:AzureSiteName}` * `{Host:BoshDeploymentId}` *\n`{Host:BoshInstanceId}` * `{Host:BoshInstanceName}` * `{Host:BoshName}` * `{Host:BoshStemcellVersion}` *\n`{Host:CpuCores}` * `{Host:DetectedName}` * `{Host:Environment:AppName}` * `{Host:Environment:BoshReleaseVersion}` *\n`{Host:Environment:Environment}` * `{Host:Environment:Link}` * `{Host:Environment:Organization}` *\n`{Host:Environment:Owner}` * `{Host:Environment:Support}` * `{Host:IpAddress}` * `{Host:LogicalCpuCores}` *\n`{Host:OneAgentCustomHostName}` * `{Host:OperatingSystemVersion}` * `{Host:PaasMemoryLimit}` * `{HostGroup:Name}` *\n`{KubernetesCluster:Name}` * `{KubernetesNode:DetectedName}` * `{OpenstackAvailabilityZone:Name}` *\n`{OpenstackZone:Name}` * `{OpenstackComputeNode:Name}` * `{OpenstackProject:Name}` * `{OpenstackVm:InstanceType}` *\n`{OpenstackVm:Name}` * `{OpenstackVm:SecurityGroup}` * `{ProcessGroup:AmazonECRImageAccountId}` *\n`{ProcessGroup:AmazonECRImageRegion}` * `{ProcessGroup:AmazonECSCluster}` * `{ProcessGroup:AmazonECSContainerName}` *\n`{ProcessGroup:AmazonECSFamily}` * `{ProcessGroup:AmazonECSRevision}` * `{ProcessGroup:AmazonLambdaFunctionName}` *\n`{ProcessGroup:AmazonRegion}` * `{ProcessGroup:ApacheConfigPath}` * `{ProcessGroup:ApacheSparkMasterIpAddress}` *\n`{ProcessGroup:AspDotNetCoreApplicationPath}` * `{ProcessGroup:AspDotNetCoreApplicationPath}` *\n`{ProcessGroup:AzureHostName}` * `{ProcessGroup:AzureSiteName}` * `{ProcessGroup:CassandraClusterName}` *\n`{ProcessGroup:CatalinaBase}` * `{ProcessGroup:CatalinaHome}` * `{ProcessGroup:CloudFoundryAppId}` *\n`{ProcessGroup:CloudFoundryAppName}` * `{ProcessGroup:CloudFoundryInstanceIndex}` * `{ProcessGroup:CloudFoundrySpaceId}`\n* `{ProcessGroup:CloudFoundrySpaceName}` * `{ProcessGroup:ColdFusionJvmConfigFile}` *\n`{ProcessGroup:ColdFusionServiceName}` * `{ProcessGroup:CommandLineArgs}` * `{ProcessGroup:DetectedName}` *\n`{ProcessGroup:DotNetCommandPath}` * `{ProcessGroup:DotNetCommand}` * `{ProcessGroup:DotNetClusterId}` *\n`{ProcessGroup:DotNetNodeId}` * `{ProcessGroup:ElasticsearchClusterName}` * `{ProcessGroup:ElasticsearchNodeName}` *\n`{ProcessGroup:EquinoxConfigPath}` * `{ProcessGroup:ExeName}` * `{ProcessGroup:ExePath}` *\n`{ProcessGroup:GlassFishDomainName}` * `{ProcessGroup:GlassFishInstanceName}` * `{ProcessGroup:GoogleAppEngineInstance}`\n* `{ProcessGroup:GoogleAppEngineService}` * `{ProcessGroup:GoogleCloudProject}` * `{ProcessGroup:HybrisBinDirectory}` *\n`{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisDataDirectory}` *\n`{ProcessGroup:IBMCicsRegion}` * `{ProcessGroup:IBMCtgName}` * `{ProcessGroup:IBMImsConnectRegion}` *\n`{ProcessGroup:IBMImsControlRegion}` * `{ProcessGroup:IBMImsMessageProcessingRegion}` *\n`{ProcessGroup:IBMImsSoapGwName}` * `{ProcessGroup:IBMIntegrationNodeName}` * `{ProcessGroup:IBMIntegrationServerName}`\n* `{ProcessGroup:IISAppPool}` * `{ProcessGroup:IISRoleName}` * `{ProcessGroup:JbossHome}` * `{ProcessGroup:JbossMode}` *\n`{ProcessGroup:JbossServerName}` * `{ProcessGroup:JavaJarFile}` * `{ProcessGroup:JavaJarPath}` *\n`{ProcessGroup:JavaMainCLass}` * `{ProcessGroup:KubernetesBasePodName}` * `{ProcessGroup:KubernetesContainerName}` *\n`{ProcessGroup:KubernetesFullPodName}` * `{ProcessGroup:KubernetesNamespace}` * `{ProcessGroup:KubernetesPodUid}` *\n`{ProcessGroup:MssqlInstanceName}` * `{ProcessGroup:NodeJsAppBaseDirectory}` * `{ProcessGroup:NodeJsAppName}` *\n`{ProcessGroup:NodeJsScriptName}` * `{ProcessGroup:OracleSid}` * `{ProcessGroup:PHPScriptPath}` *\n`{ProcessGroup:PHPWorkingDirectory}` * `{ProcessGroup:Ports}` * `{ProcessGroup:RubyAppRootPath}` *\n`{ProcessGroup:RubyScriptPath}` * `{ProcessGroup:SoftwareAGInstallRoot}` *\n`{ProcessGroup:SoftwareAGProductPropertyName}` * `{ProcessGroup:SpringBootAppName}` *\n`{ProcessGroup:SpringBootProfileName}` * `{ProcessGroup:SpringBootStartupClass}` *\n`{ProcessGroup:TIBCOBusinessWorksAppNodeName}` * `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}` *\n`{ProcessGroup:TIBCOBusinessWorksCeAppName}` * `{ProcessGroup:TIBCOBusinessWorksCeVersion}` *\n`{ProcessGroup:TIBCOBusinessWorksDomainName}` * `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}` *\n`{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}` * `{ProcessGroup:TIBCOBusinessWorksHome}` *\n`{ProcessGroup:VarnishInstanceName}` * `{ProcessGroup:WebLogicClusterName}` * `{ProcessGroup:WebLogicDomainName}` *\n`{ProcessGroup:WebLogicHome}` * `{ProcessGroup:WebLogicName}` * `{ProcessGroup:WebSphereCellName}` *\n`{ProcessGroup:WebSphereClusterName}` * `{ProcessGroup:WebSphereNodeName}` * `{ProcessGroup:WebSphereServerName}` *\n`{ProcessGroup:ActorSystem}` * `{Service:STGServerName}` * `{Service:DatabaseHostName}` * `{Service:DatabaseName}` *\n`{Service:DatabaseVendor}` * `{Service:DetectedName}` * `{Service:EndpointPath}` * `{Service:EndpointPathGatewayUrl}` *\n`{Service:IIBApplicationName}` * `{Service:MessageListenerClassName}` * `{Service:Port}` * `{Service:PublicDomainName}`\n* `{Service:RemoteEndpoint}` * `{Service:RemoteName}` * `{Service:WebApplicationId}` * `{Service:WebContextRoot}` *\n`{Service:WebServerName}` * `{Service:WebServiceNamespace}` * `{Service:WebServiceName}` * `{VmwareDatacenter:Name}` *\n`{VmwareVm:Name}\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the rule\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/hostProcessGroupMonitoring:HostProcessGroupMonitoring": {
            "properties": {
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                },
                "monitoringState": {
                    "type": "string",
                    "description": "Possible Values: `DEFAULT`, `MONITORING_OFF`, `MONITORING_ON`\n"
                },
                "processGroup": {
                    "type": "string",
                    "description": "Process group\n"
                }
            },
            "required": [
                "hostId",
                "monitoringState",
                "processGroup"
            ],
            "inputProperties": {
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                },
                "monitoringState": {
                    "type": "string",
                    "description": "Possible Values: `DEFAULT`, `MONITORING_OFF`, `MONITORING_ON`\n"
                },
                "processGroup": {
                    "type": "string",
                    "description": "Process group\n"
                }
            },
            "requiredInputs": [
                "hostId",
                "monitoringState",
                "processGroup"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HostProcessGroupMonitoring resources.\n",
                "properties": {
                    "hostId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    },
                    "monitoringState": {
                        "type": "string",
                        "description": "Possible Values: `DEFAULT`, `MONITORING_OFF`, `MONITORING_ON`\n"
                    },
                    "processGroup": {
                        "type": "string",
                        "description": "Process group\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/httpMonitor:HttpMonitor": {
            "properties": {
                "anomalyDetections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorAnomalyDetection:HttpMonitorAnomalyDetection"
                    },
                    "description": "The anomaly detection configuration.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Performance threshold is enabled (`true`) or disabled (`false`)\n"
                },
                "frequency": {
                    "type": "integer",
                    "description": "The frequency of the monitor, in minutes.\n"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of locations from which the monitor is executed. To specify a location, use its entity ID.\n"
                },
                "manuallyAssignedApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of manually assigned applications.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The key of the header\n"
                },
                "noScript": {
                    "type": "boolean",
                    "description": "No script block - handle requests via `dynatrace_http_monitor_script` resource\n"
                },
                "script": {
                    "$ref": "#/types/dynatrace:index/HttpMonitorScript:HttpMonitorScript",
                    "description": "The HTTP Script\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorTag:HttpMonitorTag"
                    },
                    "description": "A set of tags assigned to the monitor. You can specify only the value of the tag here and the `CONTEXTLESS` context and\nsource 'USER' will be added automatically.\n"
                }
            },
            "required": [
                "frequency",
                "name"
            ],
            "inputProperties": {
                "anomalyDetections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorAnomalyDetection:HttpMonitorAnomalyDetection"
                    },
                    "description": "The anomaly detection configuration.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Performance threshold is enabled (`true`) or disabled (`false`)\n"
                },
                "frequency": {
                    "type": "integer",
                    "description": "The frequency of the monitor, in minutes.\n"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of locations from which the monitor is executed. To specify a location, use its entity ID.\n"
                },
                "manuallyAssignedApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of manually assigned applications.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The key of the header\n"
                },
                "noScript": {
                    "type": "boolean",
                    "description": "No script block - handle requests via `dynatrace_http_monitor_script` resource\n"
                },
                "script": {
                    "$ref": "#/types/dynatrace:index/HttpMonitorScript:HttpMonitorScript",
                    "description": "The HTTP Script\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorTag:HttpMonitorTag"
                    },
                    "description": "A set of tags assigned to the monitor. You can specify only the value of the tag here and the `CONTEXTLESS` context and\nsource 'USER' will be added automatically.\n"
                }
            },
            "requiredInputs": [
                "frequency"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HttpMonitor resources.\n",
                "properties": {
                    "anomalyDetections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/HttpMonitorAnomalyDetection:HttpMonitorAnomalyDetection"
                        },
                        "description": "The anomaly detection configuration.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Performance threshold is enabled (`true`) or disabled (`false`)\n"
                    },
                    "frequency": {
                        "type": "integer",
                        "description": "The frequency of the monitor, in minutes.\n"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of locations from which the monitor is executed. To specify a location, use its entity ID.\n"
                    },
                    "manuallyAssignedApps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of manually assigned applications.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The key of the header\n"
                    },
                    "noScript": {
                        "type": "boolean",
                        "description": "No script block - handle requests via `dynatrace_http_monitor_script` resource\n"
                    },
                    "script": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorScript:HttpMonitorScript",
                        "description": "The HTTP Script\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/HttpMonitorTag:HttpMonitorTag"
                        },
                        "description": "A set of tags assigned to the monitor. You can specify only the value of the tag here and the `CONTEXTLESS` context and\nsource 'USER' will be added automatically.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/httpMonitorCookies:HttpMonitorCookies": {
            "properties": {
                "cookies": {
                    "$ref": "#/types/dynatrace:index/HttpMonitorCookiesCookies:HttpMonitorCookiesCookies",
                    "description": "no documentation available\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HTTP_CHECK)\n"
                }
            },
            "required": [
                "enabled",
                "scope"
            ],
            "inputProperties": {
                "cookies": {
                    "$ref": "#/types/dynatrace:index/HttpMonitorCookiesCookies:HttpMonitorCookiesCookies",
                    "description": "no documentation available\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HTTP_CHECK)\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enabled",
                "scope"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HttpMonitorCookies resources.\n",
                "properties": {
                    "cookies": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorCookiesCookies:HttpMonitorCookiesCookies",
                        "description": "no documentation available\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (HTTP_CHECK)\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/httpMonitorOutage:HttpMonitorOutage": {
            "properties": {
                "globalConsecutiveOutageCountThreshold": {
                    "type": "integer",
                    "description": "(Field has overlap with `dynatrace.HttpMonitor`) Alert if all locations are unable to access my web application\n"
                },
                "globalOutages": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.HttpMonitor`) Generate a problem and send an alert when the monitor is unavailable at all configured locations.\n"
                },
                "localConsecutiveOutageCountThreshold": {
                    "type": "integer",
                    "description": "(Field has overlap with `dynatrace.HttpMonitor`) are unable to access my web application\n"
                },
                "localLocationOutageCountThreshold": {
                    "type": "integer",
                    "description": "(Field has overlap with `dynatrace.HttpMonitor`) Alert if at least\n"
                },
                "localOutages": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.HttpMonitor`) Generate a problem and send an alert when the monitor is unavailable for one or more consecutive runs at any location.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HTTP_CHECK). Omit this property if you want to cover the whole environment.\n"
                }
            },
            "required": [
                "globalOutages",
                "localOutages"
            ],
            "inputProperties": {
                "globalConsecutiveOutageCountThreshold": {
                    "type": "integer",
                    "description": "(Field has overlap with `dynatrace.HttpMonitor`) Alert if all locations are unable to access my web application\n"
                },
                "globalOutages": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.HttpMonitor`) Generate a problem and send an alert when the monitor is unavailable at all configured locations.\n"
                },
                "localConsecutiveOutageCountThreshold": {
                    "type": "integer",
                    "description": "(Field has overlap with `dynatrace.HttpMonitor`) are unable to access my web application\n"
                },
                "localLocationOutageCountThreshold": {
                    "type": "integer",
                    "description": "(Field has overlap with `dynatrace.HttpMonitor`) Alert if at least\n"
                },
                "localOutages": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.HttpMonitor`) Generate a problem and send an alert when the monitor is unavailable for one or more consecutive runs at any location.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HTTP_CHECK). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "globalOutages",
                "localOutages"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HttpMonitorOutage resources.\n",
                "properties": {
                    "globalConsecutiveOutageCountThreshold": {
                        "type": "integer",
                        "description": "(Field has overlap with `dynatrace.HttpMonitor`) Alert if all locations are unable to access my web application\n"
                    },
                    "globalOutages": {
                        "type": "boolean",
                        "description": "(Field has overlap with `dynatrace.HttpMonitor`) Generate a problem and send an alert when the monitor is unavailable at all configured locations.\n"
                    },
                    "localConsecutiveOutageCountThreshold": {
                        "type": "integer",
                        "description": "(Field has overlap with `dynatrace.HttpMonitor`) are unable to access my web application\n"
                    },
                    "localLocationOutageCountThreshold": {
                        "type": "integer",
                        "description": "(Field has overlap with `dynatrace.HttpMonitor`) Alert if at least\n"
                    },
                    "localOutages": {
                        "type": "boolean",
                        "description": "(Field has overlap with `dynatrace.HttpMonitor`) Generate a problem and send an alert when the monitor is unavailable for one or more consecutive runs at any location.\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (HTTP_CHECK). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/httpMonitorPerformance:HttpMonitorPerformance": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HTTP_CHECK)\n"
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HttpMonitorPerformanceThresholds:HttpMonitorPerformanceThresholds",
                    "description": "Performance thresholds\n"
                }
            },
            "required": [
                "enabled",
                "scope"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HTTP_CHECK)\n",
                    "willReplaceOnChanges": true
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/HttpMonitorPerformanceThresholds:HttpMonitorPerformanceThresholds",
                    "description": "Performance thresholds\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "scope"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HttpMonitorPerformance resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (HTTP_CHECK)\n",
                        "willReplaceOnChanges": true
                    },
                    "thresholds": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorPerformanceThresholds:HttpMonitorPerformanceThresholds",
                        "description": "Performance thresholds\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/httpMonitorScript:HttpMonitorScript": {
            "properties": {
                "httpId": {
                    "type": "string",
                    "description": "The ID of the HTTP monitor\n"
                },
                "script": {
                    "$ref": "#/types/dynatrace:index/HttpMonitorScriptScript:HttpMonitorScriptScript",
                    "description": "The HTTP Script\n"
                }
            },
            "required": [
                "httpId",
                "script"
            ],
            "inputProperties": {
                "httpId": {
                    "type": "string",
                    "description": "The ID of the HTTP monitor\n"
                },
                "script": {
                    "$ref": "#/types/dynatrace:index/HttpMonitorScriptScript:HttpMonitorScriptScript",
                    "description": "The HTTP Script\n"
                }
            },
            "requiredInputs": [
                "httpId",
                "script"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HttpMonitorScript resources.\n",
                "properties": {
                    "httpId": {
                        "type": "string",
                        "description": "The ID of the HTTP monitor\n"
                    },
                    "script": {
                        "$ref": "#/types/dynatrace:index/HttpMonitorScriptScript:HttpMonitorScriptScript",
                        "description": "The HTTP Script\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/hubExtensionActiveVersion:HubExtensionActiveVersion": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The fully qualified name of the extension, such as `com.dynatrace.extension.jmx-liberty-cp`. You can query for these names using the data source `dynatrace.getHubItems`\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version that should be active\n"
                }
            },
            "required": [
                "name",
                "version"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The fully qualified name of the extension, such as `com.dynatrace.extension.jmx-liberty-cp`. You can query for these names using the data source `dynatrace.getHubItems`\n",
                    "willReplaceOnChanges": true
                },
                "version": {
                    "type": "string",
                    "description": "The version that should be active\n"
                }
            },
            "requiredInputs": [
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HubExtensionActiveVersion resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The fully qualified name of the extension, such as `com.dynatrace.extension.jmx-liberty-cp`. You can query for these names using the data source `dynatrace.getHubItems`\n",
                        "willReplaceOnChanges": true
                    },
                    "version": {
                        "type": "string",
                        "description": "The version that should be active\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/hubExtensionConfig:HubExtensionConfig": {
            "properties": {
                "activeGateGroup": {
                    "type": "string",
                    "description": "The name of the Active Gate Group this monitoring configuration will be defined for\n"
                },
                "host": {
                    "type": "string",
                    "description": "The ID of the host this monitoring configuration will be defined for\n"
                },
                "hostGroup": {
                    "type": "string",
                    "description": "The ID of the host group this monitoring configuration will be defined for\n"
                },
                "managementZone": {
                    "type": "string",
                    "description": "The name of the Management Zone this monitoring configuration will be defined for\n"
                },
                "name": {
                    "type": "string",
                    "description": "The fully qualified name of the extension, such as `com.dynatrace.extension.jmx-liberty-cp`. You can query for these names using the data source `dynatrace.getHubItems`\n"
                },
                "value": {
                    "type": "string",
                    "description": "The JSON encoded value for this monitoring configuration\n"
                }
            },
            "required": [
                "name",
                "value"
            ],
            "inputProperties": {
                "activeGateGroup": {
                    "type": "string",
                    "description": "The name of the Active Gate Group this monitoring configuration will be defined for\n",
                    "willReplaceOnChanges": true
                },
                "host": {
                    "type": "string",
                    "description": "The ID of the host this monitoring configuration will be defined for\n",
                    "willReplaceOnChanges": true
                },
                "hostGroup": {
                    "type": "string",
                    "description": "The ID of the host group this monitoring configuration will be defined for\n",
                    "willReplaceOnChanges": true
                },
                "managementZone": {
                    "type": "string",
                    "description": "The name of the Management Zone this monitoring configuration will be defined for\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The fully qualified name of the extension, such as `com.dynatrace.extension.jmx-liberty-cp`. You can query for these names using the data source `dynatrace.getHubItems`\n",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string",
                    "description": "The JSON encoded value for this monitoring configuration\n"
                }
            },
            "requiredInputs": [
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HubExtensionConfig resources.\n",
                "properties": {
                    "activeGateGroup": {
                        "type": "string",
                        "description": "The name of the Active Gate Group this monitoring configuration will be defined for\n",
                        "willReplaceOnChanges": true
                    },
                    "host": {
                        "type": "string",
                        "description": "The ID of the host this monitoring configuration will be defined for\n",
                        "willReplaceOnChanges": true
                    },
                    "hostGroup": {
                        "type": "string",
                        "description": "The ID of the host group this monitoring configuration will be defined for\n",
                        "willReplaceOnChanges": true
                    },
                    "managementZone": {
                        "type": "string",
                        "description": "The name of the Management Zone this monitoring configuration will be defined for\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The fully qualified name of the extension, such as `com.dynatrace.extension.jmx-liberty-cp`. You can query for these names using the data source `dynatrace.getHubItems`\n",
                        "willReplaceOnChanges": true
                    },
                    "value": {
                        "type": "string",
                        "description": "The JSON encoded value for this monitoring configuration\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/hubSubscriptions:HubSubscriptions": {
            "properties": {
                "tokenSubscriptions": {
                    "$ref": "#/types/dynatrace:index/HubSubscriptionsTokenSubscriptions:HubSubscriptionsTokenSubscriptions",
                    "description": "Subscriptions\n"
                }
            },
            "inputProperties": {
                "tokenSubscriptions": {
                    "$ref": "#/types/dynatrace:index/HubSubscriptionsTokenSubscriptions:HubSubscriptionsTokenSubscriptions",
                    "description": "Subscriptions\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HubSubscriptions resources.\n",
                "properties": {
                    "tokenSubscriptions": {
                        "$ref": "#/types/dynatrace:index/HubSubscriptionsTokenSubscriptions:HubSubscriptionsTokenSubscriptions",
                        "description": "Subscriptions\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/iamGroup:IamGroup": {
            "description": "\u003e This resource is excluded by default in the export utility since it is part of the account management API. You can, of course, specify that resource explicitly in order to export it. In that case, don't forget to specify the environment variables `DT_CLIENT_ID`, `DT_ACCOUNT_ID` and `DT_CLIENT_SECRET` for authentication.\n\n\u003e This resource requires the API token scopes **Allow read access for identity resources (users and groups)** (`account-idm-read`) and **Allow write access for identity resources (users and groups)** (`account-idm-write`)\n\n## Dynatrace Documentation\n\n- Dynatrace IAM - https://www.dynatrace.com/support/help/how-to-use-dynatrace/user-management-and-sso/manage-groups-and-permissions\n\n- Settings API - https://www.dynatrace.com/support/help/how-to-use-dynatrace/user-management-and-sso/manage-groups-and-permissions/iam/iam-getting-started\n\n## Prerequisites\n\nUsing this resource requires an OAuth client to be configured within your account settings.\nThe scopes of the OAuth Client need to include `account-idm-read`, `account-idm-write`, `account-env-read`, `account-env-write`, `iam-policies-management`, `iam:policies:write`, `iam:policies:read`, `iam:bindings:write`, `iam:bindings:read` and `iam:effective-permissions:read`.\n\nFinally the provider configuration requires the credentials for that OAuth Client.\nThe configuration section of your provider needs to look like this.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n\n## Resource Example Usage\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\n\nconst restricted = new dynatrace.IamGroup(\"restricted\", {permissions: {\n    permissions: [{\n        name: \"tenant-viewer\",\n        scope: \"\u003cenvironment-id\u003e:\u003cmanagementzone-id\u003e\",\n        type: \"management-zone\",\n    }],\n}});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\n\nrestricted = dynatrace.IamGroup(\"restricted\", permissions=dynatrace.IamGroupPermissionsArgs(\n    permissions=[dynatrace.IamGroupPermissionsPermissionArgs(\n        name=\"tenant-viewer\",\n        scope=\"\u003cenvironment-id\u003e:\u003cmanagementzone-id\u003e\",\n        type=\"management-zone\",\n    )],\n))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var restricted = new Dynatrace.IamGroup(\"restricted\", new()\n    {\n        Permissions = new Dynatrace.Inputs.IamGroupPermissionsArgs\n        {\n            Permissions = new[]\n            {\n                new Dynatrace.Inputs.IamGroupPermissionsPermissionArgs\n                {\n                    Name = \"tenant-viewer\",\n                    Scope = \"\u003cenvironment-id\u003e:\u003cmanagementzone-id\u003e\",\n                    Type = \"management-zone\",\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dynatrace.NewIamGroup(ctx, \"restricted\", \u0026dynatrace.IamGroupArgs{\n\t\t\tPermissions: \u0026dynatrace.IamGroupPermissionsArgs{\n\t\t\t\tPermissions: dynatrace.IamGroupPermissionsPermissionArray{\n\t\t\t\t\t\u0026dynatrace.IamGroupPermissionsPermissionArgs{\n\t\t\t\t\t\tName:  pulumi.String(\"tenant-viewer\"),\n\t\t\t\t\t\tScope: pulumi.String(\"\u003cenvironment-id\u003e:\u003cmanagementzone-id\u003e\"),\n\t\t\t\t\t\tType:  pulumi.String(\"management-zone\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.IamGroup;\nimport com.pulumi.dynatrace.IamGroupArgs;\nimport com.pulumi.dynatrace.inputs.IamGroupPermissionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var restricted = new IamGroup(\"restricted\", IamGroupArgs.builder()        \n            .permissions(IamGroupPermissionsArgs.builder()\n                .permissions(IamGroupPermissionsPermissionArgs.builder()\n                    .name(\"tenant-viewer\")\n                    .scope(\"\u003cenvironment-id\u003e:\u003cmanagementzone-id\u003e\")\n                    .type(\"management-zone\")\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  restricted:\n    type: dynatrace:IamGroup\n    properties:\n      permissions:\n        permissions:\n          - name: tenant-viewer\n            scope: \u003cenvironment-id\u003e:\u003cmanagementzone-id\u003e\n            type: management-zone\n```\n",
            "properties": {
                "description": {
                    "type": "string"
                },
                "federatedAttributeValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Possible values: `account-company-info`, `account-user-management`, `account-viewer`, `account-saml-flexible-federation`, `tenant-viewer`, `tenant-manage-settings`, `tenant-agent-install`, `tenant-logviewer`, `tenant-view-sensitive-request-data`, `tenant-configure-request-capture-data`, `tenant-replay-sessions-with-masking`, `tenant-replay-sessions-without-masking`, `tenant-manage-security-problems`, `tenant-view-security-problems`, `tenant-manage-support-tickets`\n"
                },
                "permissions": {
                    "$ref": "#/types/dynatrace:index/IamGroupPermissions:IamGroupPermissions"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "federatedAttributeValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Possible values: `account-company-info`, `account-user-management`, `account-viewer`, `account-saml-flexible-federation`, `tenant-viewer`, `tenant-manage-settings`, `tenant-agent-install`, `tenant-logviewer`, `tenant-view-sensitive-request-data`, `tenant-configure-request-capture-data`, `tenant-replay-sessions-with-masking`, `tenant-replay-sessions-without-masking`, `tenant-manage-security-problems`, `tenant-view-security-problems`, `tenant-manage-support-tickets`\n"
                },
                "permissions": {
                    "$ref": "#/types/dynatrace:index/IamGroupPermissions:IamGroupPermissions"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IamGroup resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "federatedAttributeValues": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "Possible values: `account-company-info`, `account-user-management`, `account-viewer`, `account-saml-flexible-federation`, `tenant-viewer`, `tenant-manage-settings`, `tenant-agent-install`, `tenant-logviewer`, `tenant-view-sensitive-request-data`, `tenant-configure-request-capture-data`, `tenant-replay-sessions-with-masking`, `tenant-replay-sessions-without-masking`, `tenant-manage-security-problems`, `tenant-view-security-problems`, `tenant-manage-support-tickets`\n"
                    },
                    "permissions": {
                        "$ref": "#/types/dynatrace:index/IamGroupPermissions:IamGroupPermissions"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/iamPermission:IamPermission": {
            "description": "\u003e This resource is excluded by default in the export utility since it is part of the account management API. You can, of course, specify that resource explicitly in order to export it. In that case, don't forget to specify the environment variables `DT_CLIENT_ID`, `DT_ACCOUNT_ID` and `DT_CLIENT_SECRET` for authentication.\n\n\u003e This resource requires the API token scopes **Allow read access for identity resources (users and groups)** (`account-idm-read`) and **Allow write access for identity resources (users and groups)** (`account-idm-write`)\n\n## Dynatrace Documentation\n\n- Dynatrace IAM - https://www.dynatrace.com/support/help/how-to-use-dynatrace/user-management-and-sso/manage-groups-and-permissions\n\n- Settings API - https://www.dynatrace.com/support/help/how-to-use-dynatrace/user-management-and-sso/manage-groups-and-permissions/iam/iam-getting-started\n\n## Prerequisites\n\nUsing this resource requires an OAuth client to be configured within your account settings.\nThe scopes of the OAuth Client need to include `account-idm-read`, `account-idm-write`, `account-env-read`, `account-env-write`, `iam-policies-management`, `iam:policies:write`, `iam:policies:read`, `iam:bindings:write`, `iam:bindings:read` and `iam:effective-permissions:read`.\n\nFinally the provider configuration requires the credentials for that OAuth Client.\nThe configuration section of your provider needs to look like this.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n\n## Resource Example Usage\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\n\nconst permA = new dynatrace.IamPermission(\"permA\", {\n    account: \"023733f0-86d8-47d1-88bd-7f5cc2e22eb8\",\n    group: \"74ec0a82-8010-4f11-8579-b29a5ba865f0\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\n\nperm_a = dynatrace.IamPermission(\"permA\",\n    account=\"023733f0-86d8-47d1-88bd-7f5cc2e22eb8\",\n    group=\"74ec0a82-8010-4f11-8579-b29a5ba865f0\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var permA = new Dynatrace.IamPermission(\"permA\", new()\n    {\n        Account = \"023733f0-86d8-47d1-88bd-7f5cc2e22eb8\",\n        Group = \"74ec0a82-8010-4f11-8579-b29a5ba865f0\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dynatrace.NewIamPermission(ctx, \"permA\", \u0026dynatrace.IamPermissionArgs{\n\t\t\tAccount: pulumi.String(\"023733f0-86d8-47d1-88bd-7f5cc2e22eb8\"),\n\t\t\tGroup:   pulumi.String(\"74ec0a82-8010-4f11-8579-b29a5ba865f0\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.IamPermission;\nimport com.pulumi.dynatrace.IamPermissionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var permA = new IamPermission(\"permA\", IamPermissionArgs.builder()        \n            .account(\"023733f0-86d8-47d1-88bd-7f5cc2e22eb8\")\n            .group(\"74ec0a82-8010-4f11-8579-b29a5ba865f0\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  permA:\n    type: dynatrace:IamPermission\n    properties:\n      # environment     = \"siz65484\"\n      #     // management_zone = \"107678256803363569\"\n      account: 023733f0-86d8-47d1-88bd-7f5cc2e22eb8\n      group: 74ec0a82-8010-4f11-8579-b29a5ba865f0\n```\n",
            "properties": {
                "account": {
                    "type": "string",
                    "description": "The UUID of the account this permission is valid for\n"
                },
                "environment": {
                    "type": "string",
                    "description": "The environment this permission is valid (`https://\u003cenvironmentid\u003e.live.dynatrace.com`). Also required in when trying to specify a management zone permission.\n"
                },
                "group": {
                    "type": "string",
                    "description": "The ID of the group this permission is valid for\n"
                },
                "managementZone": {
                    "type": "string",
                    "description": "The management zone this permission is valid for. You need to use the attribute `legacy_id` when referring to a resource `dynatrace.ManagementZoneV2` or a data source `dynatrace.ManagementZone`. The attribute `environment` is required to get specified also in order to identify the management zone uniquely.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Possible values: `account-company-info`, `account-user-management`, `account-viewer`, `account-saml-flexible-federation`, `tenant-viewer`, `tenant-manage-settings`, `tenant-agent-install`, `tenant-logviewer`, `tenant-view-sensitive-request-data`, `tenant-configure-request-capture-data`, `tenant-replay-sessions-with-masking`, `tenant-replay-sessions-without-masking`, `tenant-manage-security-problems`, `tenant-view-security-problems`, `tenant-manage-support-tickets`\n"
                }
            },
            "required": [
                "group",
                "name"
            ],
            "inputProperties": {
                "account": {
                    "type": "string",
                    "description": "The UUID of the account this permission is valid for\n",
                    "willReplaceOnChanges": true
                },
                "environment": {
                    "type": "string",
                    "description": "The environment this permission is valid (`https://\u003cenvironmentid\u003e.live.dynatrace.com`). Also required in when trying to specify a management zone permission.\n",
                    "willReplaceOnChanges": true
                },
                "group": {
                    "type": "string",
                    "description": "The ID of the group this permission is valid for\n",
                    "willReplaceOnChanges": true
                },
                "managementZone": {
                    "type": "string",
                    "description": "The management zone this permission is valid for. You need to use the attribute `legacy_id` when referring to a resource `dynatrace.ManagementZoneV2` or a data source `dynatrace.ManagementZone`. The attribute `environment` is required to get specified also in order to identify the management zone uniquely.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Possible values: `account-company-info`, `account-user-management`, `account-viewer`, `account-saml-flexible-federation`, `tenant-viewer`, `tenant-manage-settings`, `tenant-agent-install`, `tenant-logviewer`, `tenant-view-sensitive-request-data`, `tenant-configure-request-capture-data`, `tenant-replay-sessions-with-masking`, `tenant-replay-sessions-without-masking`, `tenant-manage-security-problems`, `tenant-view-security-problems`, `tenant-manage-support-tickets`\n"
                }
            },
            "requiredInputs": [
                "group"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IamPermission resources.\n",
                "properties": {
                    "account": {
                        "type": "string",
                        "description": "The UUID of the account this permission is valid for\n",
                        "willReplaceOnChanges": true
                    },
                    "environment": {
                        "type": "string",
                        "description": "The environment this permission is valid (`https://\u003cenvironmentid\u003e.live.dynatrace.com`). Also required in when trying to specify a management zone permission.\n",
                        "willReplaceOnChanges": true
                    },
                    "group": {
                        "type": "string",
                        "description": "The ID of the group this permission is valid for\n",
                        "willReplaceOnChanges": true
                    },
                    "managementZone": {
                        "type": "string",
                        "description": "The management zone this permission is valid for. You need to use the attribute `legacy_id` when referring to a resource `dynatrace.ManagementZoneV2` or a data source `dynatrace.ManagementZone`. The attribute `environment` is required to get specified also in order to identify the management zone uniquely.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Possible values: `account-company-info`, `account-user-management`, `account-viewer`, `account-saml-flexible-federation`, `tenant-viewer`, `tenant-manage-settings`, `tenant-agent-install`, `tenant-logviewer`, `tenant-view-sensitive-request-data`, `tenant-configure-request-capture-data`, `tenant-replay-sessions-with-masking`, `tenant-replay-sessions-without-masking`, `tenant-manage-security-problems`, `tenant-view-security-problems`, `tenant-manage-support-tickets`\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/iamPolicy:IamPolicy": {
            "description": "\u003e This resource is excluded by default in the export utility since it is part of the account management API. You can, of course, specify that resource explicitly in order to export it. In that case, don't forget to specify the environment variables `DT_CLIENT_ID`, `DT_ACCOUNT_ID` and `DT_CLIENT_SECRET` for authentication.\n\n\u003e This resource requires the API token scope **Allow IAM policy configuration for environments** (`iam-policies-management`)\n\n## Dynatrace Documentation\n\n- Dynatrace IAM Policy Management - https://www.dynatrace.com/support/help/manage/access-control/user-management-and-sso/manage-groups-and-permissions/iam/iam-policy-mgt\n\n- Settings API - https://www.dynatrace.com/support/help/how-to-use-dynatrace/user-management-and-sso/manage-groups-and-permissions/iam/iam-getting-started\n\n## Prerequisites\n\nUsing this resource requires an OAuth client to be configured within your account settings.\nThe scopes of the OAuth Client need to include `account-idm-read`, `account-idm-write`, `account-env-read`, `account-env-write`, `iam-policies-management`, `iam:policies:write`, `iam:policies:read`, `iam:bindings:write`, `iam:bindings:read` and `iam:effective-permissions:read`.\n\nFinally the provider configuration requires the credentials for that OAuth Client.\nThe configuration section of your provider needs to look like this.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n\n## Resource Example Usage\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\n\nconst policy = new dynatrace.IamPolicy(\"policy\", {\n    environment: \"siz654##\",\n    statementQuery: \"ALLOW settings:objects:read, settings:schemas:read WHERE settings:schemaId = \\\"string\\\";\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\n\npolicy = dynatrace.IamPolicy(\"policy\",\n    environment=\"siz654##\",\n    statement_query=\"ALLOW settings:objects:read, settings:schemas:read WHERE settings:schemaId = \\\"string\\\";\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var policy = new Dynatrace.IamPolicy(\"policy\", new()\n    {\n        Environment = \"siz654##\",\n        StatementQuery = \"ALLOW settings:objects:read, settings:schemas:read WHERE settings:schemaId = \\\"string\\\";\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dynatrace.NewIamPolicy(ctx, \"policy\", \u0026dynatrace.IamPolicyArgs{\n\t\t\tEnvironment:    pulumi.String(\"siz654##\"),\n\t\t\tStatementQuery: pulumi.String(\"ALLOW settings:objects:read, settings:schemas:read WHERE settings:schemaId = \\\"string\\\";\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.IamPolicy;\nimport com.pulumi.dynatrace.IamPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var policy = new IamPolicy(\"policy\", IamPolicyArgs.builder()        \n            .environment(\"siz654##\")\n            .statementQuery(\"ALLOW settings:objects:read, settings:schemas:read WHERE settings:schemaId = \\\"string\\\";\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  policy:\n    type: dynatrace:IamPolicy\n    properties:\n      environment: siz654##\n      statementQuery: ALLOW settings:objects:read, settings:schemas:read WHERE settings:schemaId = \"string\";\n```\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\n\nconst policy = new dynatrace.IamPolicy(\"policy\", {\n    account: \"########-####-####-####-############\",\n    statementQuery: \"ALLOW settings:objects:read, settings:schemas:read WHERE settings:schemaId = \\\"string\\\";\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\n\npolicy = dynatrace.IamPolicy(\"policy\",\n    account=\"########-####-####-####-############\",\n    statement_query=\"ALLOW settings:objects:read, settings:schemas:read WHERE settings:schemaId = \\\"string\\\";\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var policy = new Dynatrace.IamPolicy(\"policy\", new()\n    {\n        Account = \"########-####-####-####-############\",\n        StatementQuery = \"ALLOW settings:objects:read, settings:schemas:read WHERE settings:schemaId = \\\"string\\\";\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dynatrace.NewIamPolicy(ctx, \"policy\", \u0026dynatrace.IamPolicyArgs{\n\t\t\tAccount:        pulumi.String(\"########-####-####-####-############\"),\n\t\t\tStatementQuery: pulumi.String(\"ALLOW settings:objects:read, settings:schemas:read WHERE settings:schemaId = \\\"string\\\";\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.IamPolicy;\nimport com.pulumi.dynatrace.IamPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var policy = new IamPolicy(\"policy\", IamPolicyArgs.builder()        \n            .account(\"########-####-####-####-############\")\n            .statementQuery(\"ALLOW settings:objects:read, settings:schemas:read WHERE settings:schemaId = \\\"string\\\";\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  policy:\n    type: dynatrace:IamPolicy\n    properties:\n      account: '########-####-####-####-############'\n      statementQuery: ALLOW settings:objects:read, settings:schemas:read WHERE settings:schemaId = \"string\";\n```\n",
            "properties": {
                "account": {
                    "type": "string",
                    "description": "The UUID of the account (`urn:dtaccount:\u003caccount-uuid\u003e`) in case the policy should be applied to all environments of this account. The prefix `urn:dtaccount:` MUST be omitted here.\n"
                },
                "description": {
                    "type": "string",
                    "description": "An optional description text for the policy\n"
                },
                "environment": {
                    "type": "string",
                    "description": "The ID of the environment (https://\\n\\n.live.dynatrace.com) if the policy should be applied to a specific environment\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the policy\n"
                },
                "statementQuery": {
                    "type": "string",
                    "description": "The Statement Query of the policy\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags for this policy\n"
                }
            },
            "required": [
                "name",
                "statementQuery"
            ],
            "inputProperties": {
                "account": {
                    "type": "string",
                    "description": "The UUID of the account (`urn:dtaccount:\u003caccount-uuid\u003e`) in case the policy should be applied to all environments of this account. The prefix `urn:dtaccount:` MUST be omitted here.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "An optional description text for the policy\n"
                },
                "environment": {
                    "type": "string",
                    "description": "The ID of the environment (https://\\n\\n.live.dynatrace.com) if the policy should be applied to a specific environment\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the policy\n"
                },
                "statementQuery": {
                    "type": "string",
                    "description": "The Statement Query of the policy\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags for this policy\n"
                }
            },
            "requiredInputs": [
                "statementQuery"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IamPolicy resources.\n",
                "properties": {
                    "account": {
                        "type": "string",
                        "description": "The UUID of the account (`urn:dtaccount:\u003caccount-uuid\u003e`) in case the policy should be applied to all environments of this account. The prefix `urn:dtaccount:` MUST be omitted here.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "An optional description text for the policy\n"
                    },
                    "environment": {
                        "type": "string",
                        "description": "The ID of the environment (https://\\n\\n.live.dynatrace.com) if the policy should be applied to a specific environment\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the policy\n"
                    },
                    "statementQuery": {
                        "type": "string",
                        "description": "The Statement Query of the policy\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tags for this policy\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/iamPolicyBindings:IamPolicyBindings": {
            "description": "\u003e This resource is excluded by default in the export utility since it is part of the account management API. You can, of course, specify that resource explicitly in order to export it. In that case, don't forget to specify the environment variables `DT_CLIENT_ID`, `DT_ACCOUNT_ID` and `DT_CLIENT_SECRET` for authentication.\n\n\u003e This resource requires the API token scope **Allow IAM policy configuration for environments** (`iam-policies-management`)\n\n## Dynatrace Documentation\n\n- Dynatrace IAM Group Permissions - https://www.dynatrace.com/support/help/manage/access-control/user-management-and-sso/manage-groups-and-permissions/iam/iam-group-mgt\n\n- Settings API - https://www.dynatrace.com/support/help/how-to-use-dynatrace/user-management-and-sso/manage-groups-and-permissions/iam/iam-getting-started\n\n## Prerequisites\n\nUsing this resource requires an OAuth client to be configured within your account settings.\nThe scopes of the OAuth Client need to include `account-idm-read`, `account-idm-write`, `account-env-read`, `account-env-write`, `iam-policies-management`, `iam:policies:write`, `iam:policies:read`, `iam:bindings:write`, `iam:bindings:read` and `iam:effective-permissions:read`.\n\nFinally the provider configuration requires the credentials for that OAuth Client.\nThe configuration section of your provider needs to look like this.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n",
            "properties": {
                "account": {
                    "type": "string",
                    "description": "The UUID of the account (`urn:dtaccount:\u003caccount-uuid\u003e`). The attribute `policies` must contain ONLY policies defined for that account. The prefix `urn:dtaccount:` MUST be omitted here.\n"
                },
                "environment": {
                    "type": "string",
                    "description": "The ID of the environment (https://\\n\\n.live.dynatrace.com). The attribute `policies` must contain ONLY policies defined for that environment.\n"
                },
                "group": {
                    "type": "string",
                    "description": "The name of the policy\n"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of IDs referring to policies bound to that group. It's not possible to mix policies here that are defined for different scopes (different accounts or environments) than specified via attributes `account` or `environment`.\n"
                }
            },
            "required": [
                "group",
                "policies"
            ],
            "inputProperties": {
                "account": {
                    "type": "string",
                    "description": "The UUID of the account (`urn:dtaccount:\u003caccount-uuid\u003e`). The attribute `policies` must contain ONLY policies defined for that account. The prefix `urn:dtaccount:` MUST be omitted here.\n",
                    "willReplaceOnChanges": true
                },
                "environment": {
                    "type": "string",
                    "description": "The ID of the environment (https://\\n\\n.live.dynatrace.com). The attribute `policies` must contain ONLY policies defined for that environment.\n",
                    "willReplaceOnChanges": true
                },
                "group": {
                    "type": "string",
                    "description": "The name of the policy\n",
                    "willReplaceOnChanges": true
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of IDs referring to policies bound to that group. It's not possible to mix policies here that are defined for different scopes (different accounts or environments) than specified via attributes `account` or `environment`.\n"
                }
            },
            "requiredInputs": [
                "group",
                "policies"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IamPolicyBindings resources.\n",
                "properties": {
                    "account": {
                        "type": "string",
                        "description": "The UUID of the account (`urn:dtaccount:\u003caccount-uuid\u003e`). The attribute `policies` must contain ONLY policies defined for that account. The prefix `urn:dtaccount:` MUST be omitted here.\n",
                        "willReplaceOnChanges": true
                    },
                    "environment": {
                        "type": "string",
                        "description": "The ID of the environment (https://\\n\\n.live.dynatrace.com). The attribute `policies` must contain ONLY policies defined for that environment.\n",
                        "willReplaceOnChanges": true
                    },
                    "group": {
                        "type": "string",
                        "description": "The name of the policy\n",
                        "willReplaceOnChanges": true
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of IDs referring to policies bound to that group. It's not possible to mix policies here that are defined for different scopes (different accounts or environments) than specified via attributes `account` or `environment`.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/iamPolicyBindingsV2:IamPolicyBindingsV2": {
            "description": "\u003e This resource is excluded by default in the export utility since it is part of the account management API. You can, of course, specify that resource explicitly in order to export it. In that case, don't forget to specify the environment variables `DT_CLIENT_ID`, `DT_ACCOUNT_ID` and `DT_CLIENT_SECRET` for authentication.\n\n\u003e This resource requires the API token scope **Allow IAM policy configuration for environments** (`iam-policies-management`)\n\n## Dynatrace Documentation\n\n- Dynatrace IAM Group Permissions - https://www.dynatrace.com/support/help/manage/access-control/user-management-and-sso/manage-groups-and-permissions/iam/iam-group-mgt\n\n- Settings API - https://www.dynatrace.com/support/help/how-to-use-dynatrace/user-management-and-sso/manage-groups-and-permissions/iam/iam-getting-started\n\n## Prerequisites\n\nUsing this resource requires an OAuth client to be configured within your account settings.\nThe scopes of the OAuth Client need to include `account-idm-read`, `account-idm-write`, `account-env-read`, `account-env-write`, `iam-policies-management`, `iam:policies:write`, `iam:policies:read`, `iam:bindings:write`, `iam:bindings:read` and `iam:effective-permissions:read`.\n\nFinally the provider configuration requires the credentials for that OAuth Client.\nThe configuration section of your provider needs to look like this.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n",
            "properties": {
                "account": {
                    "type": "string",
                    "description": "The UUID of the account (`urn:dtaccount:\u003caccount-uuid\u003e`). The attribute `policies` must contain ONLY policies defined for that account. The prefix `urn:dtaccount:` MUST be omitted here.\n"
                },
                "environment": {
                    "type": "string",
                    "description": "The ID of the environment (https://\\n\\n.live.dynatrace.com). The attribute `policies` must contain ONLY policies defined for that environment.\n"
                },
                "group": {
                    "type": "string",
                    "description": "The name of the policy\n"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/IamPolicyBindingsV2Policy:IamPolicyBindingsV2Policy"
                    },
                    "description": "A list of Policies (ID and parameters/metadata) referring to policies bound to that group. It's not possible to mix policies here that are defined for different scopes (different accounts or environments) than specified via attributes `account` or `environment`.\n"
                }
            },
            "required": [
                "group"
            ],
            "inputProperties": {
                "account": {
                    "type": "string",
                    "description": "The UUID of the account (`urn:dtaccount:\u003caccount-uuid\u003e`). The attribute `policies` must contain ONLY policies defined for that account. The prefix `urn:dtaccount:` MUST be omitted here.\n",
                    "willReplaceOnChanges": true
                },
                "environment": {
                    "type": "string",
                    "description": "The ID of the environment (https://\\n\\n.live.dynatrace.com). The attribute `policies` must contain ONLY policies defined for that environment.\n",
                    "willReplaceOnChanges": true
                },
                "group": {
                    "type": "string",
                    "description": "The name of the policy\n",
                    "willReplaceOnChanges": true
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/IamPolicyBindingsV2Policy:IamPolicyBindingsV2Policy"
                    },
                    "description": "A list of Policies (ID and parameters/metadata) referring to policies bound to that group. It's not possible to mix policies here that are defined for different scopes (different accounts or environments) than specified via attributes `account` or `environment`.\n"
                }
            },
            "requiredInputs": [
                "group"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IamPolicyBindingsV2 resources.\n",
                "properties": {
                    "account": {
                        "type": "string",
                        "description": "The UUID of the account (`urn:dtaccount:\u003caccount-uuid\u003e`). The attribute `policies` must contain ONLY policies defined for that account. The prefix `urn:dtaccount:` MUST be omitted here.\n",
                        "willReplaceOnChanges": true
                    },
                    "environment": {
                        "type": "string",
                        "description": "The ID of the environment (https://\\n\\n.live.dynatrace.com). The attribute `policies` must contain ONLY policies defined for that environment.\n",
                        "willReplaceOnChanges": true
                    },
                    "group": {
                        "type": "string",
                        "description": "The name of the policy\n",
                        "willReplaceOnChanges": true
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/IamPolicyBindingsV2Policy:IamPolicyBindingsV2Policy"
                        },
                        "description": "A list of Policies (ID and parameters/metadata) referring to policies bound to that group. It's not possible to mix policies here that are defined for different scopes (different accounts or environments) than specified via attributes `account` or `environment`.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/iamUser:IamUser": {
            "description": "\u003e This resource is excluded by default in the export utility since it is part of the account management API. You can, of course, specify that resource explicitly in order to export it. In that case, don't forget to specify the environment variables `DT_CLIENT_ID`, `DT_ACCOUNT_ID` and `DT_CLIENT_SECRET` for authentication.\n\n\u003e This resource requires the API token scopes **Allow read access for identity resources (users and groups)** (`account-idm-read`) and **Allow write access for identity resources (users and groups)** (`account-idm-write`)\n\n## Dynatrace Documentation\n\n- Dynatrace IAM - https://www.dynatrace.com/support/help/how-to-use-dynatrace/user-management-and-sso/manage-groups-and-permissions\n\n- Settings API - https://www.dynatrace.com/support/help/how-to-use-dynatrace/user-management-and-sso/manage-groups-and-permissions/iam/iam-getting-started\n\n## Prerequisites\n\nUsing this resource requires an OAuth client to be configured within your account settings.\nThe scopes of the OAuth Client need to include `account-idm-read`, `account-idm-write`, `account-env-read`, `account-env-write`, `iam-policies-management`, `iam:policies:write`, `iam:policies:read`, `iam:bindings:write`, `iam:bindings:read` and `iam:effective-permissions:read`.\n\nFinally the provider configuration requires the credentials for that OAuth Client.\nThe configuration section of your provider needs to look like this.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n\n## Resource Example Usage\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\n\nconst johnDoeGmailCom = new dynatrace.IamUser(\"johnDoeGmailCom\", {\n    email: \"john.doe@gmail.com\",\n    groups: [data.dynatrace_iam_group.Restricted.id],\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\n\njohn_doe_gmail_com = dynatrace.IamUser(\"johnDoeGmailCom\",\n    email=\"john.doe@gmail.com\",\n    groups=[data[\"dynatrace_iam_group\"][\"Restricted\"][\"id\"]])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var johnDoeGmailCom = new Dynatrace.IamUser(\"johnDoeGmailCom\", new()\n    {\n        Email = \"john.doe@gmail.com\",\n        Groups = new[]\n        {\n            data.Dynatrace_iam_group.Restricted.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dynatrace.NewIamUser(ctx, \"johnDoeGmailCom\", \u0026dynatrace.IamUserArgs{\n\t\t\tEmail: pulumi.String(\"john.doe@gmail.com\"),\n\t\t\tGroups: pulumi.StringArray{\n\t\t\t\tdata.Dynatrace_iam_group.Restricted.Id,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.IamUser;\nimport com.pulumi.dynatrace.IamUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var johnDoeGmailCom = new IamUser(\"johnDoeGmailCom\", IamUserArgs.builder()        \n            .email(\"john.doe@gmail.com\")\n            .groups(data.dynatrace_iam_group().Restricted().id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  johnDoeGmailCom:\n    type: dynatrace:IamUser\n    properties:\n      email: john.doe@gmail.com\n      groups:\n        - ${data.dynatrace_iam_group.Restricted.id}\n```\n",
            "properties": {
                "email": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "uid": {
                    "type": "string"
                }
            },
            "required": [
                "email",
                "uid"
            ],
            "inputProperties": {
                "email": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "email"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IamUser resources.\n",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "uid": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/ibmMqFilters:IbmMqFilters": {
            "properties": {
                "cicsMqQueueIdExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "CICS: Excluded MQ queues\n"
                },
                "cicsMqQueueIdIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "CICS: Included MQ queues\n"
                },
                "imsCrTrnIdExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "When you add a transaction ID to the exclude list remaining transactions are still monitored.\n"
                },
                "imsCrTrnIdIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "When you add a transaction ID to the include list, all the remaining transactions are ignored.\n"
                },
                "imsMqQueueIdExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IMS: Excluded MQ queues\n"
                },
                "imsMqQueueIdIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IMS: Included MQ queues\n"
                }
            },
            "inputProperties": {
                "cicsMqQueueIdExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "CICS: Excluded MQ queues\n"
                },
                "cicsMqQueueIdIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "CICS: Included MQ queues\n"
                },
                "imsCrTrnIdExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "When you add a transaction ID to the exclude list remaining transactions are still monitored.\n"
                },
                "imsCrTrnIdIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "When you add a transaction ID to the include list, all the remaining transactions are ignored.\n"
                },
                "imsMqQueueIdExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IMS: Excluded MQ queues\n"
                },
                "imsMqQueueIdIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IMS: Included MQ queues\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IbmMqFilters resources.\n",
                "properties": {
                    "cicsMqQueueIdExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "CICS: Excluded MQ queues\n"
                    },
                    "cicsMqQueueIdIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "CICS: Included MQ queues\n"
                    },
                    "imsCrTrnIdExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "When you add a transaction ID to the exclude list remaining transactions are still monitored.\n"
                    },
                    "imsCrTrnIdIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "When you add a transaction ID to the include list, all the remaining transactions are ignored.\n"
                    },
                    "imsMqQueueIdExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "IMS: Excluded MQ queues\n"
                    },
                    "imsMqQueueIdIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "IMS: Included MQ queues\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/imsBridges:ImsBridges": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the queue manager\n"
                },
                "queueManagers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ImsBridgesQueueManager:ImsBridgesQueueManager"
                    },
                    "description": "Queue manager(s) that belong to the IMS bridge\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the queue manager\n"
                },
                "queueManagers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ImsBridgesQueueManager:ImsBridgesQueueManager"
                    },
                    "description": "Queue manager(s) that belong to the IMS bridge\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ImsBridges resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the queue manager\n"
                    },
                    "queueManagers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/ImsBridgesQueueManager:ImsBridgesQueueManager"
                        },
                        "description": "Queue manager(s) that belong to the IMS bridge\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/infraopsAppFeatureFlags:InfraopsAppFeatureFlags": {
            "properties": {
                "booleanValue": {
                    "type": "boolean",
                    "description": "State of boolean feature\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the feature\n"
                },
                "numberValue": {
                    "type": "integer",
                    "description": "State of numeric feature\n"
                },
                "stringValue": {
                    "type": "string",
                    "description": "State of textual feature\n"
                },
                "type": {
                    "type": "string",
                    "description": "Possible Values: `Boolean`, `Number`, `String`\n"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "inputProperties": {
                "booleanValue": {
                    "type": "boolean",
                    "description": "State of boolean feature\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the feature\n"
                },
                "numberValue": {
                    "type": "integer",
                    "description": "State of numeric feature\n"
                },
                "stringValue": {
                    "type": "string",
                    "description": "State of textual feature\n"
                },
                "type": {
                    "type": "string",
                    "description": "Possible Values: `Boolean`, `Number`, `String`\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InfraopsAppFeatureFlags resources.\n",
                "properties": {
                    "booleanValue": {
                        "type": "boolean",
                        "description": "State of boolean feature\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the feature\n"
                    },
                    "numberValue": {
                        "type": "integer",
                        "description": "State of numeric feature\n"
                    },
                    "stringValue": {
                        "type": "string",
                        "description": "State of textual feature\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Possible Values: `Boolean`, `Number`, `String`\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/ipAddressMasking:IpAddressMasking": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (MOBILE*APPLICATION, CUSTOM*APPLICATION, APPLICATION). Omit this property if you want to cover the whole environment.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Possible Values: `all`, `public`\n"
                }
            },
            "required": [
                "enabled"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (MOBILE*APPLICATION, CUSTOM*APPLICATION, APPLICATION). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "Possible Values: `all`, `public`\n"
                }
            },
            "requiredInputs": [
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpAddressMasking resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (MOBILE*APPLICATION, CUSTOM*APPLICATION, APPLICATION). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Possible Values: `all`, `public`\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/issueTracking:IssueTracking": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "issuelabel": {
                    "type": "string",
                    "description": "Set a label to identify these issues, for example, `release_blocker` or `non-critical`\n"
                },
                "issuequery": {
                    "type": "string",
                    "description": "You can use the following placeholders to automatically insert values from the **Release monitoring** page in your query: `{NAME}`, `{VERSION}`, `{STAGE}`, `{PRODUCT}`.\n"
                },
                "issuetheme": {
                    "type": "string",
                    "description": "Possible Values: `ERROR`, `INFO`, `RESOLVED`\n"
                },
                "issuetrackersystem": {
                    "type": "string",
                    "description": "Possible Values: `GITHUB`, `GITLAB`, `JIRA`, `JIRA_CLOUD`, `JIRA_ON_PREMISE`, `SERVICENOW`\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password\n"
                },
                "token": {
                    "type": "string",
                    "description": "Token\n",
                    "secret": true
                },
                "url": {
                    "type": "string",
                    "description": "For Jira, use the base URL (for example, https://jira.yourcompany.com); for GitHub, use the repository URL (for example, https://github.com/org/repo); for GitLab, use the specific project API for a single project (for example, https://gitlab.com/api/v4/projects/:projectId), and the specific group API for a multiple projects (for example, https://gitlab.com/api/v4/groups/:groupId); for ServiceNow, use your company instance URL (for example, https://yourinstance.service-now.com/)\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username\n"
                }
            },
            "required": [
                "enabled",
                "insertAfter",
                "issuelabel",
                "issuequery",
                "issuetheme",
                "issuetrackersystem",
                "url",
                "username"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "issuelabel": {
                    "type": "string",
                    "description": "Set a label to identify these issues, for example, `release_blocker` or `non-critical`\n"
                },
                "issuequery": {
                    "type": "string",
                    "description": "You can use the following placeholders to automatically insert values from the **Release monitoring** page in your query: `{NAME}`, `{VERSION}`, `{STAGE}`, `{PRODUCT}`.\n"
                },
                "issuetheme": {
                    "type": "string",
                    "description": "Possible Values: `ERROR`, `INFO`, `RESOLVED`\n"
                },
                "issuetrackersystem": {
                    "type": "string",
                    "description": "Possible Values: `GITHUB`, `GITLAB`, `JIRA`, `JIRA_CLOUD`, `JIRA_ON_PREMISE`, `SERVICENOW`\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password\n"
                },
                "token": {
                    "type": "string",
                    "description": "Token\n",
                    "secret": true
                },
                "url": {
                    "type": "string",
                    "description": "For Jira, use the base URL (for example, https://jira.yourcompany.com); for GitHub, use the repository URL (for example, https://github.com/org/repo); for GitLab, use the specific project API for a single project (for example, https://gitlab.com/api/v4/projects/:projectId), and the specific group API for a multiple projects (for example, https://gitlab.com/api/v4/groups/:groupId); for ServiceNow, use your company instance URL (for example, https://yourinstance.service-now.com/)\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "issuelabel",
                "issuequery",
                "issuetheme",
                "issuetrackersystem",
                "url",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IssueTracking resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "issuelabel": {
                        "type": "string",
                        "description": "Set a label to identify these issues, for example, `release_blocker` or `non-critical`\n"
                    },
                    "issuequery": {
                        "type": "string",
                        "description": "You can use the following placeholders to automatically insert values from the **Release monitoring** page in your query: `{NAME}`, `{VERSION}`, `{STAGE}`, `{PRODUCT}`.\n"
                    },
                    "issuetheme": {
                        "type": "string",
                        "description": "Possible Values: `ERROR`, `INFO`, `RESOLVED`\n"
                    },
                    "issuetrackersystem": {
                        "type": "string",
                        "description": "Possible Values: `GITHUB`, `GITLAB`, `JIRA`, `JIRA_CLOUD`, `JIRA_ON_PREMISE`, `SERVICENOW`\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password\n"
                    },
                    "token": {
                        "type": "string",
                        "description": "Token\n",
                        "secret": true
                    },
                    "url": {
                        "type": "string",
                        "description": "For Jira, use the base URL (for example, https://jira.yourcompany.com); for GitHub, use the repository URL (for example, https://github.com/org/repo); for GitLab, use the specific project API for a single project (for example, https://gitlab.com/api/v4/projects/:projectId), and the specific group API for a multiple projects (for example, https://gitlab.com/api/v4/groups/:groupId); for ServiceNow, use your company instance URL (for example, https://yourinstance.service-now.com/)\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/jiraNotification:JiraNotification": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "apiToken": {
                    "type": "string",
                    "description": "The API token for the Jira profile. Using password authentication [was deprecated by Jira](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-basic-auth-and-cookie-based-auth/)\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the Jira issue to be created by this notification.   You can use same placeholders as in issue summary\n"
                },
                "issueType": {
                    "type": "string",
                    "description": "The type of the Jira issue to be created by this notification\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "The project key of the Jira issue to be created by this notification\n"
                },
                "summary": {
                    "type": "string",
                    "description": "The summary of the Jira issue to be created by this notification.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the Jira API endpoint\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username of the Jira profile\n"
                }
            },
            "required": [
                "active",
                "description",
                "issueType",
                "legacyId",
                "name",
                "profile",
                "projectKey",
                "summary",
                "url",
                "username"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "apiToken": {
                    "type": "string",
                    "description": "The API token for the Jira profile. Using password authentication [was deprecated by Jira](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-basic-auth-and-cookie-based-auth/)\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the Jira issue to be created by this notification.   You can use same placeholders as in issue summary\n"
                },
                "issueType": {
                    "type": "string",
                    "description": "The type of the Jira issue to be created by this notification\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "The project key of the Jira issue to be created by this notification\n"
                },
                "summary": {
                    "type": "string",
                    "description": "The summary of the Jira issue to be created by this notification.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the Jira API endpoint\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username of the Jira profile\n"
                }
            },
            "requiredInputs": [
                "active",
                "description",
                "issueType",
                "profile",
                "projectKey",
                "summary",
                "url",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering JiraNotification resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                    },
                    "apiToken": {
                        "type": "string",
                        "description": "The API token for the Jira profile. Using password authentication [was deprecated by Jira](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-basic-auth-and-cookie-based-auth/)\n",
                        "secret": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the Jira issue to be created by this notification.   You can use same placeholders as in issue summary\n"
                    },
                    "issueType": {
                        "type": "string",
                        "description": "The type of the Jira issue to be created by this notification\n"
                    },
                    "legacyId": {
                        "type": "string",
                        "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the notification configuration\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "The ID of the associated alerting profile\n"
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "The project key of the Jira issue to be created by this notification\n"
                    },
                    "summary": {
                        "type": "string",
                        "description": "The summary of the Jira issue to be created by this notification.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the Jira API endpoint\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username of the Jira profile\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/jsonDashboard:JsonDashboard": {
            "properties": {
                "contents": {
                    "type": "string",
                    "description": "Contains the JSON Code of the Dashboard\n"
                },
                "linkId": {
                    "type": "string",
                    "description": "ID of the dashboard, used with the json*dashboard*base resource and variables to create circular dependencies between dashboards for hyperlinks.\n"
                }
            },
            "required": [
                "contents",
                "linkId"
            ],
            "inputProperties": {
                "contents": {
                    "type": "string",
                    "description": "Contains the JSON Code of the Dashboard\n"
                },
                "linkId": {
                    "type": "string",
                    "description": "ID of the dashboard, used with the json*dashboard*base resource and variables to create circular dependencies between dashboards for hyperlinks.\n"
                }
            },
            "requiredInputs": [
                "contents"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering JsonDashboard resources.\n",
                "properties": {
                    "contents": {
                        "type": "string",
                        "description": "Contains the JSON Code of the Dashboard\n"
                    },
                    "linkId": {
                        "type": "string",
                        "description": "ID of the dashboard, used with the json*dashboard*base resource and variables to create circular dependencies between dashboards for hyperlinks.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/jsonDashboardBase:JsonDashboardBase": {
            "description": "!\u003e This resource is for internal use only\n",
            "properties": {
                "contents": {
                    "type": "string",
                    "description": "Contains the JSON Code of the Dashboard\n"
                }
            },
            "required": [
                "contents"
            ],
            "inputProperties": {
                "contents": {
                    "type": "string",
                    "description": "Contains the JSON Code of the Dashboard\n"
                }
            },
            "requiredInputs": [
                "contents"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering JsonDashboardBase resources.\n",
                "properties": {
                    "contents": {
                        "type": "string",
                        "description": "Contains the JSON Code of the Dashboard\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/k8sClusterAnomalies:K8sClusterAnomalies": {
            "properties": {
                "cpuRequestsSaturation": {
                    "$ref": "#/types/dynatrace:index/K8sClusterAnomaliesCpuRequestsSaturation:K8sClusterAnomaliesCpuRequestsSaturation",
                    "description": "no documentation available\n"
                },
                "memoryRequestsSaturation": {
                    "$ref": "#/types/dynatrace:index/K8sClusterAnomaliesMemoryRequestsSaturation:K8sClusterAnomaliesMemoryRequestsSaturation",
                    "description": "no documentation available\n"
                },
                "monitoringIssues": {
                    "$ref": "#/types/dynatrace:index/K8sClusterAnomaliesMonitoringIssues:K8sClusterAnomaliesMonitoringIssues",
                    "description": "no documentation available\n"
                },
                "podsSaturation": {
                    "$ref": "#/types/dynatrace:index/K8sClusterAnomaliesPodsSaturation:K8sClusterAnomaliesPodsSaturation",
                    "description": "no documentation available\n"
                },
                "readinessIssues": {
                    "$ref": "#/types/dynatrace:index/K8sClusterAnomaliesReadinessIssues:K8sClusterAnomaliesReadinessIssues",
                    "description": "Alerts if cluster has not been ready for a given amount of time\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.\n"
                }
            },
            "required": [
                "cpuRequestsSaturation",
                "memoryRequestsSaturation",
                "monitoringIssues",
                "podsSaturation",
                "readinessIssues"
            ],
            "inputProperties": {
                "cpuRequestsSaturation": {
                    "$ref": "#/types/dynatrace:index/K8sClusterAnomaliesCpuRequestsSaturation:K8sClusterAnomaliesCpuRequestsSaturation",
                    "description": "no documentation available\n"
                },
                "memoryRequestsSaturation": {
                    "$ref": "#/types/dynatrace:index/K8sClusterAnomaliesMemoryRequestsSaturation:K8sClusterAnomaliesMemoryRequestsSaturation",
                    "description": "no documentation available\n"
                },
                "monitoringIssues": {
                    "$ref": "#/types/dynatrace:index/K8sClusterAnomaliesMonitoringIssues:K8sClusterAnomaliesMonitoringIssues",
                    "description": "no documentation available\n"
                },
                "podsSaturation": {
                    "$ref": "#/types/dynatrace:index/K8sClusterAnomaliesPodsSaturation:K8sClusterAnomaliesPodsSaturation",
                    "description": "no documentation available\n"
                },
                "readinessIssues": {
                    "$ref": "#/types/dynatrace:index/K8sClusterAnomaliesReadinessIssues:K8sClusterAnomaliesReadinessIssues",
                    "description": "Alerts if cluster has not been ready for a given amount of time\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "cpuRequestsSaturation",
                "memoryRequestsSaturation",
                "monitoringIssues",
                "podsSaturation",
                "readinessIssues"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering K8sClusterAnomalies resources.\n",
                "properties": {
                    "cpuRequestsSaturation": {
                        "$ref": "#/types/dynatrace:index/K8sClusterAnomaliesCpuRequestsSaturation:K8sClusterAnomaliesCpuRequestsSaturation",
                        "description": "no documentation available\n"
                    },
                    "memoryRequestsSaturation": {
                        "$ref": "#/types/dynatrace:index/K8sClusterAnomaliesMemoryRequestsSaturation:K8sClusterAnomaliesMemoryRequestsSaturation",
                        "description": "no documentation available\n"
                    },
                    "monitoringIssues": {
                        "$ref": "#/types/dynatrace:index/K8sClusterAnomaliesMonitoringIssues:K8sClusterAnomaliesMonitoringIssues",
                        "description": "no documentation available\n"
                    },
                    "podsSaturation": {
                        "$ref": "#/types/dynatrace:index/K8sClusterAnomaliesPodsSaturation:K8sClusterAnomaliesPodsSaturation",
                        "description": "no documentation available\n"
                    },
                    "readinessIssues": {
                        "$ref": "#/types/dynatrace:index/K8sClusterAnomaliesReadinessIssues:K8sClusterAnomaliesReadinessIssues",
                        "description": "Alerts if cluster has not been ready for a given amount of time\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/k8sCredentials:K8sCredentials": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether subscription to this events field selector is enabled (value set to `true`). If disabled (value set to `false`), Dynatrace will stop fetching events from the Kubernetes API for this events field selector\n"
                },
                "activeGateGroup": {
                    "type": "string",
                    "description": "Active Gate group to filter active gates for this credentials.\n"
                },
                "authToken": {
                    "type": "string",
                    "description": "The service account bearer token for the Kubernetes API server.  Submit your token on creation or update of the configuration. For security reasons, GET requests return this field as `null`.  If the field is omitted during an update, the old value remains unaffected.\n",
                    "secret": true
                },
                "certificateCheckEnabled": {
                    "type": "boolean",
                    "description": "The check of SSL certificates is enabled (`true`) or disabled (`false`) for the Kubernetes cluster.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.\n"
                },
                "davisEventsIntegrationEnabled": {
                    "type": "boolean",
                    "description": "Inclusion of all Davis relevant events is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected\n"
                },
                "endpointUrl": {
                    "type": "string",
                    "description": "The URL of the Kubernetes API server.  It must be unique within a Dynatrace environment.  The URL must valid according to RFC 2396. Leading or trailing whitespaces are not allowed.\n"
                },
                "eventAnalysisAndAlertingEnabled": {
                    "type": "boolean",
                    "description": "Event analysis and alerting is (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.\n"
                },
                "eventsFieldSelectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/K8sCredentialsEventsFieldSelector:K8sCredentialsEventsFieldSelector"
                    },
                    "description": "Kubernetes event filters based on field-selectors. If set to `null` on creation, no events field selectors are subscribed. If set to `null` on update, no change of stored events field selectors is applied. Set an empty list to clear all events field selectors.\n"
                },
                "eventsIntegrationEnabled": {
                    "type": "boolean",
                    "description": "Monitoring of events is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. Event monitoring depends on the active state of this configuration to be true.  If not set on creation, the `false` value is used.  If the field is omitted during an update, the old value remains unaffected.\n"
                },
                "hostnameVerification": {
                    "type": "boolean",
                    "description": "Verify hostname in certificate against Kubernetes API URL\n"
                },
                "label": {
                    "type": "string",
                    "description": "A label of the events field selector.\n"
                },
                "prometheusExporters": {
                    "type": "boolean",
                    "description": "Prometheus exporters integration is enabled (`true`) or disabled (`false`) for the Kubernetes cluster.If the field is omitted during an update, the old value remains unaffected\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n"
                },
                "workloadIntegrationEnabled": {
                    "type": "boolean",
                    "description": "Workload and cloud application processing is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.\n"
                }
            },
            "required": [
                "label"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether subscription to this events field selector is enabled (value set to `true`). If disabled (value set to `false`), Dynatrace will stop fetching events from the Kubernetes API for this events field selector\n"
                },
                "activeGateGroup": {
                    "type": "string",
                    "description": "Active Gate group to filter active gates for this credentials.\n"
                },
                "authToken": {
                    "type": "string",
                    "description": "The service account bearer token for the Kubernetes API server.  Submit your token on creation or update of the configuration. For security reasons, GET requests return this field as `null`.  If the field is omitted during an update, the old value remains unaffected.\n",
                    "secret": true
                },
                "certificateCheckEnabled": {
                    "type": "boolean",
                    "description": "The check of SSL certificates is enabled (`true`) or disabled (`false`) for the Kubernetes cluster.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.\n"
                },
                "davisEventsIntegrationEnabled": {
                    "type": "boolean",
                    "description": "Inclusion of all Davis relevant events is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected\n"
                },
                "endpointUrl": {
                    "type": "string",
                    "description": "The URL of the Kubernetes API server.  It must be unique within a Dynatrace environment.  The URL must valid according to RFC 2396. Leading or trailing whitespaces are not allowed.\n"
                },
                "eventAnalysisAndAlertingEnabled": {
                    "type": "boolean",
                    "description": "Event analysis and alerting is (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.\n"
                },
                "eventsFieldSelectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/K8sCredentialsEventsFieldSelector:K8sCredentialsEventsFieldSelector"
                    },
                    "description": "Kubernetes event filters based on field-selectors. If set to `null` on creation, no events field selectors are subscribed. If set to `null` on update, no change of stored events field selectors is applied. Set an empty list to clear all events field selectors.\n"
                },
                "eventsIntegrationEnabled": {
                    "type": "boolean",
                    "description": "Monitoring of events is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. Event monitoring depends on the active state of this configuration to be true.  If not set on creation, the `false` value is used.  If the field is omitted during an update, the old value remains unaffected.\n"
                },
                "hostnameVerification": {
                    "type": "boolean",
                    "description": "Verify hostname in certificate against Kubernetes API URL\n"
                },
                "label": {
                    "type": "string",
                    "description": "A label of the events field selector.\n"
                },
                "prometheusExporters": {
                    "type": "boolean",
                    "description": "Prometheus exporters integration is enabled (`true`) or disabled (`false`) for the Kubernetes cluster.If the field is omitted during an update, the old value remains unaffected\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "Any attributes that aren't yet supported by this provider\n"
                },
                "workloadIntegrationEnabled": {
                    "type": "boolean",
                    "description": "Workload and cloud application processing is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.\n"
                }
            },
            "requiredInputs": [
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering K8sCredentials resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "Whether subscription to this events field selector is enabled (value set to `true`). If disabled (value set to `false`), Dynatrace will stop fetching events from the Kubernetes API for this events field selector\n"
                    },
                    "activeGateGroup": {
                        "type": "string",
                        "description": "Active Gate group to filter active gates for this credentials.\n"
                    },
                    "authToken": {
                        "type": "string",
                        "description": "The service account bearer token for the Kubernetes API server.  Submit your token on creation or update of the configuration. For security reasons, GET requests return this field as `null`.  If the field is omitted during an update, the old value remains unaffected.\n",
                        "secret": true
                    },
                    "certificateCheckEnabled": {
                        "type": "boolean",
                        "description": "The check of SSL certificates is enabled (`true`) or disabled (`false`) for the Kubernetes cluster.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.\n"
                    },
                    "davisEventsIntegrationEnabled": {
                        "type": "boolean",
                        "description": "Inclusion of all Davis relevant events is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected\n"
                    },
                    "endpointUrl": {
                        "type": "string",
                        "description": "The URL of the Kubernetes API server.  It must be unique within a Dynatrace environment.  The URL must valid according to RFC 2396. Leading or trailing whitespaces are not allowed.\n"
                    },
                    "eventAnalysisAndAlertingEnabled": {
                        "type": "boolean",
                        "description": "Event analysis and alerting is (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.\n"
                    },
                    "eventsFieldSelectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/K8sCredentialsEventsFieldSelector:K8sCredentialsEventsFieldSelector"
                        },
                        "description": "Kubernetes event filters based on field-selectors. If set to `null` on creation, no events field selectors are subscribed. If set to `null` on update, no change of stored events field selectors is applied. Set an empty list to clear all events field selectors.\n"
                    },
                    "eventsIntegrationEnabled": {
                        "type": "boolean",
                        "description": "Monitoring of events is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. Event monitoring depends on the active state of this configuration to be true.  If not set on creation, the `false` value is used.  If the field is omitted during an update, the old value remains unaffected.\n"
                    },
                    "hostnameVerification": {
                        "type": "boolean",
                        "description": "Verify hostname in certificate against Kubernetes API URL\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "A label of the events field selector.\n"
                    },
                    "prometheusExporters": {
                        "type": "boolean",
                        "description": "Prometheus exporters integration is enabled (`true`) or disabled (`false`) for the Kubernetes cluster.If the field is omitted during an update, the old value remains unaffected\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "Any attributes that aren't yet supported by this provider\n"
                    },
                    "workloadIntegrationEnabled": {
                        "type": "boolean",
                        "description": "Workload and cloud application processing is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/k8sMonitoring:K8sMonitoring": {
            "properties": {
                "cloudApplicationPipelineEnabled": {
                    "type": "boolean",
                    "description": "Monitor Kubernetes namespaces, services, workloads, and pods\n"
                },
                "eventPatterns": {
                    "$ref": "#/types/dynatrace:index/K8sMonitoringEventPatterns:K8sMonitoringEventPatterns",
                    "description": "Define Kubernetes event filters to ingest events into your environment. For more details, see the\n[documentation](https://dt-url.net/2201p0u).\n"
                },
                "eventProcessingActive": {
                    "type": "boolean",
                    "description": "All events are monitored unless event filters are specified. All ingested events are subject to licensing by default.\n"
                },
                "filterEvents": {
                    "type": "boolean",
                    "description": "Include only events specified by Events Field Selectors\n"
                },
                "includeAllFdiEvents": {
                    "type": "boolean",
                    "description": "For a list of included events, see the [documentation](https://dt-url.net/l61d02no).\n"
                },
                "openMetricsBuiltinEnabled": {
                    "type": "boolean",
                    "description": "Workload and node resource metrics are based on a subset of cAdvisor metrics. Depending on your Kubernetes cluster size,\nthis may increase the CPU/memory resource consumption of your ActiveGate.\n"
                },
                "openMetricsPipelineEnabled": {
                    "type": "boolean",
                    "description": "For annotation guidance, see the [documentation](https://dt-url.net/g42i0ppw).\n"
                },
                "pvcMonitoringEnabled": {
                    "type": "boolean",
                    "description": "To enable dashboards and alerts, add the [Kubernetes persistent volume\nclaims](ui/hub/ext/com.dynatrace.extension.kubernetes-pvc) extension to your environment.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.\n"
                }
            },
            "required": [
                "cloudApplicationPipelineEnabled",
                "eventProcessingActive",
                "openMetricsBuiltinEnabled",
                "openMetricsPipelineEnabled",
                "pvcMonitoringEnabled"
            ],
            "inputProperties": {
                "cloudApplicationPipelineEnabled": {
                    "type": "boolean",
                    "description": "Monitor Kubernetes namespaces, services, workloads, and pods\n"
                },
                "eventPatterns": {
                    "$ref": "#/types/dynatrace:index/K8sMonitoringEventPatterns:K8sMonitoringEventPatterns",
                    "description": "Define Kubernetes event filters to ingest events into your environment. For more details, see the\n[documentation](https://dt-url.net/2201p0u).\n"
                },
                "eventProcessingActive": {
                    "type": "boolean",
                    "description": "All events are monitored unless event filters are specified. All ingested events are subject to licensing by default.\n"
                },
                "filterEvents": {
                    "type": "boolean",
                    "description": "Include only events specified by Events Field Selectors\n"
                },
                "includeAllFdiEvents": {
                    "type": "boolean",
                    "description": "For a list of included events, see the [documentation](https://dt-url.net/l61d02no).\n"
                },
                "openMetricsBuiltinEnabled": {
                    "type": "boolean",
                    "description": "Workload and node resource metrics are based on a subset of cAdvisor metrics. Depending on your Kubernetes cluster size,\nthis may increase the CPU/memory resource consumption of your ActiveGate.\n"
                },
                "openMetricsPipelineEnabled": {
                    "type": "boolean",
                    "description": "For annotation guidance, see the [documentation](https://dt-url.net/g42i0ppw).\n"
                },
                "pvcMonitoringEnabled": {
                    "type": "boolean",
                    "description": "To enable dashboards and alerts, add the [Kubernetes persistent volume\nclaims](ui/hub/ext/com.dynatrace.extension.kubernetes-pvc) extension to your environment.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "cloudApplicationPipelineEnabled",
                "eventProcessingActive",
                "openMetricsBuiltinEnabled",
                "openMetricsPipelineEnabled",
                "pvcMonitoringEnabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering K8sMonitoring resources.\n",
                "properties": {
                    "cloudApplicationPipelineEnabled": {
                        "type": "boolean",
                        "description": "Monitor Kubernetes namespaces, services, workloads, and pods\n"
                    },
                    "eventPatterns": {
                        "$ref": "#/types/dynatrace:index/K8sMonitoringEventPatterns:K8sMonitoringEventPatterns",
                        "description": "Define Kubernetes event filters to ingest events into your environment. For more details, see the\n[documentation](https://dt-url.net/2201p0u).\n"
                    },
                    "eventProcessingActive": {
                        "type": "boolean",
                        "description": "All events are monitored unless event filters are specified. All ingested events are subject to licensing by default.\n"
                    },
                    "filterEvents": {
                        "type": "boolean",
                        "description": "Include only events specified by Events Field Selectors\n"
                    },
                    "includeAllFdiEvents": {
                        "type": "boolean",
                        "description": "For a list of included events, see the [documentation](https://dt-url.net/l61d02no).\n"
                    },
                    "openMetricsBuiltinEnabled": {
                        "type": "boolean",
                        "description": "Workload and node resource metrics are based on a subset of cAdvisor metrics. Depending on your Kubernetes cluster size,\nthis may increase the CPU/memory resource consumption of your ActiveGate.\n"
                    },
                    "openMetricsPipelineEnabled": {
                        "type": "boolean",
                        "description": "For annotation guidance, see the [documentation](https://dt-url.net/g42i0ppw).\n"
                    },
                    "pvcMonitoringEnabled": {
                        "type": "boolean",
                        "description": "To enable dashboards and alerts, add the [Kubernetes persistent volume\nclaims](ui/hub/ext/com.dynatrace.extension.kubernetes-pvc) extension to your environment.\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/k8sNamespaceAnomalies:K8sNamespaceAnomalies": {
            "properties": {
                "cpuLimitsQuotaSaturation": {
                    "$ref": "#/types/dynatrace:index/K8sNamespaceAnomaliesCpuLimitsQuotaSaturation:K8sNamespaceAnomaliesCpuLimitsQuotaSaturation",
                    "description": "Alerts if almost no CPU-limit quota left in namespace\n"
                },
                "cpuRequestsQuotaSaturation": {
                    "$ref": "#/types/dynatrace:index/K8sNamespaceAnomaliesCpuRequestsQuotaSaturation:K8sNamespaceAnomaliesCpuRequestsQuotaSaturation",
                    "description": "Alerts if almost no CPU-request quota left in namespace\n"
                },
                "memoryLimitsQuotaSaturation": {
                    "$ref": "#/types/dynatrace:index/K8sNamespaceAnomaliesMemoryLimitsQuotaSaturation:K8sNamespaceAnomaliesMemoryLimitsQuotaSaturation",
                    "description": "Alerts if almost no memory-limit quota left in namespace\n"
                },
                "memoryRequestsQuotaSaturation": {
                    "$ref": "#/types/dynatrace:index/K8sNamespaceAnomaliesMemoryRequestsQuotaSaturation:K8sNamespaceAnomaliesMemoryRequestsQuotaSaturation",
                    "description": "Alerts if almost no memory-request quota left in namespace\n"
                },
                "podsQuotaSaturation": {
                    "$ref": "#/types/dynatrace:index/K8sNamespaceAnomaliesPodsQuotaSaturation:K8sNamespaceAnomaliesPodsQuotaSaturation",
                    "description": "Alerts if almost no pod quota left in namespace\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.\n"
                }
            },
            "required": [
                "cpuLimitsQuotaSaturation",
                "cpuRequestsQuotaSaturation",
                "memoryLimitsQuotaSaturation",
                "memoryRequestsQuotaSaturation",
                "podsQuotaSaturation"
            ],
            "inputProperties": {
                "cpuLimitsQuotaSaturation": {
                    "$ref": "#/types/dynatrace:index/K8sNamespaceAnomaliesCpuLimitsQuotaSaturation:K8sNamespaceAnomaliesCpuLimitsQuotaSaturation",
                    "description": "Alerts if almost no CPU-limit quota left in namespace\n"
                },
                "cpuRequestsQuotaSaturation": {
                    "$ref": "#/types/dynatrace:index/K8sNamespaceAnomaliesCpuRequestsQuotaSaturation:K8sNamespaceAnomaliesCpuRequestsQuotaSaturation",
                    "description": "Alerts if almost no CPU-request quota left in namespace\n"
                },
                "memoryLimitsQuotaSaturation": {
                    "$ref": "#/types/dynatrace:index/K8sNamespaceAnomaliesMemoryLimitsQuotaSaturation:K8sNamespaceAnomaliesMemoryLimitsQuotaSaturation",
                    "description": "Alerts if almost no memory-limit quota left in namespace\n"
                },
                "memoryRequestsQuotaSaturation": {
                    "$ref": "#/types/dynatrace:index/K8sNamespaceAnomaliesMemoryRequestsQuotaSaturation:K8sNamespaceAnomaliesMemoryRequestsQuotaSaturation",
                    "description": "Alerts if almost no memory-request quota left in namespace\n"
                },
                "podsQuotaSaturation": {
                    "$ref": "#/types/dynatrace:index/K8sNamespaceAnomaliesPodsQuotaSaturation:K8sNamespaceAnomaliesPodsQuotaSaturation",
                    "description": "Alerts if almost no pod quota left in namespace\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "cpuLimitsQuotaSaturation",
                "cpuRequestsQuotaSaturation",
                "memoryLimitsQuotaSaturation",
                "memoryRequestsQuotaSaturation",
                "podsQuotaSaturation"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering K8sNamespaceAnomalies resources.\n",
                "properties": {
                    "cpuLimitsQuotaSaturation": {
                        "$ref": "#/types/dynatrace:index/K8sNamespaceAnomaliesCpuLimitsQuotaSaturation:K8sNamespaceAnomaliesCpuLimitsQuotaSaturation",
                        "description": "Alerts if almost no CPU-limit quota left in namespace\n"
                    },
                    "cpuRequestsQuotaSaturation": {
                        "$ref": "#/types/dynatrace:index/K8sNamespaceAnomaliesCpuRequestsQuotaSaturation:K8sNamespaceAnomaliesCpuRequestsQuotaSaturation",
                        "description": "Alerts if almost no CPU-request quota left in namespace\n"
                    },
                    "memoryLimitsQuotaSaturation": {
                        "$ref": "#/types/dynatrace:index/K8sNamespaceAnomaliesMemoryLimitsQuotaSaturation:K8sNamespaceAnomaliesMemoryLimitsQuotaSaturation",
                        "description": "Alerts if almost no memory-limit quota left in namespace\n"
                    },
                    "memoryRequestsQuotaSaturation": {
                        "$ref": "#/types/dynatrace:index/K8sNamespaceAnomaliesMemoryRequestsQuotaSaturation:K8sNamespaceAnomaliesMemoryRequestsQuotaSaturation",
                        "description": "Alerts if almost no memory-request quota left in namespace\n"
                    },
                    "podsQuotaSaturation": {
                        "$ref": "#/types/dynatrace:index/K8sNamespaceAnomaliesPodsQuotaSaturation:K8sNamespaceAnomaliesPodsQuotaSaturation",
                        "description": "Alerts if almost no pod quota left in namespace\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/k8sNodeAnomalies:K8sNodeAnomalies": {
            "properties": {
                "cpuRequestsSaturation": {
                    "$ref": "#/types/dynatrace:index/K8sNodeAnomaliesCpuRequestsSaturation:K8sNodeAnomaliesCpuRequestsSaturation",
                    "description": "no documentation available\n"
                },
                "memoryRequestsSaturation": {
                    "$ref": "#/types/dynatrace:index/K8sNodeAnomaliesMemoryRequestsSaturation:K8sNodeAnomaliesMemoryRequestsSaturation",
                    "description": "no documentation available\n"
                },
                "nodeProblematicCondition": {
                    "$ref": "#/types/dynatrace:index/K8sNodeAnomaliesNodeProblematicCondition:K8sNodeAnomaliesNodeProblematicCondition",
                    "description": "no documentation available\n"
                },
                "podsSaturation": {
                    "$ref": "#/types/dynatrace:index/K8sNodeAnomaliesPodsSaturation:K8sNodeAnomaliesPodsSaturation",
                    "description": "no documentation available\n"
                },
                "readinessIssues": {
                    "$ref": "#/types/dynatrace:index/K8sNodeAnomaliesReadinessIssues:K8sNodeAnomaliesReadinessIssues",
                    "description": "Alerts if node has not been available for a given amount of time\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.\n"
                }
            },
            "required": [
                "cpuRequestsSaturation",
                "memoryRequestsSaturation",
                "nodeProblematicCondition",
                "podsSaturation",
                "readinessIssues"
            ],
            "inputProperties": {
                "cpuRequestsSaturation": {
                    "$ref": "#/types/dynatrace:index/K8sNodeAnomaliesCpuRequestsSaturation:K8sNodeAnomaliesCpuRequestsSaturation",
                    "description": "no documentation available\n"
                },
                "memoryRequestsSaturation": {
                    "$ref": "#/types/dynatrace:index/K8sNodeAnomaliesMemoryRequestsSaturation:K8sNodeAnomaliesMemoryRequestsSaturation",
                    "description": "no documentation available\n"
                },
                "nodeProblematicCondition": {
                    "$ref": "#/types/dynatrace:index/K8sNodeAnomaliesNodeProblematicCondition:K8sNodeAnomaliesNodeProblematicCondition",
                    "description": "no documentation available\n"
                },
                "podsSaturation": {
                    "$ref": "#/types/dynatrace:index/K8sNodeAnomaliesPodsSaturation:K8sNodeAnomaliesPodsSaturation",
                    "description": "no documentation available\n"
                },
                "readinessIssues": {
                    "$ref": "#/types/dynatrace:index/K8sNodeAnomaliesReadinessIssues:K8sNodeAnomaliesReadinessIssues",
                    "description": "Alerts if node has not been available for a given amount of time\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "cpuRequestsSaturation",
                "memoryRequestsSaturation",
                "nodeProblematicCondition",
                "podsSaturation",
                "readinessIssues"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering K8sNodeAnomalies resources.\n",
                "properties": {
                    "cpuRequestsSaturation": {
                        "$ref": "#/types/dynatrace:index/K8sNodeAnomaliesCpuRequestsSaturation:K8sNodeAnomaliesCpuRequestsSaturation",
                        "description": "no documentation available\n"
                    },
                    "memoryRequestsSaturation": {
                        "$ref": "#/types/dynatrace:index/K8sNodeAnomaliesMemoryRequestsSaturation:K8sNodeAnomaliesMemoryRequestsSaturation",
                        "description": "no documentation available\n"
                    },
                    "nodeProblematicCondition": {
                        "$ref": "#/types/dynatrace:index/K8sNodeAnomaliesNodeProblematicCondition:K8sNodeAnomaliesNodeProblematicCondition",
                        "description": "no documentation available\n"
                    },
                    "podsSaturation": {
                        "$ref": "#/types/dynatrace:index/K8sNodeAnomaliesPodsSaturation:K8sNodeAnomaliesPodsSaturation",
                        "description": "no documentation available\n"
                    },
                    "readinessIssues": {
                        "$ref": "#/types/dynatrace:index/K8sNodeAnomaliesReadinessIssues:K8sNodeAnomaliesReadinessIssues",
                        "description": "Alerts if node has not been available for a given amount of time\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/k8sPvcAnomalies:K8sPvcAnomalies": {
            "properties": {
                "lowDiskSpaceCritical": {
                    "$ref": "#/types/dynatrace:index/K8sPvcAnomaliesLowDiskSpaceCritical:K8sPvcAnomaliesLowDiskSpaceCritical",
                    "description": "Alerts on low disk space in megabytes for a persistent volume claim.\n"
                },
                "lowDiskSpaceCriticalPercentage": {
                    "$ref": "#/types/dynatrace:index/K8sPvcAnomaliesLowDiskSpaceCriticalPercentage:K8sPvcAnomaliesLowDiskSpaceCriticalPercentage",
                    "description": "Alerts on low disk space in % for a persistent volume claim.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.\n"
                }
            },
            "required": [
                "lowDiskSpaceCritical",
                "lowDiskSpaceCriticalPercentage"
            ],
            "inputProperties": {
                "lowDiskSpaceCritical": {
                    "$ref": "#/types/dynatrace:index/K8sPvcAnomaliesLowDiskSpaceCritical:K8sPvcAnomaliesLowDiskSpaceCritical",
                    "description": "Alerts on low disk space in megabytes for a persistent volume claim.\n"
                },
                "lowDiskSpaceCriticalPercentage": {
                    "$ref": "#/types/dynatrace:index/K8sPvcAnomaliesLowDiskSpaceCriticalPercentage:K8sPvcAnomaliesLowDiskSpaceCriticalPercentage",
                    "description": "Alerts on low disk space in % for a persistent volume claim.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "lowDiskSpaceCritical",
                "lowDiskSpaceCriticalPercentage"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering K8sPvcAnomalies resources.\n",
                "properties": {
                    "lowDiskSpaceCritical": {
                        "$ref": "#/types/dynatrace:index/K8sPvcAnomaliesLowDiskSpaceCritical:K8sPvcAnomaliesLowDiskSpaceCritical",
                        "description": "Alerts on low disk space in megabytes for a persistent volume claim.\n"
                    },
                    "lowDiskSpaceCriticalPercentage": {
                        "$ref": "#/types/dynatrace:index/K8sPvcAnomaliesLowDiskSpaceCriticalPercentage:K8sPvcAnomaliesLowDiskSpaceCriticalPercentage",
                        "description": "Alerts on low disk space in % for a persistent volume claim.\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/k8sWorkloadAnomalies:K8sWorkloadAnomalies": {
            "properties": {
                "containerRestarts": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesContainerRestarts:K8sWorkloadAnomaliesContainerRestarts",
                    "description": "no documentation available\n"
                },
                "deploymentStuck": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesDeploymentStuck:K8sWorkloadAnomaliesDeploymentStuck",
                    "description": "no documentation available\n"
                },
                "highCpuThrottling": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesHighCpuThrottling:K8sWorkloadAnomaliesHighCpuThrottling",
                    "description": "no documentation available\n"
                },
                "highCpuUsage": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesHighCpuUsage:K8sWorkloadAnomaliesHighCpuUsage",
                    "description": "no documentation available\n"
                },
                "highMemoryUsage": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesHighMemoryUsage:K8sWorkloadAnomaliesHighMemoryUsage",
                    "description": "no documentation available\n"
                },
                "jobFailureEvents": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesJobFailureEvents:K8sWorkloadAnomaliesJobFailureEvents",
                    "description": "no documentation available\n"
                },
                "notAllPodsReady": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesNotAllPodsReady:K8sWorkloadAnomaliesNotAllPodsReady",
                    "description": "no documentation available\n"
                },
                "oomKills": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesOomKills:K8sWorkloadAnomaliesOomKills",
                    "description": "no documentation available\n"
                },
                "pendingPods": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesPendingPods:K8sWorkloadAnomaliesPendingPods",
                    "description": "no documentation available\n"
                },
                "podBackoffEvents": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesPodBackoffEvents:K8sWorkloadAnomaliesPodBackoffEvents",
                    "description": "no documentation available\n"
                },
                "podEvictionEvents": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesPodEvictionEvents:K8sWorkloadAnomaliesPodEvictionEvents",
                    "description": "no documentation available\n"
                },
                "podPreemptionEvents": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesPodPreemptionEvents:K8sWorkloadAnomaliesPodPreemptionEvents",
                    "description": "no documentation available\n"
                },
                "podStuckInTerminating": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesPodStuckInTerminating:K8sWorkloadAnomaliesPodStuckInTerminating",
                    "description": "no documentation available\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.\n"
                },
                "workloadWithoutReadyPods": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesWorkloadWithoutReadyPods:K8sWorkloadAnomaliesWorkloadWithoutReadyPods",
                    "description": "no documentation available\n"
                }
            },
            "required": [
                "containerRestarts",
                "deploymentStuck",
                "highCpuThrottling",
                "highCpuUsage",
                "highMemoryUsage",
                "jobFailureEvents",
                "notAllPodsReady",
                "oomKills",
                "pendingPods",
                "podBackoffEvents",
                "podEvictionEvents",
                "podPreemptionEvents",
                "podStuckInTerminating",
                "workloadWithoutReadyPods"
            ],
            "inputProperties": {
                "containerRestarts": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesContainerRestarts:K8sWorkloadAnomaliesContainerRestarts",
                    "description": "no documentation available\n"
                },
                "deploymentStuck": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesDeploymentStuck:K8sWorkloadAnomaliesDeploymentStuck",
                    "description": "no documentation available\n"
                },
                "highCpuThrottling": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesHighCpuThrottling:K8sWorkloadAnomaliesHighCpuThrottling",
                    "description": "no documentation available\n"
                },
                "highCpuUsage": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesHighCpuUsage:K8sWorkloadAnomaliesHighCpuUsage",
                    "description": "no documentation available\n"
                },
                "highMemoryUsage": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesHighMemoryUsage:K8sWorkloadAnomaliesHighMemoryUsage",
                    "description": "no documentation available\n"
                },
                "jobFailureEvents": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesJobFailureEvents:K8sWorkloadAnomaliesJobFailureEvents",
                    "description": "no documentation available\n"
                },
                "notAllPodsReady": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesNotAllPodsReady:K8sWorkloadAnomaliesNotAllPodsReady",
                    "description": "no documentation available\n"
                },
                "oomKills": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesOomKills:K8sWorkloadAnomaliesOomKills",
                    "description": "no documentation available\n"
                },
                "pendingPods": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesPendingPods:K8sWorkloadAnomaliesPendingPods",
                    "description": "no documentation available\n"
                },
                "podBackoffEvents": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesPodBackoffEvents:K8sWorkloadAnomaliesPodBackoffEvents",
                    "description": "no documentation available\n"
                },
                "podEvictionEvents": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesPodEvictionEvents:K8sWorkloadAnomaliesPodEvictionEvents",
                    "description": "no documentation available\n"
                },
                "podPreemptionEvents": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesPodPreemptionEvents:K8sWorkloadAnomaliesPodPreemptionEvents",
                    "description": "no documentation available\n"
                },
                "podStuckInTerminating": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesPodStuckInTerminating:K8sWorkloadAnomaliesPodStuckInTerminating",
                    "description": "no documentation available\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                },
                "workloadWithoutReadyPods": {
                    "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesWorkloadWithoutReadyPods:K8sWorkloadAnomaliesWorkloadWithoutReadyPods",
                    "description": "no documentation available\n"
                }
            },
            "requiredInputs": [
                "containerRestarts",
                "deploymentStuck",
                "highCpuThrottling",
                "highCpuUsage",
                "highMemoryUsage",
                "jobFailureEvents",
                "notAllPodsReady",
                "oomKills",
                "pendingPods",
                "podBackoffEvents",
                "podEvictionEvents",
                "podPreemptionEvents",
                "podStuckInTerminating",
                "workloadWithoutReadyPods"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering K8sWorkloadAnomalies resources.\n",
                "properties": {
                    "containerRestarts": {
                        "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesContainerRestarts:K8sWorkloadAnomaliesContainerRestarts",
                        "description": "no documentation available\n"
                    },
                    "deploymentStuck": {
                        "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesDeploymentStuck:K8sWorkloadAnomaliesDeploymentStuck",
                        "description": "no documentation available\n"
                    },
                    "highCpuThrottling": {
                        "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesHighCpuThrottling:K8sWorkloadAnomaliesHighCpuThrottling",
                        "description": "no documentation available\n"
                    },
                    "highCpuUsage": {
                        "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesHighCpuUsage:K8sWorkloadAnomaliesHighCpuUsage",
                        "description": "no documentation available\n"
                    },
                    "highMemoryUsage": {
                        "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesHighMemoryUsage:K8sWorkloadAnomaliesHighMemoryUsage",
                        "description": "no documentation available\n"
                    },
                    "jobFailureEvents": {
                        "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesJobFailureEvents:K8sWorkloadAnomaliesJobFailureEvents",
                        "description": "no documentation available\n"
                    },
                    "notAllPodsReady": {
                        "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesNotAllPodsReady:K8sWorkloadAnomaliesNotAllPodsReady",
                        "description": "no documentation available\n"
                    },
                    "oomKills": {
                        "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesOomKills:K8sWorkloadAnomaliesOomKills",
                        "description": "no documentation available\n"
                    },
                    "pendingPods": {
                        "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesPendingPods:K8sWorkloadAnomaliesPendingPods",
                        "description": "no documentation available\n"
                    },
                    "podBackoffEvents": {
                        "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesPodBackoffEvents:K8sWorkloadAnomaliesPodBackoffEvents",
                        "description": "no documentation available\n"
                    },
                    "podEvictionEvents": {
                        "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesPodEvictionEvents:K8sWorkloadAnomaliesPodEvictionEvents",
                        "description": "no documentation available\n"
                    },
                    "podPreemptionEvents": {
                        "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesPodPreemptionEvents:K8sWorkloadAnomaliesPodPreemptionEvents",
                        "description": "no documentation available\n"
                    },
                    "podStuckInTerminating": {
                        "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesPodStuckInTerminating:K8sWorkloadAnomaliesPodStuckInTerminating",
                        "description": "no documentation available\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    },
                    "workloadWithoutReadyPods": {
                        "$ref": "#/types/dynatrace:index/K8sWorkloadAnomaliesWorkloadWithoutReadyPods:K8sWorkloadAnomaliesWorkloadWithoutReadyPods",
                        "description": "no documentation available\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/keyRequests:KeyRequests": {
            "properties": {
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The names of the key requests\n"
                },
                "service": {
                    "type": "string",
                    "description": "ID of Dynatrace Service, eg. SERVICE-123ABC45678EFGH\n"
                }
            },
            "required": [
                "service"
            ],
            "inputProperties": {
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The names of the key requests\n"
                },
                "service": {
                    "type": "string",
                    "description": "ID of Dynatrace Service, eg. SERVICE-123ABC45678EFGH\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "service"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KeyRequests resources.\n",
                "properties": {
                    "names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The names of the key requests\n"
                    },
                    "service": {
                        "type": "string",
                        "description": "ID of Dynatrace Service, eg. SERVICE-123ABC45678EFGH\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/keyUserAction:KeyUserAction": {
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "The ID of the WebApplication\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The domain where the action is performed\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the action\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the action. Possible values are `Custom`, `Load` and `Xhr`\n"
                }
            },
            "required": [
                "applicationId",
                "name",
                "type"
            ],
            "inputProperties": {
                "applicationId": {
                    "type": "string",
                    "description": "The ID of the WebApplication\n",
                    "willReplaceOnChanges": true
                },
                "domain": {
                    "type": "string",
                    "description": "The domain where the action is performed\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the action\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the action. Possible values are `Custom`, `Load` and `Xhr`\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "applicationId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KeyUserAction resources.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "The ID of the WebApplication\n",
                        "willReplaceOnChanges": true
                    },
                    "domain": {
                        "type": "string",
                        "description": "The domain where the action is performed\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the action\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the action. Possible values are `Custom`, `Load` and `Xhr`\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/kubernetes:Kubernetes": {
            "properties": {
                "activeGateGroup": {
                    "type": "string",
                    "description": "ActiveGate Group\n"
                },
                "authToken": {
                    "type": "string",
                    "description": "Create a bearer token for [Kubernetes](https://dt-url.net/og43szq) or [OpenShift](https://dt-url.net/7l43xtp).\n",
                    "secret": true
                },
                "certificateCheckEnabled": {
                    "type": "boolean",
                    "description": "Require valid certificates for communication with API server (recommended)\n"
                },
                "cloudApplicationPipelineEnabled": {
                    "type": "boolean",
                    "description": "Monitor Kubernetes namespaces, services, workloads, and pods\n",
                    "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_k8s_monitoring` to configure this field."
                },
                "clusterId": {
                    "type": "string",
                    "description": "Unique ID of the cluster, the containerized ActiveGate is deployed to. Defaults to the UUID of the kube-system namespace. The cluster ID of containerized ActiveGates is shown on the Deployment status screen.\n"
                },
                "clusterIdEnabled": {
                    "type": "boolean",
                    "description": "For more information on local Kubernetes API monitoring, see the [documentation](https://dt-url.net/6q62uep).\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "endpointUrl": {
                    "type": "string",
                    "description": "Get the API URL for [Kubernetes](https://dt-url.net/kz23snj) or [OpenShift](https://dt-url.net/d623xgw).\n"
                },
                "eventPatterns": {
                    "$ref": "#/types/dynatrace:index/KubernetesEventPatterns:KubernetesEventPatterns",
                    "description": "Define Kubernetes event filters to ingest events into your environment. For more details, see the [documentation](https://dt-url.net/2201p0u).\n",
                    "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_k8s_monitoring` to configure this field."
                },
                "eventProcessingActive": {
                    "type": "boolean",
                    "description": "All events are monitored by default unless event filters are specified.\n",
                    "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_k8s_monitoring` to configure this field."
                },
                "filterEvents": {
                    "type": "boolean",
                    "description": "Include only events specified by Events Field Selectors\n",
                    "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_k8s_monitoring` to configure this field."
                },
                "hostnameVerificationEnabled": {
                    "type": "boolean",
                    "description": "Verify hostname in certificate against Kubernetes API URL\n"
                },
                "includeAllFdiEvents": {
                    "type": "boolean",
                    "description": "For a list of included events, see the [documentation](https://dt-url.net/l61d02no).\n",
                    "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_k8s_monitoring` to configure this field."
                },
                "label": {
                    "type": "string",
                    "description": "Field selector name\n"
                },
                "openMetricsBuiltinEnabled": {
                    "type": "boolean",
                    "description": "The workload resource metrics are based on a subset of cAdvisor metrics. Depending on your Kubernetes cluster size, this\nmay increase the CPU/memory resource consumption of your ActiveGate.\n",
                    "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_k8s_monitoring` to configure this field."
                },
                "openMetricsPipelineEnabled": {
                    "type": "boolean",
                    "description": "For annotation guidance, see the [documentation](https://dt-url.net/g42i0ppw).\n",
                    "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_k8s_monitoring` to configure this field."
                },
                "pvcMonitoringEnabled": {
                    "type": "boolean",
                    "description": "To enable dashboards and alerts, add the [Kubernetes persistent volume\nclaims](ui/hub/ext/com.dynatrace.extension.kubernetes-pvc) extension to your environment.\n",
                    "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_k8s_monitoring` to configure this field."
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (KUBERNETES_CLUSTER)\n"
                }
            },
            "required": [
                "clusterIdEnabled",
                "enabled",
                "label"
            ],
            "inputProperties": {
                "activeGateGroup": {
                    "type": "string",
                    "description": "ActiveGate Group\n"
                },
                "authToken": {
                    "type": "string",
                    "description": "Create a bearer token for [Kubernetes](https://dt-url.net/og43szq) or [OpenShift](https://dt-url.net/7l43xtp).\n",
                    "secret": true
                },
                "certificateCheckEnabled": {
                    "type": "boolean",
                    "description": "Require valid certificates for communication with API server (recommended)\n"
                },
                "cloudApplicationPipelineEnabled": {
                    "type": "boolean",
                    "description": "Monitor Kubernetes namespaces, services, workloads, and pods\n",
                    "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_k8s_monitoring` to configure this field."
                },
                "clusterId": {
                    "type": "string",
                    "description": "Unique ID of the cluster, the containerized ActiveGate is deployed to. Defaults to the UUID of the kube-system namespace. The cluster ID of containerized ActiveGates is shown on the Deployment status screen.\n"
                },
                "clusterIdEnabled": {
                    "type": "boolean",
                    "description": "For more information on local Kubernetes API monitoring, see the [documentation](https://dt-url.net/6q62uep).\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "endpointUrl": {
                    "type": "string",
                    "description": "Get the API URL for [Kubernetes](https://dt-url.net/kz23snj) or [OpenShift](https://dt-url.net/d623xgw).\n"
                },
                "eventPatterns": {
                    "$ref": "#/types/dynatrace:index/KubernetesEventPatterns:KubernetesEventPatterns",
                    "description": "Define Kubernetes event filters to ingest events into your environment. For more details, see the [documentation](https://dt-url.net/2201p0u).\n",
                    "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_k8s_monitoring` to configure this field."
                },
                "eventProcessingActive": {
                    "type": "boolean",
                    "description": "All events are monitored by default unless event filters are specified.\n",
                    "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_k8s_monitoring` to configure this field."
                },
                "filterEvents": {
                    "type": "boolean",
                    "description": "Include only events specified by Events Field Selectors\n",
                    "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_k8s_monitoring` to configure this field."
                },
                "hostnameVerificationEnabled": {
                    "type": "boolean",
                    "description": "Verify hostname in certificate against Kubernetes API URL\n"
                },
                "includeAllFdiEvents": {
                    "type": "boolean",
                    "description": "For a list of included events, see the [documentation](https://dt-url.net/l61d02no).\n",
                    "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_k8s_monitoring` to configure this field."
                },
                "label": {
                    "type": "string",
                    "description": "Field selector name\n"
                },
                "openMetricsBuiltinEnabled": {
                    "type": "boolean",
                    "description": "The workload resource metrics are based on a subset of cAdvisor metrics. Depending on your Kubernetes cluster size, this\nmay increase the CPU/memory resource consumption of your ActiveGate.\n",
                    "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_k8s_monitoring` to configure this field."
                },
                "openMetricsPipelineEnabled": {
                    "type": "boolean",
                    "description": "For annotation guidance, see the [documentation](https://dt-url.net/g42i0ppw).\n",
                    "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_k8s_monitoring` to configure this field."
                },
                "pvcMonitoringEnabled": {
                    "type": "boolean",
                    "description": "To enable dashboards and alerts, add the [Kubernetes persistent volume\nclaims](ui/hub/ext/com.dynatrace.extension.kubernetes-pvc) extension to your environment.\n",
                    "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_k8s_monitoring` to configure this field."
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (KUBERNETES_CLUSTER)\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterIdEnabled",
                "enabled",
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Kubernetes resources.\n",
                "properties": {
                    "activeGateGroup": {
                        "type": "string",
                        "description": "ActiveGate Group\n"
                    },
                    "authToken": {
                        "type": "string",
                        "description": "Create a bearer token for [Kubernetes](https://dt-url.net/og43szq) or [OpenShift](https://dt-url.net/7l43xtp).\n",
                        "secret": true
                    },
                    "certificateCheckEnabled": {
                        "type": "boolean",
                        "description": "Require valid certificates for communication with API server (recommended)\n"
                    },
                    "cloudApplicationPipelineEnabled": {
                        "type": "boolean",
                        "description": "Monitor Kubernetes namespaces, services, workloads, and pods\n",
                        "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_k8s_monitoring` to configure this field."
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "Unique ID of the cluster, the containerized ActiveGate is deployed to. Defaults to the UUID of the kube-system namespace. The cluster ID of containerized ActiveGates is shown on the Deployment status screen.\n"
                    },
                    "clusterIdEnabled": {
                        "type": "boolean",
                        "description": "For more information on local Kubernetes API monitoring, see the [documentation](https://dt-url.net/6q62uep).\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "endpointUrl": {
                        "type": "string",
                        "description": "Get the API URL for [Kubernetes](https://dt-url.net/kz23snj) or [OpenShift](https://dt-url.net/d623xgw).\n"
                    },
                    "eventPatterns": {
                        "$ref": "#/types/dynatrace:index/KubernetesEventPatterns:KubernetesEventPatterns",
                        "description": "Define Kubernetes event filters to ingest events into your environment. For more details, see the [documentation](https://dt-url.net/2201p0u).\n",
                        "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_k8s_monitoring` to configure this field."
                    },
                    "eventProcessingActive": {
                        "type": "boolean",
                        "description": "All events are monitored by default unless event filters are specified.\n",
                        "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_k8s_monitoring` to configure this field."
                    },
                    "filterEvents": {
                        "type": "boolean",
                        "description": "Include only events specified by Events Field Selectors\n",
                        "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_k8s_monitoring` to configure this field."
                    },
                    "hostnameVerificationEnabled": {
                        "type": "boolean",
                        "description": "Verify hostname in certificate against Kubernetes API URL\n"
                    },
                    "includeAllFdiEvents": {
                        "type": "boolean",
                        "description": "For a list of included events, see the [documentation](https://dt-url.net/l61d02no).\n",
                        "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_k8s_monitoring` to configure this field."
                    },
                    "label": {
                        "type": "string",
                        "description": "Field selector name\n"
                    },
                    "openMetricsBuiltinEnabled": {
                        "type": "boolean",
                        "description": "The workload resource metrics are based on a subset of cAdvisor metrics. Depending on your Kubernetes cluster size, this\nmay increase the CPU/memory resource consumption of your ActiveGate.\n",
                        "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_k8s_monitoring` to configure this field."
                    },
                    "openMetricsPipelineEnabled": {
                        "type": "boolean",
                        "description": "For annotation guidance, see the [documentation](https://dt-url.net/g42i0ppw).\n",
                        "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_k8s_monitoring` to configure this field."
                    },
                    "pvcMonitoringEnabled": {
                        "type": "boolean",
                        "description": "To enable dashboards and alerts, add the [Kubernetes persistent volume\nclaims](ui/hub/ext/com.dynatrace.extension.kubernetes-pvc) extension to your environment.\n",
                        "deprecationMessage": "This field has been moved to a new schema, please utilize the resource `dynatrace_k8s_monitoring` to configure this field."
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (KUBERNETES_CLUSTER)\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/kubernetesApp:KubernetesApp": {
            "properties": {
                "kubernetesAppOptions": {
                    "$ref": "#/types/dynatrace:index/KubernetesAppKubernetesAppOptions:KubernetesAppKubernetesAppOptions",
                    "description": "no documentation available\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.\n"
                }
            },
            "required": [
                "kubernetesAppOptions"
            ],
            "inputProperties": {
                "kubernetesAppOptions": {
                    "$ref": "#/types/dynatrace:index/KubernetesAppKubernetesAppOptions:KubernetesAppKubernetesAppOptions",
                    "description": "no documentation available\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.\n"
                }
            },
            "requiredInputs": [
                "kubernetesAppOptions"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KubernetesApp resources.\n",
                "properties": {
                    "kubernetesAppOptions": {
                        "$ref": "#/types/dynatrace:index/KubernetesAppKubernetesAppOptions:KubernetesAppKubernetesAppOptions",
                        "description": "no documentation available\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/limitOutboundConnections:LimitOutboundConnections": {
            "properties": {
                "allowedOutboundConnections": {
                    "$ref": "#/types/dynatrace:index/LimitOutboundConnectionsAllowedOutboundConnections:LimitOutboundConnectionsAllowedOutboundConnections",
                    "description": "no documentation available\n"
                }
            },
            "required": [
                "allowedOutboundConnections"
            ],
            "inputProperties": {
                "allowedOutboundConnections": {
                    "$ref": "#/types/dynatrace:index/LimitOutboundConnectionsAllowedOutboundConnections:LimitOutboundConnectionsAllowedOutboundConnections",
                    "description": "no documentation available\n"
                }
            },
            "requiredInputs": [
                "allowedOutboundConnections"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LimitOutboundConnections resources.\n",
                "properties": {
                    "allowedOutboundConnections": {
                        "$ref": "#/types/dynatrace:index/LimitOutboundConnectionsAllowedOutboundConnections:LimitOutboundConnectionsAllowedOutboundConnections",
                        "description": "no documentation available\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/logBuckets:LogBuckets": {
            "properties": {
                "bucketName": {
                    "type": "string",
                    "description": "A 'bucket' is the length of time your logs will be stored. Select the bucket that's best for you.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "matcher": {
                    "type": "string",
                    "description": "Matcher (DQL)\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Rule name\n"
                }
            },
            "required": [
                "bucketName",
                "enabled",
                "insertAfter",
                "matcher",
                "ruleName"
            ],
            "inputProperties": {
                "bucketName": {
                    "type": "string",
                    "description": "A 'bucket' is the length of time your logs will be stored. Select the bucket that's best for you.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "matcher": {
                    "type": "string",
                    "description": "Matcher (DQL)\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Rule name\n"
                }
            },
            "requiredInputs": [
                "bucketName",
                "enabled",
                "matcher",
                "ruleName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogBuckets resources.\n",
                "properties": {
                    "bucketName": {
                        "type": "string",
                        "description": "A 'bucket' is the length of time your logs will be stored. Select the bucket that's best for you.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "matcher": {
                        "type": "string",
                        "description": "Matcher (DQL)\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "Rule name\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/logCustomAttribute:LogCustomAttribute": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The attribute key is case insensitive in log data ingestion.\n"
                },
                "sidebar": {
                    "type": "boolean",
                    "description": "Show attribute values in side bar\n"
                }
            },
            "required": [
                "key",
                "sidebar"
            ],
            "inputProperties": {
                "key": {
                    "type": "string",
                    "description": "The attribute key is case insensitive in log data ingestion.\n",
                    "willReplaceOnChanges": true
                },
                "sidebar": {
                    "type": "boolean",
                    "description": "Show attribute values in side bar\n"
                }
            },
            "requiredInputs": [
                "key",
                "sidebar"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogCustomAttribute resources.\n",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "The attribute key is case insensitive in log data ingestion.\n",
                        "willReplaceOnChanges": true
                    },
                    "sidebar": {
                        "type": "boolean",
                        "description": "Show attribute values in side bar\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/logCustomSource:LogCustomSource": {
            "properties": {
                "context": {
                    "$ref": "#/types/dynatrace:index/LogCustomSourceContext:LogCustomSourceContext",
                    "description": "Define Custom Log Source only within context if provided\n"
                },
                "customLogSource": {
                    "$ref": "#/types/dynatrace:index/LogCustomSourceCustomLogSource:LogCustomSourceCustomLogSource",
                    "description": "no documentation available\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n"
                }
            },
            "required": [
                "customLogSource",
                "enabled",
                "name"
            ],
            "inputProperties": {
                "context": {
                    "$ref": "#/types/dynatrace:index/LogCustomSourceContext:LogCustomSourceContext",
                    "description": "Define Custom Log Source only within context if provided\n"
                },
                "customLogSource": {
                    "$ref": "#/types/dynatrace:index/LogCustomSourceCustomLogSource:LogCustomSourceCustomLogSource",
                    "description": "no documentation available\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "customLogSource",
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogCustomSource resources.\n",
                "properties": {
                    "context": {
                        "$ref": "#/types/dynatrace:index/LogCustomSourceContext:LogCustomSourceContext",
                        "description": "Define Custom Log Source only within context if provided\n"
                    },
                    "customLogSource": {
                        "$ref": "#/types/dynatrace:index/LogCustomSourceCustomLogSource:LogCustomSourceCustomLogSource",
                        "description": "no documentation available\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/logEvents:LogEvents": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "eventTemplate": {
                    "$ref": "#/types/dynatrace:index/LogEventsEventTemplate:LogEventsEventTemplate",
                    "description": "Event template\n"
                },
                "query": {
                    "type": "string",
                    "description": "Log query\n"
                },
                "summary": {
                    "type": "string",
                    "description": "The textual summary of the log event entry\n"
                }
            },
            "required": [
                "enabled",
                "eventTemplate",
                "query",
                "summary"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "eventTemplate": {
                    "$ref": "#/types/dynatrace:index/LogEventsEventTemplate:LogEventsEventTemplate",
                    "description": "Event template\n"
                },
                "query": {
                    "type": "string",
                    "description": "Log query\n"
                },
                "summary": {
                    "type": "string",
                    "description": "The textual summary of the log event entry\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "eventTemplate",
                "query",
                "summary"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogEvents resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "eventTemplate": {
                        "$ref": "#/types/dynatrace:index/LogEventsEventTemplate:LogEventsEventTemplate",
                        "description": "Event template\n"
                    },
                    "query": {
                        "type": "string",
                        "description": "Log query\n"
                    },
                    "summary": {
                        "type": "string",
                        "description": "The textual summary of the log event entry\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/logGrail:LogGrail": {
            "properties": {
                "activated": {
                    "type": "boolean",
                    "description": "Activate logs powered by Grail.\n"
                },
                "parallelIngestPeriod": {
                    "type": "string",
                    "description": "Possible Values: `NONE`, `SEVEN_DAYS`, `THIRTY_FIVE_DAYS`\n"
                }
            },
            "required": [
                "activated",
                "parallelIngestPeriod"
            ],
            "inputProperties": {
                "activated": {
                    "type": "boolean",
                    "description": "Activate logs powered by Grail.\n"
                },
                "parallelIngestPeriod": {
                    "type": "string",
                    "description": "Possible Values: `NONE`, `SEVEN_DAYS`, `THIRTY_FIVE_DAYS`\n"
                }
            },
            "requiredInputs": [
                "activated",
                "parallelIngestPeriod"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogGrail resources.\n",
                "properties": {
                    "activated": {
                        "type": "boolean",
                        "description": "Activate logs powered by Grail.\n"
                    },
                    "parallelIngestPeriod": {
                        "type": "string",
                        "description": "Possible Values: `NONE`, `SEVEN_DAYS`, `THIRTY_FIVE_DAYS`\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/logMetrics:LogMetrics": {
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "To enable splitting on your metric, add desired dimensions.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "key": {
                    "type": "string",
                    "description": "Metric key\n"
                },
                "measure": {
                    "type": "string",
                    "description": "Possible Values: `OCCURRENCE`, `ATTRIBUTE`\n"
                },
                "measureAttribute": {
                    "type": "string",
                    "description": "Attribute\n"
                },
                "query": {
                    "type": "string",
                    "description": "Matcher\n"
                }
            },
            "required": [
                "enabled",
                "key",
                "measure",
                "query"
            ],
            "inputProperties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "To enable splitting on your metric, add desired dimensions.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "key": {
                    "type": "string",
                    "description": "Metric key\n"
                },
                "measure": {
                    "type": "string",
                    "description": "Possible Values: `OCCURRENCE`, `ATTRIBUTE`\n"
                },
                "measureAttribute": {
                    "type": "string",
                    "description": "Attribute\n"
                },
                "query": {
                    "type": "string",
                    "description": "Matcher\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "key",
                "measure",
                "query"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogMetrics resources.\n",
                "properties": {
                    "dimensions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "To enable splitting on your metric, add desired dimensions.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "Metric key\n"
                    },
                    "measure": {
                        "type": "string",
                        "description": "Possible Values: `OCCURRENCE`, `ATTRIBUTE`\n"
                    },
                    "measureAttribute": {
                        "type": "string",
                        "description": "Attribute\n"
                    },
                    "query": {
                        "type": "string",
                        "description": "Matcher\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/logOneagent:LogOneagent": {
            "properties": {
                "containerTimezoneHeuristicEnabled": {
                    "type": "boolean",
                    "description": "Enables automatic detection of timezone in container's logs if it is not explicitly defined in content or configured.\n"
                },
                "containersLogsDetectionEnabled": {
                    "type": "boolean",
                    "description": "Allows detection of log messages written to the containerized application's stdout/stderr streams.\n"
                },
                "dateSearchLimitBytes": {
                    "type": "integer",
                    "description": "Defines the number of characters in every log line (starting from the first character in the line) where the timestamp is searched.\n"
                },
                "defaultTimezone": {
                    "type": "string",
                    "description": "Default timezone for agent if more specific configurations is not defined.\n"
                },
                "eventLogQueryTimeoutSec": {
                    "type": "integer",
                    "description": "Defines the maximum timeout value, in seconds, for the query extracting Windows Event Logs\n"
                },
                "iisdetectionEnabled": {
                    "type": "boolean",
                    "description": "Allows detection of logs and event logs written by IIS server.\n"
                },
                "logScannerLinuxNfsEnabled": {
                    "type": "boolean",
                    "description": "Allows detection of logs written to mounted network storage drives.\n"
                },
                "maxLgisPerEntityCount": {
                    "type": "integer",
                    "description": "Defines the maximum number of log group instances per entity after which, the new automatic ones wouldn't be added.\n"
                },
                "minBinaryDetectionLimitBytes": {
                    "type": "integer",
                    "description": "Defines the minimum number of bytes in log file required for binary detection.\n"
                },
                "monitorOwnLogsEnabled": {
                    "type": "boolean",
                    "description": "Enabling this option may affect your licensing costs. For more details, see [documentation](https://dt-url.net/4l02yi8).\n"
                },
                "openLogFilesDetectionEnabled": {
                    "type": "boolean",
                    "description": "Automatically detect logs written by important processes. For more details, check our [documentation](https://dt-url.net/7v02z76)\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n"
                },
                "severityDetectionLimitBytes": {
                    "type": "integer",
                    "description": "Defines the number of characters in every log line (starting from the first character in the line) where severity is searched.\n"
                },
                "severityDetectionLinesLimit": {
                    "type": "integer",
                    "description": "Defines the number of the first lines of every log entry where severity is searched.\n"
                },
                "systemLogsDetectionEnabled": {
                    "type": "boolean",
                    "description": "Linux: syslog, message log Windows: system, application, security event logs\n"
                }
            },
            "required": [
                "containerTimezoneHeuristicEnabled",
                "containersLogsDetectionEnabled",
                "dateSearchLimitBytes",
                "defaultTimezone",
                "eventLogQueryTimeoutSec",
                "iisdetectionEnabled",
                "logScannerLinuxNfsEnabled",
                "maxLgisPerEntityCount",
                "minBinaryDetectionLimitBytes",
                "monitorOwnLogsEnabled",
                "openLogFilesDetectionEnabled",
                "severityDetectionLimitBytes",
                "severityDetectionLinesLimit",
                "systemLogsDetectionEnabled"
            ],
            "inputProperties": {
                "containerTimezoneHeuristicEnabled": {
                    "type": "boolean",
                    "description": "Enables automatic detection of timezone in container's logs if it is not explicitly defined in content or configured.\n"
                },
                "containersLogsDetectionEnabled": {
                    "type": "boolean",
                    "description": "Allows detection of log messages written to the containerized application's stdout/stderr streams.\n"
                },
                "dateSearchLimitBytes": {
                    "type": "integer",
                    "description": "Defines the number of characters in every log line (starting from the first character in the line) where the timestamp is searched.\n"
                },
                "defaultTimezone": {
                    "type": "string",
                    "description": "Default timezone for agent if more specific configurations is not defined.\n"
                },
                "eventLogQueryTimeoutSec": {
                    "type": "integer",
                    "description": "Defines the maximum timeout value, in seconds, for the query extracting Windows Event Logs\n"
                },
                "iisdetectionEnabled": {
                    "type": "boolean",
                    "description": "Allows detection of logs and event logs written by IIS server.\n"
                },
                "logScannerLinuxNfsEnabled": {
                    "type": "boolean",
                    "description": "Allows detection of logs written to mounted network storage drives.\n"
                },
                "maxLgisPerEntityCount": {
                    "type": "integer",
                    "description": "Defines the maximum number of log group instances per entity after which, the new automatic ones wouldn't be added.\n"
                },
                "minBinaryDetectionLimitBytes": {
                    "type": "integer",
                    "description": "Defines the minimum number of bytes in log file required for binary detection.\n"
                },
                "monitorOwnLogsEnabled": {
                    "type": "boolean",
                    "description": "Enabling this option may affect your licensing costs. For more details, see [documentation](https://dt-url.net/4l02yi8).\n"
                },
                "openLogFilesDetectionEnabled": {
                    "type": "boolean",
                    "description": "Automatically detect logs written by important processes. For more details, check our [documentation](https://dt-url.net/7v02z76)\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                },
                "severityDetectionLimitBytes": {
                    "type": "integer",
                    "description": "Defines the number of characters in every log line (starting from the first character in the line) where severity is searched.\n"
                },
                "severityDetectionLinesLimit": {
                    "type": "integer",
                    "description": "Defines the number of the first lines of every log entry where severity is searched.\n"
                },
                "systemLogsDetectionEnabled": {
                    "type": "boolean",
                    "description": "Linux: syslog, message log Windows: system, application, security event logs\n"
                }
            },
            "requiredInputs": [
                "containerTimezoneHeuristicEnabled",
                "containersLogsDetectionEnabled",
                "dateSearchLimitBytes",
                "defaultTimezone",
                "eventLogQueryTimeoutSec",
                "iisdetectionEnabled",
                "logScannerLinuxNfsEnabled",
                "maxLgisPerEntityCount",
                "minBinaryDetectionLimitBytes",
                "monitorOwnLogsEnabled",
                "openLogFilesDetectionEnabled",
                "severityDetectionLimitBytes",
                "severityDetectionLinesLimit",
                "systemLogsDetectionEnabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogOneagent resources.\n",
                "properties": {
                    "containerTimezoneHeuristicEnabled": {
                        "type": "boolean",
                        "description": "Enables automatic detection of timezone in container's logs if it is not explicitly defined in content or configured.\n"
                    },
                    "containersLogsDetectionEnabled": {
                        "type": "boolean",
                        "description": "Allows detection of log messages written to the containerized application's stdout/stderr streams.\n"
                    },
                    "dateSearchLimitBytes": {
                        "type": "integer",
                        "description": "Defines the number of characters in every log line (starting from the first character in the line) where the timestamp is searched.\n"
                    },
                    "defaultTimezone": {
                        "type": "string",
                        "description": "Default timezone for agent if more specific configurations is not defined.\n"
                    },
                    "eventLogQueryTimeoutSec": {
                        "type": "integer",
                        "description": "Defines the maximum timeout value, in seconds, for the query extracting Windows Event Logs\n"
                    },
                    "iisdetectionEnabled": {
                        "type": "boolean",
                        "description": "Allows detection of logs and event logs written by IIS server.\n"
                    },
                    "logScannerLinuxNfsEnabled": {
                        "type": "boolean",
                        "description": "Allows detection of logs written to mounted network storage drives.\n"
                    },
                    "maxLgisPerEntityCount": {
                        "type": "integer",
                        "description": "Defines the maximum number of log group instances per entity after which, the new automatic ones wouldn't be added.\n"
                    },
                    "minBinaryDetectionLimitBytes": {
                        "type": "integer",
                        "description": "Defines the minimum number of bytes in log file required for binary detection.\n"
                    },
                    "monitorOwnLogsEnabled": {
                        "type": "boolean",
                        "description": "Enabling this option may affect your licensing costs. For more details, see [documentation](https://dt-url.net/4l02yi8).\n"
                    },
                    "openLogFilesDetectionEnabled": {
                        "type": "boolean",
                        "description": "Automatically detect logs written by important processes. For more details, check our [documentation](https://dt-url.net/7v02z76)\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    },
                    "severityDetectionLimitBytes": {
                        "type": "integer",
                        "description": "Defines the number of characters in every log line (starting from the first character in the line) where severity is searched.\n"
                    },
                    "severityDetectionLinesLimit": {
                        "type": "integer",
                        "description": "Defines the number of the first lines of every log entry where severity is searched.\n"
                    },
                    "systemLogsDetectionEnabled": {
                        "type": "boolean",
                        "description": "Linux: syslog, message log Windows: system, application, security event logs\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/logProcessing:LogProcessing": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this\ninstance regarding order. If not specified when creating the setting will be added to the end of the list. If not\nspecified during update the order will remain untouched\n"
                },
                "processorDefinition": {
                    "$ref": "#/types/dynatrace:index/LogProcessingProcessorDefinition:LogProcessingProcessorDefinition",
                    "description": "## Processor definition Add a rule definition using our syntax. [In our documentation](https://dt-url.net/8k03xm2) you\nwill find instructions and application [examples](https://dt-url.net/m24305t).\n"
                },
                "query": {
                    "type": "string",
                    "description": "Matcher\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Rule name\n"
                },
                "ruleTesting": {
                    "$ref": "#/types/dynatrace:index/LogProcessingRuleTesting:LogProcessingRuleTesting",
                    "description": "## Rule testing ### 1. Paste a log / JSON sample\n"
                }
            },
            "required": [
                "enabled",
                "insertAfter",
                "processorDefinition",
                "query",
                "ruleName",
                "ruleTesting"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this\ninstance regarding order. If not specified when creating the setting will be added to the end of the list. If not\nspecified during update the order will remain untouched\n"
                },
                "processorDefinition": {
                    "$ref": "#/types/dynatrace:index/LogProcessingProcessorDefinition:LogProcessingProcessorDefinition",
                    "description": "## Processor definition Add a rule definition using our syntax. [In our documentation](https://dt-url.net/8k03xm2) you\nwill find instructions and application [examples](https://dt-url.net/m24305t).\n"
                },
                "query": {
                    "type": "string",
                    "description": "Matcher\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "Rule name\n"
                },
                "ruleTesting": {
                    "$ref": "#/types/dynatrace:index/LogProcessingRuleTesting:LogProcessingRuleTesting",
                    "description": "## Rule testing ### 1. Paste a log / JSON sample\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "processorDefinition",
                "query",
                "ruleName",
                "ruleTesting"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogProcessing resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this\ninstance regarding order. If not specified when creating the setting will be added to the end of the list. If not\nspecified during update the order will remain untouched\n"
                    },
                    "processorDefinition": {
                        "$ref": "#/types/dynatrace:index/LogProcessingProcessorDefinition:LogProcessingProcessorDefinition",
                        "description": "## Processor definition Add a rule definition using our syntax. [In our documentation](https://dt-url.net/8k03xm2) you\nwill find instructions and application [examples](https://dt-url.net/m24305t).\n"
                    },
                    "query": {
                        "type": "string",
                        "description": "Matcher\n"
                    },
                    "ruleName": {
                        "type": "string",
                        "description": "Rule name\n"
                    },
                    "ruleTesting": {
                        "$ref": "#/types/dynatrace:index/LogProcessingRuleTesting:LogProcessingRuleTesting",
                        "description": "## Rule testing ### 1. Paste a log / JSON sample\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/logSecurityContext:LogSecurityContext": {
            "properties": {
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "securityContextRule": {
                    "$ref": "#/types/dynatrace:index/LogSecurityContextSecurityContextRule:LogSecurityContextSecurityContextRule",
                    "description": "no documentation available\n"
                }
            },
            "required": [
                "insertAfter",
                "securityContextRule"
            ],
            "inputProperties": {
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "securityContextRule": {
                    "$ref": "#/types/dynatrace:index/LogSecurityContextSecurityContextRule:LogSecurityContextSecurityContextRule",
                    "description": "no documentation available\n"
                }
            },
            "requiredInputs": [
                "securityContextRule"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogSecurityContext resources.\n",
                "properties": {
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "securityContextRule": {
                        "$ref": "#/types/dynatrace:index/LogSecurityContextSecurityContextRule:LogSecurityContextSecurityContextRule",
                        "description": "no documentation available\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/logSensitiveDataMasking:LogSensitiveDataMasking": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "masking": {
                    "$ref": "#/types/dynatrace:index/LogSensitiveDataMaskingMasking:LogSensitiveDataMaskingMasking",
                    "description": "no documentation available\n"
                },
                "matchers": {
                    "$ref": "#/types/dynatrace:index/LogSensitiveDataMaskingMatchers:LogSensitiveDataMaskingMatchers",
                    "description": "no documentation available\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST-########, HOST_GROUP-########). Omit this property if you want to cover the whole environment.\n"
                }
            },
            "required": [
                "enabled",
                "insertAfter",
                "masking",
                "name"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "masking": {
                    "$ref": "#/types/dynatrace:index/LogSensitiveDataMaskingMasking:LogSensitiveDataMaskingMasking",
                    "description": "no documentation available\n"
                },
                "matchers": {
                    "$ref": "#/types/dynatrace:index/LogSensitiveDataMaskingMatchers:LogSensitiveDataMaskingMatchers",
                    "description": "no documentation available\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST-########, HOST_GROUP-########). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enabled",
                "masking"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogSensitiveDataMasking resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "masking": {
                        "$ref": "#/types/dynatrace:index/LogSensitiveDataMaskingMasking:LogSensitiveDataMaskingMasking",
                        "description": "no documentation available\n"
                    },
                    "matchers": {
                        "$ref": "#/types/dynatrace:index/LogSensitiveDataMaskingMatchers:LogSensitiveDataMaskingMatchers",
                        "description": "no documentation available\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (HOST-########, HOST_GROUP-########). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/logStorage:LogStorage": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "matchers": {
                    "$ref": "#/types/dynatrace:index/LogStorageMatchers:LogStorageMatchers",
                    "description": "no documentation available\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n"
                },
                "sendToStorage": {
                    "type": "boolean",
                    "description": "If `true` matching logs will be included in storage. If `false` matching logs will be excluded from storage.\n"
                }
            },
            "required": [
                "enabled",
                "insertAfter",
                "name",
                "sendToStorage"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "matchers": {
                    "$ref": "#/types/dynatrace:index/LogStorageMatchers:LogStorageMatchers",
                    "description": "no documentation available\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                },
                "sendToStorage": {
                    "type": "boolean",
                    "description": "If `true` matching logs will be included in storage. If `false` matching logs will be excluded from storage.\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "sendToStorage"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogStorage resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "matchers": {
                        "$ref": "#/types/dynatrace:index/LogStorageMatchers:LogStorageMatchers",
                        "description": "no documentation available\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    },
                    "sendToStorage": {
                        "type": "boolean",
                        "description": "If `true` matching logs will be included in storage. If `false` matching logs will be excluded from storage.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/logTimestamp:LogTimestamp": {
            "properties": {
                "configItemTitle": {
                    "type": "string",
                    "description": "Name\n"
                },
                "dateSearchLimit": {
                    "type": "integer",
                    "description": "(v1.275) Defines the number of characters in every log line (starting from the first character in the line) where the timestamp is searched.\n"
                },
                "dateTimePattern": {
                    "type": "string",
                    "description": "Date-time pattern\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "matchers": {
                    "$ref": "#/types/dynatrace:index/LogTimestampMatchers:LogTimestampMatchers",
                    "description": "no documentation available\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "Timezone\n"
                }
            },
            "required": [
                "configItemTitle",
                "dateTimePattern",
                "enabled",
                "insertAfter",
                "timezone"
            ],
            "inputProperties": {
                "configItemTitle": {
                    "type": "string",
                    "description": "Name\n"
                },
                "dateSearchLimit": {
                    "type": "integer",
                    "description": "(v1.275) Defines the number of characters in every log line (starting from the first character in the line) where the timestamp is searched.\n"
                },
                "dateTimePattern": {
                    "type": "string",
                    "description": "Date-time pattern\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "matchers": {
                    "$ref": "#/types/dynatrace:index/LogTimestampMatchers:LogTimestampMatchers",
                    "description": "no documentation available\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                },
                "timezone": {
                    "type": "string",
                    "description": "Timezone\n"
                }
            },
            "requiredInputs": [
                "configItemTitle",
                "dateTimePattern",
                "enabled",
                "timezone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogTimestamp resources.\n",
                "properties": {
                    "configItemTitle": {
                        "type": "string",
                        "description": "Name\n"
                    },
                    "dateSearchLimit": {
                        "type": "integer",
                        "description": "(v1.275) Defines the number of characters in every log line (starting from the first character in the line) where the timestamp is searched.\n"
                    },
                    "dateTimePattern": {
                        "type": "string",
                        "description": "Date-time pattern\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "matchers": {
                        "$ref": "#/types/dynatrace:index/LogTimestampMatchers:LogTimestampMatchers",
                        "description": "no documentation available\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    },
                    "timezone": {
                        "type": "string",
                        "description": "Timezone\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/mainframeTransactionMonitoring:MainframeTransactionMonitoring": {
            "properties": {
                "groupCicsRegions": {
                    "type": "boolean",
                    "description": "If enabled, CICS regions belonging to the same CICSPlex will be grouped into a single process group. If disabled, a process group will be created for each CICS region.\n"
                },
                "groupImsRegions": {
                    "type": "boolean",
                    "description": "If enabled, IMS regions belonging to the same subsystem will be grouped into a single process group. If disabled, a process group will be created for each IMS region.\n"
                },
                "monitorAllCtgProtocols": {
                    "type": "boolean",
                    "description": "If enabled, the CICS Transaction Gateway sensor will trace all EXCI requests including those that are using the TCP/IP or SNA protocol.\n"
                },
                "monitorAllIncomingWebRequests": {
                    "type": "boolean",
                    "description": "Dynatrace automatically traces incoming web requests when they are called by already-monitored services. Enable this setting to monitor all incoming web requests. We recommend enabling it only over a short period of time.\n"
                },
                "nodeLimit": {
                    "type": "integer",
                    "description": "We recommend the default limit of 500 nodes. The value 0 means unlimited number of nodes.\n"
                },
                "zosCicsServiceDetectionUsesTransactionId": {
                    "type": "boolean",
                    "description": "If enabled, a CICS service will be created for each monitored transaction ID within a process group. If disabled, a CICS service will be created for each monitored CICS region within a process group. We recommend enabling it only when the CICS regions are grouped by their CICSPlex.\n"
                },
                "zosImsServiceDetectionUsesTransactionId": {
                    "type": "boolean",
                    "description": "If enabled, an IMS service will be created for each monitored transaction ID within a process group. If disabled, an IMS service will be created for each monitored IMS region within a process group. We recommend enabling it only when the IMS regions are grouped by their subsystem.\n"
                }
            },
            "required": [
                "groupCicsRegions",
                "groupImsRegions",
                "monitorAllCtgProtocols",
                "monitorAllIncomingWebRequests",
                "nodeLimit",
                "zosCicsServiceDetectionUsesTransactionId",
                "zosImsServiceDetectionUsesTransactionId"
            ],
            "inputProperties": {
                "groupCicsRegions": {
                    "type": "boolean",
                    "description": "If enabled, CICS regions belonging to the same CICSPlex will be grouped into a single process group. If disabled, a process group will be created for each CICS region.\n"
                },
                "groupImsRegions": {
                    "type": "boolean",
                    "description": "If enabled, IMS regions belonging to the same subsystem will be grouped into a single process group. If disabled, a process group will be created for each IMS region.\n"
                },
                "monitorAllCtgProtocols": {
                    "type": "boolean",
                    "description": "If enabled, the CICS Transaction Gateway sensor will trace all EXCI requests including those that are using the TCP/IP or SNA protocol.\n"
                },
                "monitorAllIncomingWebRequests": {
                    "type": "boolean",
                    "description": "Dynatrace automatically traces incoming web requests when they are called by already-monitored services. Enable this setting to monitor all incoming web requests. We recommend enabling it only over a short period of time.\n"
                },
                "nodeLimit": {
                    "type": "integer",
                    "description": "We recommend the default limit of 500 nodes. The value 0 means unlimited number of nodes.\n"
                },
                "zosCicsServiceDetectionUsesTransactionId": {
                    "type": "boolean",
                    "description": "If enabled, a CICS service will be created for each monitored transaction ID within a process group. If disabled, a CICS service will be created for each monitored CICS region within a process group. We recommend enabling it only when the CICS regions are grouped by their CICSPlex.\n"
                },
                "zosImsServiceDetectionUsesTransactionId": {
                    "type": "boolean",
                    "description": "If enabled, an IMS service will be created for each monitored transaction ID within a process group. If disabled, an IMS service will be created for each monitored IMS region within a process group. We recommend enabling it only when the IMS regions are grouped by their subsystem.\n"
                }
            },
            "requiredInputs": [
                "groupCicsRegions",
                "groupImsRegions",
                "monitorAllCtgProtocols",
                "monitorAllIncomingWebRequests",
                "nodeLimit",
                "zosCicsServiceDetectionUsesTransactionId",
                "zosImsServiceDetectionUsesTransactionId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MainframeTransactionMonitoring resources.\n",
                "properties": {
                    "groupCicsRegions": {
                        "type": "boolean",
                        "description": "If enabled, CICS regions belonging to the same CICSPlex will be grouped into a single process group. If disabled, a process group will be created for each CICS region.\n"
                    },
                    "groupImsRegions": {
                        "type": "boolean",
                        "description": "If enabled, IMS regions belonging to the same subsystem will be grouped into a single process group. If disabled, a process group will be created for each IMS region.\n"
                    },
                    "monitorAllCtgProtocols": {
                        "type": "boolean",
                        "description": "If enabled, the CICS Transaction Gateway sensor will trace all EXCI requests including those that are using the TCP/IP or SNA protocol.\n"
                    },
                    "monitorAllIncomingWebRequests": {
                        "type": "boolean",
                        "description": "Dynatrace automatically traces incoming web requests when they are called by already-monitored services. Enable this setting to monitor all incoming web requests. We recommend enabling it only over a short period of time.\n"
                    },
                    "nodeLimit": {
                        "type": "integer",
                        "description": "We recommend the default limit of 500 nodes. The value 0 means unlimited number of nodes.\n"
                    },
                    "zosCicsServiceDetectionUsesTransactionId": {
                        "type": "boolean",
                        "description": "If enabled, a CICS service will be created for each monitored transaction ID within a process group. If disabled, a CICS service will be created for each monitored CICS region within a process group. We recommend enabling it only when the CICS regions are grouped by their CICSPlex.\n"
                    },
                    "zosImsServiceDetectionUsesTransactionId": {
                        "type": "boolean",
                        "description": "If enabled, an IMS service will be created for each monitored transaction ID within a process group. If disabled, an IMS service will be created for each monitored IMS region within a process group. We recommend enabling it only when the IMS regions are grouped by their subsystem.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/maintenance:Maintenance": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "filters": {
                    "$ref": "#/types/dynatrace:index/MaintenanceFilters:MaintenanceFilters",
                    "description": "## Filters\nAdd filters to limit the scope of maintenance to only select matching entities. If no filter is defined, the maintenance window is valid for the whole environment. Each filter is evaluated separately (**OR**).\n"
                },
                "generalProperties": {
                    "$ref": "#/types/dynatrace:index/MaintenanceGeneralProperties:MaintenanceGeneralProperties",
                    "description": "The general properties of the maintenance window\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of this setting when referred to by the Config REST API V1\n"
                },
                "schedule": {
                    "$ref": "#/types/dynatrace:index/MaintenanceSchedule:MaintenanceSchedule",
                    "description": "The schedule of the maintenance window\n"
                }
            },
            "required": [
                "enabled",
                "generalProperties",
                "legacyId",
                "schedule"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "filters": {
                    "$ref": "#/types/dynatrace:index/MaintenanceFilters:MaintenanceFilters",
                    "description": "## Filters\nAdd filters to limit the scope of maintenance to only select matching entities. If no filter is defined, the maintenance window is valid for the whole environment. Each filter is evaluated separately (**OR**).\n"
                },
                "generalProperties": {
                    "$ref": "#/types/dynatrace:index/MaintenanceGeneralProperties:MaintenanceGeneralProperties",
                    "description": "The general properties of the maintenance window\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of this setting when referred to by the Config REST API V1\n"
                },
                "schedule": {
                    "$ref": "#/types/dynatrace:index/MaintenanceSchedule:MaintenanceSchedule",
                    "description": "The schedule of the maintenance window\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "generalProperties",
                "schedule"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Maintenance resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "filters": {
                        "$ref": "#/types/dynatrace:index/MaintenanceFilters:MaintenanceFilters",
                        "description": "## Filters\nAdd filters to limit the scope of maintenance to only select matching entities. If no filter is defined, the maintenance window is valid for the whole environment. Each filter is evaluated separately (**OR**).\n"
                    },
                    "generalProperties": {
                        "$ref": "#/types/dynatrace:index/MaintenanceGeneralProperties:MaintenanceGeneralProperties",
                        "description": "The general properties of the maintenance window\n"
                    },
                    "legacyId": {
                        "type": "string",
                        "description": "The ID of this setting when referred to by the Config REST API V1\n"
                    },
                    "schedule": {
                        "$ref": "#/types/dynatrace:index/MaintenanceSchedule:MaintenanceSchedule",
                        "description": "The schedule of the maintenance window\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/maintenanceWindow:MaintenanceWindow": {
            "description": "!\u003e This resource API endpoint has been deprecated, please use dynatrace.Maintenance instead.\n\n\u003e This resource requires the API token scopes **Read configuration** (`ReadConfig`) and **Write configuration** (`WriteConfig`)\n\n## Dynatrace Documentation\n\n- Maintenance windows - https://www.dynatrace.com/support/help/how-to-use-dynatrace/problem-detection-and-analysis/notifications-and-alerting/maintenance-windows\n\n- Maintenance windows API - https://www.dynatrace.com/support/help/dynatrace-api/configuration-api/maintenance-windows-api\n\n## Resource Example Usage\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\n\nconst _name_ = new dynatrace.MaintenanceWindow(\"#name#\", {\n    schedule: {\n        end: \"2021-05-11 14:41\",\n        recurrenceType: \"ONCE\",\n        start: \"2021-05-11 13:41\",\n        zoneId: \"Europe/Vienna\",\n    },\n    scope: {\n        matches: [{\n            tagCombination: \"AND\",\n            tags: [\n                {\n                    context: \"CONTEXTLESS\",\n                    key: \"bggtedgxen\",\n                },\n                {\n                    context: \"CONTEXTLESS\",\n                    key: \"deldel1\",\n                },\n            ],\n        }],\n    },\n    suppressSynthMonExec: true,\n    suppression: \"DONT_DETECT_PROBLEMS\",\n    type: \"PLANNED\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\n\n_name_ = dynatrace.MaintenanceWindow(\"#name#\",\n    schedule=dynatrace.MaintenanceWindowScheduleArgs(\n        end=\"2021-05-11 14:41\",\n        recurrence_type=\"ONCE\",\n        start=\"2021-05-11 13:41\",\n        zone_id=\"Europe/Vienna\",\n    ),\n    scope=dynatrace.MaintenanceWindowScopeArgs(\n        matches=[dynatrace.MaintenanceWindowScopeMatchArgs(\n            tag_combination=\"AND\",\n            tags=[\n                dynatrace.MaintenanceWindowScopeMatchTagArgs(\n                    context=\"CONTEXTLESS\",\n                    key=\"bggtedgxen\",\n                ),\n                dynatrace.MaintenanceWindowScopeMatchTagArgs(\n                    context=\"CONTEXTLESS\",\n                    key=\"deldel1\",\n                ),\n            ],\n        )],\n    ),\n    suppress_synth_mon_exec=True,\n    suppression=\"DONT_DETECT_PROBLEMS\",\n    type=\"PLANNED\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var _name_ = new Dynatrace.MaintenanceWindow(\"#name#\", new()\n    {\n        Schedule = new Dynatrace.Inputs.MaintenanceWindowScheduleArgs\n        {\n            End = \"2021-05-11 14:41\",\n            RecurrenceType = \"ONCE\",\n            Start = \"2021-05-11 13:41\",\n            ZoneId = \"Europe/Vienna\",\n        },\n        Scope = new Dynatrace.Inputs.MaintenanceWindowScopeArgs\n        {\n            Matches = new[]\n            {\n                new Dynatrace.Inputs.MaintenanceWindowScopeMatchArgs\n                {\n                    TagCombination = \"AND\",\n                    Tags = new[]\n                    {\n                        new Dynatrace.Inputs.MaintenanceWindowScopeMatchTagArgs\n                        {\n                            Context = \"CONTEXTLESS\",\n                            Key = \"bggtedgxen\",\n                        },\n                        new Dynatrace.Inputs.MaintenanceWindowScopeMatchTagArgs\n                        {\n                            Context = \"CONTEXTLESS\",\n                            Key = \"deldel1\",\n                        },\n                    },\n                },\n            },\n        },\n        SuppressSynthMonExec = true,\n        Suppression = \"DONT_DETECT_PROBLEMS\",\n        Type = \"PLANNED\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dynatrace.NewMaintenanceWindow(ctx, \"#name#\", \u0026dynatrace.MaintenanceWindowArgs{\n\t\t\tSchedule: \u0026dynatrace.MaintenanceWindowScheduleArgs{\n\t\t\t\tEnd:            pulumi.String(\"2021-05-11 14:41\"),\n\t\t\t\tRecurrenceType: pulumi.String(\"ONCE\"),\n\t\t\t\tStart:          pulumi.String(\"2021-05-11 13:41\"),\n\t\t\t\tZoneId:         pulumi.String(\"Europe/Vienna\"),\n\t\t\t},\n\t\t\tScope: \u0026dynatrace.MaintenanceWindowScopeArgs{\n\t\t\t\tMatches: dynatrace.MaintenanceWindowScopeMatchArray{\n\t\t\t\t\t\u0026dynatrace.MaintenanceWindowScopeMatchArgs{\n\t\t\t\t\t\tTagCombination: pulumi.String(\"AND\"),\n\t\t\t\t\t\tTags: dynatrace.MaintenanceWindowScopeMatchTagArray{\n\t\t\t\t\t\t\t\u0026dynatrace.MaintenanceWindowScopeMatchTagArgs{\n\t\t\t\t\t\t\t\tContext: pulumi.String(\"CONTEXTLESS\"),\n\t\t\t\t\t\t\t\tKey:     pulumi.String(\"bggtedgxen\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\u0026dynatrace.MaintenanceWindowScopeMatchTagArgs{\n\t\t\t\t\t\t\t\tContext: pulumi.String(\"CONTEXTLESS\"),\n\t\t\t\t\t\t\t\tKey:     pulumi.String(\"deldel1\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tSuppressSynthMonExec: pulumi.Bool(true),\n\t\t\tSuppression:          pulumi.String(\"DONT_DETECT_PROBLEMS\"),\n\t\t\tType:                 pulumi.String(\"PLANNED\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.MaintenanceWindow;\nimport com.pulumi.dynatrace.MaintenanceWindowArgs;\nimport com.pulumi.dynatrace.inputs.MaintenanceWindowScheduleArgs;\nimport com.pulumi.dynatrace.inputs.MaintenanceWindowScopeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var _name_ = new MaintenanceWindow(\"#name#\", MaintenanceWindowArgs.builder()        \n            .schedule(MaintenanceWindowScheduleArgs.builder()\n                .end(\"2021-05-11 14:41\")\n                .recurrenceType(\"ONCE\")\n                .start(\"2021-05-11 13:41\")\n                .zoneId(\"Europe/Vienna\")\n                .build())\n            .scope(MaintenanceWindowScopeArgs.builder()\n                .matches(MaintenanceWindowScopeMatchArgs.builder()\n                    .tagCombination(\"AND\")\n                    .tags(                    \n                        MaintenanceWindowScopeMatchTagArgs.builder()\n                            .context(\"CONTEXTLESS\")\n                            .key(\"bggtedgxen\")\n                            .build(),\n                        MaintenanceWindowScopeMatchTagArgs.builder()\n                            .context(\"CONTEXTLESS\")\n                            .key(\"deldel1\")\n                            .build())\n                    .build())\n                .build())\n            .suppressSynthMonExec(true)\n            .suppression(\"DONT_DETECT_PROBLEMS\")\n            .type(\"PLANNED\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  '#name#':\n    type: dynatrace:MaintenanceWindow\n    properties:\n      schedule:\n        end: 2021-05-11 14:41\n        recurrenceType: ONCE\n        start: 2021-05-11 13:41\n        zoneId: Europe/Vienna\n      scope:\n        matches:\n          - tagCombination: AND\n            tags:\n              - context: CONTEXTLESS\n                key: bggtedgxen\n              - context: CONTEXTLESS\n                key: deldel1\n      suppressSynthMonExec: true\n      suppression: DONT_DETECT_PROBLEMS\n      type: PLANNED\n```\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A short description of the maintenance purpose\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The Maintenance Window is enabled or disabled\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the maintenance window, displayed in the UI\n"
                },
                "schedule": {
                    "$ref": "#/types/dynatrace:index/MaintenanceWindowSchedule:MaintenanceWindowSchedule",
                    "description": "The schedule of the maintenance window\n"
                },
                "scope": {
                    "$ref": "#/types/dynatrace:index/MaintenanceWindowScope:MaintenanceWindowScope",
                    "description": "the tiles this Dashboard consist of\n"
                },
                "suppressSynthMonExec": {
                    "type": "boolean",
                    "description": "Suppress execution of synthetic monitors during the maintenance\n"
                },
                "suppression": {
                    "type": "string",
                    "description": "The type of suppression of alerting and problem detection during the maintenance\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the Dynatrace entities (for example, hosts or services) you want to pick up by matching\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "required": [
                "name",
                "suppression",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A short description of the maintenance purpose\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The Maintenance Window is enabled or disabled\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the maintenance window, displayed in the UI\n"
                },
                "schedule": {
                    "$ref": "#/types/dynatrace:index/MaintenanceWindowSchedule:MaintenanceWindowSchedule",
                    "description": "The schedule of the maintenance window\n"
                },
                "scope": {
                    "$ref": "#/types/dynatrace:index/MaintenanceWindowScope:MaintenanceWindowScope",
                    "description": "the tiles this Dashboard consist of\n"
                },
                "suppressSynthMonExec": {
                    "type": "boolean",
                    "description": "Suppress execution of synthetic monitors during the maintenance\n"
                },
                "suppression": {
                    "type": "string",
                    "description": "The type of suppression of alerting and problem detection during the maintenance\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the Dynatrace entities (for example, hosts or services) you want to pick up by matching\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "requiredInputs": [
                "suppression",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MaintenanceWindow resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A short description of the maintenance purpose\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The Maintenance Window is enabled or disabled\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the maintenance window, displayed in the UI\n"
                    },
                    "schedule": {
                        "$ref": "#/types/dynatrace:index/MaintenanceWindowSchedule:MaintenanceWindowSchedule",
                        "description": "The schedule of the maintenance window\n"
                    },
                    "scope": {
                        "$ref": "#/types/dynatrace:index/MaintenanceWindowScope:MaintenanceWindowScope",
                        "description": "the tiles this Dashboard consist of\n"
                    },
                    "suppressSynthMonExec": {
                        "type": "boolean",
                        "description": "Suppress execution of synthetic monitors during the maintenance\n"
                    },
                    "suppression": {
                        "type": "string",
                        "description": "The type of suppression of alerting and problem detection during the maintenance\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the Dynatrace entities (for example, hosts or services) you want to pick up by matching\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/managedBackup:ManagedBackup": {
            "properties": {
                "bandwidthLimitMbits": {
                    "type": "integer",
                    "description": "Cassandra backup bandwidth limit in Mbps\n"
                },
                "cassandraScheduledTime": {
                    "type": "integer",
                    "description": "Hour to start Cassandra backups each day.\n"
                },
                "currentState": {
                    "type": "string",
                    "description": "For internal use: current state of rules in JSON format\n"
                },
                "datacenter": {
                    "type": "string",
                    "description": "Datacenter which will create backups\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Backups are enabled (true) or disabled (false).\n"
                },
                "includeLm20Data": {
                    "type": "boolean",
                    "description": "Include (true) or exclude (false) Log Monitoring v2 data\n"
                },
                "includeRumData": {
                    "type": "boolean",
                    "description": "Include user sessions (true) or GDPR compliance (false)\n"
                },
                "includeTsMetricData": {
                    "type": "boolean",
                    "description": "Include time series metric-data (true) or retain configuration data only (false))\n"
                },
                "maxEsSnapshotsToClean": {
                    "type": "integer",
                    "description": "Max number of Elasticsearch snapshots to clean. Elasticsearch snapshots won't be created anymore if there will be more backups to clean than this value.\n"
                },
                "pauseBackups": {
                    "type": "boolean",
                    "description": "Pauses Elasticsearch and Cassandra backups. In comparison to enable/disable backup, this option does not modify any configuration like Elasticsearch properties.\n"
                },
                "storagePath": {
                    "type": "string",
                    "description": "A full path to the backup archive\n"
                }
            },
            "required": [
                "cassandraScheduledTime",
                "currentState"
            ],
            "inputProperties": {
                "bandwidthLimitMbits": {
                    "type": "integer",
                    "description": "Cassandra backup bandwidth limit in Mbps\n"
                },
                "cassandraScheduledTime": {
                    "type": "integer",
                    "description": "Hour to start Cassandra backups each day.\n"
                },
                "currentState": {
                    "type": "string",
                    "description": "For internal use: current state of rules in JSON format\n"
                },
                "datacenter": {
                    "type": "string",
                    "description": "Datacenter which will create backups\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Backups are enabled (true) or disabled (false).\n"
                },
                "includeLm20Data": {
                    "type": "boolean",
                    "description": "Include (true) or exclude (false) Log Monitoring v2 data\n"
                },
                "includeRumData": {
                    "type": "boolean",
                    "description": "Include user sessions (true) or GDPR compliance (false)\n"
                },
                "includeTsMetricData": {
                    "type": "boolean",
                    "description": "Include time series metric-data (true) or retain configuration data only (false))\n"
                },
                "maxEsSnapshotsToClean": {
                    "type": "integer",
                    "description": "Max number of Elasticsearch snapshots to clean. Elasticsearch snapshots won't be created anymore if there will be more backups to clean than this value.\n"
                },
                "pauseBackups": {
                    "type": "boolean",
                    "description": "Pauses Elasticsearch and Cassandra backups. In comparison to enable/disable backup, this option does not modify any configuration like Elasticsearch properties.\n"
                },
                "storagePath": {
                    "type": "string",
                    "description": "A full path to the backup archive\n"
                }
            },
            "requiredInputs": [
                "cassandraScheduledTime"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ManagedBackup resources.\n",
                "properties": {
                    "bandwidthLimitMbits": {
                        "type": "integer",
                        "description": "Cassandra backup bandwidth limit in Mbps\n"
                    },
                    "cassandraScheduledTime": {
                        "type": "integer",
                        "description": "Hour to start Cassandra backups each day.\n"
                    },
                    "currentState": {
                        "type": "string",
                        "description": "For internal use: current state of rules in JSON format\n"
                    },
                    "datacenter": {
                        "type": "string",
                        "description": "Datacenter which will create backups\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Backups are enabled (true) or disabled (false).\n"
                    },
                    "includeLm20Data": {
                        "type": "boolean",
                        "description": "Include (true) or exclude (false) Log Monitoring v2 data\n"
                    },
                    "includeRumData": {
                        "type": "boolean",
                        "description": "Include user sessions (true) or GDPR compliance (false)\n"
                    },
                    "includeTsMetricData": {
                        "type": "boolean",
                        "description": "Include time series metric-data (true) or retain configuration data only (false))\n"
                    },
                    "maxEsSnapshotsToClean": {
                        "type": "integer",
                        "description": "Max number of Elasticsearch snapshots to clean. Elasticsearch snapshots won't be created anymore if there will be more backups to clean than this value.\n"
                    },
                    "pauseBackups": {
                        "type": "boolean",
                        "description": "Pauses Elasticsearch and Cassandra backups. In comparison to enable/disable backup, this option does not modify any configuration like Elasticsearch properties.\n"
                    },
                    "storagePath": {
                        "type": "string",
                        "description": "A full path to the backup archive\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/managedInternetProxy:ManagedInternetProxy": {
            "description": "\u003e This resource requires one of the cluster API token scopes **Control Management** (`ControlManagement`), **Service Provider API** (`ServiceProviderAPI`), or **Unattended Install** (`UnattendedInstall`)\n\n## Dynatrace Documentation\n\n- Can I use a proxy for internet access? - https://www.dynatrace.com/support/help/managed-cluster/configuration/can-i-use-a-proxy-for-internet-access\n\n- Cluster API v1 - https://www.dynatrace.com/support/help/managed-cluster/cluster-api/cluster-api-v1\n\n## Resource Example Usage\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\n\nconst test = new dynatrace.ManagedInternetProxy(\"test\", {\n    nonProxyHosts: [\"string\"],\n    password: \"string\",\n    port: 65535,\n    scheme: \"http\",\n    server: \"zAOE-GV81/65oVgaIlPYTCADGSPFJ9ZqXYNGbxn97dbq:flAI2E8e8bfOvlmaGu\",\n    user: \"string\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\n\ntest = dynatrace.ManagedInternetProxy(\"test\",\n    non_proxy_hosts=[\"string\"],\n    password=\"string\",\n    port=65535,\n    scheme=\"http\",\n    server=\"zAOE-GV81/65oVgaIlPYTCADGSPFJ9ZqXYNGbxn97dbq:flAI2E8e8bfOvlmaGu\",\n    user=\"string\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Dynatrace.ManagedInternetProxy(\"test\", new()\n    {\n        NonProxyHosts = new[]\n        {\n            \"string\",\n        },\n        Password = \"string\",\n        Port = 65535,\n        Scheme = \"http\",\n        Server = \"zAOE-GV81/65oVgaIlPYTCADGSPFJ9ZqXYNGbxn97dbq:flAI2E8e8bfOvlmaGu\",\n        User = \"string\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dynatrace.NewManagedInternetProxy(ctx, \"test\", \u0026dynatrace.ManagedInternetProxyArgs{\n\t\t\tNonProxyHosts: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"string\"),\n\t\t\t},\n\t\t\tPassword: pulumi.String(\"string\"),\n\t\t\tPort:     pulumi.Int(65535),\n\t\t\tScheme:   pulumi.String(\"http\"),\n\t\t\tServer:   pulumi.String(\"zAOE-GV81/65oVgaIlPYTCADGSPFJ9ZqXYNGbxn97dbq:flAI2E8e8bfOvlmaGu\"),\n\t\t\tUser:     pulumi.String(\"string\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.ManagedInternetProxy;\nimport com.pulumi.dynatrace.ManagedInternetProxyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new ManagedInternetProxy(\"test\", ManagedInternetProxyArgs.builder()        \n            .nonProxyHosts(\"string\")\n            .password(\"string\")\n            .port(65535)\n            .scheme(\"http\")\n            .server(\"zAOE-GV81/65oVgaIlPYTCADGSPFJ9ZqXYNGbxn97dbq:flAI2E8e8bfOvlmaGu\")\n            .user(\"string\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: dynatrace:ManagedInternetProxy\n    properties:\n      nonProxyHosts:\n        - string\n      password: string\n      port: 65535\n      scheme: http\n      server: zAOE-GV81/65oVgaIlPYTCADGSPFJ9ZqXYNGbxn97dbq:flAI2E8e8bfOvlmaGu\n      user: string\n```\n",
            "properties": {
                "nonProxyHosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Definition of hosts for which proxy won't be used. You can define multiple hosts. Each host can start or end with wildcard '*' for instance to match whole domain.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password of proxy server, null means do not change previous value\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port of proxy server\n"
                },
                "scheme": {
                    "type": "string",
                    "description": "Protocol which proxy server uses\n"
                },
                "server": {
                    "type": "string",
                    "description": "Address (either IP or Hostname) of proxy server\n"
                },
                "user": {
                    "type": "string",
                    "description": "User of proxy server, null means do not change previous value\n"
                }
            },
            "required": [
                "port",
                "scheme",
                "server"
            ],
            "inputProperties": {
                "nonProxyHosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Definition of hosts for which proxy won't be used. You can define multiple hosts. Each host can start or end with wildcard '*' for instance to match whole domain.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password of proxy server, null means do not change previous value\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port of proxy server\n"
                },
                "scheme": {
                    "type": "string",
                    "description": "Protocol which proxy server uses\n"
                },
                "server": {
                    "type": "string",
                    "description": "Address (either IP or Hostname) of proxy server\n"
                },
                "user": {
                    "type": "string",
                    "description": "User of proxy server, null means do not change previous value\n"
                }
            },
            "requiredInputs": [
                "port",
                "scheme",
                "server"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ManagedInternetProxy resources.\n",
                "properties": {
                    "nonProxyHosts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Definition of hosts for which proxy won't be used. You can define multiple hosts. Each host can start or end with wildcard '*' for instance to match whole domain.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password of proxy server, null means do not change previous value\n",
                        "secret": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port of proxy server\n"
                    },
                    "scheme": {
                        "type": "string",
                        "description": "Protocol which proxy server uses\n"
                    },
                    "server": {
                        "type": "string",
                        "description": "Address (either IP or Hostname) of proxy server\n"
                    },
                    "user": {
                        "type": "string",
                        "description": "User of proxy server, null means do not change previous value\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/managedNetworkZones:ManagedNetworkZones": {
            "description": "\u003e This resource requires the cluster API token scope **Service Provider API** (`ServiceProviderAPI`)\n\n## Dynatrace Documentation\n\n- Network zones - https://docs.dynatrace.com/docs/manage/network-zones\n\n- Cluster API v2 - https://www.dynatrace.com/support/help/managed-cluster/cluster-api/cluster-api-v2\n\n## Resource Example Usage\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\n\nconst test = new dynatrace.ManagedNetworkZones(\"test\", {\n    alternativeZones: [\"alternativeexample\"],\n    description: \"This is an example network zone\",\n    fallbackMode: \"ANY_ACTIVE_GATE\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\n\ntest = dynatrace.ManagedNetworkZones(\"test\",\n    alternative_zones=[\"alternativeexample\"],\n    description=\"This is an example network zone\",\n    fallback_mode=\"ANY_ACTIVE_GATE\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Dynatrace.ManagedNetworkZones(\"test\", new()\n    {\n        AlternativeZones = new[]\n        {\n            \"alternativeexample\",\n        },\n        Description = \"This is an example network zone\",\n        FallbackMode = \"ANY_ACTIVE_GATE\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dynatrace.NewManagedNetworkZones(ctx, \"test\", \u0026dynatrace.ManagedNetworkZonesArgs{\n\t\t\tAlternativeZones: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"alternativeexample\"),\n\t\t\t},\n\t\t\tDescription:  pulumi.String(\"This is an example network zone\"),\n\t\t\tFallbackMode: pulumi.String(\"ANY_ACTIVE_GATE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.ManagedNetworkZones;\nimport com.pulumi.dynatrace.ManagedNetworkZonesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new ManagedNetworkZones(\"test\", ManagedNetworkZonesArgs.builder()        \n            .alternativeZones(\"alternativeexample\")\n            .description(\"This is an example network zone\")\n            .fallbackMode(\"ANY_ACTIVE_GATE\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: dynatrace:ManagedNetworkZones\n    properties:\n      alternativeZones:\n        - alternativeexample\n      description: This is an example network zone\n      fallbackMode: ANY_ACTIVE_GATE\n```\n",
            "properties": {
                "alternativeZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of alternative network zones.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A short description of the network zone\n"
                },
                "fallbackMode": {
                    "type": "string",
                    "description": "The fallback mode of the network zone. Possible values: `ANY_ACTIVE_GATE`, `NONE`, `ONLY_DEFAULT_ZONE`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the network zone cannot be modified once created. Dynatrace stores the field in lowercase, allowed characters: alphanumeric, hyphen, underscore, dot\n"
                },
                "numOfConfiguredActivegates": {
                    "type": "integer",
                    "description": "The number of ActiveGates in the network zone.\n"
                },
                "numOfConfiguredOneagents": {
                    "type": "integer",
                    "description": "The number of OneAgents that are configured to use the network zone as primary.\n"
                },
                "numOfOneagentsFromOtherZones": {
                    "type": "integer",
                    "description": "The number of OneAgents from other network zones that are using ActiveGates in the network zone.\n"
                },
                "numOfOneagentsUsing": {
                    "type": "integer",
                    "description": "The number of OneAgents that are using ActiveGates in the network zone.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "alternativeZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of alternative network zones.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A short description of the network zone\n"
                },
                "fallbackMode": {
                    "type": "string",
                    "description": "The fallback mode of the network zone. Possible values: `ANY_ACTIVE_GATE`, `NONE`, `ONLY_DEFAULT_ZONE`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the network zone cannot be modified once created. Dynatrace stores the field in lowercase, allowed characters: alphanumeric, hyphen, underscore, dot\n",
                    "willReplaceOnChanges": true
                },
                "numOfConfiguredActivegates": {
                    "type": "integer",
                    "description": "The number of ActiveGates in the network zone.\n"
                },
                "numOfConfiguredOneagents": {
                    "type": "integer",
                    "description": "The number of OneAgents that are configured to use the network zone as primary.\n"
                },
                "numOfOneagentsFromOtherZones": {
                    "type": "integer",
                    "description": "The number of OneAgents from other network zones that are using ActiveGates in the network zone.\n"
                },
                "numOfOneagentsUsing": {
                    "type": "integer",
                    "description": "The number of OneAgents that are using ActiveGates in the network zone.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ManagedNetworkZones resources.\n",
                "properties": {
                    "alternativeZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of alternative network zones.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A short description of the network zone\n"
                    },
                    "fallbackMode": {
                        "type": "string",
                        "description": "The fallback mode of the network zone. Possible values: `ANY_ACTIVE_GATE`, `NONE`, `ONLY_DEFAULT_ZONE`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the network zone cannot be modified once created. Dynatrace stores the field in lowercase, allowed characters: alphanumeric, hyphen, underscore, dot\n",
                        "willReplaceOnChanges": true
                    },
                    "numOfConfiguredActivegates": {
                        "type": "integer",
                        "description": "The number of ActiveGates in the network zone.\n"
                    },
                    "numOfConfiguredOneagents": {
                        "type": "integer",
                        "description": "The number of OneAgents that are configured to use the network zone as primary.\n"
                    },
                    "numOfOneagentsFromOtherZones": {
                        "type": "integer",
                        "description": "The number of OneAgents from other network zones that are using ActiveGates in the network zone.\n"
                    },
                    "numOfOneagentsUsing": {
                        "type": "integer",
                        "description": "The number of OneAgents that are using ActiveGates in the network zone.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/managedPreferences:ManagedPreferences": {
            "properties": {
                "certificateManagementEnabled": {
                    "type": "boolean",
                    "description": "Default: `false`\n"
                },
                "certificateManagementPossible": {
                    "type": "boolean",
                    "description": "Default: `true`\n"
                },
                "communityCreateUser": {
                    "type": "boolean",
                    "description": "If true, each new user will get an invitation to set up a Dynatrace user account to access Dynatrace support resources user upon first login. Default: `false`\n"
                },
                "communityExternalSearch": {
                    "type": "boolean",
                    "description": "If true, results from Documentation are included in platform search. Default: `false`\n"
                },
                "helpChatEnabled": {
                    "type": "boolean",
                    "description": "If true, live, in-product assistance with our Product Experts is enabled. Default: `false`\n"
                },
                "readOnlyRemoteAccessAllowed": {
                    "type": "boolean",
                    "description": "If true, audited, read-only remote access to your Dynatrace configuration settings is allowed. Default: `false`\n"
                },
                "remoteAccessOnDemandOnly": {
                    "type": "boolean",
                    "description": "If true, audited access to your Dynatrace cluster is allowed by approved Dynatrace employees otherwise by privileged Dynatrace employees. Default: `false`\n"
                },
                "ruxitMonitorsRuxit": {
                    "type": "boolean",
                    "description": "If true, Dynatrace OneAgent monitors Dynatrace. Default: `true`\n"
                },
                "supportAllowRemoteAccess": {
                    "type": "boolean",
                    "description": "If true, audited remote-access to your Dynatrace configuration is allowed settings. Default: `true`\n"
                },
                "supportSendBilling": {
                    "type": "boolean",
                    "description": "If true, usage and billing information will be reported.\n"
                },
                "supportSendClusterHealth": {
                    "type": "boolean",
                    "description": "If true, Dynatrace cluster health will be reported.\n"
                },
                "supportSendEvents": {
                    "type": "boolean",
                    "description": "If true, Dynatrace cluster health and OneAgent events will be reported. Default: `true`\n"
                },
                "suppressNonBillingRelevantData": {
                    "type": "boolean",
                    "description": "If true, usage and billing information will NOT be reported.\n"
                },
                "telemetrySharing": {
                    "type": "boolean",
                    "description": "Default: `false`\n"
                }
            },
            "required": [
                "ruxitMonitorsRuxit",
                "supportSendBilling",
                "supportSendClusterHealth",
                "suppressNonBillingRelevantData"
            ],
            "inputProperties": {
                "certificateManagementEnabled": {
                    "type": "boolean",
                    "description": "Default: `false`\n"
                },
                "certificateManagementPossible": {
                    "type": "boolean",
                    "description": "Default: `true`\n"
                },
                "communityCreateUser": {
                    "type": "boolean",
                    "description": "If true, each new user will get an invitation to set up a Dynatrace user account to access Dynatrace support resources user upon first login. Default: `false`\n"
                },
                "communityExternalSearch": {
                    "type": "boolean",
                    "description": "If true, results from Documentation are included in platform search. Default: `false`\n"
                },
                "helpChatEnabled": {
                    "type": "boolean",
                    "description": "If true, live, in-product assistance with our Product Experts is enabled. Default: `false`\n"
                },
                "readOnlyRemoteAccessAllowed": {
                    "type": "boolean",
                    "description": "If true, audited, read-only remote access to your Dynatrace configuration settings is allowed. Default: `false`\n"
                },
                "remoteAccessOnDemandOnly": {
                    "type": "boolean",
                    "description": "If true, audited access to your Dynatrace cluster is allowed by approved Dynatrace employees otherwise by privileged Dynatrace employees. Default: `false`\n"
                },
                "ruxitMonitorsRuxit": {
                    "type": "boolean",
                    "description": "If true, Dynatrace OneAgent monitors Dynatrace. Default: `true`\n"
                },
                "supportAllowRemoteAccess": {
                    "type": "boolean",
                    "description": "If true, audited remote-access to your Dynatrace configuration is allowed settings. Default: `true`\n"
                },
                "supportSendBilling": {
                    "type": "boolean",
                    "description": "If true, usage and billing information will be reported.\n"
                },
                "supportSendClusterHealth": {
                    "type": "boolean",
                    "description": "If true, Dynatrace cluster health will be reported.\n"
                },
                "supportSendEvents": {
                    "type": "boolean",
                    "description": "If true, Dynatrace cluster health and OneAgent events will be reported. Default: `true`\n"
                },
                "suppressNonBillingRelevantData": {
                    "type": "boolean",
                    "description": "If true, usage and billing information will NOT be reported.\n"
                },
                "telemetrySharing": {
                    "type": "boolean",
                    "description": "Default: `false`\n"
                }
            },
            "requiredInputs": [
                "ruxitMonitorsRuxit",
                "supportSendBilling",
                "supportSendClusterHealth",
                "suppressNonBillingRelevantData"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ManagedPreferences resources.\n",
                "properties": {
                    "certificateManagementEnabled": {
                        "type": "boolean",
                        "description": "Default: `false`\n"
                    },
                    "certificateManagementPossible": {
                        "type": "boolean",
                        "description": "Default: `true`\n"
                    },
                    "communityCreateUser": {
                        "type": "boolean",
                        "description": "If true, each new user will get an invitation to set up a Dynatrace user account to access Dynatrace support resources user upon first login. Default: `false`\n"
                    },
                    "communityExternalSearch": {
                        "type": "boolean",
                        "description": "If true, results from Documentation are included in platform search. Default: `false`\n"
                    },
                    "helpChatEnabled": {
                        "type": "boolean",
                        "description": "If true, live, in-product assistance with our Product Experts is enabled. Default: `false`\n"
                    },
                    "readOnlyRemoteAccessAllowed": {
                        "type": "boolean",
                        "description": "If true, audited, read-only remote access to your Dynatrace configuration settings is allowed. Default: `false`\n"
                    },
                    "remoteAccessOnDemandOnly": {
                        "type": "boolean",
                        "description": "If true, audited access to your Dynatrace cluster is allowed by approved Dynatrace employees otherwise by privileged Dynatrace employees. Default: `false`\n"
                    },
                    "ruxitMonitorsRuxit": {
                        "type": "boolean",
                        "description": "If true, Dynatrace OneAgent monitors Dynatrace. Default: `true`\n"
                    },
                    "supportAllowRemoteAccess": {
                        "type": "boolean",
                        "description": "If true, audited remote-access to your Dynatrace configuration is allowed settings. Default: `true`\n"
                    },
                    "supportSendBilling": {
                        "type": "boolean",
                        "description": "If true, usage and billing information will be reported.\n"
                    },
                    "supportSendClusterHealth": {
                        "type": "boolean",
                        "description": "If true, Dynatrace cluster health will be reported.\n"
                    },
                    "supportSendEvents": {
                        "type": "boolean",
                        "description": "If true, Dynatrace cluster health and OneAgent events will be reported. Default: `true`\n"
                    },
                    "suppressNonBillingRelevantData": {
                        "type": "boolean",
                        "description": "If true, usage and billing information will NOT be reported.\n"
                    },
                    "telemetrySharing": {
                        "type": "boolean",
                        "description": "Default: `false`\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/managedPublicEndpoints:ManagedPublicEndpoints": {
            "properties": {
                "additionalWebUiAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Additional web UI addresses\n"
                },
                "beaconForwarderAddress": {
                    "type": "string",
                    "description": "Beacon forwarder address\n"
                },
                "cdnAddress": {
                    "type": "string",
                    "description": "CDN address\n"
                },
                "webUiAddress": {
                    "type": "string",
                    "description": "Web UI address\n"
                }
            },
            "inputProperties": {
                "additionalWebUiAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Additional web UI addresses\n"
                },
                "beaconForwarderAddress": {
                    "type": "string",
                    "description": "Beacon forwarder address\n"
                },
                "cdnAddress": {
                    "type": "string",
                    "description": "CDN address\n"
                },
                "webUiAddress": {
                    "type": "string",
                    "description": "Web UI address\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ManagedPublicEndpoints resources.\n",
                "properties": {
                    "additionalWebUiAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Additional web UI addresses\n"
                    },
                    "beaconForwarderAddress": {
                        "type": "string",
                        "description": "Beacon forwarder address\n"
                    },
                    "cdnAddress": {
                        "type": "string",
                        "description": "CDN address\n"
                    },
                    "webUiAddress": {
                        "type": "string",
                        "description": "Web UI address\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/managedRemoteAccess:ManagedRemoteAccess": {
            "properties": {
                "reason": {
                    "type": "string",
                    "description": "Request reason description, cannot be changed once created\n"
                },
                "requestedDays": {
                    "type": "integer",
                    "description": "For how many days access is requested, cannot be changed once created\n"
                },
                "role": {
                    "type": "string",
                    "description": "Requested role, cannot be changed once created\n"
                },
                "state": {
                    "type": "string",
                    "description": "Access request state. Automatically set as `ACCEPTED` on create, state can be changed in subsequent updates.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "User id, cannot be changed once created\n"
                }
            },
            "required": [
                "reason",
                "requestedDays",
                "role",
                "userId"
            ],
            "inputProperties": {
                "reason": {
                    "type": "string",
                    "description": "Request reason description, cannot be changed once created\n"
                },
                "requestedDays": {
                    "type": "integer",
                    "description": "For how many days access is requested, cannot be changed once created\n"
                },
                "role": {
                    "type": "string",
                    "description": "Requested role, cannot be changed once created\n"
                },
                "state": {
                    "type": "string",
                    "description": "Access request state. Automatically set as `ACCEPTED` on create, state can be changed in subsequent updates.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "User id, cannot be changed once created\n"
                }
            },
            "requiredInputs": [
                "reason",
                "requestedDays",
                "role",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ManagedRemoteAccess resources.\n",
                "properties": {
                    "reason": {
                        "type": "string",
                        "description": "Request reason description, cannot be changed once created\n"
                    },
                    "requestedDays": {
                        "type": "integer",
                        "description": "For how many days access is requested, cannot be changed once created\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "Requested role, cannot be changed once created\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Access request state. Automatically set as `ACCEPTED` on create, state can be changed in subsequent updates.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "User id, cannot be changed once created\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/managedSmtp:ManagedSmtp": {
            "properties": {
                "allowFallbackViaMissionControl": {
                    "type": "boolean",
                    "description": "If true, we will send e-mails via Mission Control in case of problems with SMTP server.\n"
                },
                "connectionSecurity": {
                    "type": "string",
                    "description": "Connection security, possible values: `NO_ENCRYPTION`, `OPTIONAL_STARTTLS`, `REQUIRE_STARTTLS`, `TLS`. Default: `NO_ENCRYPTION`\n"
                },
                "hostName": {
                    "type": "string",
                    "description": "Host Name\n"
                },
                "isPasswordConfigured": {
                    "type": "boolean",
                    "description": "If true, a password has been configured. Default: `false`.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Integer value of port. Default: `25`\n"
                },
                "senderEmailAddress": {
                    "type": "string",
                    "description": "Sender email address\n"
                },
                "useSmtpServer": {
                    "type": "boolean",
                    "description": "If true, we will send e-mails via SMTP server.\n"
                },
                "userName": {
                    "type": "string",
                    "description": "User Name\n"
                }
            },
            "required": [
                "hostName",
                "password",
                "senderEmailAddress",
                "userName"
            ],
            "inputProperties": {
                "allowFallbackViaMissionControl": {
                    "type": "boolean",
                    "description": "If true, we will send e-mails via Mission Control in case of problems with SMTP server.\n"
                },
                "connectionSecurity": {
                    "type": "string",
                    "description": "Connection security, possible values: `NO_ENCRYPTION`, `OPTIONAL_STARTTLS`, `REQUIRE_STARTTLS`, `TLS`. Default: `NO_ENCRYPTION`\n"
                },
                "hostName": {
                    "type": "string",
                    "description": "Host Name\n"
                },
                "isPasswordConfigured": {
                    "type": "boolean",
                    "description": "If true, a password has been configured. Default: `false`.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Integer value of port. Default: `25`\n"
                },
                "senderEmailAddress": {
                    "type": "string",
                    "description": "Sender email address\n"
                },
                "useSmtpServer": {
                    "type": "boolean",
                    "description": "If true, we will send e-mails via SMTP server.\n"
                },
                "userName": {
                    "type": "string",
                    "description": "User Name\n"
                }
            },
            "requiredInputs": [
                "hostName",
                "password",
                "senderEmailAddress",
                "userName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ManagedSmtp resources.\n",
                "properties": {
                    "allowFallbackViaMissionControl": {
                        "type": "boolean",
                        "description": "If true, we will send e-mails via Mission Control in case of problems with SMTP server.\n"
                    },
                    "connectionSecurity": {
                        "type": "string",
                        "description": "Connection security, possible values: `NO_ENCRYPTION`, `OPTIONAL_STARTTLS`, `REQUIRE_STARTTLS`, `TLS`. Default: `NO_ENCRYPTION`\n"
                    },
                    "hostName": {
                        "type": "string",
                        "description": "Host Name\n"
                    },
                    "isPasswordConfigured": {
                        "type": "boolean",
                        "description": "If true, a password has been configured. Default: `false`.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password\n",
                        "secret": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Integer value of port. Default: `25`\n"
                    },
                    "senderEmailAddress": {
                        "type": "string",
                        "description": "Sender email address\n"
                    },
                    "useSmtpServer": {
                        "type": "boolean",
                        "description": "If true, we will send e-mails via SMTP server.\n"
                    },
                    "userName": {
                        "type": "string",
                        "description": "User Name\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/managementZone:ManagementZone": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the management zone\n"
                },
                "dimensionalRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneDimensionalRule:ManagementZoneDimensionalRule"
                    },
                    "description": "A list of dimensional data rules for management zone usage. If several rules are specified, the `or` logic applies\n"
                },
                "entitySelectorBasedRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneEntitySelectorBasedRule:ManagementZoneEntitySelectorBasedRule"
                    },
                    "description": "A list of entity-selector based rules for management zone usage. If several rules are specified, the `or` logic applies\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the management zone\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRule:ManagementZoneRule"
                    },
                    "description": "A list of rules for management zone usage. Each rule is evaluated independently of all other rules\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the management zone\n"
                },
                "dimensionalRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneDimensionalRule:ManagementZoneDimensionalRule"
                    },
                    "description": "A list of dimensional data rules for management zone usage. If several rules are specified, the `or` logic applies\n"
                },
                "entitySelectorBasedRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneEntitySelectorBasedRule:ManagementZoneEntitySelectorBasedRule"
                    },
                    "description": "A list of entity-selector based rules for management zone usage. If several rules are specified, the `or` logic applies\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the management zone\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneRule:ManagementZoneRule"
                    },
                    "description": "A list of rules for management zone usage. Each rule is evaluated independently of all other rules\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ManagementZone resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the management zone\n"
                    },
                    "dimensionalRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/ManagementZoneDimensionalRule:ManagementZoneDimensionalRule"
                        },
                        "description": "A list of dimensional data rules for management zone usage. If several rules are specified, the `or` logic applies\n"
                    },
                    "entitySelectorBasedRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/ManagementZoneEntitySelectorBasedRule:ManagementZoneEntitySelectorBasedRule"
                        },
                        "description": "A list of entity-selector based rules for management zone usage. If several rules are specified, the `or` logic applies\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the management zone\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/ManagementZoneRule:ManagementZoneRule"
                        },
                        "description": "A list of rules for management zone usage. Each rule is evaluated independently of all other rules\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/managementZoneV2:ManagementZoneV2": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of this setting when referred to by the Config REST API V1\n"
                },
                "name": {
                    "type": "string",
                    "description": "**Be careful when renaming** - if there are policies that are referencing this Management zone, they will need to be adapted to the new name!\n"
                },
                "rules": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneV2Rules:ManagementZoneV2Rules",
                    "description": "Rules\n"
                }
            },
            "required": [
                "legacyId",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of this setting when referred to by the Config REST API V1\n"
                },
                "name": {
                    "type": "string",
                    "description": "**Be careful when renaming** - if there are policies that are referencing this Management zone, they will need to be adapted to the new name!\n"
                },
                "rules": {
                    "$ref": "#/types/dynatrace:index/ManagementZoneV2Rules:ManagementZoneV2Rules",
                    "description": "Rules\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ManagementZoneV2 resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description\n"
                    },
                    "legacyId": {
                        "type": "string",
                        "description": "The ID of this setting when referred to by the Config REST API V1\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "**Be careful when renaming** - if there are policies that are referencing this Management zone, they will need to be adapted to the new name!\n"
                    },
                    "rules": {
                        "$ref": "#/types/dynatrace:index/ManagementZoneV2Rules:ManagementZoneV2Rules",
                        "description": "Rules\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/metricEvents:MetricEvents": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "eventEntityDimensionKey": {
                    "type": "string",
                    "description": "Controls the preferred entity type used for triggered events.\n"
                },
                "eventTemplate": {
                    "$ref": "#/types/dynatrace:index/MetricEventsEventTemplate:MetricEventsEventTemplate",
                    "description": "Event template\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "Config id\n"
                },
                "modelProperties": {
                    "$ref": "#/types/dynatrace:index/MetricEventsModelProperties:MetricEventsModelProperties",
                    "description": "Monitoring strategy\n"
                },
                "queryDefinition": {
                    "$ref": "#/types/dynatrace:index/MetricEventsQueryDefinition:MetricEventsQueryDefinition",
                    "description": "Query definition\n"
                },
                "summary": {
                    "type": "string",
                    "description": "The textual summary of the metric event entry\n"
                }
            },
            "required": [
                "enabled",
                "eventTemplate",
                "legacyId",
                "modelProperties",
                "queryDefinition",
                "summary"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "eventEntityDimensionKey": {
                    "type": "string",
                    "description": "Controls the preferred entity type used for triggered events.\n"
                },
                "eventTemplate": {
                    "$ref": "#/types/dynatrace:index/MetricEventsEventTemplate:MetricEventsEventTemplate",
                    "description": "Event template\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "Config id\n"
                },
                "modelProperties": {
                    "$ref": "#/types/dynatrace:index/MetricEventsModelProperties:MetricEventsModelProperties",
                    "description": "Monitoring strategy\n"
                },
                "queryDefinition": {
                    "$ref": "#/types/dynatrace:index/MetricEventsQueryDefinition:MetricEventsQueryDefinition",
                    "description": "Query definition\n"
                },
                "summary": {
                    "type": "string",
                    "description": "The textual summary of the metric event entry\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "eventTemplate",
                "modelProperties",
                "queryDefinition",
                "summary"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MetricEvents resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "eventEntityDimensionKey": {
                        "type": "string",
                        "description": "Controls the preferred entity type used for triggered events.\n"
                    },
                    "eventTemplate": {
                        "$ref": "#/types/dynatrace:index/MetricEventsEventTemplate:MetricEventsEventTemplate",
                        "description": "Event template\n"
                    },
                    "legacyId": {
                        "type": "string",
                        "description": "Config id\n"
                    },
                    "modelProperties": {
                        "$ref": "#/types/dynatrace:index/MetricEventsModelProperties:MetricEventsModelProperties",
                        "description": "Monitoring strategy\n"
                    },
                    "queryDefinition": {
                        "$ref": "#/types/dynatrace:index/MetricEventsQueryDefinition:MetricEventsQueryDefinition",
                        "description": "Query definition\n"
                    },
                    "summary": {
                        "type": "string",
                        "description": "The textual summary of the metric event entry\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/metricMetadata:MetricMetadata": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description\n"
                },
                "dimensions": {
                    "$ref": "#/types/dynatrace:index/MetricMetadataDimensions:MetricMetadataDimensions",
                    "description": "Define metadata per metric dimension.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name\n"
                },
                "metricId": {
                    "type": "string",
                    "description": "The scope of this setting (metric)\n"
                },
                "metricProperties": {
                    "$ref": "#/types/dynatrace:index/MetricMetadataMetricProperties:MetricMetadataMetricProperties",
                    "description": "Metric properties\n"
                },
                "sourceEntityType": {
                    "type": "string",
                    "description": "Specifies which entity dimension should be used as the primary dimension. The property can only be configured for metrics ingested with the Metrics API.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags\n"
                },
                "unit": {
                    "type": "string",
                    "description": "Unit\n"
                },
                "unitDisplayFormat": {
                    "type": "string",
                    "description": "The raw value is stored in bits or bytes. The user interface can display it in these numeral systems:\n"
                }
            },
            "required": [
                "metricId",
                "unit"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description\n"
                },
                "dimensions": {
                    "$ref": "#/types/dynatrace:index/MetricMetadataDimensions:MetricMetadataDimensions",
                    "description": "Define metadata per metric dimension.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name\n"
                },
                "metricId": {
                    "type": "string",
                    "description": "The scope of this setting (metric)\n",
                    "willReplaceOnChanges": true
                },
                "metricProperties": {
                    "$ref": "#/types/dynatrace:index/MetricMetadataMetricProperties:MetricMetadataMetricProperties",
                    "description": "Metric properties\n"
                },
                "sourceEntityType": {
                    "type": "string",
                    "description": "Specifies which entity dimension should be used as the primary dimension. The property can only be configured for metrics ingested with the Metrics API.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags\n"
                },
                "unit": {
                    "type": "string",
                    "description": "Unit\n"
                },
                "unitDisplayFormat": {
                    "type": "string",
                    "description": "The raw value is stored in bits or bytes. The user interface can display it in these numeral systems:\n"
                }
            },
            "requiredInputs": [
                "metricId",
                "unit"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MetricMetadata resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description\n"
                    },
                    "dimensions": {
                        "$ref": "#/types/dynatrace:index/MetricMetadataDimensions:MetricMetadataDimensions",
                        "description": "Define metadata per metric dimension.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name\n"
                    },
                    "metricId": {
                        "type": "string",
                        "description": "The scope of this setting (metric)\n",
                        "willReplaceOnChanges": true
                    },
                    "metricProperties": {
                        "$ref": "#/types/dynatrace:index/MetricMetadataMetricProperties:MetricMetadataMetricProperties",
                        "description": "Metric properties\n"
                    },
                    "sourceEntityType": {
                        "type": "string",
                        "description": "Specifies which entity dimension should be used as the primary dimension. The property can only be configured for metrics ingested with the Metrics API.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tags\n"
                    },
                    "unit": {
                        "type": "string",
                        "description": "Unit\n"
                    },
                    "unitDisplayFormat": {
                        "type": "string",
                        "description": "The raw value is stored in bits or bytes. The user interface can display it in these numeral systems:\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/metricQuery:MetricQuery": {
            "properties": {
                "metricId": {
                    "type": "string",
                    "description": "The scope of this setting (metric)\n"
                },
                "metricSelector": {
                    "type": "string",
                    "description": "Query\n"
                }
            },
            "required": [
                "metricId",
                "metricSelector"
            ],
            "inputProperties": {
                "metricId": {
                    "type": "string",
                    "description": "The scope of this setting (metric)\n",
                    "willReplaceOnChanges": true
                },
                "metricSelector": {
                    "type": "string",
                    "description": "Query\n"
                }
            },
            "requiredInputs": [
                "metricId",
                "metricSelector"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MetricQuery resources.\n",
                "properties": {
                    "metricId": {
                        "type": "string",
                        "description": "The scope of this setting (metric)\n",
                        "willReplaceOnChanges": true
                    },
                    "metricSelector": {
                        "type": "string",
                        "description": "Query\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/mgmzPermission:MgmzPermission": {
            "properties": {
                "environment": {
                    "type": "string",
                    "description": "The UUID of the environment\n"
                },
                "group": {
                    "type": "string",
                    "description": "The ID of the group the permissions are valid for. You may refer to the id of a resource `dynatrace.UserGroup` here\n"
                },
                "managementZone": {
                    "type": "string",
                    "description": "The ID of the management zone the permissions are valid for. When referring to resource `dynatrace.ManagementZoneV2` or data source `dynatrace.ManagementZone` you need to refer to the attribute `legacy_id`.\n"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The permissions to assign for that management zone. Allowed values are `DEMO_USER`, `LOG_VIEWER`, `MANAGE_SECURITY_PROBLEMS`, `MANAGE_SETTINGS`, `REPLAY_SESSION_DATA`, `REPLAY_SESSION_DATA_WITHOUT_MASKING`, `VIEWER`, `VIEW_SENSITIVE_REQUEST_DATA`\n"
                }
            },
            "required": [
                "environment",
                "group",
                "managementZone",
                "permissions"
            ],
            "inputProperties": {
                "environment": {
                    "type": "string",
                    "description": "The UUID of the environment\n"
                },
                "group": {
                    "type": "string",
                    "description": "The ID of the group the permissions are valid for. You may refer to the id of a resource `dynatrace.UserGroup` here\n"
                },
                "managementZone": {
                    "type": "string",
                    "description": "The ID of the management zone the permissions are valid for. When referring to resource `dynatrace.ManagementZoneV2` or data source `dynatrace.ManagementZone` you need to refer to the attribute `legacy_id`.\n"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The permissions to assign for that management zone. Allowed values are `DEMO_USER`, `LOG_VIEWER`, `MANAGE_SECURITY_PROBLEMS`, `MANAGE_SETTINGS`, `REPLAY_SESSION_DATA`, `REPLAY_SESSION_DATA_WITHOUT_MASKING`, `VIEWER`, `VIEW_SENSITIVE_REQUEST_DATA`\n"
                }
            },
            "requiredInputs": [
                "environment",
                "group",
                "managementZone",
                "permissions"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MgmzPermission resources.\n",
                "properties": {
                    "environment": {
                        "type": "string",
                        "description": "The UUID of the environment\n"
                    },
                    "group": {
                        "type": "string",
                        "description": "The ID of the group the permissions are valid for. You may refer to the id of a resource `dynatrace.UserGroup` here\n"
                    },
                    "managementZone": {
                        "type": "string",
                        "description": "The ID of the management zone the permissions are valid for. When referring to resource `dynatrace.ManagementZoneV2` or data source `dynatrace.ManagementZone` you need to refer to the attribute `legacy_id`.\n"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The permissions to assign for that management zone. Allowed values are `DEMO_USER`, `LOG_VIEWER`, `MANAGE_SECURITY_PROBLEMS`, `MANAGE_SETTINGS`, `REPLAY_SESSION_DATA`, `REPLAY_SESSION_DATA_WITHOUT_MASKING`, `VIEWER`, `VIEW_SENSITIVE_REQUEST_DATA`\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/mobileAppAnomalies:MobileAppAnomalies": {
            "properties": {
                "errorRateIncrease": {
                    "$ref": "#/types/dynatrace:index/MobileAppAnomaliesErrorRateIncrease:MobileAppAnomaliesErrorRateIncrease",
                    "description": "Error rate increase\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (DEVICE*APPLICATION*METHOD, MOBILE_APPLICATION). Omit this property if you want to cover the whole environment.\n"
                },
                "slowUserActions": {
                    "$ref": "#/types/dynatrace:index/MobileAppAnomaliesSlowUserActions:MobileAppAnomaliesSlowUserActions",
                    "description": "Slow user actions\n"
                },
                "unexpectedHighLoad": {
                    "$ref": "#/types/dynatrace:index/MobileAppAnomaliesUnexpectedHighLoad:MobileAppAnomaliesUnexpectedHighLoad",
                    "description": "Unexpected high load\n"
                },
                "unexpectedLowLoad": {
                    "$ref": "#/types/dynatrace:index/MobileAppAnomaliesUnexpectedLowLoad:MobileAppAnomaliesUnexpectedLowLoad",
                    "description": "Unexpected low load\n"
                }
            },
            "required": [
                "errorRateIncrease",
                "slowUserActions",
                "unexpectedHighLoad",
                "unexpectedLowLoad"
            ],
            "inputProperties": {
                "errorRateIncrease": {
                    "$ref": "#/types/dynatrace:index/MobileAppAnomaliesErrorRateIncrease:MobileAppAnomaliesErrorRateIncrease",
                    "description": "Error rate increase\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (DEVICE*APPLICATION*METHOD, MOBILE_APPLICATION). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                },
                "slowUserActions": {
                    "$ref": "#/types/dynatrace:index/MobileAppAnomaliesSlowUserActions:MobileAppAnomaliesSlowUserActions",
                    "description": "Slow user actions\n"
                },
                "unexpectedHighLoad": {
                    "$ref": "#/types/dynatrace:index/MobileAppAnomaliesUnexpectedHighLoad:MobileAppAnomaliesUnexpectedHighLoad",
                    "description": "Unexpected high load\n"
                },
                "unexpectedLowLoad": {
                    "$ref": "#/types/dynatrace:index/MobileAppAnomaliesUnexpectedLowLoad:MobileAppAnomaliesUnexpectedLowLoad",
                    "description": "Unexpected low load\n"
                }
            },
            "requiredInputs": [
                "errorRateIncrease",
                "slowUserActions",
                "unexpectedHighLoad",
                "unexpectedLowLoad"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MobileAppAnomalies resources.\n",
                "properties": {
                    "errorRateIncrease": {
                        "$ref": "#/types/dynatrace:index/MobileAppAnomaliesErrorRateIncrease:MobileAppAnomaliesErrorRateIncrease",
                        "description": "Error rate increase\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (DEVICE*APPLICATION*METHOD, MOBILE_APPLICATION). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    },
                    "slowUserActions": {
                        "$ref": "#/types/dynatrace:index/MobileAppAnomaliesSlowUserActions:MobileAppAnomaliesSlowUserActions",
                        "description": "Slow user actions\n"
                    },
                    "unexpectedHighLoad": {
                        "$ref": "#/types/dynatrace:index/MobileAppAnomaliesUnexpectedHighLoad:MobileAppAnomaliesUnexpectedHighLoad",
                        "description": "Unexpected high load\n"
                    },
                    "unexpectedLowLoad": {
                        "$ref": "#/types/dynatrace:index/MobileAppAnomaliesUnexpectedLowLoad:MobileAppAnomaliesUnexpectedLowLoad",
                        "description": "Unexpected low load\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/mobileAppCrashRate:MobileAppCrashRate": {
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                },
                "crashRateIncrease": {
                    "$ref": "#/types/dynatrace:index/MobileAppCrashRateCrashRateIncrease:MobileAppCrashRateCrashRateIncrease",
                    "description": "Crash rate increase\n"
                }
            },
            "required": [
                "crashRateIncrease"
            ],
            "inputProperties": {
                "applicationId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                },
                "crashRateIncrease": {
                    "$ref": "#/types/dynatrace:index/MobileAppCrashRateCrashRateIncrease:MobileAppCrashRateCrashRateIncrease",
                    "description": "Crash rate increase\n"
                }
            },
            "requiredInputs": [
                "crashRateIncrease"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MobileAppCrashRate resources.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    },
                    "crashRateIncrease": {
                        "$ref": "#/types/dynatrace:index/MobileAppCrashRateCrashRateIncrease:MobileAppCrashRateCrashRateIncrease",
                        "description": "Crash rate increase\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/mobileAppEnablement:MobileAppEnablement": {
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                },
                "rum": {
                    "$ref": "#/types/dynatrace:index/MobileAppEnablementRum:MobileAppEnablementRum",
                    "description": "(Field has overlap with `dynatrace.MobileApplication`) Capture and analyze all user actions within your application. Enable [Real User Monitoring (RUM)](https://dt-url.net/1n2b0prq) to monitor and improve your application's performance, identify errors, and gain insight into your user's behavior and experience.\n"
                },
                "sessionReplay": {
                    "$ref": "#/types/dynatrace:index/MobileAppEnablementSessionReplay:MobileAppEnablementSessionReplay",
                    "description": "(Field has overlap with `dynatrace.MobileApplication`) [Session Replay on crashes](https://dt-url.net/session-replay) gives you additional context for crash analysis in the form of video-like screen recordings that replay user actions immediately preceding a detected crash, while providing [best-in-class security and data protection](https://dt-url.net/b303zxj).\n"
                }
            },
            "required": [
                "rum",
                "sessionReplay"
            ],
            "inputProperties": {
                "applicationId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                },
                "rum": {
                    "$ref": "#/types/dynatrace:index/MobileAppEnablementRum:MobileAppEnablementRum",
                    "description": "(Field has overlap with `dynatrace.MobileApplication`) Capture and analyze all user actions within your application. Enable [Real User Monitoring (RUM)](https://dt-url.net/1n2b0prq) to monitor and improve your application's performance, identify errors, and gain insight into your user's behavior and experience.\n"
                },
                "sessionReplay": {
                    "$ref": "#/types/dynatrace:index/MobileAppEnablementSessionReplay:MobileAppEnablementSessionReplay",
                    "description": "(Field has overlap with `dynatrace.MobileApplication`) [Session Replay on crashes](https://dt-url.net/session-replay) gives you additional context for crash analysis in the form of video-like screen recordings that replay user actions immediately preceding a detected crash, while providing [best-in-class security and data protection](https://dt-url.net/b303zxj).\n"
                }
            },
            "requiredInputs": [
                "rum",
                "sessionReplay"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MobileAppEnablement resources.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    },
                    "rum": {
                        "$ref": "#/types/dynatrace:index/MobileAppEnablementRum:MobileAppEnablementRum",
                        "description": "(Field has overlap with `dynatrace.MobileApplication`) Capture and analyze all user actions within your application. Enable [Real User Monitoring (RUM)](https://dt-url.net/1n2b0prq) to monitor and improve your application's performance, identify errors, and gain insight into your user's behavior and experience.\n"
                    },
                    "sessionReplay": {
                        "$ref": "#/types/dynatrace:index/MobileAppEnablementSessionReplay:MobileAppEnablementSessionReplay",
                        "description": "(Field has overlap with `dynatrace.MobileApplication`) [Session Replay on crashes](https://dt-url.net/session-replay) gives you additional context for crash analysis in the form of video-like screen recordings that replay user actions immediately preceding a detected crash, while providing [best-in-class security and data protection](https://dt-url.net/b303zxj).\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/mobileAppKeyPerformance:MobileAppKeyPerformance": {
            "properties": {
                "frustratingIfReportedOrWebRequestError": {
                    "type": "boolean",
                    "description": "Treat user actions with reported errors or web request errors as erroneous and rate their performance as Frustrating. Turn off this setting if errors should not affect the Apdex rate.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (DEVICE*APPLICATION*METHOD, MOBILE*APPLICATION, CUSTOM*APPLICATION)\n"
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/MobileAppKeyPerformanceThresholds:MobileAppKeyPerformanceThresholds",
                    "description": "no documentation available\n"
                }
            },
            "required": [
                "frustratingIfReportedOrWebRequestError",
                "scope",
                "thresholds"
            ],
            "inputProperties": {
                "frustratingIfReportedOrWebRequestError": {
                    "type": "boolean",
                    "description": "Treat user actions with reported errors or web request errors as erroneous and rate their performance as Frustrating. Turn off this setting if errors should not affect the Apdex rate.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (DEVICE*APPLICATION*METHOD, MOBILE*APPLICATION, CUSTOM*APPLICATION)\n",
                    "willReplaceOnChanges": true
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/MobileAppKeyPerformanceThresholds:MobileAppKeyPerformanceThresholds",
                    "description": "no documentation available\n"
                }
            },
            "requiredInputs": [
                "frustratingIfReportedOrWebRequestError",
                "scope",
                "thresholds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MobileAppKeyPerformance resources.\n",
                "properties": {
                    "frustratingIfReportedOrWebRequestError": {
                        "type": "boolean",
                        "description": "Treat user actions with reported errors or web request errors as erroneous and rate their performance as Frustrating. Turn off this setting if errors should not affect the Apdex rate.\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (DEVICE*APPLICATION*METHOD, MOBILE*APPLICATION, CUSTOM*APPLICATION)\n",
                        "willReplaceOnChanges": true
                    },
                    "thresholds": {
                        "$ref": "#/types/dynatrace:index/MobileAppKeyPerformanceThresholds:MobileAppKeyPerformanceThresholds",
                        "description": "no documentation available\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/mobileAppRequestErrors:MobileAppRequestErrors": {
            "properties": {
                "errorRules": {
                    "$ref": "#/types/dynatrace:index/MobileAppRequestErrorsErrorRules:MobileAppRequestErrorsErrorRules",
                    "description": "no documentation available\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (MOBILE*APPLICATION, CUSTOM*APPLICATION)\n"
                }
            },
            "required": [
                "scope"
            ],
            "inputProperties": {
                "errorRules": {
                    "$ref": "#/types/dynatrace:index/MobileAppRequestErrorsErrorRules:MobileAppRequestErrorsErrorRules",
                    "description": "no documentation available\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (MOBILE*APPLICATION, CUSTOM*APPLICATION)\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "scope"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MobileAppRequestErrors resources.\n",
                "properties": {
                    "errorRules": {
                        "$ref": "#/types/dynatrace:index/MobileAppRequestErrorsErrorRules:MobileAppRequestErrorsErrorRules",
                        "description": "no documentation available\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (MOBILE*APPLICATION, CUSTOM*APPLICATION)\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/mobileApplication:MobileApplication": {
            "properties": {
                "apdex": {
                    "$ref": "#/types/dynatrace:index/MobileApplicationApdex:MobileApplicationApdex",
                    "description": "Apdex configuration of a mobile application. A duration less than the **tolerable** threshold is considered satisfied\n"
                },
                "applicationId": {
                    "type": "string",
                    "description": "The UUID of the application.\n"
                },
                "applicationType": {
                    "type": "string",
                    "description": "The type of the application. Either `CUSTOM_APPLICATION` or `MOBILE_APPLICATION`.\n"
                },
                "beaconEndpointType": {
                    "type": "string",
                    "description": "The type of the beacon endpoint. Possible values are `CLUSTER_ACTIVE_GATE`, `ENVIRONMENT_ACTIVE_GATE` and `INSTRUMENTED_WEB_SERVER`.\n"
                },
                "beaconEndpointUrl": {
                    "type": "string",
                    "description": "The URL of the beacon endpoint. Only applicable when the **beacon_endpoint_type** is set to `ENVIRONMENT_ACTIVE_GATE` or\n`INSTRUMENTED_WEB_SERVER`\n"
                },
                "iconType": {
                    "type": "string",
                    "description": "Custom application icon. Mobile apps always use the mobile device icon, so this icon can only be set for custom apps.\n"
                },
                "keyUserActions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "User Action names to be flagged as Key User Actions\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the reported value\n"
                },
                "optInMode": {
                    "type": "boolean",
                    "description": "The opt-in mode is enabled (`true`) or disabled (`false`)\n"
                },
                "properties": {
                    "$ref": "#/types/dynatrace:index/MobileApplicationProperties:MobileApplicationProperties",
                    "description": "User Action and Session Properties\n"
                },
                "sessionReplay": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace_mobile_app_enablement`) The session replay is enabled (`true`) or disabled (`false`).\n"
                },
                "sessionReplayOnCrash": {
                    "type": "boolean",
                    "description": "The session replay on crash is enabled (`true`) or disabled (`false`). Enabling requires both **sessionReplayEnabled**\nand **optInModeEnabled** values set to `true`.\n"
                },
                "userSessionPercentage": {
                    "type": "integer",
                    "description": "(Field has overlap with `dynatrace_mobile_app_enablement` for mobile and `dynatrace_custom_app_enablement` for custom\napps) The percentage of user sessions to be analyzed\n"
                }
            },
            "required": [
                "apdex",
                "beaconEndpointType",
                "name"
            ],
            "inputProperties": {
                "apdex": {
                    "$ref": "#/types/dynatrace:index/MobileApplicationApdex:MobileApplicationApdex",
                    "description": "Apdex configuration of a mobile application. A duration less than the **tolerable** threshold is considered satisfied\n"
                },
                "applicationId": {
                    "type": "string",
                    "description": "The UUID of the application.\n"
                },
                "applicationType": {
                    "type": "string",
                    "description": "The type of the application. Either `CUSTOM_APPLICATION` or `MOBILE_APPLICATION`.\n"
                },
                "beaconEndpointType": {
                    "type": "string",
                    "description": "The type of the beacon endpoint. Possible values are `CLUSTER_ACTIVE_GATE`, `ENVIRONMENT_ACTIVE_GATE` and `INSTRUMENTED_WEB_SERVER`.\n"
                },
                "beaconEndpointUrl": {
                    "type": "string",
                    "description": "The URL of the beacon endpoint. Only applicable when the **beacon_endpoint_type** is set to `ENVIRONMENT_ACTIVE_GATE` or\n`INSTRUMENTED_WEB_SERVER`\n"
                },
                "iconType": {
                    "type": "string",
                    "description": "Custom application icon. Mobile apps always use the mobile device icon, so this icon can only be set for custom apps.\n"
                },
                "keyUserActions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "User Action names to be flagged as Key User Actions\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the reported value\n"
                },
                "optInMode": {
                    "type": "boolean",
                    "description": "The opt-in mode is enabled (`true`) or disabled (`false`)\n"
                },
                "properties": {
                    "$ref": "#/types/dynatrace:index/MobileApplicationProperties:MobileApplicationProperties",
                    "description": "User Action and Session Properties\n"
                },
                "sessionReplay": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace_mobile_app_enablement`) The session replay is enabled (`true`) or disabled (`false`).\n"
                },
                "sessionReplayOnCrash": {
                    "type": "boolean",
                    "description": "The session replay on crash is enabled (`true`) or disabled (`false`). Enabling requires both **sessionReplayEnabled**\nand **optInModeEnabled** values set to `true`.\n"
                },
                "userSessionPercentage": {
                    "type": "integer",
                    "description": "(Field has overlap with `dynatrace_mobile_app_enablement` for mobile and `dynatrace_custom_app_enablement` for custom\napps) The percentage of user sessions to be analyzed\n"
                }
            },
            "requiredInputs": [
                "apdex",
                "beaconEndpointType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MobileApplication resources.\n",
                "properties": {
                    "apdex": {
                        "$ref": "#/types/dynatrace:index/MobileApplicationApdex:MobileApplicationApdex",
                        "description": "Apdex configuration of a mobile application. A duration less than the **tolerable** threshold is considered satisfied\n"
                    },
                    "applicationId": {
                        "type": "string",
                        "description": "The UUID of the application.\n"
                    },
                    "applicationType": {
                        "type": "string",
                        "description": "The type of the application. Either `CUSTOM_APPLICATION` or `MOBILE_APPLICATION`.\n"
                    },
                    "beaconEndpointType": {
                        "type": "string",
                        "description": "The type of the beacon endpoint. Possible values are `CLUSTER_ACTIVE_GATE`, `ENVIRONMENT_ACTIVE_GATE` and `INSTRUMENTED_WEB_SERVER`.\n"
                    },
                    "beaconEndpointUrl": {
                        "type": "string",
                        "description": "The URL of the beacon endpoint. Only applicable when the **beacon_endpoint_type** is set to `ENVIRONMENT_ACTIVE_GATE` or\n`INSTRUMENTED_WEB_SERVER`\n"
                    },
                    "iconType": {
                        "type": "string",
                        "description": "Custom application icon. Mobile apps always use the mobile device icon, so this icon can only be set for custom apps.\n"
                    },
                    "keyUserActions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "User Action names to be flagged as Key User Actions\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the reported value\n"
                    },
                    "optInMode": {
                        "type": "boolean",
                        "description": "The opt-in mode is enabled (`true`) or disabled (`false`)\n"
                    },
                    "properties": {
                        "$ref": "#/types/dynatrace:index/MobileApplicationProperties:MobileApplicationProperties",
                        "description": "User Action and Session Properties\n"
                    },
                    "sessionReplay": {
                        "type": "boolean",
                        "description": "(Field has overlap with `dynatrace_mobile_app_enablement`) The session replay is enabled (`true`) or disabled (`false`).\n"
                    },
                    "sessionReplayOnCrash": {
                        "type": "boolean",
                        "description": "The session replay on crash is enabled (`true`) or disabled (`false`). Enabling requires both **sessionReplayEnabled**\nand **optInModeEnabled** values set to `true`.\n"
                    },
                    "userSessionPercentage": {
                        "type": "integer",
                        "description": "(Field has overlap with `dynatrace_mobile_app_enablement` for mobile and `dynatrace_custom_app_enablement` for custom\napps) The percentage of user sessions to be analyzed\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/mobileNotifications:MobileNotifications": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "required": [
                "enabled"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "requiredInputs": [
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MobileNotifications resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/monitoredTechnologiesApache:MonitoredTechnologiesApache": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                }
            },
            "required": [
                "enabled"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MonitoredTechnologiesApache resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "hostId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/monitoredTechnologiesDotnet:MonitoredTechnologiesDotnet": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "enabledDotNetCore": {
                    "type": "boolean",
                    "description": "Requires Dynatrace OneAgent version 1.117 or later on Windows and version 1.127 or later on Linux and .NET monitoring enabled\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                }
            },
            "required": [
                "enabled"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "enabledDotNetCore": {
                    "type": "boolean",
                    "description": "Requires Dynatrace OneAgent version 1.117 or later on Windows and version 1.127 or later on Linux and .NET monitoring enabled\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MonitoredTechnologiesDotnet resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "enabledDotNetCore": {
                        "type": "boolean",
                        "description": "Requires Dynatrace OneAgent version 1.117 or later on Windows and version 1.127 or later on Linux and .NET monitoring enabled\n"
                    },
                    "hostId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/monitoredTechnologiesGo:MonitoredTechnologiesGo": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "enabledGoStaticMonitoring": {
                    "type": "boolean",
                    "description": "Learn more about the [known limitations for Go static monitoring](https://www.dynatrace.com/support/help/technology-support/application-software/go/support/go-known-limitations#limitations)\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                }
            },
            "required": [
                "enabled"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "enabledGoStaticMonitoring": {
                    "type": "boolean",
                    "description": "Learn more about the [known limitations for Go static monitoring](https://www.dynatrace.com/support/help/technology-support/application-software/go/support/go-known-limitations#limitations)\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MonitoredTechnologiesGo resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "enabledGoStaticMonitoring": {
                        "type": "boolean",
                        "description": "Learn more about the [known limitations for Go static monitoring](https://www.dynatrace.com/support/help/technology-support/application-software/go/support/go-known-limitations#limitations)\n"
                    },
                    "hostId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/monitoredTechnologiesIis:MonitoredTechnologiesIis": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                }
            },
            "required": [
                "enabled"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MonitoredTechnologiesIis resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "hostId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/monitoredTechnologiesJava:MonitoredTechnologiesJava": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                }
            },
            "required": [
                "enabled"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MonitoredTechnologiesJava resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "hostId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/monitoredTechnologiesNginx:MonitoredTechnologiesNginx": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                }
            },
            "required": [
                "enabled"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MonitoredTechnologiesNginx resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "hostId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/monitoredTechnologiesNodejs:MonitoredTechnologiesNodejs": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                }
            },
            "required": [
                "enabled"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MonitoredTechnologiesNodejs resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "hostId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/monitoredTechnologiesOpentracing:MonitoredTechnologiesOpentracing": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                }
            },
            "required": [
                "enabled"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MonitoredTechnologiesOpentracing resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "hostId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/monitoredTechnologiesPhp:MonitoredTechnologiesPhp": {
            "properties": {
                "enablePhpCliServer": {
                    "type": "boolean",
                    "description": "Requires enabled PHP monitoring and Dynatrace OneAgent version 1.261 or later\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "enabledFastCgi": {
                    "type": "boolean",
                    "description": "Requires PHP monitoring enabled and from Dynatrace OneAgent version 1.191 it's ignored and permanently enabled\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                }
            },
            "required": [
                "enabled"
            ],
            "inputProperties": {
                "enablePhpCliServer": {
                    "type": "boolean",
                    "description": "Requires enabled PHP monitoring and Dynatrace OneAgent version 1.261 or later\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "enabledFastCgi": {
                    "type": "boolean",
                    "description": "Requires PHP monitoring enabled and from Dynatrace OneAgent version 1.191 it's ignored and permanently enabled\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MonitoredTechnologiesPhp resources.\n",
                "properties": {
                    "enablePhpCliServer": {
                        "type": "boolean",
                        "description": "Requires enabled PHP monitoring and Dynatrace OneAgent version 1.261 or later\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "enabledFastCgi": {
                        "type": "boolean",
                        "description": "Requires PHP monitoring enabled and from Dynatrace OneAgent version 1.191 it's ignored and permanently enabled\n"
                    },
                    "hostId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/monitoredTechnologiesVarnish:MonitoredTechnologiesVarnish": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                }
            },
            "required": [
                "enabled"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MonitoredTechnologiesVarnish resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "hostId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/monitoredTechnologiesWsmb:MonitoredTechnologiesWsmb": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                }
            },
            "required": [
                "enabled"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MonitoredTechnologiesWsmb resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "hostId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/mutedRequests:MutedRequests": {
            "properties": {
                "mutedRequestNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Muted request names\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                }
            },
            "required": [
                "serviceId"
            ],
            "inputProperties": {
                "mutedRequestNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Muted request names\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MutedRequests resources.\n",
                "properties": {
                    "mutedRequestNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Muted request names\n"
                    },
                    "serviceId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/nettracer:Nettracer": {
            "properties": {
                "netTracer": {
                    "type": "boolean",
                    "description": "When disabled, OneAgent won't use NetTracer to collect network data from containers. Disabled by default. Applies only to Linux hosts. Requires OneAgent 1.231+.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n"
                }
            },
            "required": [
                "netTracer"
            ],
            "inputProperties": {
                "netTracer": {
                    "type": "boolean",
                    "description": "When disabled, OneAgent won't use NetTracer to collect network data from containers. Disabled by default. Applies only to Linux hosts. Requires OneAgent 1.231+.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "netTracer"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Nettracer resources.\n",
                "properties": {
                    "netTracer": {
                        "type": "boolean",
                        "description": "When disabled, OneAgent won't use NetTracer to collect network data from containers. Disabled by default. Applies only to Linux hosts. Requires OneAgent 1.231+.\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/networkTraffic:NetworkTraffic": {
            "properties": {
                "excludeIp": {
                    "$ref": "#/types/dynatrace:index/NetworkTrafficExcludeIp:NetworkTrafficExcludeIp",
                    "description": "Providing a host IP address, you will exclude network traffic only in calculating connectivity (other metrics will still be calculated).\n"
                },
                "excludeNic": {
                    "$ref": "#/types/dynatrace:index/NetworkTrafficExcludeNic:NetworkTrafficExcludeNic",
                    "description": "Selecting a network interface, you will exclude all network traffic on that interface from being monitored. You can select from the list below what to not monitor, or input it manually using the \"other one\" option.\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                }
            },
            "required": [
                "hostId"
            ],
            "inputProperties": {
                "excludeIp": {
                    "$ref": "#/types/dynatrace:index/NetworkTrafficExcludeIp:NetworkTrafficExcludeIp",
                    "description": "Providing a host IP address, you will exclude network traffic only in calculating connectivity (other metrics will still be calculated).\n"
                },
                "excludeNic": {
                    "$ref": "#/types/dynatrace:index/NetworkTrafficExcludeNic:NetworkTrafficExcludeNic",
                    "description": "Selecting a network interface, you will exclude all network traffic on that interface from being monitored. You can select from the list below what to not monitor, or input it manually using the \"other one\" option.\n"
                },
                "hostId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "hostId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkTraffic resources.\n",
                "properties": {
                    "excludeIp": {
                        "$ref": "#/types/dynatrace:index/NetworkTrafficExcludeIp:NetworkTrafficExcludeIp",
                        "description": "Providing a host IP address, you will exclude network traffic only in calculating connectivity (other metrics will still be calculated).\n"
                    },
                    "excludeNic": {
                        "$ref": "#/types/dynatrace:index/NetworkTrafficExcludeNic:NetworkTrafficExcludeNic",
                        "description": "Selecting a network interface, you will exclude all network traffic on that interface from being monitored. You can select from the list below what to not monitor, or input it manually using the \"other one\" option.\n"
                    },
                    "hostId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/networkZone:NetworkZone": {
            "properties": {
                "alternativeZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of alternative network zones.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A short description of the network zone\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the network zone cannot be modified once created. Dynatrace stores the field in lowercase, allowed characters: alphanumeric, hyphen, underscore, dot\n"
                },
                "numOfConfiguredActivegates": {
                    "type": "integer",
                    "description": "The number of ActiveGates in the network zone.\n"
                },
                "numOfConfiguredOneagents": {
                    "type": "integer",
                    "description": "The number of OneAgents that are configured to use the network zone as primary.\n"
                },
                "numOfOneagentsFromOtherZones": {
                    "type": "integer",
                    "description": "The number of OneAgents from other network zones that are using ActiveGates in the network zone.\n"
                },
                "numOfOneagentsUsing": {
                    "type": "integer",
                    "description": "The number of OneAgents that are using ActiveGates in the network zone.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "alternativeZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of alternative network zones.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A short description of the network zone\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the network zone cannot be modified once created. Dynatrace stores the field in lowercase, allowed characters: alphanumeric, hyphen, underscore, dot\n"
                },
                "numOfConfiguredActivegates": {
                    "type": "integer",
                    "description": "The number of ActiveGates in the network zone.\n"
                },
                "numOfConfiguredOneagents": {
                    "type": "integer",
                    "description": "The number of OneAgents that are configured to use the network zone as primary.\n"
                },
                "numOfOneagentsFromOtherZones": {
                    "type": "integer",
                    "description": "The number of OneAgents from other network zones that are using ActiveGates in the network zone.\n"
                },
                "numOfOneagentsUsing": {
                    "type": "integer",
                    "description": "The number of OneAgents that are using ActiveGates in the network zone.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkZone resources.\n",
                "properties": {
                    "alternativeZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of alternative network zones.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A short description of the network zone\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the network zone cannot be modified once created. Dynatrace stores the field in lowercase, allowed characters: alphanumeric, hyphen, underscore, dot\n"
                    },
                    "numOfConfiguredActivegates": {
                        "type": "integer",
                        "description": "The number of ActiveGates in the network zone.\n"
                    },
                    "numOfConfiguredOneagents": {
                        "type": "integer",
                        "description": "The number of OneAgents that are configured to use the network zone as primary.\n"
                    },
                    "numOfOneagentsFromOtherZones": {
                        "type": "integer",
                        "description": "The number of OneAgents from other network zones that are using ActiveGates in the network zone.\n"
                    },
                    "numOfOneagentsUsing": {
                        "type": "integer",
                        "description": "The number of OneAgents that are using ActiveGates in the network zone.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/networkZones:NetworkZones": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Network Zones are enabled (`true`) or disabled (`false`)\n"
                }
            },
            "required": [
                "enabled"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Network Zones are enabled (`true`) or disabled (`false`)\n"
                }
            },
            "requiredInputs": [
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkZones resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Network Zones are enabled (`true`) or disabled (`false`)\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/notification:Notification": {
            "properties": {
                "ansibleTower": {
                    "$ref": "#/types/dynatrace:index/NotificationAnsibleTower:NotificationAnsibleTower",
                    "description": "Configuration for Ansible Tower Notification\n"
                },
                "config": {
                    "$ref": "#/types/dynatrace:index/NotificationConfig:NotificationConfig",
                    "description": "Configuration for Generic Notification\n"
                },
                "email": {
                    "$ref": "#/types/dynatrace:index/NotificationEmail:NotificationEmail",
                    "description": "Configuration for Email Notification\n"
                },
                "jira": {
                    "$ref": "#/types/dynatrace:index/NotificationJira:NotificationJira",
                    "description": "Configuration for Jira Notification\n"
                },
                "opsGenie": {
                    "$ref": "#/types/dynatrace:index/NotificationOpsGenie:NotificationOpsGenie",
                    "description": "Configuration for OpsGenie Notification\n"
                },
                "pagerDuty": {
                    "$ref": "#/types/dynatrace:index/NotificationPagerDuty:NotificationPagerDuty",
                    "description": "Configuration for PagerDuty Notification\n"
                },
                "serviceNow": {
                    "$ref": "#/types/dynatrace:index/NotificationServiceNow:NotificationServiceNow",
                    "description": "Configuration for ServiceNow Notification\n"
                },
                "slack": {
                    "$ref": "#/types/dynatrace:index/NotificationSlack:NotificationSlack",
                    "description": "Configuration for Slack Notification\n"
                },
                "trello": {
                    "$ref": "#/types/dynatrace:index/NotificationTrello:NotificationTrello",
                    "description": "Configuration for Trello Notification\n"
                },
                "victorOps": {
                    "$ref": "#/types/dynatrace:index/NotificationVictorOps:NotificationVictorOps",
                    "description": "Configuration for VictorOps Notification\n"
                },
                "webHook": {
                    "$ref": "#/types/dynatrace:index/NotificationWebHook:NotificationWebHook",
                    "description": "Configuration for WebHook Notification\n"
                },
                "xmatters": {
                    "$ref": "#/types/dynatrace:index/NotificationXmatters:NotificationXmatters",
                    "description": "Configuration for XMatters Notification\n"
                }
            },
            "inputProperties": {
                "ansibleTower": {
                    "$ref": "#/types/dynatrace:index/NotificationAnsibleTower:NotificationAnsibleTower",
                    "description": "Configuration for Ansible Tower Notification\n"
                },
                "config": {
                    "$ref": "#/types/dynatrace:index/NotificationConfig:NotificationConfig",
                    "description": "Configuration for Generic Notification\n"
                },
                "email": {
                    "$ref": "#/types/dynatrace:index/NotificationEmail:NotificationEmail",
                    "description": "Configuration for Email Notification\n"
                },
                "jira": {
                    "$ref": "#/types/dynatrace:index/NotificationJira:NotificationJira",
                    "description": "Configuration for Jira Notification\n"
                },
                "opsGenie": {
                    "$ref": "#/types/dynatrace:index/NotificationOpsGenie:NotificationOpsGenie",
                    "description": "Configuration for OpsGenie Notification\n"
                },
                "pagerDuty": {
                    "$ref": "#/types/dynatrace:index/NotificationPagerDuty:NotificationPagerDuty",
                    "description": "Configuration for PagerDuty Notification\n"
                },
                "serviceNow": {
                    "$ref": "#/types/dynatrace:index/NotificationServiceNow:NotificationServiceNow",
                    "description": "Configuration for ServiceNow Notification\n"
                },
                "slack": {
                    "$ref": "#/types/dynatrace:index/NotificationSlack:NotificationSlack",
                    "description": "Configuration for Slack Notification\n"
                },
                "trello": {
                    "$ref": "#/types/dynatrace:index/NotificationTrello:NotificationTrello",
                    "description": "Configuration for Trello Notification\n"
                },
                "victorOps": {
                    "$ref": "#/types/dynatrace:index/NotificationVictorOps:NotificationVictorOps",
                    "description": "Configuration for VictorOps Notification\n"
                },
                "webHook": {
                    "$ref": "#/types/dynatrace:index/NotificationWebHook:NotificationWebHook",
                    "description": "Configuration for WebHook Notification\n"
                },
                "xmatters": {
                    "$ref": "#/types/dynatrace:index/NotificationXmatters:NotificationXmatters",
                    "description": "Configuration for XMatters Notification\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Notification resources.\n",
                "properties": {
                    "ansibleTower": {
                        "$ref": "#/types/dynatrace:index/NotificationAnsibleTower:NotificationAnsibleTower",
                        "description": "Configuration for Ansible Tower Notification\n"
                    },
                    "config": {
                        "$ref": "#/types/dynatrace:index/NotificationConfig:NotificationConfig",
                        "description": "Configuration for Generic Notification\n"
                    },
                    "email": {
                        "$ref": "#/types/dynatrace:index/NotificationEmail:NotificationEmail",
                        "description": "Configuration for Email Notification\n"
                    },
                    "jira": {
                        "$ref": "#/types/dynatrace:index/NotificationJira:NotificationJira",
                        "description": "Configuration for Jira Notification\n"
                    },
                    "opsGenie": {
                        "$ref": "#/types/dynatrace:index/NotificationOpsGenie:NotificationOpsGenie",
                        "description": "Configuration for OpsGenie Notification\n"
                    },
                    "pagerDuty": {
                        "$ref": "#/types/dynatrace:index/NotificationPagerDuty:NotificationPagerDuty",
                        "description": "Configuration for PagerDuty Notification\n"
                    },
                    "serviceNow": {
                        "$ref": "#/types/dynatrace:index/NotificationServiceNow:NotificationServiceNow",
                        "description": "Configuration for ServiceNow Notification\n"
                    },
                    "slack": {
                        "$ref": "#/types/dynatrace:index/NotificationSlack:NotificationSlack",
                        "description": "Configuration for Slack Notification\n"
                    },
                    "trello": {
                        "$ref": "#/types/dynatrace:index/NotificationTrello:NotificationTrello",
                        "description": "Configuration for Trello Notification\n"
                    },
                    "victorOps": {
                        "$ref": "#/types/dynatrace:index/NotificationVictorOps:NotificationVictorOps",
                        "description": "Configuration for VictorOps Notification\n"
                    },
                    "webHook": {
                        "$ref": "#/types/dynatrace:index/NotificationWebHook:NotificationWebHook",
                        "description": "Configuration for WebHook Notification\n"
                    },
                    "xmatters": {
                        "$ref": "#/types/dynatrace:index/NotificationXmatters:NotificationXmatters",
                        "description": "Configuration for XMatters Notification\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/oneagentDefaultVersion:OneagentDefaultVersion": {
            "properties": {
                "defaultVersion": {
                    "type": "string",
                    "description": "Default version\n"
                },
                "revision": {
                    "type": "string",
                    "description": "Revision\n"
                }
            },
            "required": [
                "defaultVersion"
            ],
            "inputProperties": {
                "defaultVersion": {
                    "type": "string",
                    "description": "Default version\n"
                },
                "revision": {
                    "type": "string",
                    "description": "Revision\n"
                }
            },
            "requiredInputs": [
                "defaultVersion"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OneagentDefaultVersion resources.\n",
                "properties": {
                    "defaultVersion": {
                        "type": "string",
                        "description": "Default version\n"
                    },
                    "revision": {
                        "type": "string",
                        "description": "Revision\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/oneagentFeatures:OneagentFeatures": {
            "properties": {
                "_restore_": {
                    "type": "string",
                    "description": "Used internally by the terraform provider. Do not populate\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "forcible": {
                    "type": "boolean",
                    "description": "Activate this feature also in OneAgents only fulfilling the minimum Opt-In version\n"
                },
                "instrumentation": {
                    "type": "boolean",
                    "description": "Instrumentation enabled (change needs a process restart)\n"
                },
                "key": {
                    "type": "string",
                    "description": "Feature\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (PROCESS*GROUP*INSTANCE, PROCESS_GROUP). Omit this property if you want to cover the whole environment.\n"
                }
            },
            "required": [
                "_restore_",
                "enabled",
                "key"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "forcible": {
                    "type": "boolean",
                    "description": "Activate this feature also in OneAgents only fulfilling the minimum Opt-In version\n"
                },
                "instrumentation": {
                    "type": "boolean",
                    "description": "Instrumentation enabled (change needs a process restart)\n"
                },
                "key": {
                    "type": "string",
                    "description": "Feature\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (PROCESS*GROUP*INSTANCE, PROCESS_GROUP). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enabled",
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OneagentFeatures resources.\n",
                "properties": {
                    "_restore_": {
                        "type": "string",
                        "description": "Used internally by the terraform provider. Do not populate\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "forcible": {
                        "type": "boolean",
                        "description": "Activate this feature also in OneAgents only fulfilling the minimum Opt-In version\n"
                    },
                    "instrumentation": {
                        "type": "boolean",
                        "description": "Instrumentation enabled (change needs a process restart)\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "Feature\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (PROCESS*GROUP*INSTANCE, PROCESS_GROUP). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/oneagentSideMasking:OneagentSideMasking": {
            "properties": {
                "isEmailMaskingEnabled": {
                    "type": "boolean",
                    "description": "Exclude email addresses from URLs\n"
                },
                "isFinancialMaskingEnabled": {
                    "type": "boolean",
                    "description": "Exclude IBANs and payment card numbers from URLs\n"
                },
                "isNumbersMaskingEnabled": {
                    "type": "boolean",
                    "description": "Exclude hexadecimal IDs and consecutive numbers above 5 digits from URLs\n"
                },
                "isQueryMaskingEnabled": {
                    "type": "boolean",
                    "description": "Exclude query parameters from URLs and web requests\n"
                },
                "processGroupId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                }
            },
            "required": [
                "isEmailMaskingEnabled",
                "isFinancialMaskingEnabled",
                "isNumbersMaskingEnabled",
                "isQueryMaskingEnabled"
            ],
            "inputProperties": {
                "isEmailMaskingEnabled": {
                    "type": "boolean",
                    "description": "Exclude email addresses from URLs\n"
                },
                "isFinancialMaskingEnabled": {
                    "type": "boolean",
                    "description": "Exclude IBANs and payment card numbers from URLs\n"
                },
                "isNumbersMaskingEnabled": {
                    "type": "boolean",
                    "description": "Exclude hexadecimal IDs and consecutive numbers above 5 digits from URLs\n"
                },
                "isQueryMaskingEnabled": {
                    "type": "boolean",
                    "description": "Exclude query parameters from URLs and web requests\n"
                },
                "processGroupId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                }
            },
            "requiredInputs": [
                "isEmailMaskingEnabled",
                "isFinancialMaskingEnabled",
                "isNumbersMaskingEnabled",
                "isQueryMaskingEnabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OneagentSideMasking resources.\n",
                "properties": {
                    "isEmailMaskingEnabled": {
                        "type": "boolean",
                        "description": "Exclude email addresses from URLs\n"
                    },
                    "isFinancialMaskingEnabled": {
                        "type": "boolean",
                        "description": "Exclude IBANs and payment card numbers from URLs\n"
                    },
                    "isNumbersMaskingEnabled": {
                        "type": "boolean",
                        "description": "Exclude hexadecimal IDs and consecutive numbers above 5 digits from URLs\n"
                    },
                    "isQueryMaskingEnabled": {
                        "type": "boolean",
                        "description": "Exclude query parameters from URLs and web requests\n"
                    },
                    "processGroupId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/oneagentUpdates:OneagentUpdates": {
            "properties": {
                "maintenanceWindows": {
                    "$ref": "#/types/dynatrace:index/OneagentUpdatesMaintenanceWindows:OneagentUpdatesMaintenanceWindows",
                    "description": "Maintenance windows\n"
                },
                "revision": {
                    "type": "string",
                    "description": "Revision\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n"
                },
                "targetVersion": {
                    "type": "string",
                    "description": "Target version\n"
                },
                "updateMode": {
                    "type": "string",
                    "description": "Possible Values: `AUTOMATIC`, `AUTOMATIC_DURING_MW`, `MANUAL`\n"
                }
            },
            "required": [
                "updateMode"
            ],
            "inputProperties": {
                "maintenanceWindows": {
                    "$ref": "#/types/dynatrace:index/OneagentUpdatesMaintenanceWindows:OneagentUpdatesMaintenanceWindows",
                    "description": "Maintenance windows\n"
                },
                "revision": {
                    "type": "string",
                    "description": "Revision\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                },
                "targetVersion": {
                    "type": "string",
                    "description": "Target version\n"
                },
                "updateMode": {
                    "type": "string",
                    "description": "Possible Values: `AUTOMATIC`, `AUTOMATIC_DURING_MW`, `MANUAL`\n"
                }
            },
            "requiredInputs": [
                "updateMode"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OneagentUpdates resources.\n",
                "properties": {
                    "maintenanceWindows": {
                        "$ref": "#/types/dynatrace:index/OneagentUpdatesMaintenanceWindows:OneagentUpdatesMaintenanceWindows",
                        "description": "Maintenance windows\n"
                    },
                    "revision": {
                        "type": "string",
                        "description": "Revision\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    },
                    "targetVersion": {
                        "type": "string",
                        "description": "Target version\n"
                    },
                    "updateMode": {
                        "type": "string",
                        "description": "Possible Values: `AUTOMATIC`, `AUTOMATIC_DURING_MW`, `MANUAL`\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/opentelemetryMetrics:OpentelemetryMetrics": {
            "properties": {
                "additionalAttributes": {
                    "$ref": "#/types/dynatrace:index/OpentelemetryMetricsAdditionalAttributes:OpentelemetryMetricsAdditionalAttributes",
                    "description": "When enabled, the attributes defined in the list below will be added as dimensions to ingested OTLP metrics if they are present in the OpenTelemetry resource or in the instrumentation scope.\n"
                },
                "additionalAttributesToDimensionEnabled": {
                    "type": "boolean",
                    "description": "Add the resource and scope attributes configured below as dimensions\n"
                },
                "meterNameToDimensionEnabled": {
                    "type": "boolean",
                    "description": "When enabled, the Meter name (also referred to as InstrumentationScope or InstrumentationLibrary in OpenTelemetry SDKs)\nand version will be added as dimensions (`otel.scope.name` and `otel.scope.version`) to ingested OTLP metrics. **Note:**\nModifying this setting will cause the metric to change. This may have an impact on existing dashboards, events and\nalerts that make use of these dimensions. In this case, they will need to be updated manually\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Specifies whether the given attributes to enable (`additional_attributes`) and the attributes to drop\n(`to_drop_attributes`) will get applied explicitly (`EXPLICIT`) or additive (`ADDITIVE`). Default behavior is `EXPLICIT`\n- in which case it is recommended to have just ONE instance of this resource With mode `ADDITIVE` you're able to have\nmultiple instances of this resource within the same Terraform Module. **Note:** Using `ADDITIVE` and `EXPLICIT` at the\nsame time within differnt resource instances will lead to unexpected results.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (environment-default). Omit this property if you want to cover the whole environment.\n"
                },
                "toDropAttributes": {
                    "$ref": "#/types/dynatrace:index/OpentelemetryMetricsToDropAttributes:OpentelemetryMetricsToDropAttributes",
                    "description": "The attributes defined in the list below will be dropped from all ingested OTLP metrics. Upon ingest, the *Allow list:\nresource and scope attributes* above is applied first. Then, the *Deny list: all attributes* below is applied. The deny\nlist therefore applies to all attributes from all sources (data points, scope and resource). **Notes:** * Modifying this\nsetting (adding, renaming, disabling or removing attributes) will cause the metric to change. This may have an impact on\nexisting dashboards, events and alerts that make use of these dimensions. In this case, they will need to be updated\nmanually. * Dynatrace does not recommend including attributes starting with \"dt.\" to the deny list. Dynatrace leverages\nthese attributes to [Enrich\nmetrics](https://www.dynatrace.com/support/help/extend-dynatrace/extend-metrics/reference/enrich-metrics).\n"
                }
            },
            "required": [
                "additionalAttributesToDimensionEnabled",
                "meterNameToDimensionEnabled"
            ],
            "inputProperties": {
                "additionalAttributes": {
                    "$ref": "#/types/dynatrace:index/OpentelemetryMetricsAdditionalAttributes:OpentelemetryMetricsAdditionalAttributes",
                    "description": "When enabled, the attributes defined in the list below will be added as dimensions to ingested OTLP metrics if they are present in the OpenTelemetry resource or in the instrumentation scope.\n"
                },
                "additionalAttributesToDimensionEnabled": {
                    "type": "boolean",
                    "description": "Add the resource and scope attributes configured below as dimensions\n"
                },
                "meterNameToDimensionEnabled": {
                    "type": "boolean",
                    "description": "When enabled, the Meter name (also referred to as InstrumentationScope or InstrumentationLibrary in OpenTelemetry SDKs)\nand version will be added as dimensions (`otel.scope.name` and `otel.scope.version`) to ingested OTLP metrics. **Note:**\nModifying this setting will cause the metric to change. This may have an impact on existing dashboards, events and\nalerts that make use of these dimensions. In this case, they will need to be updated manually\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Specifies whether the given attributes to enable (`additional_attributes`) and the attributes to drop\n(`to_drop_attributes`) will get applied explicitly (`EXPLICIT`) or additive (`ADDITIVE`). Default behavior is `EXPLICIT`\n- in which case it is recommended to have just ONE instance of this resource With mode `ADDITIVE` you're able to have\nmultiple instances of this resource within the same Terraform Module. **Note:** Using `ADDITIVE` and `EXPLICIT` at the\nsame time within differnt resource instances will lead to unexpected results.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (environment-default). Omit this property if you want to cover the whole environment.\n"
                },
                "toDropAttributes": {
                    "$ref": "#/types/dynatrace:index/OpentelemetryMetricsToDropAttributes:OpentelemetryMetricsToDropAttributes",
                    "description": "The attributes defined in the list below will be dropped from all ingested OTLP metrics. Upon ingest, the *Allow list:\nresource and scope attributes* above is applied first. Then, the *Deny list: all attributes* below is applied. The deny\nlist therefore applies to all attributes from all sources (data points, scope and resource). **Notes:** * Modifying this\nsetting (adding, renaming, disabling or removing attributes) will cause the metric to change. This may have an impact on\nexisting dashboards, events and alerts that make use of these dimensions. In this case, they will need to be updated\nmanually. * Dynatrace does not recommend including attributes starting with \"dt.\" to the deny list. Dynatrace leverages\nthese attributes to [Enrich\nmetrics](https://www.dynatrace.com/support/help/extend-dynatrace/extend-metrics/reference/enrich-metrics).\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OpentelemetryMetrics resources.\n",
                "properties": {
                    "additionalAttributes": {
                        "$ref": "#/types/dynatrace:index/OpentelemetryMetricsAdditionalAttributes:OpentelemetryMetricsAdditionalAttributes",
                        "description": "When enabled, the attributes defined in the list below will be added as dimensions to ingested OTLP metrics if they are present in the OpenTelemetry resource or in the instrumentation scope.\n"
                    },
                    "additionalAttributesToDimensionEnabled": {
                        "type": "boolean",
                        "description": "Add the resource and scope attributes configured below as dimensions\n"
                    },
                    "meterNameToDimensionEnabled": {
                        "type": "boolean",
                        "description": "When enabled, the Meter name (also referred to as InstrumentationScope or InstrumentationLibrary in OpenTelemetry SDKs)\nand version will be added as dimensions (`otel.scope.name` and `otel.scope.version`) to ingested OTLP metrics. **Note:**\nModifying this setting will cause the metric to change. This may have an impact on existing dashboards, events and\nalerts that make use of these dimensions. In this case, they will need to be updated manually\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Specifies whether the given attributes to enable (`additional_attributes`) and the attributes to drop\n(`to_drop_attributes`) will get applied explicitly (`EXPLICIT`) or additive (`ADDITIVE`). Default behavior is `EXPLICIT`\n- in which case it is recommended to have just ONE instance of this resource With mode `ADDITIVE` you're able to have\nmultiple instances of this resource within the same Terraform Module. **Note:** Using `ADDITIVE` and `EXPLICIT` at the\nsame time within differnt resource instances will lead to unexpected results.\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (environment-default). Omit this property if you want to cover the whole environment.\n"
                    },
                    "toDropAttributes": {
                        "$ref": "#/types/dynatrace:index/OpentelemetryMetricsToDropAttributes:OpentelemetryMetricsToDropAttributes",
                        "description": "The attributes defined in the list below will be dropped from all ingested OTLP metrics. Upon ingest, the *Allow list:\nresource and scope attributes* above is applied first. Then, the *Deny list: all attributes* below is applied. The deny\nlist therefore applies to all attributes from all sources (data points, scope and resource). **Notes:** * Modifying this\nsetting (adding, renaming, disabling or removing attributes) will cause the metric to change. This may have an impact on\nexisting dashboards, events and alerts that make use of these dimensions. In this case, they will need to be updated\nmanually. * Dynatrace does not recommend including attributes starting with \"dt.\" to the deny list. Dynatrace leverages\nthese attributes to [Enrich\nmetrics](https://www.dynatrace.com/support/help/extend-dynatrace/extend-metrics/reference/enrich-metrics).\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/opsGenieNotification:OpsGenieNotification": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "The API key to access OpsGenie\n",
                    "secret": true
                },
                "domain": {
                    "type": "string",
                    "description": "The region domain of the OpsGenie\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                },
                "message": {
                    "type": "string",
                    "description": "The content of the message.  You can use the following placeholders:  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                }
            },
            "required": [
                "active",
                "domain",
                "legacyId",
                "message",
                "name",
                "profile"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "The API key to access OpsGenie\n",
                    "secret": true
                },
                "domain": {
                    "type": "string",
                    "description": "The region domain of the OpsGenie\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                },
                "message": {
                    "type": "string",
                    "description": "The content of the message.  You can use the following placeholders:  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                }
            },
            "requiredInputs": [
                "active",
                "domain",
                "message",
                "profile"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OpsGenieNotification resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                    },
                    "apiKey": {
                        "type": "string",
                        "description": "The API key to access OpsGenie\n",
                        "secret": true
                    },
                    "domain": {
                        "type": "string",
                        "description": "The region domain of the OpsGenie\n"
                    },
                    "legacyId": {
                        "type": "string",
                        "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "The content of the message.  You can use the following placeholders:  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the notification configuration\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "The ID of the associated alerting profile\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/osServices:OsServices": {
            "properties": {
                "alertActivationDuration": {
                    "type": "integer",
                    "description": "The number of **10-second measurement cycles** before alerting is triggered\n"
                },
                "alerting": {
                    "type": "boolean",
                    "description": "Toggle the switch in order to enable or disable alerting for this policy\n"
                },
                "detectionConditionsLinux": {
                    "$ref": "#/types/dynatrace:index/OsServicesDetectionConditionsLinux:OsServicesDetectionConditionsLinux",
                    "description": "Detection rules\n"
                },
                "detectionConditionsWindows": {
                    "$ref": "#/types/dynatrace:index/OsServicesDetectionConditionsWindows:OsServicesDetectionConditionsWindows",
                    "description": "Detection rules\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "metadata": {
                    "$ref": "#/types/dynatrace:index/OsServicesMetadata:OsServicesMetadata",
                    "description": "Set of additional key-value properties to be attached to the triggered event.\n"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Toggle the switch in order to enable or disable availability metric monitoring for this policy. Availability metrics produce custom metrics. Refer to [documentation](https://dt-url.net/vl03xzk) for consumption examples. Each monitored service consumes one custom metric.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Rule name\n"
                },
                "notInstalledAlerting": {
                    "type": "boolean",
                    "description": "By default, Dynatrace does not alert if the service is not installed. Toggle the switch to enable or disable this feature\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n"
                },
                "statusConditionLinux": {
                    "type": "string",
                    "description": "This string has to match a required format. See [OS services monitoring](https://dt-url.net/vl03xzk).\n"
                },
                "statusConditionWindows": {
                    "type": "string",
                    "description": "This string has to match a required format. See [OS services monitoring](https://dt-url.net/vl03xzk). - `$eq(paused)`\n– Matches services that are in paused state. Available logic operations: - `$not($eq(paused))` – Matches services\nthat are in state different from paused. - `$or($eq(paused),$eq(running))` – Matches services that are either in\npaused or running state. Use one of the following values as a parameter for this condition: - `running` - `stopped` -\n`start_pending` - `stop_pending` - `continue_pending` - `pause_pending` - `paused`\n"
                },
                "system": {
                    "type": "string",
                    "description": "Possible Values: `LINUX`, `WINDOWS`\n"
                }
            },
            "required": [
                "alerting",
                "enabled",
                "insertAfter",
                "monitoring",
                "name",
                "system"
            ],
            "inputProperties": {
                "alertActivationDuration": {
                    "type": "integer",
                    "description": "The number of **10-second measurement cycles** before alerting is triggered\n"
                },
                "alerting": {
                    "type": "boolean",
                    "description": "Toggle the switch in order to enable or disable alerting for this policy\n"
                },
                "detectionConditionsLinux": {
                    "$ref": "#/types/dynatrace:index/OsServicesDetectionConditionsLinux:OsServicesDetectionConditionsLinux",
                    "description": "Detection rules\n"
                },
                "detectionConditionsWindows": {
                    "$ref": "#/types/dynatrace:index/OsServicesDetectionConditionsWindows:OsServicesDetectionConditionsWindows",
                    "description": "Detection rules\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "metadata": {
                    "$ref": "#/types/dynatrace:index/OsServicesMetadata:OsServicesMetadata",
                    "description": "Set of additional key-value properties to be attached to the triggered event.\n"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Toggle the switch in order to enable or disable availability metric monitoring for this policy. Availability metrics produce custom metrics. Refer to [documentation](https://dt-url.net/vl03xzk) for consumption examples. Each monitored service consumes one custom metric.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Rule name\n"
                },
                "notInstalledAlerting": {
                    "type": "boolean",
                    "description": "By default, Dynatrace does not alert if the service is not installed. Toggle the switch to enable or disable this feature\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                },
                "statusConditionLinux": {
                    "type": "string",
                    "description": "This string has to match a required format. See [OS services monitoring](https://dt-url.net/vl03xzk).\n"
                },
                "statusConditionWindows": {
                    "type": "string",
                    "description": "This string has to match a required format. See [OS services monitoring](https://dt-url.net/vl03xzk). - `$eq(paused)`\n– Matches services that are in paused state. Available logic operations: - `$not($eq(paused))` – Matches services\nthat are in state different from paused. - `$or($eq(paused),$eq(running))` – Matches services that are either in\npaused or running state. Use one of the following values as a parameter for this condition: - `running` - `stopped` -\n`start_pending` - `stop_pending` - `continue_pending` - `pause_pending` - `paused`\n"
                },
                "system": {
                    "type": "string",
                    "description": "Possible Values: `LINUX`, `WINDOWS`\n"
                }
            },
            "requiredInputs": [
                "alerting",
                "enabled",
                "monitoring",
                "system"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OsServices resources.\n",
                "properties": {
                    "alertActivationDuration": {
                        "type": "integer",
                        "description": "The number of **10-second measurement cycles** before alerting is triggered\n"
                    },
                    "alerting": {
                        "type": "boolean",
                        "description": "Toggle the switch in order to enable or disable alerting for this policy\n"
                    },
                    "detectionConditionsLinux": {
                        "$ref": "#/types/dynatrace:index/OsServicesDetectionConditionsLinux:OsServicesDetectionConditionsLinux",
                        "description": "Detection rules\n"
                    },
                    "detectionConditionsWindows": {
                        "$ref": "#/types/dynatrace:index/OsServicesDetectionConditionsWindows:OsServicesDetectionConditionsWindows",
                        "description": "Detection rules\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "metadata": {
                        "$ref": "#/types/dynatrace:index/OsServicesMetadata:OsServicesMetadata",
                        "description": "Set of additional key-value properties to be attached to the triggered event.\n"
                    },
                    "monitoring": {
                        "type": "boolean",
                        "description": "Toggle the switch in order to enable or disable availability metric monitoring for this policy. Availability metrics produce custom metrics. Refer to [documentation](https://dt-url.net/vl03xzk) for consumption examples. Each monitored service consumes one custom metric.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Rule name\n"
                    },
                    "notInstalledAlerting": {
                        "type": "boolean",
                        "description": "By default, Dynatrace does not alert if the service is not installed. Toggle the switch to enable or disable this feature\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    },
                    "statusConditionLinux": {
                        "type": "string",
                        "description": "This string has to match a required format. See [OS services monitoring](https://dt-url.net/vl03xzk).\n"
                    },
                    "statusConditionWindows": {
                        "type": "string",
                        "description": "This string has to match a required format. See [OS services monitoring](https://dt-url.net/vl03xzk). - `$eq(paused)`\n– Matches services that are in paused state. Available logic operations: - `$not($eq(paused))` – Matches services\nthat are in state different from paused. - `$or($eq(paused),$eq(running))` – Matches services that are either in\npaused or running state. Use one of the following values as a parameter for this condition: - `running` - `stopped` -\n`start_pending` - `stop_pending` - `continue_pending` - `pause_pending` - `paused`\n"
                    },
                    "system": {
                        "type": "string",
                        "description": "Possible Values: `LINUX`, `WINDOWS`\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/ownershipConfig:OwnershipConfig": {
            "properties": {
                "ownershipIdentifiers": {
                    "$ref": "#/types/dynatrace:index/OwnershipConfigOwnershipIdentifiers:OwnershipConfigOwnershipIdentifiers",
                    "description": "Tags and metadata are key-value pairs. Define keys for tags and metadata that are considered for ownership. If a tag or any metadata starts with a key defined below, the value of the tag or metadata is considered a team identifier.\n"
                }
            },
            "required": [
                "ownershipIdentifiers"
            ],
            "inputProperties": {
                "ownershipIdentifiers": {
                    "$ref": "#/types/dynatrace:index/OwnershipConfigOwnershipIdentifiers:OwnershipConfigOwnershipIdentifiers",
                    "description": "Tags and metadata are key-value pairs. Define keys for tags and metadata that are considered for ownership. If a tag or any metadata starts with a key defined below, the value of the tag or metadata is considered a team identifier.\n"
                }
            },
            "requiredInputs": [
                "ownershipIdentifiers"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OwnershipConfig resources.\n",
                "properties": {
                    "ownershipIdentifiers": {
                        "$ref": "#/types/dynatrace:index/OwnershipConfigOwnershipIdentifiers:OwnershipConfigOwnershipIdentifiers",
                        "description": "Tags and metadata are key-value pairs. Define keys for tags and metadata that are considered for ownership. If a tag or any metadata starts with a key defined below, the value of the tag or metadata is considered a team identifier.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/ownershipTeams:OwnershipTeams": {
            "properties": {
                "additionalInformation": {
                    "$ref": "#/types/dynatrace:index/OwnershipTeamsAdditionalInformation:OwnershipTeamsAdditionalInformation",
                    "description": "Define key/value pairs that further describe this team — for example, cost center, solution type, or business unit\nassignments.\n"
                },
                "contactDetails": {
                    "$ref": "#/types/dynatrace:index/OwnershipTeamsContactDetails:OwnershipTeamsContactDetails",
                    "description": "Define options for messaging integration or other means of contacting this team.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description\n"
                },
                "externalId": {
                    "type": "string",
                    "description": "This field should only be used for the automation purpose when importing team information.\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "The team identifier is used to reference the team from any entity in Dynatrace. If you are using Kubernetes labels, keep in mind the 63 character limit that they enforce.\n"
                },
                "links": {
                    "$ref": "#/types/dynatrace:index/OwnershipTeamsLinks:OwnershipTeamsLinks",
                    "description": "Include links to online resources where information relevant to this team’s responsibilities can be found.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Team name\n"
                },
                "responsibilities": {
                    "$ref": "#/types/dynatrace:index/OwnershipTeamsResponsibilities:OwnershipTeamsResponsibilities",
                    "description": "Turn on all responsibility assignments that apply to this team.\n"
                },
                "supplementaryIdentifiers": {
                    "$ref": "#/types/dynatrace:index/OwnershipTeamsSupplementaryIdentifiers:OwnershipTeamsSupplementaryIdentifiers",
                    "description": "The supplementary team identifiers can be optionally used in addition to the main team identifier to reference this team from any entity in Dynatrace. Up to 3 supplementary identifiers are supported.\n"
                }
            },
            "required": [
                "identifier",
                "name",
                "responsibilities"
            ],
            "inputProperties": {
                "additionalInformation": {
                    "$ref": "#/types/dynatrace:index/OwnershipTeamsAdditionalInformation:OwnershipTeamsAdditionalInformation",
                    "description": "Define key/value pairs that further describe this team — for example, cost center, solution type, or business unit\nassignments.\n"
                },
                "contactDetails": {
                    "$ref": "#/types/dynatrace:index/OwnershipTeamsContactDetails:OwnershipTeamsContactDetails",
                    "description": "Define options for messaging integration or other means of contacting this team.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description\n"
                },
                "externalId": {
                    "type": "string",
                    "description": "This field should only be used for the automation purpose when importing team information.\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "The team identifier is used to reference the team from any entity in Dynatrace. If you are using Kubernetes labels, keep in mind the 63 character limit that they enforce.\n"
                },
                "links": {
                    "$ref": "#/types/dynatrace:index/OwnershipTeamsLinks:OwnershipTeamsLinks",
                    "description": "Include links to online resources where information relevant to this team’s responsibilities can be found.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Team name\n"
                },
                "responsibilities": {
                    "$ref": "#/types/dynatrace:index/OwnershipTeamsResponsibilities:OwnershipTeamsResponsibilities",
                    "description": "Turn on all responsibility assignments that apply to this team.\n"
                },
                "supplementaryIdentifiers": {
                    "$ref": "#/types/dynatrace:index/OwnershipTeamsSupplementaryIdentifiers:OwnershipTeamsSupplementaryIdentifiers",
                    "description": "The supplementary team identifiers can be optionally used in addition to the main team identifier to reference this team from any entity in Dynatrace. Up to 3 supplementary identifiers are supported.\n"
                }
            },
            "requiredInputs": [
                "identifier",
                "responsibilities"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OwnershipTeams resources.\n",
                "properties": {
                    "additionalInformation": {
                        "$ref": "#/types/dynatrace:index/OwnershipTeamsAdditionalInformation:OwnershipTeamsAdditionalInformation",
                        "description": "Define key/value pairs that further describe this team — for example, cost center, solution type, or business unit\nassignments.\n"
                    },
                    "contactDetails": {
                        "$ref": "#/types/dynatrace:index/OwnershipTeamsContactDetails:OwnershipTeamsContactDetails",
                        "description": "Define options for messaging integration or other means of contacting this team.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description\n"
                    },
                    "externalId": {
                        "type": "string",
                        "description": "This field should only be used for the automation purpose when importing team information.\n"
                    },
                    "identifier": {
                        "type": "string",
                        "description": "The team identifier is used to reference the team from any entity in Dynatrace. If you are using Kubernetes labels, keep in mind the 63 character limit that they enforce.\n"
                    },
                    "links": {
                        "$ref": "#/types/dynatrace:index/OwnershipTeamsLinks:OwnershipTeamsLinks",
                        "description": "Include links to online resources where information relevant to this team’s responsibilities can be found.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Team name\n"
                    },
                    "responsibilities": {
                        "$ref": "#/types/dynatrace:index/OwnershipTeamsResponsibilities:OwnershipTeamsResponsibilities",
                        "description": "Turn on all responsibility assignments that apply to this team.\n"
                    },
                    "supplementaryIdentifiers": {
                        "$ref": "#/types/dynatrace:index/OwnershipTeamsSupplementaryIdentifiers:OwnershipTeamsSupplementaryIdentifiers",
                        "description": "The supplementary team identifiers can be optionally used in addition to the main team identifier to reference this team from any entity in Dynatrace. Up to 3 supplementary identifiers are supported.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/pagerDutyNotification:PagerDutyNotification": {
            "properties": {
                "account": {
                    "type": "string",
                    "description": "The name of the PagerDuty account\n"
                },
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "The API key to access PagerDuty\n",
                    "secret": true
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "service": {
                    "type": "string",
                    "description": "The name of the PagerDuty Service\n"
                }
            },
            "required": [
                "account",
                "active",
                "legacyId",
                "name",
                "profile",
                "service"
            ],
            "inputProperties": {
                "account": {
                    "type": "string",
                    "description": "The name of the PagerDuty account\n"
                },
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "The API key to access PagerDuty\n",
                    "secret": true
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "service": {
                    "type": "string",
                    "description": "The name of the PagerDuty Service\n"
                }
            },
            "requiredInputs": [
                "account",
                "active",
                "profile",
                "service"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PagerDutyNotification resources.\n",
                "properties": {
                    "account": {
                        "type": "string",
                        "description": "The name of the PagerDuty account\n"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                    },
                    "apiKey": {
                        "type": "string",
                        "description": "The API key to access PagerDuty\n",
                        "secret": true
                    },
                    "legacyId": {
                        "type": "string",
                        "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the notification configuration\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "The ID of the associated alerting profile\n"
                    },
                    "service": {
                        "type": "string",
                        "description": "The name of the PagerDuty Service\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/pgAlerting:PgAlerting": {
            "properties": {
                "alertingMode": {
                    "type": "string",
                    "description": "Possible Values: `ON_INSTANCE_COUNT_VIOLATION`, `ON_PGI_UNAVAILABILITY`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable (`true`) or disable (`false`) process group availability monitoring\n"
                },
                "minimumInstanceThreshold": {
                    "type": "integer",
                    "description": "Open a new problem if the number of active process instances in the group is fewer than X\n"
                },
                "processGroup": {
                    "type": "string",
                    "description": "The process group ID for availability monitoring\n"
                }
            },
            "required": [
                "enabled",
                "processGroup"
            ],
            "inputProperties": {
                "alertingMode": {
                    "type": "string",
                    "description": "Possible Values: `ON_INSTANCE_COUNT_VIOLATION`, `ON_PGI_UNAVAILABILITY`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable (`true`) or disable (`false`) process group availability monitoring\n"
                },
                "minimumInstanceThreshold": {
                    "type": "integer",
                    "description": "Open a new problem if the number of active process instances in the group is fewer than X\n"
                },
                "processGroup": {
                    "type": "string",
                    "description": "The process group ID for availability monitoring\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enabled",
                "processGroup"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PgAlerting resources.\n",
                "properties": {
                    "alertingMode": {
                        "type": "string",
                        "description": "Possible Values: `ON_INSTANCE_COUNT_VIOLATION`, `ON_PGI_UNAVAILABILITY`\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable (`true`) or disable (`false`) process group availability monitoring\n"
                    },
                    "minimumInstanceThreshold": {
                        "type": "integer",
                        "description": "Open a new problem if the number of active process instances in the group is fewer than X\n"
                    },
                    "processGroup": {
                        "type": "string",
                        "description": "The process group ID for availability monitoring\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/pgAnomalies:PgAnomalies": {
            "properties": {
                "availability": {
                    "$ref": "#/types/dynatrace:index/PgAnomaliesAvailability:PgAnomaliesAvailability",
                    "description": "Configuration of the availability monitoring for the process group.\n"
                },
                "pgId": {
                    "type": "string",
                    "description": "The ID of the process group\n"
                }
            },
            "required": [
                "pgId"
            ],
            "inputProperties": {
                "availability": {
                    "$ref": "#/types/dynatrace:index/PgAnomaliesAvailability:PgAnomaliesAvailability",
                    "description": "Configuration of the availability monitoring for the process group.\n"
                },
                "pgId": {
                    "type": "string",
                    "description": "The ID of the process group\n"
                }
            },
            "requiredInputs": [
                "pgId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PgAnomalies resources.\n",
                "properties": {
                    "availability": {
                        "$ref": "#/types/dynatrace:index/PgAnomaliesAvailability:PgAnomaliesAvailability",
                        "description": "Configuration of the availability monitoring for the process group.\n"
                    },
                    "pgId": {
                        "type": "string",
                        "description": "The ID of the process group\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/platformBucket:PlatformBucket": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "The name of the bucket definition when visualized within the UI\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name / id of the bucket definition\n"
                },
                "retention": {
                    "type": "integer",
                    "description": "The retention of stored data in days\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the bucket definition. Usually has the value `active` unless an update or delete is currently happening\n"
                },
                "table": {
                    "type": "string",
                    "description": "The table the bucket definition applies to. Possible values are `logs`, `spans`,\t`events` and `bizevents`. Changing this attribute will result in deleting and re-creating the bucket definition\n"
                }
            },
            "required": [
                "name",
                "retention",
                "status",
                "table"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "The name of the bucket definition when visualized within the UI\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name / id of the bucket definition\n",
                    "willReplaceOnChanges": true
                },
                "retention": {
                    "type": "integer",
                    "description": "The retention of stored data in days\n"
                },
                "table": {
                    "type": "string",
                    "description": "The table the bucket definition applies to. Possible values are `logs`, `spans`,\t`events` and `bizevents`. Changing this attribute will result in deleting and re-creating the bucket definition\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "retention",
                "table"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PlatformBucket resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "The name of the bucket definition when visualized within the UI\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name / id of the bucket definition\n",
                        "willReplaceOnChanges": true
                    },
                    "retention": {
                        "type": "integer",
                        "description": "The retention of stored data in days\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the bucket definition. Usually has the value `active` unless an update or delete is currently happening\n"
                    },
                    "table": {
                        "type": "string",
                        "description": "The table the bucket definition applies to. Possible values are `logs`, `spans`,\t`events` and `bizevents`. Changing this attribute will result in deleting and re-creating the bucket definition\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/policy:Policy": {
            "properties": {
                "cluster": {
                    "type": "string",
                    "description": "The UUID of the cluster in case the policy should be applied to all environments of this cluster.\n"
                },
                "description": {
                    "type": "string",
                    "description": "An optional description text for the policy\n"
                },
                "environment": {
                    "type": "string",
                    "description": "The ID of the environment if the policy should be applied to a specific environment\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the policy\n"
                },
                "statementQuery": {
                    "type": "string",
                    "description": "The Statement Query of the policy\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags for this policy\n"
                }
            },
            "required": [
                "name",
                "statementQuery"
            ],
            "inputProperties": {
                "cluster": {
                    "type": "string",
                    "description": "The UUID of the cluster in case the policy should be applied to all environments of this cluster.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "An optional description text for the policy\n"
                },
                "environment": {
                    "type": "string",
                    "description": "The ID of the environment if the policy should be applied to a specific environment\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the policy\n"
                },
                "statementQuery": {
                    "type": "string",
                    "description": "The Statement Query of the policy\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags for this policy\n"
                }
            },
            "requiredInputs": [
                "statementQuery"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Policy resources.\n",
                "properties": {
                    "cluster": {
                        "type": "string",
                        "description": "The UUID of the cluster in case the policy should be applied to all environments of this cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "An optional description text for the policy\n"
                    },
                    "environment": {
                        "type": "string",
                        "description": "The ID of the environment if the policy should be applied to a specific environment\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the policy\n"
                    },
                    "statementQuery": {
                        "type": "string",
                        "description": "The Statement Query of the policy\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tags for this policy\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/policyBindings:PolicyBindings": {
            "properties": {
                "cluster": {
                    "type": "string",
                    "description": "The UUID of the cluster. The attribute `policies` must contain ONLY policies defined for that cluster.\n"
                },
                "environment": {
                    "type": "string",
                    "description": "The ID of the environment (https://\\n\\n.live.dynatrace.com). The attribute `policies` must contain ONLY policies defined for that environment.\n"
                },
                "group": {
                    "type": "string",
                    "description": "The name of the policy\n"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of IDs referring to policies bound to that group. It's not possible to mix policies here that are defined for different scopes (different clusters or environments) than specified via attributes `cluster` or `environment`.\n"
                }
            },
            "required": [
                "group",
                "policies"
            ],
            "inputProperties": {
                "cluster": {
                    "type": "string",
                    "description": "The UUID of the cluster. The attribute `policies` must contain ONLY policies defined for that cluster.\n",
                    "willReplaceOnChanges": true
                },
                "environment": {
                    "type": "string",
                    "description": "The ID of the environment (https://\\n\\n.live.dynatrace.com). The attribute `policies` must contain ONLY policies defined for that environment.\n",
                    "willReplaceOnChanges": true
                },
                "group": {
                    "type": "string",
                    "description": "The name of the policy\n",
                    "willReplaceOnChanges": true
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of IDs referring to policies bound to that group. It's not possible to mix policies here that are defined for different scopes (different clusters or environments) than specified via attributes `cluster` or `environment`.\n"
                }
            },
            "requiredInputs": [
                "group",
                "policies"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyBindings resources.\n",
                "properties": {
                    "cluster": {
                        "type": "string",
                        "description": "The UUID of the cluster. The attribute `policies` must contain ONLY policies defined for that cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "environment": {
                        "type": "string",
                        "description": "The ID of the environment (https://\\n\\n.live.dynatrace.com). The attribute `policies` must contain ONLY policies defined for that environment.\n",
                        "willReplaceOnChanges": true
                    },
                    "group": {
                        "type": "string",
                        "description": "The name of the policy\n",
                        "willReplaceOnChanges": true
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of IDs referring to policies bound to that group. It's not possible to mix policies here that are defined for different scopes (different clusters or environments) than specified via attributes `cluster` or `environment`.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/processAvailability:ProcessAvailability": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this\ninstance regarding order. If not specified when creating the setting will be added to the end of the list. If not\nspecified during update the order will remain untouched\n"
                },
                "metadata": {
                    "$ref": "#/types/dynatrace:index/ProcessAvailabilityMetadata:ProcessAvailabilityMetadata",
                    "description": "Set of additional key-value properties to be attached to the triggered event.\n"
                },
                "minimumProcesses": {
                    "type": "integer",
                    "description": "Specify a minimum number of processes matching the monitoring rule. If it's not satisfied, an alert will open.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Monitoring rule name\n"
                },
                "operatingSystems": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Select the operating systems on which the monitoring rule should be applied.\n"
                },
                "rules": {
                    "$ref": "#/types/dynatrace:index/ProcessAvailabilityRules:ProcessAvailabilityRules",
                    "description": "Define process detection rules by selecting a process property and a condition. Each monitoring rule can have multiple\ndetection rules associated with it.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n"
                }
            },
            "required": [
                "enabled",
                "insertAfter",
                "name"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this\ninstance regarding order. If not specified when creating the setting will be added to the end of the list. If not\nspecified during update the order will remain untouched\n"
                },
                "metadata": {
                    "$ref": "#/types/dynatrace:index/ProcessAvailabilityMetadata:ProcessAvailabilityMetadata",
                    "description": "Set of additional key-value properties to be attached to the triggered event.\n"
                },
                "minimumProcesses": {
                    "type": "integer",
                    "description": "Specify a minimum number of processes matching the monitoring rule. If it's not satisfied, an alert will open.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Monitoring rule name\n"
                },
                "operatingSystems": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Select the operating systems on which the monitoring rule should be applied.\n"
                },
                "rules": {
                    "$ref": "#/types/dynatrace:index/ProcessAvailabilityRules:ProcessAvailabilityRules",
                    "description": "Define process detection rules by selecting a process property and a condition. Each monitoring rule can have multiple\ndetection rules associated with it.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProcessAvailability resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this\ninstance regarding order. If not specified when creating the setting will be added to the end of the list. If not\nspecified during update the order will remain untouched\n"
                    },
                    "metadata": {
                        "$ref": "#/types/dynatrace:index/ProcessAvailabilityMetadata:ProcessAvailabilityMetadata",
                        "description": "Set of additional key-value properties to be attached to the triggered event.\n"
                    },
                    "minimumProcesses": {
                        "type": "integer",
                        "description": "Specify a minimum number of processes matching the monitoring rule. If it's not satisfied, an alert will open.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Monitoring rule name\n"
                    },
                    "operatingSystems": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Select the operating systems on which the monitoring rule should be applied.\n"
                    },
                    "rules": {
                        "$ref": "#/types/dynatrace:index/ProcessAvailabilityRules:ProcessAvailabilityRules",
                        "description": "Define process detection rules by selecting a process property and a condition. Each monitoring rule can have multiple\ndetection rules associated with it.\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/processGroupDetection:ProcessGroupDetection": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "groupExtraction": {
                    "$ref": "#/types/dynatrace:index/ProcessGroupDetectionGroupExtraction:ProcessGroupDetectionGroupExtraction",
                    "description": "You can define the properties that should be used to identify your process groups.\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "instanceExtraction": {
                    "$ref": "#/types/dynatrace:index/ProcessGroupDetectionInstanceExtraction:ProcessGroupDetectionInstanceExtraction",
                    "description": "You can define the properties that should be used to identify your process instances.\n"
                },
                "processDetection": {
                    "$ref": "#/types/dynatrace:index/ProcessGroupDetectionProcessDetection:ProcessGroupDetectionProcessDetection",
                    "description": "Apply this rule to processes where the selected property contains the specified string.\n"
                }
            },
            "required": [
                "enabled",
                "groupExtraction",
                "insertAfter",
                "processDetection"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "groupExtraction": {
                    "$ref": "#/types/dynatrace:index/ProcessGroupDetectionGroupExtraction:ProcessGroupDetectionGroupExtraction",
                    "description": "You can define the properties that should be used to identify your process groups.\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "instanceExtraction": {
                    "$ref": "#/types/dynatrace:index/ProcessGroupDetectionInstanceExtraction:ProcessGroupDetectionInstanceExtraction",
                    "description": "You can define the properties that should be used to identify your process instances.\n"
                },
                "processDetection": {
                    "$ref": "#/types/dynatrace:index/ProcessGroupDetectionProcessDetection:ProcessGroupDetectionProcessDetection",
                    "description": "Apply this rule to processes where the selected property contains the specified string.\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "groupExtraction",
                "processDetection"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProcessGroupDetection resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "groupExtraction": {
                        "$ref": "#/types/dynatrace:index/ProcessGroupDetectionGroupExtraction:ProcessGroupDetectionGroupExtraction",
                        "description": "You can define the properties that should be used to identify your process groups.\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "instanceExtraction": {
                        "$ref": "#/types/dynatrace:index/ProcessGroupDetectionInstanceExtraction:ProcessGroupDetectionInstanceExtraction",
                        "description": "You can define the properties that should be used to identify your process instances.\n"
                    },
                    "processDetection": {
                        "$ref": "#/types/dynatrace:index/ProcessGroupDetectionProcessDetection:ProcessGroupDetectionProcessDetection",
                        "description": "Apply this rule to processes where the selected property contains the specified string.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/processGroupDetectionFlags:ProcessGroupDetectionFlags": {
            "properties": {
                "addNodeJsScriptName": {
                    "type": "boolean",
                    "description": "In older versions, Node.js applications were distinguished based on their directory name, omitting the script name. Changing this setting may change the general handling of Node.js process groups. Leave unchanged if in doubt.\n"
                },
                "autoDetectCassandraClusters": {
                    "type": "boolean",
                    "description": "Enabling this flag will detect separate Cassandra process groups based on the configured Cassandra cluster name.\n"
                },
                "autoDetectSpringBoot": {
                    "type": "boolean",
                    "description": "Enabling this flag will detect Spring Boot process groups based on command line and applications' configuration files.\n"
                },
                "autoDetectTibcoContainerEditionEngines": {
                    "type": "boolean",
                    "description": "Enabling this flag will detect separate TIBCO BusinessWorks process groups per engine property file.\n"
                },
                "autoDetectTibcoEngines": {
                    "type": "boolean",
                    "description": "Enabling this flag will detect separate TIBCO BusinessWorks process groups per engine property file.\n"
                },
                "autoDetectWebMethodsIntegrationServer": {
                    "type": "boolean",
                    "description": "Enabling this flag will detect webMethods Integration Server including specific properties like install root and product name.\n"
                },
                "autoDetectWebSphereLibertyApplication": {
                    "type": "boolean",
                    "description": "Enabling this flag will detect separate WebSphere Liberty process groups based on java command line.\n"
                },
                "groupIbmmqbyInstanceName": {
                    "type": "boolean",
                    "description": "Enable to group and separately analyze the processes of each IBM MQ Queue manager instance. Each process group receives a unique name based on the queue manager instance name.\n"
                },
                "identifyJbossServerBySystemProperty": {
                    "type": "boolean",
                    "description": "Enabling this flag will detect the JBoss server name from the system property jboss.server.name=\\n\\n, only if -D[Server:\\n\\n] is not set.\n"
                },
                "ignoreUniqueIdentifiers": {
                    "type": "boolean",
                    "description": "To determine the unique identity of each detected process, and to generate a unique name for each detected process, Dynatrace evaluates the name of the directory that each process binary is contained within. For application containers like Tomcat and JBoss, Dynatrace evaluates important directories like CATALINA*HOME and JBOSS*HOME for this information. In some automated deployment scenarios such directory names are updated automatically with new version numbers, build numbers, dates, or GUIDs. Enable this setting to ensure that automated directory name changes don't result in Dynatrace registering pre-existing processes as new processes.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n"
                },
                "shortLivedProcessesMonitoring": {
                    "type": "boolean",
                    "description": "Enable to monitor CPU and memory usage of short lived processes, otherwise being lost by traditional monitoring. Disabling this flag blocks passing data to cluster only, it does not stop data collection and has no effect on performance.\n"
                },
                "splitOracleDatabasePg": {
                    "type": "boolean",
                    "description": "Enable to group and separately analyze the processes of each Oracle DB. Each process group receives a unique name based on the Oracle DB SID.\n"
                },
                "splitOracleListenerPg": {
                    "type": "boolean",
                    "description": "Enable to group and separately analyze the processes of each Oracle Listener. Each process group receives a unique name based on the Oracle Listener name.\n"
                },
                "useCatalinaBase": {
                    "type": "boolean",
                    "description": "By default, Tomcat clusters are identified and named based on the CATALINA*HOME directory name. This setting results in the use of the CATALINA*BASE directory name to identify multiple Tomcat nodes within each Tomcat cluster. If this setting is not enabled, each CATALINA*HOME+CATALINA*BASE combination will be considered a separate Tomcat cluster. In other words, Tomcat clusters can't have multiple nodes on a single host.\n"
                },
                "useDockerContainerName": {
                    "type": "boolean",
                    "description": "By default, Dynatrace uses image names as identifiers for individual process groups, with one process-group instance per host. Normally Docker container names can't serve as stable identifiers of process group instances because they are variable and auto-generated. You can however manually assign proper container names to their Docker instances. Such manually-assigned container names can serve as reliable process-group instance identifiers. This flag instructs Dynatrace to use Docker-provided names to distinguish between multiple instances of the same image. If this flag is not applied and you run multiple containers of the same image on the same host, the resulting processes will be consolidated into a single process view. Use this flag with caution!\n"
                }
            },
            "required": [
                "addNodeJsScriptName",
                "autoDetectCassandraClusters",
                "autoDetectSpringBoot",
                "autoDetectTibcoContainerEditionEngines",
                "autoDetectTibcoEngines",
                "autoDetectWebMethodsIntegrationServer",
                "autoDetectWebSphereLibertyApplication",
                "groupIbmmqbyInstanceName",
                "identifyJbossServerBySystemProperty",
                "ignoreUniqueIdentifiers",
                "shortLivedProcessesMonitoring",
                "splitOracleDatabasePg",
                "splitOracleListenerPg",
                "useCatalinaBase",
                "useDockerContainerName"
            ],
            "inputProperties": {
                "addNodeJsScriptName": {
                    "type": "boolean",
                    "description": "In older versions, Node.js applications were distinguished based on their directory name, omitting the script name. Changing this setting may change the general handling of Node.js process groups. Leave unchanged if in doubt.\n"
                },
                "autoDetectCassandraClusters": {
                    "type": "boolean",
                    "description": "Enabling this flag will detect separate Cassandra process groups based on the configured Cassandra cluster name.\n"
                },
                "autoDetectSpringBoot": {
                    "type": "boolean",
                    "description": "Enabling this flag will detect Spring Boot process groups based on command line and applications' configuration files.\n"
                },
                "autoDetectTibcoContainerEditionEngines": {
                    "type": "boolean",
                    "description": "Enabling this flag will detect separate TIBCO BusinessWorks process groups per engine property file.\n"
                },
                "autoDetectTibcoEngines": {
                    "type": "boolean",
                    "description": "Enabling this flag will detect separate TIBCO BusinessWorks process groups per engine property file.\n"
                },
                "autoDetectWebMethodsIntegrationServer": {
                    "type": "boolean",
                    "description": "Enabling this flag will detect webMethods Integration Server including specific properties like install root and product name.\n"
                },
                "autoDetectWebSphereLibertyApplication": {
                    "type": "boolean",
                    "description": "Enabling this flag will detect separate WebSphere Liberty process groups based on java command line.\n"
                },
                "groupIbmmqbyInstanceName": {
                    "type": "boolean",
                    "description": "Enable to group and separately analyze the processes of each IBM MQ Queue manager instance. Each process group receives a unique name based on the queue manager instance name.\n"
                },
                "identifyJbossServerBySystemProperty": {
                    "type": "boolean",
                    "description": "Enabling this flag will detect the JBoss server name from the system property jboss.server.name=\\n\\n, only if -D[Server:\\n\\n] is not set.\n"
                },
                "ignoreUniqueIdentifiers": {
                    "type": "boolean",
                    "description": "To determine the unique identity of each detected process, and to generate a unique name for each detected process, Dynatrace evaluates the name of the directory that each process binary is contained within. For application containers like Tomcat and JBoss, Dynatrace evaluates important directories like CATALINA*HOME and JBOSS*HOME for this information. In some automated deployment scenarios such directory names are updated automatically with new version numbers, build numbers, dates, or GUIDs. Enable this setting to ensure that automated directory name changes don't result in Dynatrace registering pre-existing processes as new processes.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                },
                "shortLivedProcessesMonitoring": {
                    "type": "boolean",
                    "description": "Enable to monitor CPU and memory usage of short lived processes, otherwise being lost by traditional monitoring. Disabling this flag blocks passing data to cluster only, it does not stop data collection and has no effect on performance.\n"
                },
                "splitOracleDatabasePg": {
                    "type": "boolean",
                    "description": "Enable to group and separately analyze the processes of each Oracle DB. Each process group receives a unique name based on the Oracle DB SID.\n"
                },
                "splitOracleListenerPg": {
                    "type": "boolean",
                    "description": "Enable to group and separately analyze the processes of each Oracle Listener. Each process group receives a unique name based on the Oracle Listener name.\n"
                },
                "useCatalinaBase": {
                    "type": "boolean",
                    "description": "By default, Tomcat clusters are identified and named based on the CATALINA*HOME directory name. This setting results in the use of the CATALINA*BASE directory name to identify multiple Tomcat nodes within each Tomcat cluster. If this setting is not enabled, each CATALINA*HOME+CATALINA*BASE combination will be considered a separate Tomcat cluster. In other words, Tomcat clusters can't have multiple nodes on a single host.\n"
                },
                "useDockerContainerName": {
                    "type": "boolean",
                    "description": "By default, Dynatrace uses image names as identifiers for individual process groups, with one process-group instance per host. Normally Docker container names can't serve as stable identifiers of process group instances because they are variable and auto-generated. You can however manually assign proper container names to their Docker instances. Such manually-assigned container names can serve as reliable process-group instance identifiers. This flag instructs Dynatrace to use Docker-provided names to distinguish between multiple instances of the same image. If this flag is not applied and you run multiple containers of the same image on the same host, the resulting processes will be consolidated into a single process view. Use this flag with caution!\n"
                }
            },
            "requiredInputs": [
                "addNodeJsScriptName",
                "autoDetectCassandraClusters",
                "autoDetectSpringBoot",
                "autoDetectTibcoContainerEditionEngines",
                "autoDetectTibcoEngines",
                "autoDetectWebMethodsIntegrationServer",
                "autoDetectWebSphereLibertyApplication",
                "groupIbmmqbyInstanceName",
                "identifyJbossServerBySystemProperty",
                "ignoreUniqueIdentifiers",
                "shortLivedProcessesMonitoring",
                "splitOracleDatabasePg",
                "splitOracleListenerPg",
                "useCatalinaBase",
                "useDockerContainerName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProcessGroupDetectionFlags resources.\n",
                "properties": {
                    "addNodeJsScriptName": {
                        "type": "boolean",
                        "description": "In older versions, Node.js applications were distinguished based on their directory name, omitting the script name. Changing this setting may change the general handling of Node.js process groups. Leave unchanged if in doubt.\n"
                    },
                    "autoDetectCassandraClusters": {
                        "type": "boolean",
                        "description": "Enabling this flag will detect separate Cassandra process groups based on the configured Cassandra cluster name.\n"
                    },
                    "autoDetectSpringBoot": {
                        "type": "boolean",
                        "description": "Enabling this flag will detect Spring Boot process groups based on command line and applications' configuration files.\n"
                    },
                    "autoDetectTibcoContainerEditionEngines": {
                        "type": "boolean",
                        "description": "Enabling this flag will detect separate TIBCO BusinessWorks process groups per engine property file.\n"
                    },
                    "autoDetectTibcoEngines": {
                        "type": "boolean",
                        "description": "Enabling this flag will detect separate TIBCO BusinessWorks process groups per engine property file.\n"
                    },
                    "autoDetectWebMethodsIntegrationServer": {
                        "type": "boolean",
                        "description": "Enabling this flag will detect webMethods Integration Server including specific properties like install root and product name.\n"
                    },
                    "autoDetectWebSphereLibertyApplication": {
                        "type": "boolean",
                        "description": "Enabling this flag will detect separate WebSphere Liberty process groups based on java command line.\n"
                    },
                    "groupIbmmqbyInstanceName": {
                        "type": "boolean",
                        "description": "Enable to group and separately analyze the processes of each IBM MQ Queue manager instance. Each process group receives a unique name based on the queue manager instance name.\n"
                    },
                    "identifyJbossServerBySystemProperty": {
                        "type": "boolean",
                        "description": "Enabling this flag will detect the JBoss server name from the system property jboss.server.name=\\n\\n, only if -D[Server:\\n\\n] is not set.\n"
                    },
                    "ignoreUniqueIdentifiers": {
                        "type": "boolean",
                        "description": "To determine the unique identity of each detected process, and to generate a unique name for each detected process, Dynatrace evaluates the name of the directory that each process binary is contained within. For application containers like Tomcat and JBoss, Dynatrace evaluates important directories like CATALINA*HOME and JBOSS*HOME for this information. In some automated deployment scenarios such directory names are updated automatically with new version numbers, build numbers, dates, or GUIDs. Enable this setting to ensure that automated directory name changes don't result in Dynatrace registering pre-existing processes as new processes.\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    },
                    "shortLivedProcessesMonitoring": {
                        "type": "boolean",
                        "description": "Enable to monitor CPU and memory usage of short lived processes, otherwise being lost by traditional monitoring. Disabling this flag blocks passing data to cluster only, it does not stop data collection and has no effect on performance.\n"
                    },
                    "splitOracleDatabasePg": {
                        "type": "boolean",
                        "description": "Enable to group and separately analyze the processes of each Oracle DB. Each process group receives a unique name based on the Oracle DB SID.\n"
                    },
                    "splitOracleListenerPg": {
                        "type": "boolean",
                        "description": "Enable to group and separately analyze the processes of each Oracle Listener. Each process group receives a unique name based on the Oracle Listener name.\n"
                    },
                    "useCatalinaBase": {
                        "type": "boolean",
                        "description": "By default, Tomcat clusters are identified and named based on the CATALINA*HOME directory name. This setting results in the use of the CATALINA*BASE directory name to identify multiple Tomcat nodes within each Tomcat cluster. If this setting is not enabled, each CATALINA*HOME+CATALINA*BASE combination will be considered a separate Tomcat cluster. In other words, Tomcat clusters can't have multiple nodes on a single host.\n"
                    },
                    "useDockerContainerName": {
                        "type": "boolean",
                        "description": "By default, Dynatrace uses image names as identifiers for individual process groups, with one process-group instance per host. Normally Docker container names can't serve as stable identifiers of process group instances because they are variable and auto-generated. You can however manually assign proper container names to their Docker instances. Such manually-assigned container names can serve as reliable process-group instance identifiers. This flag instructs Dynatrace to use Docker-provided names to distinguish between multiple instances of the same image. If this flag is not applied and you run multiple containers of the same image on the same host, the resulting processes will be consolidated into a single process view. Use this flag with caution!\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/processGroupMonitoring:ProcessGroupMonitoring": {
            "properties": {
                "monitoringState": {
                    "type": "string",
                    "description": "Possible Values: `DEFAULT`, `MONITORING_OFF`, `MONITORING_ON`\n"
                },
                "processGroupId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                }
            },
            "required": [
                "monitoringState",
                "processGroupId"
            ],
            "inputProperties": {
                "monitoringState": {
                    "type": "string",
                    "description": "Possible Values: `DEFAULT`, `MONITORING_OFF`, `MONITORING_ON`\n"
                },
                "processGroupId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "monitoringState",
                "processGroupId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProcessGroupMonitoring resources.\n",
                "properties": {
                    "monitoringState": {
                        "type": "string",
                        "description": "Possible Values: `DEFAULT`, `MONITORING_OFF`, `MONITORING_ON`\n"
                    },
                    "processGroupId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/processGroupRum:ProcessGroupRum": {
            "properties": {
                "enable": {
                    "type": "boolean",
                    "description": "Allows OneAgent to: * automatically inject the RUM JavaScript tag into each page delivered by this process group *\nprovide the necessary info to correlate RUM data with server-side PurePaths * forward beacons to the cluster * deliver\nthe monitoring code\n"
                },
                "processGroupId": {
                    "type": "string",
                    "description": "The scope of this setting - PROCESS_GROUP-XXXXXXXXXXXXXXXX\n"
                }
            },
            "required": [
                "enable",
                "processGroupId"
            ],
            "inputProperties": {
                "enable": {
                    "type": "boolean",
                    "description": "Allows OneAgent to: * automatically inject the RUM JavaScript tag into each page delivered by this process group *\nprovide the necessary info to correlate RUM data with server-side PurePaths * forward beacons to the cluster * deliver\nthe monitoring code\n"
                },
                "processGroupId": {
                    "type": "string",
                    "description": "The scope of this setting - PROCESS_GROUP-XXXXXXXXXXXXXXXX\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enable",
                "processGroupId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProcessGroupRum resources.\n",
                "properties": {
                    "enable": {
                        "type": "boolean",
                        "description": "Allows OneAgent to: * automatically inject the RUM JavaScript tag into each page delivered by this process group *\nprovide the necessary info to correlate RUM data with server-side PurePaths * forward beacons to the cluster * deliver\nthe monitoring code\n"
                    },
                    "processGroupId": {
                        "type": "string",
                        "description": "The scope of this setting - PROCESS_GROUP-XXXXXXXXXXXXXXXX\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/processGroupSimpleDetection:ProcessGroupSimpleDetection": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "groupIdentifier": {
                    "type": "string",
                    "description": "If Dynatrace detects this property at startup of a process, it will use its value to identify process groups more granular.\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this\ninstance regarding order. If not specified when creating the setting will be added to the end of the list. If not\nspecified during update the order will remain untouched\n"
                },
                "instanceIdentifier": {
                    "type": "string",
                    "description": "Use a variable to identify instances within a process group.\n"
                },
                "processType": {
                    "type": "string",
                    "description": "Note: Not all types can be detected at startup.\n"
                },
                "ruleType": {
                    "type": "string",
                    "description": "Possible Values: `Prop`, `Env`\n"
                }
            },
            "required": [
                "enabled",
                "groupIdentifier",
                "insertAfter",
                "instanceIdentifier",
                "ruleType"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "groupIdentifier": {
                    "type": "string",
                    "description": "If Dynatrace detects this property at startup of a process, it will use its value to identify process groups more granular.\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this\ninstance regarding order. If not specified when creating the setting will be added to the end of the list. If not\nspecified during update the order will remain untouched\n"
                },
                "instanceIdentifier": {
                    "type": "string",
                    "description": "Use a variable to identify instances within a process group.\n"
                },
                "processType": {
                    "type": "string",
                    "description": "Note: Not all types can be detected at startup.\n"
                },
                "ruleType": {
                    "type": "string",
                    "description": "Possible Values: `Prop`, `Env`\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "groupIdentifier",
                "instanceIdentifier",
                "ruleType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProcessGroupSimpleDetection resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "groupIdentifier": {
                        "type": "string",
                        "description": "If Dynatrace detects this property at startup of a process, it will use its value to identify process groups more granular.\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this\ninstance regarding order. If not specified when creating the setting will be added to the end of the list. If not\nspecified during update the order will remain untouched\n"
                    },
                    "instanceIdentifier": {
                        "type": "string",
                        "description": "Use a variable to identify instances within a process group.\n"
                    },
                    "processType": {
                        "type": "string",
                        "description": "Note: Not all types can be detected at startup.\n"
                    },
                    "ruleType": {
                        "type": "string",
                        "description": "Possible Values: `Prop`, `Env`\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/processMonitoring:ProcessMonitoring": {
            "properties": {
                "autoMonitoring": {
                    "type": "boolean",
                    "description": "By disabling automatic deep monitoring the Dynatrace OneAgent will only deep monitor processes that are covered by a respective deep monitoring rule or where monitoring is enabled explicitly.\nDisabling only works if all installed Agents have version 1.123 or higher.\n"
                },
                "hostGroupId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                }
            },
            "required": [
                "autoMonitoring"
            ],
            "inputProperties": {
                "autoMonitoring": {
                    "type": "boolean",
                    "description": "By disabling automatic deep monitoring the Dynatrace OneAgent will only deep monitor processes that are covered by a respective deep monitoring rule or where monitoring is enabled explicitly.\nDisabling only works if all installed Agents have version 1.123 or higher.\n"
                },
                "hostGroupId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "autoMonitoring"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProcessMonitoring resources.\n",
                "properties": {
                    "autoMonitoring": {
                        "type": "boolean",
                        "description": "By disabling automatic deep monitoring the Dynatrace OneAgent will only deep monitor processes that are covered by a respective deep monitoring rule or where monitoring is enabled explicitly.\nDisabling only works if all installed Agents have version 1.123 or higher.\n"
                    },
                    "hostGroupId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/processMonitoringRule:ProcessMonitoringRule": {
            "properties": {
                "condition": {
                    "$ref": "#/types/dynatrace:index/ProcessMonitoringRuleCondition:ProcessMonitoringRuleCondition",
                    "description": "Condition\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "hostGroupId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Possible Values: `MONITORING_ON`, `MONITORING_OFF`\n"
                }
            },
            "required": [
                "condition",
                "enabled",
                "insertAfter",
                "mode"
            ],
            "inputProperties": {
                "condition": {
                    "$ref": "#/types/dynatrace:index/ProcessMonitoringRuleCondition:ProcessMonitoringRuleCondition",
                    "description": "Condition\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "hostGroupId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope\n",
                    "willReplaceOnChanges": true
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Possible Values: `MONITORING_ON`, `MONITORING_OFF`\n"
                }
            },
            "requiredInputs": [
                "condition",
                "enabled",
                "mode"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProcessMonitoringRule resources.\n",
                "properties": {
                    "condition": {
                        "$ref": "#/types/dynatrace:index/ProcessMonitoringRuleCondition:ProcessMonitoringRuleCondition",
                        "description": "Condition\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "hostGroupId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope\n",
                        "willReplaceOnChanges": true
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Possible Values: `MONITORING_ON`, `MONITORING_OFF`\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/processVisibility:ProcessVisibility": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "maxProcesses": {
                    "type": "integer",
                    "description": "The maximum amount of processes that host may report is **100**\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n"
                }
            },
            "required": [
                "enabled",
                "maxProcesses"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "maxProcesses": {
                    "type": "integer",
                    "description": "The maximum amount of processes that host may report is **100**\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enabled",
                "maxProcesses"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProcessVisibility resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "maxProcesses": {
                        "type": "integer",
                        "description": "The maximum amount of processes that host may report is **100**\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/processgroupNaming:ProcessgroupNaming": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingCondition:ProcessgroupNamingCondition"
                    },
                    "description": "A list of matching conditions of the rule. The rule applies only if **all** conditions are fulfilled\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The rule is enabled (`true`) or disabled (`false`)\n"
                },
                "format": {
                    "type": "string",
                    "description": "The name to be assigned to matching entities. You can use the following placeholders here: *\n`{AwsAutoScalingGroup:Name}` * `{AwsAvailabilityZone:Name}` * `{AwsElasticLoadBalancer:Name}` *\n`{AwsRelationalDatabaseService:DBName}` * `{AwsRelationalDatabaseService:Endpoint}` *\n`{AwsRelationalDatabaseService:Engine}` * `{AwsRelationalDatabaseService:InstanceClass}` *\n`{AwsRelationalDatabaseService:Name}` * `{AwsRelationalDatabaseService:Port}` * `{AzureRegion:Name}` *\n`{AzureScaleSet:Name}` * `{AzureVm:Name}` * `{CloudFoundryOrganization:Name}` * `{CustomDevice:DetectedName}` *\n`{CustomDevice:DnsName}` * `{CustomDevice:IpAddress}` * `{CustomDevice:Port}` *\n`{DockerContainerGroupInstance:ContainerName}` * `{DockerContainerGroupInstance:FullImageName}` *\n`{DockerContainerGroupInstance:ImageVersion}` * `{DockerContainerGroupInstance:StrippedImageName}` *\n`{ESXIHost:HardwareModel}` * `{ESXIHost:HardwareVendor}` * `{ESXIHost:Name}` * `{ESXIHost:ProductName}` *\n`{ESXIHost:ProductVersion}` * `{Ec2Instance:AmiId}` * `{Ec2Instance:BeanstalkEnvironmentName}` *\n`{Ec2Instance:InstanceId}` * `{Ec2Instance:InstanceType}` * `{Ec2Instance:LocalHostName}` * `{Ec2Instance:Name}` *\n`{Ec2Instance:PublicHostName}` * `{Ec2Instance:SecurityGroup}` * `{GoogleComputeInstance:Id}` *\n`{GoogleComputeInstance:IpAddresses}` * `{GoogleComputeInstance:MachineType}` * `{GoogleComputeInstance:Name}` *\n`{GoogleComputeInstance:ProjectId}` * `{GoogleComputeInstance:Project}` * `{Host:AWSNameTag}` *\n`{Host:AixLogicalCpuCount}` * `{Host:AzureHostName}` * `{Host:AzureSiteName}` * `{Host:BoshDeploymentId}` *\n`{Host:BoshInstanceId}` * `{Host:BoshInstanceName}` * `{Host:BoshName}` * `{Host:BoshStemcellVersion}` *\n`{Host:CpuCores}` * `{Host:DetectedName}` * `{Host:Environment:AppName}` * `{Host:Environment:BoshReleaseVersion}` *\n`{Host:Environment:Environment}` * `{Host:Environment:Link}` * `{Host:Environment:Organization}` *\n`{Host:Environment:Owner}` * `{Host:Environment:Support}` * `{Host:IpAddress}` * `{Host:LogicalCpuCores}` *\n`{Host:OneAgentCustomHostName}` * `{Host:OperatingSystemVersion}` * `{Host:PaasMemoryLimit}` * `{HostGroup:Name}` *\n`{KubernetesCluster:Name}` * `{KubernetesNode:DetectedName}` * `{OpenstackAvailabilityZone:Name}` *\n`{OpenstackZone:Name}` * `{OpenstackComputeNode:Name}` * `{OpenstackProject:Name}` * `{OpenstackVm:InstanceType}` *\n`{OpenstackVm:Name}` * `{OpenstackVm:SecurityGroup}` * `{ProcessGroup:AmazonECRImageAccountId}` *\n`{ProcessGroup:AmazonECRImageRegion}` * `{ProcessGroup:AmazonECSCluster}` * `{ProcessGroup:AmazonECSContainerName}` *\n`{ProcessGroup:AmazonECSFamily}` * `{ProcessGroup:AmazonECSRevision}` * `{ProcessGroup:AmazonLambdaFunctionName}` *\n`{ProcessGroup:AmazonRegion}` * `{ProcessGroup:ApacheConfigPath}` * `{ProcessGroup:ApacheSparkMasterIpAddress}` *\n`{ProcessGroup:AspDotNetCoreApplicationPath}` * `{ProcessGroup:AspDotNetCoreApplicationPath}` *\n`{ProcessGroup:AzureHostName}` * `{ProcessGroup:AzureSiteName}` * `{ProcessGroup:CassandraClusterName}` *\n`{ProcessGroup:CatalinaBase}` * `{ProcessGroup:CatalinaHome}` * `{ProcessGroup:CloudFoundryAppId}` *\n`{ProcessGroup:CloudFoundryAppName}` * `{ProcessGroup:CloudFoundryInstanceIndex}` * `{ProcessGroup:CloudFoundrySpaceId}`\n* `{ProcessGroup:CloudFoundrySpaceName}` * `{ProcessGroup:ColdFusionJvmConfigFile}` *\n`{ProcessGroup:ColdFusionServiceName}` * `{ProcessGroup:CommandLineArgs}` * `{ProcessGroup:DetectedName}` *\n`{ProcessGroup:DotNetCommandPath}` * `{ProcessGroup:DotNetCommand}` * `{ProcessGroup:DotNetClusterId}` *\n`{ProcessGroup:DotNetNodeId}` * `{ProcessGroup:ElasticsearchClusterName}` * `{ProcessGroup:ElasticsearchNodeName}` *\n`{ProcessGroup:EquinoxConfigPath}` * `{ProcessGroup:ExeName}` * `{ProcessGroup:ExePath}` *\n`{ProcessGroup:GlassFishDomainName}` * `{ProcessGroup:GlassFishInstanceName}` * `{ProcessGroup:GoogleAppEngineInstance}`\n* `{ProcessGroup:GoogleAppEngineService}` * `{ProcessGroup:GoogleCloudProject}` * `{ProcessGroup:HybrisBinDirectory}` *\n`{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisDataDirectory}` *\n`{ProcessGroup:IBMCicsRegion}` * `{ProcessGroup:IBMCtgName}` * `{ProcessGroup:IBMImsConnectRegion}` *\n`{ProcessGroup:IBMImsControlRegion}` * `{ProcessGroup:IBMImsMessageProcessingRegion}` *\n`{ProcessGroup:IBMImsSoapGwName}` * `{ProcessGroup:IBMIntegrationNodeName}` * `{ProcessGroup:IBMIntegrationServerName}`\n* `{ProcessGroup:IISAppPool}` * `{ProcessGroup:IISRoleName}` * `{ProcessGroup:JbossHome}` * `{ProcessGroup:JbossMode}` *\n`{ProcessGroup:JbossServerName}` * `{ProcessGroup:JavaJarFile}` * `{ProcessGroup:JavaJarPath}` *\n`{ProcessGroup:JavaMainCLass}` * `{ProcessGroup:KubernetesBasePodName}` * `{ProcessGroup:KubernetesContainerName}` *\n`{ProcessGroup:KubernetesFullPodName}` * `{ProcessGroup:KubernetesNamespace}` * `{ProcessGroup:KubernetesPodUid}` *\n`{ProcessGroup:MssqlInstanceName}` * `{ProcessGroup:NodeJsAppBaseDirectory}` * `{ProcessGroup:NodeJsAppName}` *\n`{ProcessGroup:NodeJsScriptName}` * `{ProcessGroup:OracleSid}` * `{ProcessGroup:PHPScriptPath}` *\n`{ProcessGroup:PHPWorkingDirectory}` * `{ProcessGroup:Ports}` * `{ProcessGroup:RubyAppRootPath}` *\n`{ProcessGroup:RubyScriptPath}` * `{ProcessGroup:SoftwareAGInstallRoot}` *\n`{ProcessGroup:SoftwareAGProductPropertyName}` * `{ProcessGroup:SpringBootAppName}` *\n`{ProcessGroup:SpringBootProfileName}` * `{ProcessGroup:SpringBootStartupClass}` *\n`{ProcessGroup:TIBCOBusinessWorksAppNodeName}` * `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}` *\n`{ProcessGroup:TIBCOBusinessWorksCeAppName}` * `{ProcessGroup:TIBCOBusinessWorksCeVersion}` *\n`{ProcessGroup:TIBCOBusinessWorksDomainName}` * `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}` *\n`{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}` * `{ProcessGroup:TIBCOBusinessWorksHome}` *\n`{ProcessGroup:VarnishInstanceName}` * `{ProcessGroup:WebLogicClusterName}` * `{ProcessGroup:WebLogicDomainName}` *\n`{ProcessGroup:WebLogicHome}` * `{ProcessGroup:WebLogicName}` * `{ProcessGroup:WebSphereCellName}` *\n`{ProcessGroup:WebSphereClusterName}` * `{ProcessGroup:WebSphereNodeName}` * `{ProcessGroup:WebSphereServerName}` *\n`{ProcessGroup:ActorSystem}` * `{Service:STGServerName}` * `{Service:DatabaseHostName}` * `{Service:DatabaseName}` *\n`{Service:DatabaseVendor}` * `{Service:DetectedName}` * `{Service:EndpointPath}` * `{Service:EndpointPathGatewayUrl}` *\n`{Service:IIBApplicationName}` * `{Service:MessageListenerClassName}` * `{Service:Port}` * `{Service:PublicDomainName}`\n* `{Service:RemoteEndpoint}` * `{Service:RemoteName}` * `{Service:WebApplicationId}` * `{Service:WebContextRoot}` *\n`{Service:WebServerName}` * `{Service:WebServiceNamespace}` * `{Service:WebServiceName}` * `{VmwareDatacenter:Name}` *\n`{VmwareVm:Name}\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "required": [
                "enabled",
                "format",
                "name"
            ],
            "inputProperties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ProcessgroupNamingCondition:ProcessgroupNamingCondition"
                    },
                    "description": "A list of matching conditions of the rule. The rule applies only if **all** conditions are fulfilled\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The rule is enabled (`true`) or disabled (`false`)\n"
                },
                "format": {
                    "type": "string",
                    "description": "The name to be assigned to matching entities. You can use the following placeholders here: *\n`{AwsAutoScalingGroup:Name}` * `{AwsAvailabilityZone:Name}` * `{AwsElasticLoadBalancer:Name}` *\n`{AwsRelationalDatabaseService:DBName}` * `{AwsRelationalDatabaseService:Endpoint}` *\n`{AwsRelationalDatabaseService:Engine}` * `{AwsRelationalDatabaseService:InstanceClass}` *\n`{AwsRelationalDatabaseService:Name}` * `{AwsRelationalDatabaseService:Port}` * `{AzureRegion:Name}` *\n`{AzureScaleSet:Name}` * `{AzureVm:Name}` * `{CloudFoundryOrganization:Name}` * `{CustomDevice:DetectedName}` *\n`{CustomDevice:DnsName}` * `{CustomDevice:IpAddress}` * `{CustomDevice:Port}` *\n`{DockerContainerGroupInstance:ContainerName}` * `{DockerContainerGroupInstance:FullImageName}` *\n`{DockerContainerGroupInstance:ImageVersion}` * `{DockerContainerGroupInstance:StrippedImageName}` *\n`{ESXIHost:HardwareModel}` * `{ESXIHost:HardwareVendor}` * `{ESXIHost:Name}` * `{ESXIHost:ProductName}` *\n`{ESXIHost:ProductVersion}` * `{Ec2Instance:AmiId}` * `{Ec2Instance:BeanstalkEnvironmentName}` *\n`{Ec2Instance:InstanceId}` * `{Ec2Instance:InstanceType}` * `{Ec2Instance:LocalHostName}` * `{Ec2Instance:Name}` *\n`{Ec2Instance:PublicHostName}` * `{Ec2Instance:SecurityGroup}` * `{GoogleComputeInstance:Id}` *\n`{GoogleComputeInstance:IpAddresses}` * `{GoogleComputeInstance:MachineType}` * `{GoogleComputeInstance:Name}` *\n`{GoogleComputeInstance:ProjectId}` * `{GoogleComputeInstance:Project}` * `{Host:AWSNameTag}` *\n`{Host:AixLogicalCpuCount}` * `{Host:AzureHostName}` * `{Host:AzureSiteName}` * `{Host:BoshDeploymentId}` *\n`{Host:BoshInstanceId}` * `{Host:BoshInstanceName}` * `{Host:BoshName}` * `{Host:BoshStemcellVersion}` *\n`{Host:CpuCores}` * `{Host:DetectedName}` * `{Host:Environment:AppName}` * `{Host:Environment:BoshReleaseVersion}` *\n`{Host:Environment:Environment}` * `{Host:Environment:Link}` * `{Host:Environment:Organization}` *\n`{Host:Environment:Owner}` * `{Host:Environment:Support}` * `{Host:IpAddress}` * `{Host:LogicalCpuCores}` *\n`{Host:OneAgentCustomHostName}` * `{Host:OperatingSystemVersion}` * `{Host:PaasMemoryLimit}` * `{HostGroup:Name}` *\n`{KubernetesCluster:Name}` * `{KubernetesNode:DetectedName}` * `{OpenstackAvailabilityZone:Name}` *\n`{OpenstackZone:Name}` * `{OpenstackComputeNode:Name}` * `{OpenstackProject:Name}` * `{OpenstackVm:InstanceType}` *\n`{OpenstackVm:Name}` * `{OpenstackVm:SecurityGroup}` * `{ProcessGroup:AmazonECRImageAccountId}` *\n`{ProcessGroup:AmazonECRImageRegion}` * `{ProcessGroup:AmazonECSCluster}` * `{ProcessGroup:AmazonECSContainerName}` *\n`{ProcessGroup:AmazonECSFamily}` * `{ProcessGroup:AmazonECSRevision}` * `{ProcessGroup:AmazonLambdaFunctionName}` *\n`{ProcessGroup:AmazonRegion}` * `{ProcessGroup:ApacheConfigPath}` * `{ProcessGroup:ApacheSparkMasterIpAddress}` *\n`{ProcessGroup:AspDotNetCoreApplicationPath}` * `{ProcessGroup:AspDotNetCoreApplicationPath}` *\n`{ProcessGroup:AzureHostName}` * `{ProcessGroup:AzureSiteName}` * `{ProcessGroup:CassandraClusterName}` *\n`{ProcessGroup:CatalinaBase}` * `{ProcessGroup:CatalinaHome}` * `{ProcessGroup:CloudFoundryAppId}` *\n`{ProcessGroup:CloudFoundryAppName}` * `{ProcessGroup:CloudFoundryInstanceIndex}` * `{ProcessGroup:CloudFoundrySpaceId}`\n* `{ProcessGroup:CloudFoundrySpaceName}` * `{ProcessGroup:ColdFusionJvmConfigFile}` *\n`{ProcessGroup:ColdFusionServiceName}` * `{ProcessGroup:CommandLineArgs}` * `{ProcessGroup:DetectedName}` *\n`{ProcessGroup:DotNetCommandPath}` * `{ProcessGroup:DotNetCommand}` * `{ProcessGroup:DotNetClusterId}` *\n`{ProcessGroup:DotNetNodeId}` * `{ProcessGroup:ElasticsearchClusterName}` * `{ProcessGroup:ElasticsearchNodeName}` *\n`{ProcessGroup:EquinoxConfigPath}` * `{ProcessGroup:ExeName}` * `{ProcessGroup:ExePath}` *\n`{ProcessGroup:GlassFishDomainName}` * `{ProcessGroup:GlassFishInstanceName}` * `{ProcessGroup:GoogleAppEngineInstance}`\n* `{ProcessGroup:GoogleAppEngineService}` * `{ProcessGroup:GoogleCloudProject}` * `{ProcessGroup:HybrisBinDirectory}` *\n`{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisDataDirectory}` *\n`{ProcessGroup:IBMCicsRegion}` * `{ProcessGroup:IBMCtgName}` * `{ProcessGroup:IBMImsConnectRegion}` *\n`{ProcessGroup:IBMImsControlRegion}` * `{ProcessGroup:IBMImsMessageProcessingRegion}` *\n`{ProcessGroup:IBMImsSoapGwName}` * `{ProcessGroup:IBMIntegrationNodeName}` * `{ProcessGroup:IBMIntegrationServerName}`\n* `{ProcessGroup:IISAppPool}` * `{ProcessGroup:IISRoleName}` * `{ProcessGroup:JbossHome}` * `{ProcessGroup:JbossMode}` *\n`{ProcessGroup:JbossServerName}` * `{ProcessGroup:JavaJarFile}` * `{ProcessGroup:JavaJarPath}` *\n`{ProcessGroup:JavaMainCLass}` * `{ProcessGroup:KubernetesBasePodName}` * `{ProcessGroup:KubernetesContainerName}` *\n`{ProcessGroup:KubernetesFullPodName}` * `{ProcessGroup:KubernetesNamespace}` * `{ProcessGroup:KubernetesPodUid}` *\n`{ProcessGroup:MssqlInstanceName}` * `{ProcessGroup:NodeJsAppBaseDirectory}` * `{ProcessGroup:NodeJsAppName}` *\n`{ProcessGroup:NodeJsScriptName}` * `{ProcessGroup:OracleSid}` * `{ProcessGroup:PHPScriptPath}` *\n`{ProcessGroup:PHPWorkingDirectory}` * `{ProcessGroup:Ports}` * `{ProcessGroup:RubyAppRootPath}` *\n`{ProcessGroup:RubyScriptPath}` * `{ProcessGroup:SoftwareAGInstallRoot}` *\n`{ProcessGroup:SoftwareAGProductPropertyName}` * `{ProcessGroup:SpringBootAppName}` *\n`{ProcessGroup:SpringBootProfileName}` * `{ProcessGroup:SpringBootStartupClass}` *\n`{ProcessGroup:TIBCOBusinessWorksAppNodeName}` * `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}` *\n`{ProcessGroup:TIBCOBusinessWorksCeAppName}` * `{ProcessGroup:TIBCOBusinessWorksCeVersion}` *\n`{ProcessGroup:TIBCOBusinessWorksDomainName}` * `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}` *\n`{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}` * `{ProcessGroup:TIBCOBusinessWorksHome}` *\n`{ProcessGroup:VarnishInstanceName}` * `{ProcessGroup:WebLogicClusterName}` * `{ProcessGroup:WebLogicDomainName}` *\n`{ProcessGroup:WebLogicHome}` * `{ProcessGroup:WebLogicName}` * `{ProcessGroup:WebSphereCellName}` *\n`{ProcessGroup:WebSphereClusterName}` * `{ProcessGroup:WebSphereNodeName}` * `{ProcessGroup:WebSphereServerName}` *\n`{ProcessGroup:ActorSystem}` * `{Service:STGServerName}` * `{Service:DatabaseHostName}` * `{Service:DatabaseName}` *\n`{Service:DatabaseVendor}` * `{Service:DetectedName}` * `{Service:EndpointPath}` * `{Service:EndpointPathGatewayUrl}` *\n`{Service:IIBApplicationName}` * `{Service:MessageListenerClassName}` * `{Service:Port}` * `{Service:PublicDomainName}`\n* `{Service:RemoteEndpoint}` * `{Service:RemoteName}` * `{Service:WebApplicationId}` * `{Service:WebContextRoot}` *\n`{Service:WebServerName}` * `{Service:WebServiceNamespace}` * `{Service:WebServiceName}` * `{VmwareDatacenter:Name}` *\n`{VmwareVm:Name}\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "format"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProcessgroupNaming resources.\n",
                "properties": {
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/ProcessgroupNamingCondition:ProcessgroupNamingCondition"
                        },
                        "description": "A list of matching conditions of the rule. The rule applies only if **all** conditions are fulfilled\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The rule is enabled (`true`) or disabled (`false`)\n"
                    },
                    "format": {
                        "type": "string",
                        "description": "The name to be assigned to matching entities. You can use the following placeholders here: *\n`{AwsAutoScalingGroup:Name}` * `{AwsAvailabilityZone:Name}` * `{AwsElasticLoadBalancer:Name}` *\n`{AwsRelationalDatabaseService:DBName}` * `{AwsRelationalDatabaseService:Endpoint}` *\n`{AwsRelationalDatabaseService:Engine}` * `{AwsRelationalDatabaseService:InstanceClass}` *\n`{AwsRelationalDatabaseService:Name}` * `{AwsRelationalDatabaseService:Port}` * `{AzureRegion:Name}` *\n`{AzureScaleSet:Name}` * `{AzureVm:Name}` * `{CloudFoundryOrganization:Name}` * `{CustomDevice:DetectedName}` *\n`{CustomDevice:DnsName}` * `{CustomDevice:IpAddress}` * `{CustomDevice:Port}` *\n`{DockerContainerGroupInstance:ContainerName}` * `{DockerContainerGroupInstance:FullImageName}` *\n`{DockerContainerGroupInstance:ImageVersion}` * `{DockerContainerGroupInstance:StrippedImageName}` *\n`{ESXIHost:HardwareModel}` * `{ESXIHost:HardwareVendor}` * `{ESXIHost:Name}` * `{ESXIHost:ProductName}` *\n`{ESXIHost:ProductVersion}` * `{Ec2Instance:AmiId}` * `{Ec2Instance:BeanstalkEnvironmentName}` *\n`{Ec2Instance:InstanceId}` * `{Ec2Instance:InstanceType}` * `{Ec2Instance:LocalHostName}` * `{Ec2Instance:Name}` *\n`{Ec2Instance:PublicHostName}` * `{Ec2Instance:SecurityGroup}` * `{GoogleComputeInstance:Id}` *\n`{GoogleComputeInstance:IpAddresses}` * `{GoogleComputeInstance:MachineType}` * `{GoogleComputeInstance:Name}` *\n`{GoogleComputeInstance:ProjectId}` * `{GoogleComputeInstance:Project}` * `{Host:AWSNameTag}` *\n`{Host:AixLogicalCpuCount}` * `{Host:AzureHostName}` * `{Host:AzureSiteName}` * `{Host:BoshDeploymentId}` *\n`{Host:BoshInstanceId}` * `{Host:BoshInstanceName}` * `{Host:BoshName}` * `{Host:BoshStemcellVersion}` *\n`{Host:CpuCores}` * `{Host:DetectedName}` * `{Host:Environment:AppName}` * `{Host:Environment:BoshReleaseVersion}` *\n`{Host:Environment:Environment}` * `{Host:Environment:Link}` * `{Host:Environment:Organization}` *\n`{Host:Environment:Owner}` * `{Host:Environment:Support}` * `{Host:IpAddress}` * `{Host:LogicalCpuCores}` *\n`{Host:OneAgentCustomHostName}` * `{Host:OperatingSystemVersion}` * `{Host:PaasMemoryLimit}` * `{HostGroup:Name}` *\n`{KubernetesCluster:Name}` * `{KubernetesNode:DetectedName}` * `{OpenstackAvailabilityZone:Name}` *\n`{OpenstackZone:Name}` * `{OpenstackComputeNode:Name}` * `{OpenstackProject:Name}` * `{OpenstackVm:InstanceType}` *\n`{OpenstackVm:Name}` * `{OpenstackVm:SecurityGroup}` * `{ProcessGroup:AmazonECRImageAccountId}` *\n`{ProcessGroup:AmazonECRImageRegion}` * `{ProcessGroup:AmazonECSCluster}` * `{ProcessGroup:AmazonECSContainerName}` *\n`{ProcessGroup:AmazonECSFamily}` * `{ProcessGroup:AmazonECSRevision}` * `{ProcessGroup:AmazonLambdaFunctionName}` *\n`{ProcessGroup:AmazonRegion}` * `{ProcessGroup:ApacheConfigPath}` * `{ProcessGroup:ApacheSparkMasterIpAddress}` *\n`{ProcessGroup:AspDotNetCoreApplicationPath}` * `{ProcessGroup:AspDotNetCoreApplicationPath}` *\n`{ProcessGroup:AzureHostName}` * `{ProcessGroup:AzureSiteName}` * `{ProcessGroup:CassandraClusterName}` *\n`{ProcessGroup:CatalinaBase}` * `{ProcessGroup:CatalinaHome}` * `{ProcessGroup:CloudFoundryAppId}` *\n`{ProcessGroup:CloudFoundryAppName}` * `{ProcessGroup:CloudFoundryInstanceIndex}` * `{ProcessGroup:CloudFoundrySpaceId}`\n* `{ProcessGroup:CloudFoundrySpaceName}` * `{ProcessGroup:ColdFusionJvmConfigFile}` *\n`{ProcessGroup:ColdFusionServiceName}` * `{ProcessGroup:CommandLineArgs}` * `{ProcessGroup:DetectedName}` *\n`{ProcessGroup:DotNetCommandPath}` * `{ProcessGroup:DotNetCommand}` * `{ProcessGroup:DotNetClusterId}` *\n`{ProcessGroup:DotNetNodeId}` * `{ProcessGroup:ElasticsearchClusterName}` * `{ProcessGroup:ElasticsearchNodeName}` *\n`{ProcessGroup:EquinoxConfigPath}` * `{ProcessGroup:ExeName}` * `{ProcessGroup:ExePath}` *\n`{ProcessGroup:GlassFishDomainName}` * `{ProcessGroup:GlassFishInstanceName}` * `{ProcessGroup:GoogleAppEngineInstance}`\n* `{ProcessGroup:GoogleAppEngineService}` * `{ProcessGroup:GoogleCloudProject}` * `{ProcessGroup:HybrisBinDirectory}` *\n`{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisDataDirectory}` *\n`{ProcessGroup:IBMCicsRegion}` * `{ProcessGroup:IBMCtgName}` * `{ProcessGroup:IBMImsConnectRegion}` *\n`{ProcessGroup:IBMImsControlRegion}` * `{ProcessGroup:IBMImsMessageProcessingRegion}` *\n`{ProcessGroup:IBMImsSoapGwName}` * `{ProcessGroup:IBMIntegrationNodeName}` * `{ProcessGroup:IBMIntegrationServerName}`\n* `{ProcessGroup:IISAppPool}` * `{ProcessGroup:IISRoleName}` * `{ProcessGroup:JbossHome}` * `{ProcessGroup:JbossMode}` *\n`{ProcessGroup:JbossServerName}` * `{ProcessGroup:JavaJarFile}` * `{ProcessGroup:JavaJarPath}` *\n`{ProcessGroup:JavaMainCLass}` * `{ProcessGroup:KubernetesBasePodName}` * `{ProcessGroup:KubernetesContainerName}` *\n`{ProcessGroup:KubernetesFullPodName}` * `{ProcessGroup:KubernetesNamespace}` * `{ProcessGroup:KubernetesPodUid}` *\n`{ProcessGroup:MssqlInstanceName}` * `{ProcessGroup:NodeJsAppBaseDirectory}` * `{ProcessGroup:NodeJsAppName}` *\n`{ProcessGroup:NodeJsScriptName}` * `{ProcessGroup:OracleSid}` * `{ProcessGroup:PHPScriptPath}` *\n`{ProcessGroup:PHPWorkingDirectory}` * `{ProcessGroup:Ports}` * `{ProcessGroup:RubyAppRootPath}` *\n`{ProcessGroup:RubyScriptPath}` * `{ProcessGroup:SoftwareAGInstallRoot}` *\n`{ProcessGroup:SoftwareAGProductPropertyName}` * `{ProcessGroup:SpringBootAppName}` *\n`{ProcessGroup:SpringBootProfileName}` * `{ProcessGroup:SpringBootStartupClass}` *\n`{ProcessGroup:TIBCOBusinessWorksAppNodeName}` * `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}` *\n`{ProcessGroup:TIBCOBusinessWorksCeAppName}` * `{ProcessGroup:TIBCOBusinessWorksCeVersion}` *\n`{ProcessGroup:TIBCOBusinessWorksDomainName}` * `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}` *\n`{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}` * `{ProcessGroup:TIBCOBusinessWorksHome}` *\n`{ProcessGroup:VarnishInstanceName}` * `{ProcessGroup:WebLogicClusterName}` * `{ProcessGroup:WebLogicDomainName}` *\n`{ProcessGroup:WebLogicHome}` * `{ProcessGroup:WebLogicName}` * `{ProcessGroup:WebSphereCellName}` *\n`{ProcessGroup:WebSphereClusterName}` * `{ProcessGroup:WebSphereNodeName}` * `{ProcessGroup:WebSphereServerName}` *\n`{ProcessGroup:ActorSystem}` * `{Service:STGServerName}` * `{Service:DatabaseHostName}` * `{Service:DatabaseName}` *\n`{Service:DatabaseVendor}` * `{Service:DetectedName}` * `{Service:EndpointPath}` * `{Service:EndpointPathGatewayUrl}` *\n`{Service:IIBApplicationName}` * `{Service:MessageListenerClassName}` * `{Service:Port}` * `{Service:PublicDomainName}`\n* `{Service:RemoteEndpoint}` * `{Service:RemoteName}` * `{Service:WebApplicationId}` * `{Service:WebContextRoot}` *\n`{Service:WebServerName}` * `{Service:WebServiceNamespace}` * `{Service:WebServiceName}` * `{VmwareDatacenter:Name}` *\n`{VmwareVm:Name}\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the rule\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/queueManager:QueueManager": {
            "properties": {
                "aliasQueues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/QueueManagerAliasQueue:QueueManagerAliasQueue"
                    },
                    "description": "The alias queues in the queue manager\n"
                },
                "clusterQueues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/QueueManagerClusterQueue:QueueManagerClusterQueue"
                    },
                    "description": "The alias queues in the queue manager\n"
                },
                "clusters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Name of the cluster(s) this queue manager is part of\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the queue manager\n"
                },
                "remoteQueues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/QueueManagerRemoteQueue:QueueManagerRemoteQueue"
                    },
                    "description": "The alias queues in the queue manager\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "aliasQueues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/QueueManagerAliasQueue:QueueManagerAliasQueue"
                    },
                    "description": "The alias queues in the queue manager\n"
                },
                "clusterQueues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/QueueManagerClusterQueue:QueueManagerClusterQueue"
                    },
                    "description": "The alias queues in the queue manager\n"
                },
                "clusters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Name of the cluster(s) this queue manager is part of\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the queue manager\n"
                },
                "remoteQueues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/QueueManagerRemoteQueue:QueueManagerRemoteQueue"
                    },
                    "description": "The alias queues in the queue manager\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering QueueManager resources.\n",
                "properties": {
                    "aliasQueues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/QueueManagerAliasQueue:QueueManagerAliasQueue"
                        },
                        "description": "The alias queues in the queue manager\n"
                    },
                    "clusterQueues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/QueueManagerClusterQueue:QueueManagerClusterQueue"
                        },
                        "description": "The alias queues in the queue manager\n"
                    },
                    "clusters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Name of the cluster(s) this queue manager is part of\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the queue manager\n"
                    },
                    "remoteQueues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/QueueManagerRemoteQueue:QueueManagerRemoteQueue"
                        },
                        "description": "The alias queues in the queue manager\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/queueSharingGroups:QueueSharingGroups": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Queue sharing group name\n"
                },
                "queueManagers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Queue managers\n"
                },
                "sharedQueues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Shared queues\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Queue sharing group name\n"
                },
                "queueManagers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Queue managers\n"
                },
                "sharedQueues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Shared queues\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering QueueSharingGroups resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Queue sharing group name\n"
                    },
                    "queueManagers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Queue managers\n"
                    },
                    "sharedQueues": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Shared queues\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/remoteEnvironments:RemoteEnvironments": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name\n"
                },
                "networkScope": {
                    "type": "string",
                    "description": "Possible Values: `CLUSTER`, `EXTERNAL`, `INTERNAL`\n"
                },
                "token": {
                    "type": "string",
                    "description": "Provide a valid token created on the remote environment.\n",
                    "secret": true
                },
                "uri": {
                    "type": "string",
                    "description": "Specify the full URI to the remote environment. Your local environment will have to be able to connect this URI on a network level.\n"
                }
            },
            "required": [
                "name",
                "networkScope",
                "token",
                "uri"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name\n"
                },
                "networkScope": {
                    "type": "string",
                    "description": "Possible Values: `CLUSTER`, `EXTERNAL`, `INTERNAL`\n"
                },
                "token": {
                    "type": "string",
                    "description": "Provide a valid token created on the remote environment.\n",
                    "secret": true
                },
                "uri": {
                    "type": "string",
                    "description": "Specify the full URI to the remote environment. Your local environment will have to be able to connect this URI on a network level.\n"
                }
            },
            "requiredInputs": [
                "networkScope",
                "token",
                "uri"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RemoteEnvironments resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name\n"
                    },
                    "networkScope": {
                        "type": "string",
                        "description": "Possible Values: `CLUSTER`, `EXTERNAL`, `INTERNAL`\n"
                    },
                    "token": {
                        "type": "string",
                        "description": "Provide a valid token created on the remote environment.\n",
                        "secret": true
                    },
                    "uri": {
                        "type": "string",
                        "description": "Specify the full URI to the remote environment. Your local environment will have to be able to connect this URI on a network level.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/requestAttribute:RequestAttribute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "Aggregation type for the request values\n"
                },
                "confidential": {
                    "type": "boolean",
                    "description": "Confidential data flag. Set `true` to treat the captured data as confidential\n"
                },
                "dataSources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/RequestAttributeDataSource:RequestAttributeDataSource"
                    },
                    "description": "The list of data sources\n"
                },
                "dataType": {
                    "type": "string",
                    "description": "The data type of the request attribute\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The data source is enabled (`true`) or disabled (`false`)\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the request attribute\n"
                },
                "normalization": {
                    "type": "string",
                    "description": "String values transformation.   If the **dataType** is not `string`, set the `Original` here\n"
                },
                "skipPersonalDataMasking": {
                    "type": "boolean",
                    "description": "Personal data masking flag. Set `true` to skip masking.   Warning: This will potentially access personalized data\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "required": [
                "aggregation",
                "dataType",
                "name",
                "normalization"
            ],
            "inputProperties": {
                "aggregation": {
                    "type": "string",
                    "description": "Aggregation type for the request values\n"
                },
                "confidential": {
                    "type": "boolean",
                    "description": "Confidential data flag. Set `true` to treat the captured data as confidential\n"
                },
                "dataSources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/RequestAttributeDataSource:RequestAttributeDataSource"
                    },
                    "description": "The list of data sources\n"
                },
                "dataType": {
                    "type": "string",
                    "description": "The data type of the request attribute\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The data source is enabled (`true`) or disabled (`false`)\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the request attribute\n"
                },
                "normalization": {
                    "type": "string",
                    "description": "String values transformation.   If the **dataType** is not `string`, set the `Original` here\n"
                },
                "skipPersonalDataMasking": {
                    "type": "boolean",
                    "description": "Personal data masking flag. Set `true` to skip masking.   Warning: This will potentially access personalized data\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "requiredInputs": [
                "aggregation",
                "dataType",
                "normalization"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RequestAttribute resources.\n",
                "properties": {
                    "aggregation": {
                        "type": "string",
                        "description": "Aggregation type for the request values\n"
                    },
                    "confidential": {
                        "type": "boolean",
                        "description": "Confidential data flag. Set `true` to treat the captured data as confidential\n"
                    },
                    "dataSources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/RequestAttributeDataSource:RequestAttributeDataSource"
                        },
                        "description": "The list of data sources\n"
                    },
                    "dataType": {
                        "type": "string",
                        "description": "The data type of the request attribute\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The data source is enabled (`true`) or disabled (`false`)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the request attribute\n"
                    },
                    "normalization": {
                        "type": "string",
                        "description": "String values transformation.   If the **dataType** is not `string`, set the `Original` here\n"
                    },
                    "skipPersonalDataMasking": {
                        "type": "boolean",
                        "description": "Personal data masking flag. Set `true` to skip masking.   Warning: This will potentially access personalized data\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/requestNaming:RequestNaming": {
            "properties": {
                "conditions": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditions:RequestNamingConditions",
                    "description": "The set of conditions for the request naming rule usage. You can specify several conditions. The request has to match\n**all** the specified conditions for the rule to trigger\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The rule is enabled (`true`) or disabled (`false`)\n"
                },
                "managementZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the management zones for which this rule should be applied\n"
                },
                "namingPattern": {
                    "type": "string",
                    "description": "The name to be assigned to matching requests\n"
                },
                "placeholders": {
                    "$ref": "#/types/dynatrace:index/RequestNamingPlaceholders:RequestNamingPlaceholders",
                    "description": "The list of custom placeholders to be used in the naming pattern. It enables you to extract a request attribute value or\nother request attribute and use it in the request naming pattern.\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "required": [
                "conditions",
                "namingPattern"
            ],
            "inputProperties": {
                "conditions": {
                    "$ref": "#/types/dynatrace:index/RequestNamingConditions:RequestNamingConditions",
                    "description": "The set of conditions for the request naming rule usage. You can specify several conditions. The request has to match\n**all** the specified conditions for the rule to trigger\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The rule is enabled (`true`) or disabled (`false`)\n"
                },
                "managementZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the management zones for which this rule should be applied\n"
                },
                "namingPattern": {
                    "type": "string",
                    "description": "The name to be assigned to matching requests\n"
                },
                "placeholders": {
                    "$ref": "#/types/dynatrace:index/RequestNamingPlaceholders:RequestNamingPlaceholders",
                    "description": "The list of custom placeholders to be used in the naming pattern. It enables you to extract a request attribute value or\nother request attribute and use it in the request naming pattern.\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "requiredInputs": [
                "conditions",
                "namingPattern"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RequestNaming resources.\n",
                "properties": {
                    "conditions": {
                        "$ref": "#/types/dynatrace:index/RequestNamingConditions:RequestNamingConditions",
                        "description": "The set of conditions for the request naming rule usage. You can specify several conditions. The request has to match\n**all** the specified conditions for the rule to trigger\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The rule is enabled (`true`) or disabled (`false`)\n"
                    },
                    "managementZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the management zones for which this rule should be applied\n"
                    },
                    "namingPattern": {
                        "type": "string",
                        "description": "The name to be assigned to matching requests\n"
                    },
                    "placeholders": {
                        "$ref": "#/types/dynatrace:index/RequestNamingPlaceholders:RequestNamingPlaceholders",
                        "description": "The list of custom placeholders to be used in the naming pattern. It enables you to extract a request attribute value or\nother request attribute and use it in the request naming pattern.\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/requestNamings:RequestNamings": {
            "description": "\u003e This resource requires the API token scopes **Read configuration** (`ReadConfig`) and **Write configuration** (`WriteConfig`)\n\n## Dynatrace Documentation\n\n- Set up request naming - https://www.dynatrace.com/support/help/how-to-use-dynatrace/services/service-monitoring-settings/set-up-request-naming\n\n- Request naming API - https://www.dynatrace.com/support/help/dynatrace-api/configuration-api/service-api/request-naming-api\n",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IDs of the request namings in the order they should be taken into consideration\n"
                }
            },
            "inputProperties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IDs of the request namings in the order they should be taken into consideration\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RequestNamings resources.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The IDs of the request namings in the order they should be taken into consideration\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/resourceAttributes:ResourceAttributes": {
            "properties": {
                "keys": {
                    "$ref": "#/types/dynatrace:index/ResourceAttributesKeys:ResourceAttributesKeys",
                    "description": "Attribute key allow-list\n"
                }
            },
            "inputProperties": {
                "keys": {
                    "$ref": "#/types/dynatrace:index/ResourceAttributesKeys:ResourceAttributesKeys",
                    "description": "Attribute key allow-list\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ResourceAttributes resources.\n",
                "properties": {
                    "keys": {
                        "$ref": "#/types/dynatrace:index/ResourceAttributesKeys:ResourceAttributesKeys",
                        "description": "Attribute key allow-list\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/rumAdvancedCorrelation:RumAdvancedCorrelation": {
            "properties": {
                "matcher": {
                    "type": "string",
                    "description": "Possible Values: `CONTAINS`, `ENDS_WITH`, `EQUALS`, `STARTS_WITH`\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Pattern\n"
                }
            },
            "required": [
                "matcher",
                "pattern"
            ],
            "inputProperties": {
                "matcher": {
                    "type": "string",
                    "description": "Possible Values: `CONTAINS`, `ENDS_WITH`, `EQUALS`, `STARTS_WITH`\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Pattern\n"
                }
            },
            "requiredInputs": [
                "matcher",
                "pattern"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RumAdvancedCorrelation resources.\n",
                "properties": {
                    "matcher": {
                        "type": "string",
                        "description": "Possible Values: `CONTAINS`, `ENDS_WITH`, `EQUALS`, `STARTS_WITH`\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "Pattern\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/rumHostHeaders:RumHostHeaders": {
            "properties": {
                "headerName": {
                    "type": "string",
                    "description": "HTTP header format\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                }
            },
            "required": [
                "headerName",
                "insertAfter"
            ],
            "inputProperties": {
                "headerName": {
                    "type": "string",
                    "description": "HTTP header format\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                }
            },
            "requiredInputs": [
                "headerName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RumHostHeaders resources.\n",
                "properties": {
                    "headerName": {
                        "type": "string",
                        "description": "HTTP header format\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/rumIpDetermination:RumIpDetermination": {
            "properties": {
                "headerName": {
                    "type": "string",
                    "description": "Client IP header name\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                }
            },
            "required": [
                "headerName",
                "insertAfter"
            ],
            "inputProperties": {
                "headerName": {
                    "type": "string",
                    "description": "Client IP header name\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                }
            },
            "requiredInputs": [
                "headerName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RumIpDetermination resources.\n",
                "properties": {
                    "headerName": {
                        "type": "string",
                        "description": "Client IP header name\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/rumIpLocations:RumIpLocations": {
            "properties": {
                "city": {
                    "type": "string",
                    "description": "The city name of the location.\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "The country code of the location.\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Single IP or IP range start address\n"
                },
                "ipTo": {
                    "type": "string",
                    "description": "IP range end\n"
                },
                "latitude": {
                    "type": "number",
                    "description": "Latitude\n"
                },
                "longitude": {
                    "type": "number",
                    "description": "Longitude\n"
                },
                "regionCode": {
                    "type": "string",
                    "description": "The region code of the location. For the [USA](https://dt-url.net/iso3166us) or [Canada](https://dt-url.net/iso3166ca)\nuse ISO 3166-2 state codes without `US-` or `CA-` prefix. For the rest of the world use [FIPS 10-4\ncodes](https://dt-url.net/fipscodes) without country prefix.\n"
                }
            },
            "required": [
                "countryCode",
                "ip"
            ],
            "inputProperties": {
                "city": {
                    "type": "string",
                    "description": "The city name of the location.\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "The country code of the location.\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Single IP or IP range start address\n"
                },
                "ipTo": {
                    "type": "string",
                    "description": "IP range end\n"
                },
                "latitude": {
                    "type": "number",
                    "description": "Latitude\n"
                },
                "longitude": {
                    "type": "number",
                    "description": "Longitude\n"
                },
                "regionCode": {
                    "type": "string",
                    "description": "The region code of the location. For the [USA](https://dt-url.net/iso3166us) or [Canada](https://dt-url.net/iso3166ca)\nuse ISO 3166-2 state codes without `US-` or `CA-` prefix. For the rest of the world use [FIPS 10-4\ncodes](https://dt-url.net/fipscodes) without country prefix.\n"
                }
            },
            "requiredInputs": [
                "countryCode",
                "ip"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RumIpLocations resources.\n",
                "properties": {
                    "city": {
                        "type": "string",
                        "description": "The city name of the location.\n"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "The country code of the location.\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "Single IP or IP range start address\n"
                    },
                    "ipTo": {
                        "type": "string",
                        "description": "IP range end\n"
                    },
                    "latitude": {
                        "type": "number",
                        "description": "Latitude\n"
                    },
                    "longitude": {
                        "type": "number",
                        "description": "Longitude\n"
                    },
                    "regionCode": {
                        "type": "string",
                        "description": "The region code of the location. For the [USA](https://dt-url.net/iso3166us) or [Canada](https://dt-url.net/iso3166ca)\nuse ISO 3166-2 state codes without `US-` or `CA-` prefix. For the rest of the world use [FIPS 10-4\ncodes](https://dt-url.net/fipscodes) without country prefix.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/rumOverloadPrevention:RumOverloadPrevention": {
            "properties": {
                "overloadPreventionLimit": {
                    "type": "integer",
                    "description": "Once this limit is reached, Dynatrace [throttles the number of captured user sessions](https://dt-url.net/fm3v0p7g).\n"
                }
            },
            "required": [
                "overloadPreventionLimit"
            ],
            "inputProperties": {
                "overloadPreventionLimit": {
                    "type": "integer",
                    "description": "Once this limit is reached, Dynatrace [throttles the number of captured user sessions](https://dt-url.net/fm3v0p7g).\n"
                }
            },
            "requiredInputs": [
                "overloadPreventionLimit"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RumOverloadPrevention resources.\n",
                "properties": {
                    "overloadPreventionLimit": {
                        "type": "integer",
                        "description": "Once this limit is reached, Dynatrace [throttles the number of captured user sessions](https://dt-url.net/fm3v0p7g).\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/rumProviderBreakdown:RumProviderBreakdown": {
            "properties": {
                "domainNamePatternList": {
                    "$ref": "#/types/dynatrace:index/RumProviderBreakdownDomainNamePatternList:RumProviderBreakdownDomainNamePatternList",
                    "description": "Domain name pattern\n"
                },
                "iconUrl": {
                    "type": "string",
                    "description": "Specify an URL for the provider's brand icon\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "reportPublicImprovement": {
                    "type": "boolean",
                    "description": "Send the patterns of this provider to Dynatrace to help us improve 3rd-party detection.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "Resource name\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "Possible Values: `FirstParty`, `ThirdParty`, `Cdn`\n"
                }
            },
            "required": [
                "domainNamePatternList",
                "insertAfter",
                "reportPublicImprovement",
                "resourceName",
                "resourceType"
            ],
            "inputProperties": {
                "domainNamePatternList": {
                    "$ref": "#/types/dynatrace:index/RumProviderBreakdownDomainNamePatternList:RumProviderBreakdownDomainNamePatternList",
                    "description": "Domain name pattern\n"
                },
                "iconUrl": {
                    "type": "string",
                    "description": "Specify an URL for the provider's brand icon\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "reportPublicImprovement": {
                    "type": "boolean",
                    "description": "Send the patterns of this provider to Dynatrace to help us improve 3rd-party detection.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "Resource name\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "Possible Values: `FirstParty`, `ThirdParty`, `Cdn`\n"
                }
            },
            "requiredInputs": [
                "domainNamePatternList",
                "reportPublicImprovement",
                "resourceName",
                "resourceType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RumProviderBreakdown resources.\n",
                "properties": {
                    "domainNamePatternList": {
                        "$ref": "#/types/dynatrace:index/RumProviderBreakdownDomainNamePatternList:RumProviderBreakdownDomainNamePatternList",
                        "description": "Domain name pattern\n"
                    },
                    "iconUrl": {
                        "type": "string",
                        "description": "Specify an URL for the provider's brand icon\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "reportPublicImprovement": {
                        "type": "boolean",
                        "description": "Send the patterns of this provider to Dynatrace to help us improve 3rd-party detection.\n"
                    },
                    "resourceName": {
                        "type": "string",
                        "description": "Resource name\n"
                    },
                    "resourceType": {
                        "type": "string",
                        "description": "Possible Values: `FirstParty`, `ThirdParty`, `Cdn`\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/serviceAnomalies:ServiceAnomalies": {
            "properties": {
                "failureRates": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesFailureRates:ServiceAnomaliesFailureRates",
                    "description": "Configuration of failure rate increase detection. Detecting failure rate increases will be disabled if this block is omitted.\n"
                },
                "load": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesLoad:ServiceAnomaliesLoad",
                    "description": "Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are `FIFTEEN_REQUESTS_PER_MINUTE`, `FIVE_REQUESTS_PER_MINUTE`, `ONE_REQUEST_PER_MINUTE` and `TEN_REQUESTS_PER_MINUTE`\n"
                },
                "loadDrops": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesLoadDrops:ServiceAnomaliesLoadDrops",
                    "description": "The configuration of load drops detection. Detecting load drops will be disabled if this block is omitted.\n"
                },
                "responseTimes": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesResponseTimes:ServiceAnomaliesResponseTimes",
                    "description": "Configuration of response time degradation detection. Detecting response time degradation will be disabled if this block is omitted.\n"
                }
            },
            "inputProperties": {
                "failureRates": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesFailureRates:ServiceAnomaliesFailureRates",
                    "description": "Configuration of failure rate increase detection. Detecting failure rate increases will be disabled if this block is omitted.\n"
                },
                "load": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesLoad:ServiceAnomaliesLoad",
                    "description": "Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are `FIFTEEN_REQUESTS_PER_MINUTE`, `FIVE_REQUESTS_PER_MINUTE`, `ONE_REQUEST_PER_MINUTE` and `TEN_REQUESTS_PER_MINUTE`\n"
                },
                "loadDrops": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesLoadDrops:ServiceAnomaliesLoadDrops",
                    "description": "The configuration of load drops detection. Detecting load drops will be disabled if this block is omitted.\n"
                },
                "responseTimes": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesResponseTimes:ServiceAnomaliesResponseTimes",
                    "description": "Configuration of response time degradation detection. Detecting response time degradation will be disabled if this block is omitted.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceAnomalies resources.\n",
                "properties": {
                    "failureRates": {
                        "$ref": "#/types/dynatrace:index/ServiceAnomaliesFailureRates:ServiceAnomaliesFailureRates",
                        "description": "Configuration of failure rate increase detection. Detecting failure rate increases will be disabled if this block is omitted.\n"
                    },
                    "load": {
                        "$ref": "#/types/dynatrace:index/ServiceAnomaliesLoad:ServiceAnomaliesLoad",
                        "description": "Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are `FIFTEEN_REQUESTS_PER_MINUTE`, `FIVE_REQUESTS_PER_MINUTE`, `ONE_REQUEST_PER_MINUTE` and `TEN_REQUESTS_PER_MINUTE`\n"
                    },
                    "loadDrops": {
                        "$ref": "#/types/dynatrace:index/ServiceAnomaliesLoadDrops:ServiceAnomaliesLoadDrops",
                        "description": "The configuration of load drops detection. Detecting load drops will be disabled if this block is omitted.\n"
                    },
                    "responseTimes": {
                        "$ref": "#/types/dynatrace:index/ServiceAnomaliesResponseTimes:ServiceAnomaliesResponseTimes",
                        "description": "Configuration of response time degradation detection. Detecting response time degradation will be disabled if this block is omitted.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/serviceAnomaliesV2:ServiceAnomaliesV2": {
            "properties": {
                "failureRate": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesV2FailureRate:ServiceAnomaliesV2FailureRate",
                    "description": "Failure rate\n"
                },
                "loadDrops": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesV2LoadDrops:ServiceAnomaliesV2LoadDrops",
                    "description": "Alert if the observed load is lower than the expected load by a specified margin for a specified amount of time:\n"
                },
                "loadSpikes": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesV2LoadSpikes:ServiceAnomaliesV2LoadSpikes",
                    "description": "Alert if the observed load exceeds the expected load by a specified margin for a specified amount of time:\n"
                },
                "responseTime": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesV2ResponseTime:ServiceAnomaliesV2ResponseTime",
                    "description": "Response time\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (SERVICE*METHOD, SERVICE, HOST*GROUP). Omit this property if you want to cover the whole environment.\n"
                }
            },
            "required": [
                "failureRate",
                "loadDrops",
                "loadSpikes",
                "responseTime"
            ],
            "inputProperties": {
                "failureRate": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesV2FailureRate:ServiceAnomaliesV2FailureRate",
                    "description": "Failure rate\n"
                },
                "loadDrops": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesV2LoadDrops:ServiceAnomaliesV2LoadDrops",
                    "description": "Alert if the observed load is lower than the expected load by a specified margin for a specified amount of time:\n"
                },
                "loadSpikes": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesV2LoadSpikes:ServiceAnomaliesV2LoadSpikes",
                    "description": "Alert if the observed load exceeds the expected load by a specified margin for a specified amount of time:\n"
                },
                "responseTime": {
                    "$ref": "#/types/dynatrace:index/ServiceAnomaliesV2ResponseTime:ServiceAnomaliesV2ResponseTime",
                    "description": "Response time\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (SERVICE*METHOD, SERVICE, HOST*GROUP). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "failureRate",
                "loadDrops",
                "loadSpikes",
                "responseTime"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceAnomaliesV2 resources.\n",
                "properties": {
                    "failureRate": {
                        "$ref": "#/types/dynatrace:index/ServiceAnomaliesV2FailureRate:ServiceAnomaliesV2FailureRate",
                        "description": "Failure rate\n"
                    },
                    "loadDrops": {
                        "$ref": "#/types/dynatrace:index/ServiceAnomaliesV2LoadDrops:ServiceAnomaliesV2LoadDrops",
                        "description": "Alert if the observed load is lower than the expected load by a specified margin for a specified amount of time:\n"
                    },
                    "loadSpikes": {
                        "$ref": "#/types/dynatrace:index/ServiceAnomaliesV2LoadSpikes:ServiceAnomaliesV2LoadSpikes",
                        "description": "Alert if the observed load exceeds the expected load by a specified margin for a specified amount of time:\n"
                    },
                    "responseTime": {
                        "$ref": "#/types/dynatrace:index/ServiceAnomaliesV2ResponseTime:ServiceAnomaliesV2ResponseTime",
                        "description": "Response time\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (SERVICE*METHOD, SERVICE, HOST*GROUP). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/serviceExternalWebRequest:ServiceExternalWebRequest": {
            "properties": {
                "conditions": {
                    "$ref": "#/types/dynatrace:index/ServiceExternalWebRequestConditions:ServiceExternalWebRequestConditions",
                    "description": "A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must **all** match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "idContributors": {
                    "$ref": "#/types/dynatrace:index/ServiceExternalWebRequestIdContributors:ServiceExternalWebRequestIdContributors",
                    "description": "Contributors to the Service Identifier calculation. All of the Contributors except for the port are always applied. You can exclude the port contribution by disabling the switch.\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "managementZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Define a management zone of the process group for which this service detection rule should be created.  Note: in case of external requests/services the PG might not always be known. See [here](https://dt-url.net/9i03b79)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Rule name\n"
                }
            },
            "required": [
                "enabled",
                "idContributors",
                "insertAfter",
                "name"
            ],
            "inputProperties": {
                "conditions": {
                    "$ref": "#/types/dynatrace:index/ServiceExternalWebRequestConditions:ServiceExternalWebRequestConditions",
                    "description": "A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must **all** match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "idContributors": {
                    "$ref": "#/types/dynatrace:index/ServiceExternalWebRequestIdContributors:ServiceExternalWebRequestIdContributors",
                    "description": "Contributors to the Service Identifier calculation. All of the Contributors except for the port are always applied. You can exclude the port contribution by disabling the switch.\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "managementZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Define a management zone of the process group for which this service detection rule should be created.  Note: in case of external requests/services the PG might not always be known. See [here](https://dt-url.net/9i03b79)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Rule name\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "idContributors"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceExternalWebRequest resources.\n",
                "properties": {
                    "conditions": {
                        "$ref": "#/types/dynatrace:index/ServiceExternalWebRequestConditions:ServiceExternalWebRequestConditions",
                        "description": "A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must **all** match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "idContributors": {
                        "$ref": "#/types/dynatrace:index/ServiceExternalWebRequestIdContributors:ServiceExternalWebRequestIdContributors",
                        "description": "Contributors to the Service Identifier calculation. All of the Contributors except for the port are always applied. You can exclude the port contribution by disabling the switch.\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "managementZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Define a management zone of the process group for which this service detection rule should be created.  Note: in case of external requests/services the PG might not always be known. See [here](https://dt-url.net/9i03b79)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Rule name\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/serviceExternalWebService:ServiceExternalWebService": {
            "properties": {
                "conditions": {
                    "$ref": "#/types/dynatrace:index/ServiceExternalWebServiceConditions:ServiceExternalWebServiceConditions",
                    "description": "A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must **all** match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "idContributors": {
                    "$ref": "#/types/dynatrace:index/ServiceExternalWebServiceIdContributors:ServiceExternalWebServiceIdContributors",
                    "description": "Contributors to the Service Identifier calculation. URL path is always applied as an Id Contributor. You can exclude the port contribution by disabling the switch.\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "managementZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Define a management zone of the process group for which this service detection rule should be created.  Note: in case of external requests/services the PG might not always be known. See [here](https://dt-url.net/9i03b79)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Rule name\n"
                }
            },
            "required": [
                "enabled",
                "idContributors",
                "insertAfter",
                "name"
            ],
            "inputProperties": {
                "conditions": {
                    "$ref": "#/types/dynatrace:index/ServiceExternalWebServiceConditions:ServiceExternalWebServiceConditions",
                    "description": "A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must **all** match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "idContributors": {
                    "$ref": "#/types/dynatrace:index/ServiceExternalWebServiceIdContributors:ServiceExternalWebServiceIdContributors",
                    "description": "Contributors to the Service Identifier calculation. URL path is always applied as an Id Contributor. You can exclude the port contribution by disabling the switch.\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "managementZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Define a management zone of the process group for which this service detection rule should be created.  Note: in case of external requests/services the PG might not always be known. See [here](https://dt-url.net/9i03b79)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Rule name\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "idContributors"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceExternalWebService resources.\n",
                "properties": {
                    "conditions": {
                        "$ref": "#/types/dynatrace:index/ServiceExternalWebServiceConditions:ServiceExternalWebServiceConditions",
                        "description": "A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must **all** match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "idContributors": {
                        "$ref": "#/types/dynatrace:index/ServiceExternalWebServiceIdContributors:ServiceExternalWebServiceIdContributors",
                        "description": "Contributors to the Service Identifier calculation. URL path is always applied as an Id Contributor. You can exclude the port contribution by disabling the switch.\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "managementZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Define a management zone of the process group for which this service detection rule should be created.  Note: in case of external requests/services the PG might not always be known. See [here](https://dt-url.net/9i03b79)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Rule name\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/serviceFailure:ServiceFailure": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "exceptionRules": {
                    "$ref": "#/types/dynatrace:index/ServiceFailureExceptionRules:ServiceFailureExceptionRules",
                    "description": "Customize failure detection for specific exceptions and errors\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                }
            },
            "required": [
                "enabled",
                "serviceId"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "exceptionRules": {
                    "$ref": "#/types/dynatrace:index/ServiceFailureExceptionRules:ServiceFailureExceptionRules",
                    "description": "Customize failure detection for specific exceptions and errors\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enabled",
                "serviceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceFailure resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "exceptionRules": {
                        "$ref": "#/types/dynatrace:index/ServiceFailureExceptionRules:ServiceFailureExceptionRules",
                        "description": "Customize failure detection for specific exceptions and errors\n"
                    },
                    "serviceId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/serviceFullWebRequest:ServiceFullWebRequest": {
            "properties": {
                "conditions": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebRequestConditions:ServiceFullWebRequestConditions",
                    "description": "A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must **all** match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "idContributors": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebRequestIdContributors:ServiceFullWebRequestIdContributors",
                    "description": "Contributors to the Service Identifier calculation. All of the Contributors are always applied.\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "managementZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Define a management zone of the process group for which this service detection rule should be created.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Rule name\n"
                }
            },
            "required": [
                "enabled",
                "idContributors",
                "insertAfter",
                "name"
            ],
            "inputProperties": {
                "conditions": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebRequestConditions:ServiceFullWebRequestConditions",
                    "description": "A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must **all** match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "idContributors": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebRequestIdContributors:ServiceFullWebRequestIdContributors",
                    "description": "Contributors to the Service Identifier calculation. All of the Contributors are always applied.\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "managementZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Define a management zone of the process group for which this service detection rule should be created.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Rule name\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "idContributors"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceFullWebRequest resources.\n",
                "properties": {
                    "conditions": {
                        "$ref": "#/types/dynatrace:index/ServiceFullWebRequestConditions:ServiceFullWebRequestConditions",
                        "description": "A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must **all** match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "idContributors": {
                        "$ref": "#/types/dynatrace:index/ServiceFullWebRequestIdContributors:ServiceFullWebRequestIdContributors",
                        "description": "Contributors to the Service Identifier calculation. All of the Contributors are always applied.\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "managementZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Define a management zone of the process group for which this service detection rule should be created.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Rule name\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/serviceFullWebService:ServiceFullWebService": {
            "properties": {
                "conditions": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebServiceConditions:ServiceFullWebServiceConditions",
                    "description": "A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must **all** match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "idContributors": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributors:ServiceFullWebServiceIdContributors",
                    "description": "Contributors to the Service Identifier calculation. All of the Contributors are always applied.\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "managementZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Define a management zone of the process group for which this service detection rule should be created.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Rule name\n"
                }
            },
            "required": [
                "enabled",
                "idContributors",
                "insertAfter",
                "name"
            ],
            "inputProperties": {
                "conditions": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebServiceConditions:ServiceFullWebServiceConditions",
                    "description": "A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must **all** match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "idContributors": {
                    "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributors:ServiceFullWebServiceIdContributors",
                    "description": "Contributors to the Service Identifier calculation. All of the Contributors are always applied.\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "managementZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Define a management zone of the process group for which this service detection rule should be created.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Rule name\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "idContributors"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceFullWebService resources.\n",
                "properties": {
                    "conditions": {
                        "$ref": "#/types/dynatrace:index/ServiceFullWebServiceConditions:ServiceFullWebServiceConditions",
                        "description": "A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must **all** match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "idContributors": {
                        "$ref": "#/types/dynatrace:index/ServiceFullWebServiceIdContributors:ServiceFullWebServiceIdContributors",
                        "description": "Contributors to the Service Identifier calculation. All of the Contributors are always applied.\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "managementZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Define a management zone of the process group for which this service detection rule should be created.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Rule name\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/serviceHttpFailure:ServiceHttpFailure": {
            "properties": {
                "brokenLinks": {
                    "$ref": "#/types/dynatrace:index/ServiceHttpFailureBrokenLinks:ServiceHttpFailureBrokenLinks",
                    "description": "HTTP 404 response codes are thrown when a web server can't find a certain page. 404s are classified as broken links on the client side and therefore aren't considered to be service failures. By enabling this setting, you can have 404s treated as server-side service failures.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "httpResponseCodes": {
                    "$ref": "#/types/dynatrace:index/ServiceHttpFailureHttpResponseCodes:ServiceHttpFailureHttpResponseCodes",
                    "description": "HTTP response codes\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                }
            },
            "required": [
                "enabled",
                "serviceId"
            ],
            "inputProperties": {
                "brokenLinks": {
                    "$ref": "#/types/dynatrace:index/ServiceHttpFailureBrokenLinks:ServiceHttpFailureBrokenLinks",
                    "description": "HTTP 404 response codes are thrown when a web server can't find a certain page. 404s are classified as broken links on the client side and therefore aren't considered to be service failures. By enabling this setting, you can have 404s treated as server-side service failures.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "httpResponseCodes": {
                    "$ref": "#/types/dynatrace:index/ServiceHttpFailureHttpResponseCodes:ServiceHttpFailureHttpResponseCodes",
                    "description": "HTTP response codes\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enabled",
                "serviceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceHttpFailure resources.\n",
                "properties": {
                    "brokenLinks": {
                        "$ref": "#/types/dynatrace:index/ServiceHttpFailureBrokenLinks:ServiceHttpFailureBrokenLinks",
                        "description": "HTTP 404 response codes are thrown when a web server can't find a certain page. 404s are classified as broken links on the client side and therefore aren't considered to be service failures. By enabling this setting, you can have 404s treated as server-side service failures.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "httpResponseCodes": {
                        "$ref": "#/types/dynatrace:index/ServiceHttpFailureHttpResponseCodes:ServiceHttpFailureHttpResponseCodes",
                        "description": "HTTP response codes\n"
                    },
                    "serviceId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/serviceNaming:ServiceNaming": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingCondition:ServiceNamingCondition"
                    },
                    "description": "A list of matching conditions of the rule. The rule applies only if **all** conditions are fulfilled\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The rule is enabled (`true`) or disabled (`false`)\n"
                },
                "format": {
                    "type": "string",
                    "description": "The name to be assigned to matching entities. You can use the following placeholders here: *\n`{AwsAutoScalingGroup:Name}` * `{AwsAvailabilityZone:Name}` * `{AwsElasticLoadBalancer:Name}` *\n`{AwsRelationalDatabaseService:DBName}` * `{AwsRelationalDatabaseService:Endpoint}` *\n`{AwsRelationalDatabaseService:Engine}` * `{AwsRelationalDatabaseService:InstanceClass}` *\n`{AwsRelationalDatabaseService:Name}` * `{AwsRelationalDatabaseService:Port}` * `{AzureRegion:Name}` *\n`{AzureScaleSet:Name}` * `{AzureVm:Name}` * `{CloudFoundryOrganization:Name}` * `{CustomDevice:DetectedName}` *\n`{CustomDevice:DnsName}` * `{CustomDevice:IpAddress}` * `{CustomDevice:Port}` *\n`{DockerContainerGroupInstance:ContainerName}` * `{DockerContainerGroupInstance:FullImageName}` *\n`{DockerContainerGroupInstance:ImageVersion}` * `{DockerContainerGroupInstance:StrippedImageName}` *\n`{ESXIHost:HardwareModel}` * `{ESXIHost:HardwareVendor}` * `{ESXIHost:Name}` * `{ESXIHost:ProductName}` *\n`{ESXIHost:ProductVersion}` * `{Ec2Instance:AmiId}` * `{Ec2Instance:BeanstalkEnvironmentName}` *\n`{Ec2Instance:InstanceId}` * `{Ec2Instance:InstanceType}` * `{Ec2Instance:LocalHostName}` * `{Ec2Instance:Name}` *\n`{Ec2Instance:PublicHostName}` * `{Ec2Instance:SecurityGroup}` * `{GoogleComputeInstance:Id}` *\n`{GoogleComputeInstance:IpAddresses}` * `{GoogleComputeInstance:MachineType}` * `{GoogleComputeInstance:Name}` *\n`{GoogleComputeInstance:ProjectId}` * `{GoogleComputeInstance:Project}` * `{Host:AWSNameTag}` *\n`{Host:AixLogicalCpuCount}` * `{Host:AzureHostName}` * `{Host:AzureSiteName}` * `{Host:BoshDeploymentId}` *\n`{Host:BoshInstanceId}` * `{Host:BoshInstanceName}` * `{Host:BoshName}` * `{Host:BoshStemcellVersion}` *\n`{Host:CpuCores}` * `{Host:DetectedName}` * `{Host:Environment:AppName}` * `{Host:Environment:BoshReleaseVersion}` *\n`{Host:Environment:Environment}` * `{Host:Environment:Link}` * `{Host:Environment:Organization}` *\n`{Host:Environment:Owner}` * `{Host:Environment:Support}` * `{Host:IpAddress}` * `{Host:LogicalCpuCores}` *\n`{Host:OneAgentCustomHostName}` * `{Host:OperatingSystemVersion}` * `{Host:PaasMemoryLimit}` * `{HostGroup:Name}` *\n`{KubernetesCluster:Name}` * `{KubernetesNode:DetectedName}` * `{OpenstackAvailabilityZone:Name}` *\n`{OpenstackZone:Name}` * `{OpenstackComputeNode:Name}` * `{OpenstackProject:Name}` * `{OpenstackVm:InstanceType}` *\n`{OpenstackVm:Name}` * `{OpenstackVm:SecurityGroup}` * `{ProcessGroup:AmazonECRImageAccountId}` *\n`{ProcessGroup:AmazonECRImageRegion}` * `{ProcessGroup:AmazonECSCluster}` * `{ProcessGroup:AmazonECSContainerName}` *\n`{ProcessGroup:AmazonECSFamily}` * `{ProcessGroup:AmazonECSRevision}` * `{ProcessGroup:AmazonLambdaFunctionName}` *\n`{ProcessGroup:AmazonRegion}` * `{ProcessGroup:ApacheConfigPath}` * `{ProcessGroup:ApacheSparkMasterIpAddress}` *\n`{ProcessGroup:AspDotNetCoreApplicationPath}` * `{ProcessGroup:AspDotNetCoreApplicationPath}` *\n`{ProcessGroup:AzureHostName}` * `{ProcessGroup:AzureSiteName}` * `{ProcessGroup:CassandraClusterName}` *\n`{ProcessGroup:CatalinaBase}` * `{ProcessGroup:CatalinaHome}` * `{ProcessGroup:CloudFoundryAppId}` *\n`{ProcessGroup:CloudFoundryAppName}` * `{ProcessGroup:CloudFoundryInstanceIndex}` * `{ProcessGroup:CloudFoundrySpaceId}`\n* `{ProcessGroup:CloudFoundrySpaceName}` * `{ProcessGroup:ColdFusionJvmConfigFile}` *\n`{ProcessGroup:ColdFusionServiceName}` * `{ProcessGroup:CommandLineArgs}` * `{ProcessGroup:DetectedName}` *\n`{ProcessGroup:DotNetCommandPath}` * `{ProcessGroup:DotNetCommand}` * `{ProcessGroup:DotNetClusterId}` *\n`{ProcessGroup:DotNetNodeId}` * `{ProcessGroup:ElasticsearchClusterName}` * `{ProcessGroup:ElasticsearchNodeName}` *\n`{ProcessGroup:EquinoxConfigPath}` * `{ProcessGroup:ExeName}` * `{ProcessGroup:ExePath}` *\n`{ProcessGroup:GlassFishDomainName}` * `{ProcessGroup:GlassFishInstanceName}` * `{ProcessGroup:GoogleAppEngineInstance}`\n* `{ProcessGroup:GoogleAppEngineService}` * `{ProcessGroup:GoogleCloudProject}` * `{ProcessGroup:HybrisBinDirectory}` *\n`{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisDataDirectory}` *\n`{ProcessGroup:IBMCicsRegion}` * `{ProcessGroup:IBMCtgName}` * `{ProcessGroup:IBMImsConnectRegion}` *\n`{ProcessGroup:IBMImsControlRegion}` * `{ProcessGroup:IBMImsMessageProcessingRegion}` *\n`{ProcessGroup:IBMImsSoapGwName}` * `{ProcessGroup:IBMIntegrationNodeName}` * `{ProcessGroup:IBMIntegrationServerName}`\n* `{ProcessGroup:IISAppPool}` * `{ProcessGroup:IISRoleName}` * `{ProcessGroup:JbossHome}` * `{ProcessGroup:JbossMode}` *\n`{ProcessGroup:JbossServerName}` * `{ProcessGroup:JavaJarFile}` * `{ProcessGroup:JavaJarPath}` *\n`{ProcessGroup:JavaMainCLass}` * `{ProcessGroup:KubernetesBasePodName}` * `{ProcessGroup:KubernetesContainerName}` *\n`{ProcessGroup:KubernetesFullPodName}` * `{ProcessGroup:KubernetesNamespace}` * `{ProcessGroup:KubernetesPodUid}` *\n`{ProcessGroup:MssqlInstanceName}` * `{ProcessGroup:NodeJsAppBaseDirectory}` * `{ProcessGroup:NodeJsAppName}` *\n`{ProcessGroup:NodeJsScriptName}` * `{ProcessGroup:OracleSid}` * `{ProcessGroup:PHPScriptPath}` *\n`{ProcessGroup:PHPWorkingDirectory}` * `{ProcessGroup:Ports}` * `{ProcessGroup:RubyAppRootPath}` *\n`{ProcessGroup:RubyScriptPath}` * `{ProcessGroup:SoftwareAGInstallRoot}` *\n`{ProcessGroup:SoftwareAGProductPropertyName}` * `{ProcessGroup:SpringBootAppName}` *\n`{ProcessGroup:SpringBootProfileName}` * `{ProcessGroup:SpringBootStartupClass}` *\n`{ProcessGroup:TIBCOBusinessWorksAppNodeName}` * `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}` *\n`{ProcessGroup:TIBCOBusinessWorksCeAppName}` * `{ProcessGroup:TIBCOBusinessWorksCeVersion}` *\n`{ProcessGroup:TIBCOBusinessWorksDomainName}` * `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}` *\n`{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}` * `{ProcessGroup:TIBCOBusinessWorksHome}` *\n`{ProcessGroup:VarnishInstanceName}` * `{ProcessGroup:WebLogicClusterName}` * `{ProcessGroup:WebLogicDomainName}` *\n`{ProcessGroup:WebLogicHome}` * `{ProcessGroup:WebLogicName}` * `{ProcessGroup:WebSphereCellName}` *\n`{ProcessGroup:WebSphereClusterName}` * `{ProcessGroup:WebSphereNodeName}` * `{ProcessGroup:WebSphereServerName}` *\n`{ProcessGroup:ActorSystem}` * `{Service:STGServerName}` * `{Service:DatabaseHostName}` * `{Service:DatabaseName}` *\n`{Service:DatabaseVendor}` * `{Service:DetectedName}` * `{Service:EndpointPath}` * `{Service:EndpointPathGatewayUrl}` *\n`{Service:IIBApplicationName}` * `{Service:MessageListenerClassName}` * `{Service:Port}` * `{Service:PublicDomainName}`\n* `{Service:RemoteEndpoint}` * `{Service:RemoteName}` * `{Service:WebApplicationId}` * `{Service:WebContextRoot}` *\n`{Service:WebServerName}` * `{Service:WebServiceNamespace}` * `{Service:WebServiceName}` * `{VmwareDatacenter:Name}` *\n`{VmwareVm:Name}\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "required": [
                "enabled",
                "format",
                "name"
            ],
            "inputProperties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/ServiceNamingCondition:ServiceNamingCondition"
                    },
                    "description": "A list of matching conditions of the rule. The rule applies only if **all** conditions are fulfilled\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The rule is enabled (`true`) or disabled (`false`)\n"
                },
                "format": {
                    "type": "string",
                    "description": "The name to be assigned to matching entities. You can use the following placeholders here: *\n`{AwsAutoScalingGroup:Name}` * `{AwsAvailabilityZone:Name}` * `{AwsElasticLoadBalancer:Name}` *\n`{AwsRelationalDatabaseService:DBName}` * `{AwsRelationalDatabaseService:Endpoint}` *\n`{AwsRelationalDatabaseService:Engine}` * `{AwsRelationalDatabaseService:InstanceClass}` *\n`{AwsRelationalDatabaseService:Name}` * `{AwsRelationalDatabaseService:Port}` * `{AzureRegion:Name}` *\n`{AzureScaleSet:Name}` * `{AzureVm:Name}` * `{CloudFoundryOrganization:Name}` * `{CustomDevice:DetectedName}` *\n`{CustomDevice:DnsName}` * `{CustomDevice:IpAddress}` * `{CustomDevice:Port}` *\n`{DockerContainerGroupInstance:ContainerName}` * `{DockerContainerGroupInstance:FullImageName}` *\n`{DockerContainerGroupInstance:ImageVersion}` * `{DockerContainerGroupInstance:StrippedImageName}` *\n`{ESXIHost:HardwareModel}` * `{ESXIHost:HardwareVendor}` * `{ESXIHost:Name}` * `{ESXIHost:ProductName}` *\n`{ESXIHost:ProductVersion}` * `{Ec2Instance:AmiId}` * `{Ec2Instance:BeanstalkEnvironmentName}` *\n`{Ec2Instance:InstanceId}` * `{Ec2Instance:InstanceType}` * `{Ec2Instance:LocalHostName}` * `{Ec2Instance:Name}` *\n`{Ec2Instance:PublicHostName}` * `{Ec2Instance:SecurityGroup}` * `{GoogleComputeInstance:Id}` *\n`{GoogleComputeInstance:IpAddresses}` * `{GoogleComputeInstance:MachineType}` * `{GoogleComputeInstance:Name}` *\n`{GoogleComputeInstance:ProjectId}` * `{GoogleComputeInstance:Project}` * `{Host:AWSNameTag}` *\n`{Host:AixLogicalCpuCount}` * `{Host:AzureHostName}` * `{Host:AzureSiteName}` * `{Host:BoshDeploymentId}` *\n`{Host:BoshInstanceId}` * `{Host:BoshInstanceName}` * `{Host:BoshName}` * `{Host:BoshStemcellVersion}` *\n`{Host:CpuCores}` * `{Host:DetectedName}` * `{Host:Environment:AppName}` * `{Host:Environment:BoshReleaseVersion}` *\n`{Host:Environment:Environment}` * `{Host:Environment:Link}` * `{Host:Environment:Organization}` *\n`{Host:Environment:Owner}` * `{Host:Environment:Support}` * `{Host:IpAddress}` * `{Host:LogicalCpuCores}` *\n`{Host:OneAgentCustomHostName}` * `{Host:OperatingSystemVersion}` * `{Host:PaasMemoryLimit}` * `{HostGroup:Name}` *\n`{KubernetesCluster:Name}` * `{KubernetesNode:DetectedName}` * `{OpenstackAvailabilityZone:Name}` *\n`{OpenstackZone:Name}` * `{OpenstackComputeNode:Name}` * `{OpenstackProject:Name}` * `{OpenstackVm:InstanceType}` *\n`{OpenstackVm:Name}` * `{OpenstackVm:SecurityGroup}` * `{ProcessGroup:AmazonECRImageAccountId}` *\n`{ProcessGroup:AmazonECRImageRegion}` * `{ProcessGroup:AmazonECSCluster}` * `{ProcessGroup:AmazonECSContainerName}` *\n`{ProcessGroup:AmazonECSFamily}` * `{ProcessGroup:AmazonECSRevision}` * `{ProcessGroup:AmazonLambdaFunctionName}` *\n`{ProcessGroup:AmazonRegion}` * `{ProcessGroup:ApacheConfigPath}` * `{ProcessGroup:ApacheSparkMasterIpAddress}` *\n`{ProcessGroup:AspDotNetCoreApplicationPath}` * `{ProcessGroup:AspDotNetCoreApplicationPath}` *\n`{ProcessGroup:AzureHostName}` * `{ProcessGroup:AzureSiteName}` * `{ProcessGroup:CassandraClusterName}` *\n`{ProcessGroup:CatalinaBase}` * `{ProcessGroup:CatalinaHome}` * `{ProcessGroup:CloudFoundryAppId}` *\n`{ProcessGroup:CloudFoundryAppName}` * `{ProcessGroup:CloudFoundryInstanceIndex}` * `{ProcessGroup:CloudFoundrySpaceId}`\n* `{ProcessGroup:CloudFoundrySpaceName}` * `{ProcessGroup:ColdFusionJvmConfigFile}` *\n`{ProcessGroup:ColdFusionServiceName}` * `{ProcessGroup:CommandLineArgs}` * `{ProcessGroup:DetectedName}` *\n`{ProcessGroup:DotNetCommandPath}` * `{ProcessGroup:DotNetCommand}` * `{ProcessGroup:DotNetClusterId}` *\n`{ProcessGroup:DotNetNodeId}` * `{ProcessGroup:ElasticsearchClusterName}` * `{ProcessGroup:ElasticsearchNodeName}` *\n`{ProcessGroup:EquinoxConfigPath}` * `{ProcessGroup:ExeName}` * `{ProcessGroup:ExePath}` *\n`{ProcessGroup:GlassFishDomainName}` * `{ProcessGroup:GlassFishInstanceName}` * `{ProcessGroup:GoogleAppEngineInstance}`\n* `{ProcessGroup:GoogleAppEngineService}` * `{ProcessGroup:GoogleCloudProject}` * `{ProcessGroup:HybrisBinDirectory}` *\n`{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisDataDirectory}` *\n`{ProcessGroup:IBMCicsRegion}` * `{ProcessGroup:IBMCtgName}` * `{ProcessGroup:IBMImsConnectRegion}` *\n`{ProcessGroup:IBMImsControlRegion}` * `{ProcessGroup:IBMImsMessageProcessingRegion}` *\n`{ProcessGroup:IBMImsSoapGwName}` * `{ProcessGroup:IBMIntegrationNodeName}` * `{ProcessGroup:IBMIntegrationServerName}`\n* `{ProcessGroup:IISAppPool}` * `{ProcessGroup:IISRoleName}` * `{ProcessGroup:JbossHome}` * `{ProcessGroup:JbossMode}` *\n`{ProcessGroup:JbossServerName}` * `{ProcessGroup:JavaJarFile}` * `{ProcessGroup:JavaJarPath}` *\n`{ProcessGroup:JavaMainCLass}` * `{ProcessGroup:KubernetesBasePodName}` * `{ProcessGroup:KubernetesContainerName}` *\n`{ProcessGroup:KubernetesFullPodName}` * `{ProcessGroup:KubernetesNamespace}` * `{ProcessGroup:KubernetesPodUid}` *\n`{ProcessGroup:MssqlInstanceName}` * `{ProcessGroup:NodeJsAppBaseDirectory}` * `{ProcessGroup:NodeJsAppName}` *\n`{ProcessGroup:NodeJsScriptName}` * `{ProcessGroup:OracleSid}` * `{ProcessGroup:PHPScriptPath}` *\n`{ProcessGroup:PHPWorkingDirectory}` * `{ProcessGroup:Ports}` * `{ProcessGroup:RubyAppRootPath}` *\n`{ProcessGroup:RubyScriptPath}` * `{ProcessGroup:SoftwareAGInstallRoot}` *\n`{ProcessGroup:SoftwareAGProductPropertyName}` * `{ProcessGroup:SpringBootAppName}` *\n`{ProcessGroup:SpringBootProfileName}` * `{ProcessGroup:SpringBootStartupClass}` *\n`{ProcessGroup:TIBCOBusinessWorksAppNodeName}` * `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}` *\n`{ProcessGroup:TIBCOBusinessWorksCeAppName}` * `{ProcessGroup:TIBCOBusinessWorksCeVersion}` *\n`{ProcessGroup:TIBCOBusinessWorksDomainName}` * `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}` *\n`{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}` * `{ProcessGroup:TIBCOBusinessWorksHome}` *\n`{ProcessGroup:VarnishInstanceName}` * `{ProcessGroup:WebLogicClusterName}` * `{ProcessGroup:WebLogicDomainName}` *\n`{ProcessGroup:WebLogicHome}` * `{ProcessGroup:WebLogicName}` * `{ProcessGroup:WebSphereCellName}` *\n`{ProcessGroup:WebSphereClusterName}` * `{ProcessGroup:WebSphereNodeName}` * `{ProcessGroup:WebSphereServerName}` *\n`{ProcessGroup:ActorSystem}` * `{Service:STGServerName}` * `{Service:DatabaseHostName}` * `{Service:DatabaseName}` *\n`{Service:DatabaseVendor}` * `{Service:DetectedName}` * `{Service:EndpointPath}` * `{Service:EndpointPathGatewayUrl}` *\n`{Service:IIBApplicationName}` * `{Service:MessageListenerClassName}` * `{Service:Port}` * `{Service:PublicDomainName}`\n* `{Service:RemoteEndpoint}` * `{Service:RemoteName}` * `{Service:WebApplicationId}` * `{Service:WebContextRoot}` *\n`{Service:WebServerName}` * `{Service:WebServiceNamespace}` * `{Service:WebServiceName}` * `{VmwareDatacenter:Name}` *\n`{VmwareVm:Name}\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                },
                "unknowns": {
                    "type": "string",
                    "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "format"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceNaming resources.\n",
                "properties": {
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/ServiceNamingCondition:ServiceNamingCondition"
                        },
                        "description": "A list of matching conditions of the rule. The rule applies only if **all** conditions are fulfilled\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The rule is enabled (`true`) or disabled (`false`)\n"
                    },
                    "format": {
                        "type": "string",
                        "description": "The name to be assigned to matching entities. You can use the following placeholders here: *\n`{AwsAutoScalingGroup:Name}` * `{AwsAvailabilityZone:Name}` * `{AwsElasticLoadBalancer:Name}` *\n`{AwsRelationalDatabaseService:DBName}` * `{AwsRelationalDatabaseService:Endpoint}` *\n`{AwsRelationalDatabaseService:Engine}` * `{AwsRelationalDatabaseService:InstanceClass}` *\n`{AwsRelationalDatabaseService:Name}` * `{AwsRelationalDatabaseService:Port}` * `{AzureRegion:Name}` *\n`{AzureScaleSet:Name}` * `{AzureVm:Name}` * `{CloudFoundryOrganization:Name}` * `{CustomDevice:DetectedName}` *\n`{CustomDevice:DnsName}` * `{CustomDevice:IpAddress}` * `{CustomDevice:Port}` *\n`{DockerContainerGroupInstance:ContainerName}` * `{DockerContainerGroupInstance:FullImageName}` *\n`{DockerContainerGroupInstance:ImageVersion}` * `{DockerContainerGroupInstance:StrippedImageName}` *\n`{ESXIHost:HardwareModel}` * `{ESXIHost:HardwareVendor}` * `{ESXIHost:Name}` * `{ESXIHost:ProductName}` *\n`{ESXIHost:ProductVersion}` * `{Ec2Instance:AmiId}` * `{Ec2Instance:BeanstalkEnvironmentName}` *\n`{Ec2Instance:InstanceId}` * `{Ec2Instance:InstanceType}` * `{Ec2Instance:LocalHostName}` * `{Ec2Instance:Name}` *\n`{Ec2Instance:PublicHostName}` * `{Ec2Instance:SecurityGroup}` * `{GoogleComputeInstance:Id}` *\n`{GoogleComputeInstance:IpAddresses}` * `{GoogleComputeInstance:MachineType}` * `{GoogleComputeInstance:Name}` *\n`{GoogleComputeInstance:ProjectId}` * `{GoogleComputeInstance:Project}` * `{Host:AWSNameTag}` *\n`{Host:AixLogicalCpuCount}` * `{Host:AzureHostName}` * `{Host:AzureSiteName}` * `{Host:BoshDeploymentId}` *\n`{Host:BoshInstanceId}` * `{Host:BoshInstanceName}` * `{Host:BoshName}` * `{Host:BoshStemcellVersion}` *\n`{Host:CpuCores}` * `{Host:DetectedName}` * `{Host:Environment:AppName}` * `{Host:Environment:BoshReleaseVersion}` *\n`{Host:Environment:Environment}` * `{Host:Environment:Link}` * `{Host:Environment:Organization}` *\n`{Host:Environment:Owner}` * `{Host:Environment:Support}` * `{Host:IpAddress}` * `{Host:LogicalCpuCores}` *\n`{Host:OneAgentCustomHostName}` * `{Host:OperatingSystemVersion}` * `{Host:PaasMemoryLimit}` * `{HostGroup:Name}` *\n`{KubernetesCluster:Name}` * `{KubernetesNode:DetectedName}` * `{OpenstackAvailabilityZone:Name}` *\n`{OpenstackZone:Name}` * `{OpenstackComputeNode:Name}` * `{OpenstackProject:Name}` * `{OpenstackVm:InstanceType}` *\n`{OpenstackVm:Name}` * `{OpenstackVm:SecurityGroup}` * `{ProcessGroup:AmazonECRImageAccountId}` *\n`{ProcessGroup:AmazonECRImageRegion}` * `{ProcessGroup:AmazonECSCluster}` * `{ProcessGroup:AmazonECSContainerName}` *\n`{ProcessGroup:AmazonECSFamily}` * `{ProcessGroup:AmazonECSRevision}` * `{ProcessGroup:AmazonLambdaFunctionName}` *\n`{ProcessGroup:AmazonRegion}` * `{ProcessGroup:ApacheConfigPath}` * `{ProcessGroup:ApacheSparkMasterIpAddress}` *\n`{ProcessGroup:AspDotNetCoreApplicationPath}` * `{ProcessGroup:AspDotNetCoreApplicationPath}` *\n`{ProcessGroup:AzureHostName}` * `{ProcessGroup:AzureSiteName}` * `{ProcessGroup:CassandraClusterName}` *\n`{ProcessGroup:CatalinaBase}` * `{ProcessGroup:CatalinaHome}` * `{ProcessGroup:CloudFoundryAppId}` *\n`{ProcessGroup:CloudFoundryAppName}` * `{ProcessGroup:CloudFoundryInstanceIndex}` * `{ProcessGroup:CloudFoundrySpaceId}`\n* `{ProcessGroup:CloudFoundrySpaceName}` * `{ProcessGroup:ColdFusionJvmConfigFile}` *\n`{ProcessGroup:ColdFusionServiceName}` * `{ProcessGroup:CommandLineArgs}` * `{ProcessGroup:DetectedName}` *\n`{ProcessGroup:DotNetCommandPath}` * `{ProcessGroup:DotNetCommand}` * `{ProcessGroup:DotNetClusterId}` *\n`{ProcessGroup:DotNetNodeId}` * `{ProcessGroup:ElasticsearchClusterName}` * `{ProcessGroup:ElasticsearchNodeName}` *\n`{ProcessGroup:EquinoxConfigPath}` * `{ProcessGroup:ExeName}` * `{ProcessGroup:ExePath}` *\n`{ProcessGroup:GlassFishDomainName}` * `{ProcessGroup:GlassFishInstanceName}` * `{ProcessGroup:GoogleAppEngineInstance}`\n* `{ProcessGroup:GoogleAppEngineService}` * `{ProcessGroup:GoogleCloudProject}` * `{ProcessGroup:HybrisBinDirectory}` *\n`{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisConfigDirectory}` * `{ProcessGroup:HybrisDataDirectory}` *\n`{ProcessGroup:IBMCicsRegion}` * `{ProcessGroup:IBMCtgName}` * `{ProcessGroup:IBMImsConnectRegion}` *\n`{ProcessGroup:IBMImsControlRegion}` * `{ProcessGroup:IBMImsMessageProcessingRegion}` *\n`{ProcessGroup:IBMImsSoapGwName}` * `{ProcessGroup:IBMIntegrationNodeName}` * `{ProcessGroup:IBMIntegrationServerName}`\n* `{ProcessGroup:IISAppPool}` * `{ProcessGroup:IISRoleName}` * `{ProcessGroup:JbossHome}` * `{ProcessGroup:JbossMode}` *\n`{ProcessGroup:JbossServerName}` * `{ProcessGroup:JavaJarFile}` * `{ProcessGroup:JavaJarPath}` *\n`{ProcessGroup:JavaMainCLass}` * `{ProcessGroup:KubernetesBasePodName}` * `{ProcessGroup:KubernetesContainerName}` *\n`{ProcessGroup:KubernetesFullPodName}` * `{ProcessGroup:KubernetesNamespace}` * `{ProcessGroup:KubernetesPodUid}` *\n`{ProcessGroup:MssqlInstanceName}` * `{ProcessGroup:NodeJsAppBaseDirectory}` * `{ProcessGroup:NodeJsAppName}` *\n`{ProcessGroup:NodeJsScriptName}` * `{ProcessGroup:OracleSid}` * `{ProcessGroup:PHPScriptPath}` *\n`{ProcessGroup:PHPWorkingDirectory}` * `{ProcessGroup:Ports}` * `{ProcessGroup:RubyAppRootPath}` *\n`{ProcessGroup:RubyScriptPath}` * `{ProcessGroup:SoftwareAGInstallRoot}` *\n`{ProcessGroup:SoftwareAGProductPropertyName}` * `{ProcessGroup:SpringBootAppName}` *\n`{ProcessGroup:SpringBootProfileName}` * `{ProcessGroup:SpringBootStartupClass}` *\n`{ProcessGroup:TIBCOBusinessWorksAppNodeName}` * `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}` *\n`{ProcessGroup:TIBCOBusinessWorksCeAppName}` * `{ProcessGroup:TIBCOBusinessWorksCeVersion}` *\n`{ProcessGroup:TIBCOBusinessWorksDomainName}` * `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}` *\n`{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}` * `{ProcessGroup:TIBCOBusinessWorksHome}` *\n`{ProcessGroup:VarnishInstanceName}` * `{ProcessGroup:WebLogicClusterName}` * `{ProcessGroup:WebLogicDomainName}` *\n`{ProcessGroup:WebLogicHome}` * `{ProcessGroup:WebLogicName}` * `{ProcessGroup:WebSphereCellName}` *\n`{ProcessGroup:WebSphereClusterName}` * `{ProcessGroup:WebSphereNodeName}` * `{ProcessGroup:WebSphereServerName}` *\n`{ProcessGroup:ActorSystem}` * `{Service:STGServerName}` * `{Service:DatabaseHostName}` * `{Service:DatabaseName}` *\n`{Service:DatabaseVendor}` * `{Service:DetectedName}` * `{Service:EndpointPath}` * `{Service:EndpointPathGatewayUrl}` *\n`{Service:IIBApplicationName}` * `{Service:MessageListenerClassName}` * `{Service:Port}` * `{Service:PublicDomainName}`\n* `{Service:RemoteEndpoint}` * `{Service:RemoteName}` * `{Service:WebApplicationId}` * `{Service:WebContextRoot}` *\n`{Service:WebServerName}` * `{Service:WebServiceNamespace}` * `{Service:WebServiceName}` * `{VmwareDatacenter:Name}` *\n`{VmwareVm:Name}\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the rule\n"
                    },
                    "unknowns": {
                        "type": "string",
                        "description": "allows for configuring properties that are not explicitly supported by the current version of this provider\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/serviceNowNotification:ServiceNowNotification": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "events": {
                    "type": "boolean",
                    "description": "Send events into ServiceNow ITOM\n"
                },
                "formatProblemDetailsAsText": {
                    "type": "boolean",
                    "description": "Use text format for problem details instead of HTML.\n"
                },
                "incidents": {
                    "type": "boolean",
                    "description": "Send incidents into ServiceNow ITSM\n"
                },
                "instance": {
                    "type": "string",
                    "description": "The ServiceNow instance identifier. It refers to the first part of your own ServiceNow URL. This field is mutually exclusive with the **url** field. You can only use one of them\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                },
                "message": {
                    "type": "string",
                    "description": "The content of the ServiceNow description. You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password to the ServiceNow account\n",
                    "secret": true
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the on-premise ServiceNow installation. This field is mutually exclusive with the **instance** field. You can only use one of them\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username of the ServiceNow account.   Make sure that your user account has the `rest_service`, `web_request_admin`, and `x_dynat_ruxit.Integration` roles\n"
                }
            },
            "required": [
                "active",
                "incidents",
                "legacyId",
                "message",
                "name",
                "profile",
                "username"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "events": {
                    "type": "boolean",
                    "description": "Send events into ServiceNow ITOM\n"
                },
                "formatProblemDetailsAsText": {
                    "type": "boolean",
                    "description": "Use text format for problem details instead of HTML.\n"
                },
                "incidents": {
                    "type": "boolean",
                    "description": "Send incidents into ServiceNow ITSM\n"
                },
                "instance": {
                    "type": "string",
                    "description": "The ServiceNow instance identifier. It refers to the first part of your own ServiceNow URL. This field is mutually exclusive with the **url** field. You can only use one of them\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                },
                "message": {
                    "type": "string",
                    "description": "The content of the ServiceNow description. You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password to the ServiceNow account\n",
                    "secret": true
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the on-premise ServiceNow installation. This field is mutually exclusive with the **instance** field. You can only use one of them\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username of the ServiceNow account.   Make sure that your user account has the `rest_service`, `web_request_admin`, and `x_dynat_ruxit.Integration` roles\n"
                }
            },
            "requiredInputs": [
                "active",
                "incidents",
                "message",
                "profile",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceNowNotification resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                    },
                    "events": {
                        "type": "boolean",
                        "description": "Send events into ServiceNow ITOM\n"
                    },
                    "formatProblemDetailsAsText": {
                        "type": "boolean",
                        "description": "Use text format for problem details instead of HTML.\n"
                    },
                    "incidents": {
                        "type": "boolean",
                        "description": "Send incidents into ServiceNow ITSM\n"
                    },
                    "instance": {
                        "type": "string",
                        "description": "The ServiceNow instance identifier. It refers to the first part of your own ServiceNow URL. This field is mutually exclusive with the **url** field. You can only use one of them\n"
                    },
                    "legacyId": {
                        "type": "string",
                        "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "The content of the ServiceNow description. You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the notification configuration\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password to the ServiceNow account\n",
                        "secret": true
                    },
                    "profile": {
                        "type": "string",
                        "description": "The ID of the associated alerting profile\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the on-premise ServiceNow installation. This field is mutually exclusive with the **instance** field. You can only use one of them\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username of the ServiceNow account.   Make sure that your user account has the `rest_service`, `web_request_admin`, and `x_dynat_ruxit.Integration` roles\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/sessionReplayResourceCapture:SessionReplayResourceCapture": {
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                },
                "enableResourceCapturing": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.WebApplication`) When turned on, all CSS resources from all sessions are captured. For details, see [Resource capture](https://dt-url.net/sr-resource-capturing).\n"
                },
                "resourceCaptureUrlExclusionPatternLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Field has overlap with `dynatrace.WebApplication`) Add exclusion rules to avoid the capture of resources from certain pages.\n"
                }
            },
            "required": [
                "enableResourceCapturing"
            ],
            "inputProperties": {
                "applicationId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                },
                "enableResourceCapturing": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.WebApplication`) When turned on, all CSS resources from all sessions are captured. For details, see [Resource capture](https://dt-url.net/sr-resource-capturing).\n"
                },
                "resourceCaptureUrlExclusionPatternLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Field has overlap with `dynatrace.WebApplication`) Add exclusion rules to avoid the capture of resources from certain pages.\n"
                }
            },
            "requiredInputs": [
                "enableResourceCapturing"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SessionReplayResourceCapture resources.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    },
                    "enableResourceCapturing": {
                        "type": "boolean",
                        "description": "(Field has overlap with `dynatrace.WebApplication`) When turned on, all CSS resources from all sessions are captured. For details, see [Resource capture](https://dt-url.net/sr-resource-capturing).\n"
                    },
                    "resourceCaptureUrlExclusionPatternLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Field has overlap with `dynatrace.WebApplication`) Add exclusion rules to avoid the capture of resources from certain pages.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/sessionReplayWebPrivacy:SessionReplayWebPrivacy": {
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                },
                "enableOptInMode": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.ApplicationDataPrivacy`) When [Session Replay opt-in mode](https://dt-url.net/sr-opt-in-mode) is turned on, Session Replay is deactivated until explicitly activated via an API call.\n"
                },
                "maskingPresets": {
                    "$ref": "#/types/dynatrace:index/SessionReplayWebPrivacyMaskingPresets:SessionReplayWebPrivacyMaskingPresets",
                    "description": "(Field has overlap with `dynatrace.ApplicationDataPrivacy`) To protect your end users' privacy, select or customize [predefined masking options](https://dt-url.net/sr-masking-preset-options) that suit your content recording and playback requirements.\n"
                },
                "urlExclusionPatternLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Field has overlap with `dynatrace.ApplicationDataPrivacy`) Exclude webpages or views from Session Replay recording by adding [URL exclusion rules](https://dt-url.net/sr-url-exclusion)\n"
                }
            },
            "required": [
                "enableOptInMode",
                "maskingPresets"
            ],
            "inputProperties": {
                "applicationId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                },
                "enableOptInMode": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.ApplicationDataPrivacy`) When [Session Replay opt-in mode](https://dt-url.net/sr-opt-in-mode) is turned on, Session Replay is deactivated until explicitly activated via an API call.\n"
                },
                "maskingPresets": {
                    "$ref": "#/types/dynatrace:index/SessionReplayWebPrivacyMaskingPresets:SessionReplayWebPrivacyMaskingPresets",
                    "description": "(Field has overlap with `dynatrace.ApplicationDataPrivacy`) To protect your end users' privacy, select or customize [predefined masking options](https://dt-url.net/sr-masking-preset-options) that suit your content recording and playback requirements.\n"
                },
                "urlExclusionPatternLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(Field has overlap with `dynatrace.ApplicationDataPrivacy`) Exclude webpages or views from Session Replay recording by adding [URL exclusion rules](https://dt-url.net/sr-url-exclusion)\n"
                }
            },
            "requiredInputs": [
                "enableOptInMode",
                "maskingPresets"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SessionReplayWebPrivacy resources.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    },
                    "enableOptInMode": {
                        "type": "boolean",
                        "description": "(Field has overlap with `dynatrace.ApplicationDataPrivacy`) When [Session Replay opt-in mode](https://dt-url.net/sr-opt-in-mode) is turned on, Session Replay is deactivated until explicitly activated via an API call.\n"
                    },
                    "maskingPresets": {
                        "$ref": "#/types/dynatrace:index/SessionReplayWebPrivacyMaskingPresets:SessionReplayWebPrivacyMaskingPresets",
                        "description": "(Field has overlap with `dynatrace.ApplicationDataPrivacy`) To protect your end users' privacy, select or customize [predefined masking options](https://dt-url.net/sr-masking-preset-options) that suit your content recording and playback requirements.\n"
                    },
                    "urlExclusionPatternLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(Field has overlap with `dynatrace.ApplicationDataPrivacy`) Exclude webpages or views from Session Replay recording by adding [URL exclusion rules](https://dt-url.net/sr-url-exclusion)\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/siteReliabilityGuardian:SiteReliabilityGuardian": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "name": {
                    "type": "string",
                    "description": "Objective name\n"
                },
                "objectives": {
                    "$ref": "#/types/dynatrace:index/SiteReliabilityGuardianObjectives:SiteReliabilityGuardianObjectives",
                    "description": "Objectives\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Define key/value pairs that further describe this guardian.\n"
                },
                "variables": {
                    "$ref": "#/types/dynatrace:index/SiteReliabilityGuardianVariables:SiteReliabilityGuardianVariables",
                    "description": "Define variables for dynamically defining DQL queries\n"
                }
            },
            "required": [
                "name",
                "objectives"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "no documentation available\n"
                },
                "name": {
                    "type": "string",
                    "description": "Objective name\n"
                },
                "objectives": {
                    "$ref": "#/types/dynatrace:index/SiteReliabilityGuardianObjectives:SiteReliabilityGuardianObjectives",
                    "description": "Objectives\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Define key/value pairs that further describe this guardian.\n"
                },
                "variables": {
                    "$ref": "#/types/dynatrace:index/SiteReliabilityGuardianVariables:SiteReliabilityGuardianVariables",
                    "description": "Define variables for dynamically defining DQL queries\n"
                }
            },
            "requiredInputs": [
                "objectives"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SiteReliabilityGuardian resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "no documentation available\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Objective name\n"
                    },
                    "objectives": {
                        "$ref": "#/types/dynatrace:index/SiteReliabilityGuardianObjectives:SiteReliabilityGuardianObjectives",
                        "description": "Objectives\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Define key/value pairs that further describe this guardian.\n"
                    },
                    "variables": {
                        "$ref": "#/types/dynatrace:index/SiteReliabilityGuardianVariables:SiteReliabilityGuardianVariables",
                        "description": "Define variables for dynamically defining DQL queries\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/slackNotification:SlackNotification": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "channel": {
                    "type": "string",
                    "description": "The channel (for example, `#general`) or the user (for example, `@john.smith`) to send the message to\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                },
                "message": {
                    "type": "string",
                    "description": "The content of the message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the Slack WebHook. This is confidential information, therefore GET requests return this field with the `null` value, and it is optional for PUT requests\n",
                    "secret": true
                }
            },
            "required": [
                "active",
                "channel",
                "legacyId",
                "message",
                "name",
                "profile",
                "url"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "channel": {
                    "type": "string",
                    "description": "The channel (for example, `#general`) or the user (for example, `@john.smith`) to send the message to\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                },
                "message": {
                    "type": "string",
                    "description": "The content of the message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the Slack WebHook. This is confidential information, therefore GET requests return this field with the `null` value, and it is optional for PUT requests\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "active",
                "channel",
                "message",
                "profile",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SlackNotification resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                    },
                    "channel": {
                        "type": "string",
                        "description": "The channel (for example, `#general`) or the user (for example, `@john.smith`) to send the message to\n"
                    },
                    "legacyId": {
                        "type": "string",
                        "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "The content of the message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the notification configuration\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "The ID of the associated alerting profile\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the Slack WebHook. This is confidential information, therefore GET requests return this field with the `null` value, and it is optional for PUT requests\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/slo:Slo": {
            "properties": {
                "denominator": {
                    "type": "string",
                    "description": "The total count metric (the denominator in rate calculation)\n"
                },
                "description": {
                    "type": "string",
                    "description": "The custom description of the SLO (optional)\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "The SLO is enabled (`false`) or disabled (`true`)\n"
                },
                "errorBudgetBurnRate": {
                    "$ref": "#/types/dynatrace:index/SloErrorBudgetBurnRate:SloErrorBudgetBurnRate",
                    "description": "Error budget burn rate configuration of a service-level objective (SLO).\n"
                },
                "evaluation": {
                    "type": "string",
                    "description": "The evaluation type of the SLO. Currently only `AGGREGATE` is supported\n"
                },
                "filter": {
                    "type": "string",
                    "description": "The entity filter for the SLO evaluation. Use the [syntax of entity selector](https://dt-url.net/entityselector)\n"
                },
                "metricExpression": {
                    "type": "string",
                    "description": "The percentage-based metric expression for the calculation of the SLO\n"
                },
                "metricName": {
                    "type": "string",
                    "description": "The name that is used to create SLO func metrics keys. Once created, metric name cannot be changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                },
                "numerator": {
                    "type": "string",
                    "description": "The metric for the count of successes (the numerator in rate calculation)\n",
                    "deprecationMessage": "`numerator` and `denominator` have been replaced by `metric_expression`"
                },
                "rate": {
                    "type": "string",
                    "description": "The percentage-based metric for the calculation of the SLO\n"
                },
                "target": {
                    "type": "number",
                    "description": "The target value of the SLO\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "The timeframe for the SLO evaluation. Use the syntax of the global timeframe selector\n"
                },
                "warning": {
                    "type": "number",
                    "description": "The warning value of the SLO. At warning state the SLO is still fulfilled but is getting close to failure\n"
                }
            },
            "required": [
                "evaluation",
                "name",
                "target",
                "timeframe",
                "warning"
            ],
            "inputProperties": {
                "denominator": {
                    "type": "string",
                    "description": "The total count metric (the denominator in rate calculation)\n"
                },
                "description": {
                    "type": "string",
                    "description": "The custom description of the SLO (optional)\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "The SLO is enabled (`false`) or disabled (`true`)\n"
                },
                "errorBudgetBurnRate": {
                    "$ref": "#/types/dynatrace:index/SloErrorBudgetBurnRate:SloErrorBudgetBurnRate",
                    "description": "Error budget burn rate configuration of a service-level objective (SLO).\n"
                },
                "evaluation": {
                    "type": "string",
                    "description": "The evaluation type of the SLO. Currently only `AGGREGATE` is supported\n"
                },
                "filter": {
                    "type": "string",
                    "description": "The entity filter for the SLO evaluation. Use the [syntax of entity selector](https://dt-url.net/entityselector)\n"
                },
                "metricExpression": {
                    "type": "string",
                    "description": "The percentage-based metric expression for the calculation of the SLO\n"
                },
                "metricName": {
                    "type": "string",
                    "description": "The name that is used to create SLO func metrics keys. Once created, metric name cannot be changed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                },
                "numerator": {
                    "type": "string",
                    "description": "The metric for the count of successes (the numerator in rate calculation)\n",
                    "deprecationMessage": "`numerator` and `denominator` have been replaced by `metric_expression`"
                },
                "rate": {
                    "type": "string",
                    "description": "The percentage-based metric for the calculation of the SLO\n"
                },
                "target": {
                    "type": "number",
                    "description": "The target value of the SLO\n"
                },
                "timeframe": {
                    "type": "string",
                    "description": "The timeframe for the SLO evaluation. Use the syntax of the global timeframe selector\n"
                },
                "warning": {
                    "type": "number",
                    "description": "The warning value of the SLO. At warning state the SLO is still fulfilled but is getting close to failure\n"
                }
            },
            "requiredInputs": [
                "evaluation",
                "target",
                "timeframe",
                "warning"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Slo resources.\n",
                "properties": {
                    "denominator": {
                        "type": "string",
                        "description": "The total count metric (the denominator in rate calculation)\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The custom description of the SLO (optional)\n"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "The SLO is enabled (`false`) or disabled (`true`)\n"
                    },
                    "errorBudgetBurnRate": {
                        "$ref": "#/types/dynatrace:index/SloErrorBudgetBurnRate:SloErrorBudgetBurnRate",
                        "description": "Error budget burn rate configuration of a service-level objective (SLO).\n"
                    },
                    "evaluation": {
                        "type": "string",
                        "description": "The evaluation type of the SLO. Currently only `AGGREGATE` is supported\n"
                    },
                    "filter": {
                        "type": "string",
                        "description": "The entity filter for the SLO evaluation. Use the [syntax of entity selector](https://dt-url.net/entityselector)\n"
                    },
                    "metricExpression": {
                        "type": "string",
                        "description": "The percentage-based metric expression for the calculation of the SLO\n"
                    },
                    "metricName": {
                        "type": "string",
                        "description": "The name that is used to create SLO func metrics keys. Once created, metric name cannot be changed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the rule\n"
                    },
                    "numerator": {
                        "type": "string",
                        "description": "The metric for the count of successes (the numerator in rate calculation)\n",
                        "deprecationMessage": "`numerator` and `denominator` have been replaced by `metric_expression`"
                    },
                    "rate": {
                        "type": "string",
                        "description": "The percentage-based metric for the calculation of the SLO\n"
                    },
                    "target": {
                        "type": "number",
                        "description": "The target value of the SLO\n"
                    },
                    "timeframe": {
                        "type": "string",
                        "description": "The timeframe for the SLO evaluation. Use the syntax of the global timeframe selector\n"
                    },
                    "warning": {
                        "type": "number",
                        "description": "The warning value of the SLO. At warning state the SLO is still fulfilled but is getting close to failure\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/sloNormalization:SloNormalization": {
            "properties": {
                "normalize": {
                    "type": "boolean",
                    "description": "When set to true, the error budget left will be shown in percent of the total error budget. For more details see [SLO normalization help](https://dt-url.net/slo-normalize-error-budget).\n"
                }
            },
            "required": [
                "normalize"
            ],
            "inputProperties": {
                "normalize": {
                    "type": "boolean",
                    "description": "When set to true, the error budget left will be shown in percent of the total error budget. For more details see [SLO normalization help](https://dt-url.net/slo-normalize-error-budget).\n"
                }
            },
            "requiredInputs": [
                "normalize"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SloNormalization resources.\n",
                "properties": {
                    "normalize": {
                        "type": "boolean",
                        "description": "When set to true, the error budget left will be shown in percent of the total error budget. For more details see [SLO normalization help](https://dt-url.net/slo-normalize-error-budget).\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/sloV2:SloV2": {
            "properties": {
                "customDescription": {
                    "type": "string",
                    "description": "The description of the SLO\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "errorBudgetBurnRate": {
                    "$ref": "#/types/dynatrace:index/SloV2ErrorBudgetBurnRate:SloV2ErrorBudgetBurnRate",
                    "description": "### Error budget burn rate\n"
                },
                "evaluationType": {
                    "type": "string",
                    "description": "Possible Values: `AGGREGATE`\n"
                },
                "evaluationWindow": {
                    "type": "string",
                    "description": "Define the timeframe during which the SLO is to be evaluated. For the timeframe you can enter expressions like -1h (last hour), -1w (last week) or complex expressions like -2d to now (last two days), -1d/d to now/d (beginning of yesterday to beginning of today).\n"
                },
                "filter": {
                    "type": "string",
                    "description": "Set a filter parameter (entitySelector) on any GET call to evaluate this SLO against specific services only (for example, type(\"SERVICE\")).  For details, see the [Entity Selector documentation](https://dt-url.net/entityselector).\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of this setting when referred to by the Config REST API V1\n"
                },
                "metricExpression": {
                    "type": "string",
                    "description": "For details, see the [Metrics page](https://www.terraform.io/ui/metrics).\n"
                },
                "metricName": {
                    "type": "string",
                    "description": "Metric name\n"
                },
                "name": {
                    "type": "string",
                    "description": "SLO name\n"
                },
                "targetSuccess": {
                    "type": "number",
                    "description": "Set the target value of the SLO. A percentage below this value indicates a failure.\n"
                },
                "targetWarning": {
                    "type": "number",
                    "description": "Set the warning value of the SLO. At the warning state the SLO is fulfilled. However, it is getting close to a failure.\n"
                }
            },
            "required": [
                "enabled",
                "errorBudgetBurnRate",
                "evaluationType",
                "evaluationWindow",
                "filter",
                "legacyId",
                "metricExpression",
                "metricName",
                "name",
                "targetSuccess",
                "targetWarning"
            ],
            "inputProperties": {
                "customDescription": {
                    "type": "string",
                    "description": "The description of the SLO\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "errorBudgetBurnRate": {
                    "$ref": "#/types/dynatrace:index/SloV2ErrorBudgetBurnRate:SloV2ErrorBudgetBurnRate",
                    "description": "### Error budget burn rate\n"
                },
                "evaluationType": {
                    "type": "string",
                    "description": "Possible Values: `AGGREGATE`\n"
                },
                "evaluationWindow": {
                    "type": "string",
                    "description": "Define the timeframe during which the SLO is to be evaluated. For the timeframe you can enter expressions like -1h (last hour), -1w (last week) or complex expressions like -2d to now (last two days), -1d/d to now/d (beginning of yesterday to beginning of today).\n"
                },
                "filter": {
                    "type": "string",
                    "description": "Set a filter parameter (entitySelector) on any GET call to evaluate this SLO against specific services only (for example, type(\"SERVICE\")).  For details, see the [Entity Selector documentation](https://dt-url.net/entityselector).\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of this setting when referred to by the Config REST API V1\n"
                },
                "metricExpression": {
                    "type": "string",
                    "description": "For details, see the [Metrics page](https://www.terraform.io/ui/metrics).\n"
                },
                "metricName": {
                    "type": "string",
                    "description": "Metric name\n"
                },
                "name": {
                    "type": "string",
                    "description": "SLO name\n"
                },
                "targetSuccess": {
                    "type": "number",
                    "description": "Set the target value of the SLO. A percentage below this value indicates a failure.\n"
                },
                "targetWarning": {
                    "type": "number",
                    "description": "Set the warning value of the SLO. At the warning state the SLO is fulfilled. However, it is getting close to a failure.\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "errorBudgetBurnRate",
                "evaluationType",
                "evaluationWindow",
                "filter",
                "metricExpression",
                "targetSuccess",
                "targetWarning"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SloV2 resources.\n",
                "properties": {
                    "customDescription": {
                        "type": "string",
                        "description": "The description of the SLO\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "errorBudgetBurnRate": {
                        "$ref": "#/types/dynatrace:index/SloV2ErrorBudgetBurnRate:SloV2ErrorBudgetBurnRate",
                        "description": "### Error budget burn rate\n"
                    },
                    "evaluationType": {
                        "type": "string",
                        "description": "Possible Values: `AGGREGATE`\n"
                    },
                    "evaluationWindow": {
                        "type": "string",
                        "description": "Define the timeframe during which the SLO is to be evaluated. For the timeframe you can enter expressions like -1h (last hour), -1w (last week) or complex expressions like -2d to now (last two days), -1d/d to now/d (beginning of yesterday to beginning of today).\n"
                    },
                    "filter": {
                        "type": "string",
                        "description": "Set a filter parameter (entitySelector) on any GET call to evaluate this SLO against specific services only (for example, type(\"SERVICE\")).  For details, see the [Entity Selector documentation](https://dt-url.net/entityselector).\n"
                    },
                    "legacyId": {
                        "type": "string",
                        "description": "The ID of this setting when referred to by the Config REST API V1\n"
                    },
                    "metricExpression": {
                        "type": "string",
                        "description": "For details, see the [Metrics page](https://www.terraform.io/ui/metrics).\n"
                    },
                    "metricName": {
                        "type": "string",
                        "description": "Metric name\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "SLO name\n"
                    },
                    "targetSuccess": {
                        "type": "number",
                        "description": "Set the target value of the SLO. A percentage below this value indicates a failure.\n"
                    },
                    "targetWarning": {
                        "type": "number",
                        "description": "Set the warning value of the SLO. At the warning state the SLO is fulfilled. However, it is getting close to a failure.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/spanAttributed:SpanAttributed": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Key of the span attribute to store\n"
                },
                "masking": {
                    "type": "string",
                    "description": "Possible Values: `MASK_ENTIRE_VALUE`, `MASK_ONLY_CONFIDENTIAL_DATA`, `NOT_MASKED`\n"
                },
                "persistent": {
                    "type": "boolean",
                    "description": "Prevents the Span Attribute from getting deleted when running `terraform destroy` - to be used for Span Attributes that\nare defined by default on every Dynatrace environment.\n"
                }
            },
            "required": [
                "key",
                "masking",
                "persistent"
            ],
            "inputProperties": {
                "key": {
                    "type": "string",
                    "description": "Key of the span attribute to store\n"
                },
                "masking": {
                    "type": "string",
                    "description": "Possible Values: `MASK_ENTIRE_VALUE`, `MASK_ONLY_CONFIDENTIAL_DATA`, `NOT_MASKED`\n"
                },
                "persistent": {
                    "type": "boolean",
                    "description": "Prevents the Span Attribute from getting deleted when running `terraform destroy` - to be used for Span Attributes that\nare defined by default on every Dynatrace environment.\n"
                }
            },
            "requiredInputs": [
                "key",
                "masking"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SpanAttributed resources.\n",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "Key of the span attribute to store\n"
                    },
                    "masking": {
                        "type": "string",
                        "description": "Possible Values: `MASK_ENTIRE_VALUE`, `MASK_ONLY_CONFIDENTIAL_DATA`, `NOT_MASKED`\n"
                    },
                    "persistent": {
                        "type": "boolean",
                        "description": "Prevents the Span Attribute from getting deleted when running `terraform destroy` - to be used for Span Attributes that\nare defined by default on every Dynatrace environment.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/spanCaptureRule:SpanCaptureRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Whether to create an entry point or not\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "matches": {
                    "$ref": "#/types/dynatrace:index/SpanCaptureRuleMatches:SpanCaptureRuleMatches",
                    "description": "Matching strategies for the Span\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                }
            },
            "required": [
                "action",
                "insertAfter",
                "matches",
                "name"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "Whether to create an entry point or not\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "matches": {
                    "$ref": "#/types/dynatrace:index/SpanCaptureRuleMatches:SpanCaptureRuleMatches",
                    "description": "Matching strategies for the Span\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                }
            },
            "requiredInputs": [
                "action",
                "matches"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SpanCaptureRule resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Whether to create an entry point or not\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "matches": {
                        "$ref": "#/types/dynatrace:index/SpanCaptureRuleMatches:SpanCaptureRuleMatches",
                        "description": "Matching strategies for the Span\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the rule\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/spanContextPropagation:SpanContextPropagation": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Whether to create an entry point or not\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "matches": {
                    "$ref": "#/types/dynatrace:index/SpanContextPropagationMatches:SpanContextPropagationMatches",
                    "description": "Matching strategies for the Span\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                }
            },
            "required": [
                "action",
                "insertAfter",
                "matches",
                "name"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "Whether to create an entry point or not\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "matches": {
                    "$ref": "#/types/dynatrace:index/SpanContextPropagationMatches:SpanContextPropagationMatches",
                    "description": "Matching strategies for the Span\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                }
            },
            "requiredInputs": [
                "action",
                "matches"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SpanContextPropagation resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Whether to create an entry point or not\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "matches": {
                        "$ref": "#/types/dynatrace:index/SpanContextPropagationMatches:SpanContextPropagationMatches",
                        "description": "Matching strategies for the Span\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the rule\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/spanEntryPoint:SpanEntryPoint": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Whether to create an entry point or not\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "matches": {
                    "$ref": "#/types/dynatrace:index/SpanEntryPointMatches:SpanEntryPointMatches",
                    "description": "Matching strategies for the Span\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                }
            },
            "required": [
                "action",
                "insertAfter",
                "matches",
                "name"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "Whether to create an entry point or not\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "matches": {
                    "$ref": "#/types/dynatrace:index/SpanEntryPointMatches:SpanEntryPointMatches",
                    "description": "Matching strategies for the Span\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                }
            },
            "requiredInputs": [
                "action",
                "matches"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SpanEntryPoint resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Whether to create an entry point or not\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "matches": {
                        "$ref": "#/types/dynatrace:index/SpanEntryPointMatches:SpanEntryPointMatches",
                        "description": "Matching strategies for the Span\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the rule\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/spanEvents:SpanEvents": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Key of the span event attribute to store\n"
                },
                "masking": {
                    "type": "string",
                    "description": "Possible Values: `MASK_ENTIRE_VALUE`, `MASK_ONLY_CONFIDENTIAL_DATA`, `NOT_MASKED`\n"
                }
            },
            "required": [
                "key",
                "masking"
            ],
            "inputProperties": {
                "key": {
                    "type": "string",
                    "description": "Key of the span event attribute to store\n"
                },
                "masking": {
                    "type": "string",
                    "description": "Possible Values: `MASK_ENTIRE_VALUE`, `MASK_ONLY_CONFIDENTIAL_DATA`, `NOT_MASKED`\n"
                }
            },
            "requiredInputs": [
                "key",
                "masking"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SpanEvents resources.\n",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "Key of the span event attribute to store\n"
                    },
                    "masking": {
                        "type": "string",
                        "description": "Possible Values: `MASK_ENTIRE_VALUE`, `MASK_ONLY_CONFIDENTIAL_DATA`, `NOT_MASKED`\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/syntheticAvailability:SyntheticAvailability": {
            "properties": {
                "excludeMaintenanceWindows": {
                    "type": "boolean",
                    "description": "Exclude periods with maintenance windows from availability calculation\n"
                }
            },
            "required": [
                "excludeMaintenanceWindows"
            ],
            "inputProperties": {
                "excludeMaintenanceWindows": {
                    "type": "boolean",
                    "description": "Exclude periods with maintenance windows from availability calculation\n"
                }
            },
            "requiredInputs": [
                "excludeMaintenanceWindows"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyntheticAvailability resources.\n",
                "properties": {
                    "excludeMaintenanceWindows": {
                        "type": "boolean",
                        "description": "Exclude periods with maintenance windows from availability calculation\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/syntheticLocation:SyntheticLocation": {
            "properties": {
                "autoUpdateChromium": {
                    "type": "boolean",
                    "description": "Auto upgrade of Chromium is enabled (`true`) or disabled (`false`)\n"
                },
                "availabilityLocationOutage": {
                    "type": "boolean",
                    "description": "The alerting of location outage is enabled (`true`) or disabled (`false`)\n"
                },
                "availabilityNodeOutage": {
                    "type": "boolean",
                    "description": "The alerting of node outage is enabled (`true`) or disabled (`false`).\n"
                },
                "availabilityNotificationsEnabled": {
                    "type": "boolean",
                    "description": "The notifications of location and node outage is enabled (`true`) or disabled (`false`)\n"
                },
                "city": {
                    "type": "string",
                    "description": "The city of the location\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "The country code of the location. Use the alpha-2 code of the [ISO 3166-2 standard](https://dt-url.net/iso3166-2), (for\nexample, `AT` for Austria or `PL` for Poland)\n"
                },
                "deploymentType": {
                    "type": "string",
                    "description": "The deployment type of the location: * `STANDARD`: The location is deployed on Windows or Linux. * `KUBERNETES`: The\nlocation is deployed on Kubernetes\n"
                },
                "latitude": {
                    "type": "number",
                    "description": "The latitude of the location in `DDD.dddd` format\n"
                },
                "locationNodeOutageDelayInMinutes": {
                    "type": "integer",
                    "description": "Alert if the location or node outage lasts longer than *X* minutes. Only applicable when\n**availability_location_outage** or **availability_node_outage** is set to `true`\n"
                },
                "longitude": {
                    "type": "number",
                    "description": "The longitude of the location in `DDD.dddd` format\n"
                },
                "maxActiveGateCount": {
                    "type": "integer",
                    "description": "The maximum number of Active Gates required for that location. Not required when `deployment_type` is set to `STANDARD`\n"
                },
                "minActiveGateCount": {
                    "type": "integer",
                    "description": "The minimum number of Active Gates required for that location. Not required when `deployment_type` is set to `STANDARD`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the location\n"
                },
                "nodeSize": {
                    "type": "string",
                    "description": "Possible values: `UNSUPPORTED`, `XS`, `S` and `M`. Not required when `deployment_type` is set to `STANDARD`.\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of synthetic nodes belonging to the location. You can retrieve the list of available nodes with the [GET all\nnodes](https://dt-url.net/miy3rpl) call\n"
                },
                "regionCode": {
                    "type": "string",
                    "description": "The region code of the location. For the [USA](https://dt-url.net/iso3166us) or [Canada](https://dt-url.net/iso3166ca)\nuse ISO 3166-2 state codes (without `US-` or `CA-` prefix), for example, `VA` for Virginia or `OR` for Oregon. For the\nrest of the world use [FIPS 10-4 codes](https://dt-url.net/fipscodes)\n"
                }
            },
            "required": [
                "latitude",
                "longitude",
                "name"
            ],
            "inputProperties": {
                "autoUpdateChromium": {
                    "type": "boolean",
                    "description": "Auto upgrade of Chromium is enabled (`true`) or disabled (`false`)\n"
                },
                "availabilityLocationOutage": {
                    "type": "boolean",
                    "description": "The alerting of location outage is enabled (`true`) or disabled (`false`)\n"
                },
                "availabilityNodeOutage": {
                    "type": "boolean",
                    "description": "The alerting of node outage is enabled (`true`) or disabled (`false`).\n"
                },
                "availabilityNotificationsEnabled": {
                    "type": "boolean",
                    "description": "The notifications of location and node outage is enabled (`true`) or disabled (`false`)\n"
                },
                "city": {
                    "type": "string",
                    "description": "The city of the location\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "The country code of the location. Use the alpha-2 code of the [ISO 3166-2 standard](https://dt-url.net/iso3166-2), (for\nexample, `AT` for Austria or `PL` for Poland)\n"
                },
                "deploymentType": {
                    "type": "string",
                    "description": "The deployment type of the location: * `STANDARD`: The location is deployed on Windows or Linux. * `KUBERNETES`: The\nlocation is deployed on Kubernetes\n"
                },
                "latitude": {
                    "type": "number",
                    "description": "The latitude of the location in `DDD.dddd` format\n"
                },
                "locationNodeOutageDelayInMinutes": {
                    "type": "integer",
                    "description": "Alert if the location or node outage lasts longer than *X* minutes. Only applicable when\n**availability_location_outage** or **availability_node_outage** is set to `true`\n"
                },
                "longitude": {
                    "type": "number",
                    "description": "The longitude of the location in `DDD.dddd` format\n"
                },
                "maxActiveGateCount": {
                    "type": "integer",
                    "description": "The maximum number of Active Gates required for that location. Not required when `deployment_type` is set to `STANDARD`\n"
                },
                "minActiveGateCount": {
                    "type": "integer",
                    "description": "The minimum number of Active Gates required for that location. Not required when `deployment_type` is set to `STANDARD`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the location\n"
                },
                "nodeSize": {
                    "type": "string",
                    "description": "Possible values: `UNSUPPORTED`, `XS`, `S` and `M`. Not required when `deployment_type` is set to `STANDARD`.\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of synthetic nodes belonging to the location. You can retrieve the list of available nodes with the [GET all\nnodes](https://dt-url.net/miy3rpl) call\n"
                },
                "regionCode": {
                    "type": "string",
                    "description": "The region code of the location. For the [USA](https://dt-url.net/iso3166us) or [Canada](https://dt-url.net/iso3166ca)\nuse ISO 3166-2 state codes (without `US-` or `CA-` prefix), for example, `VA` for Virginia or `OR` for Oregon. For the\nrest of the world use [FIPS 10-4 codes](https://dt-url.net/fipscodes)\n"
                }
            },
            "requiredInputs": [
                "latitude",
                "longitude"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyntheticLocation resources.\n",
                "properties": {
                    "autoUpdateChromium": {
                        "type": "boolean",
                        "description": "Auto upgrade of Chromium is enabled (`true`) or disabled (`false`)\n"
                    },
                    "availabilityLocationOutage": {
                        "type": "boolean",
                        "description": "The alerting of location outage is enabled (`true`) or disabled (`false`)\n"
                    },
                    "availabilityNodeOutage": {
                        "type": "boolean",
                        "description": "The alerting of node outage is enabled (`true`) or disabled (`false`).\n"
                    },
                    "availabilityNotificationsEnabled": {
                        "type": "boolean",
                        "description": "The notifications of location and node outage is enabled (`true`) or disabled (`false`)\n"
                    },
                    "city": {
                        "type": "string",
                        "description": "The city of the location\n"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "The country code of the location. Use the alpha-2 code of the [ISO 3166-2 standard](https://dt-url.net/iso3166-2), (for\nexample, `AT` for Austria or `PL` for Poland)\n"
                    },
                    "deploymentType": {
                        "type": "string",
                        "description": "The deployment type of the location: * `STANDARD`: The location is deployed on Windows or Linux. * `KUBERNETES`: The\nlocation is deployed on Kubernetes\n"
                    },
                    "latitude": {
                        "type": "number",
                        "description": "The latitude of the location in `DDD.dddd` format\n"
                    },
                    "locationNodeOutageDelayInMinutes": {
                        "type": "integer",
                        "description": "Alert if the location or node outage lasts longer than *X* minutes. Only applicable when\n**availability_location_outage** or **availability_node_outage** is set to `true`\n"
                    },
                    "longitude": {
                        "type": "number",
                        "description": "The longitude of the location in `DDD.dddd` format\n"
                    },
                    "maxActiveGateCount": {
                        "type": "integer",
                        "description": "The maximum number of Active Gates required for that location. Not required when `deployment_type` is set to `STANDARD`\n"
                    },
                    "minActiveGateCount": {
                        "type": "integer",
                        "description": "The minimum number of Active Gates required for that location. Not required when `deployment_type` is set to `STANDARD`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the location\n"
                    },
                    "nodeSize": {
                        "type": "string",
                        "description": "Possible values: `UNSUPPORTED`, `XS`, `S` and `M`. Not required when `deployment_type` is set to `STANDARD`.\n"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of synthetic nodes belonging to the location. You can retrieve the list of available nodes with the [GET all\nnodes](https://dt-url.net/miy3rpl) call\n"
                    },
                    "regionCode": {
                        "type": "string",
                        "description": "The region code of the location. For the [USA](https://dt-url.net/iso3166us) or [Canada](https://dt-url.net/iso3166ca)\nuse ISO 3166-2 state codes (without `US-` or `CA-` prefix), for example, `VA` for Virginia or `OR` for Oregon. For the\nrest of the world use [FIPS 10-4 codes](https://dt-url.net/fipscodes)\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/tokenSettings:TokenSettings": {
            "properties": {
                "newTokenFormat": {
                    "type": "boolean",
                    "description": "Check out this [blog post](http://www.dynatrace.com/blog/further-increased-security-of-your-api-tokens-by-automating-token-protection/) to find out more about the new Dynatrace API token format.\n"
                },
                "personalTokens": {
                    "type": "boolean",
                    "description": "Allow users of this environment to generate personal access tokens based on user permissions.\nNote that existing personal access tokens will become unusable while this setting is disabled.\n"
                }
            },
            "required": [
                "newTokenFormat",
                "personalTokens"
            ],
            "inputProperties": {
                "newTokenFormat": {
                    "type": "boolean",
                    "description": "Check out this [blog post](http://www.dynatrace.com/blog/further-increased-security-of-your-api-tokens-by-automating-token-protection/) to find out more about the new Dynatrace API token format.\n"
                },
                "personalTokens": {
                    "type": "boolean",
                    "description": "Allow users of this environment to generate personal access tokens based on user permissions.\nNote that existing personal access tokens will become unusable while this setting is disabled.\n"
                }
            },
            "requiredInputs": [
                "newTokenFormat",
                "personalTokens"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TokenSettings resources.\n",
                "properties": {
                    "newTokenFormat": {
                        "type": "boolean",
                        "description": "Check out this [blog post](http://www.dynatrace.com/blog/further-increased-security-of-your-api-tokens-by-automating-token-protection/) to find out more about the new Dynatrace API token format.\n"
                    },
                    "personalTokens": {
                        "type": "boolean",
                        "description": "Allow users of this environment to generate personal access tokens based on user permissions.\nNote that existing personal access tokens will become unusable while this setting is disabled.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/transactionStartFilters:TransactionStartFilters": {
            "properties": {
                "cicsTerminalTransactionIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "You can use * as wildcard. For example use A* to trace all transaction IDs that start with A.\n"
                },
                "cicsTransactionIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "You can use * as wildcard. For example use A* to trace all transaction IDs that start with A.\n"
                },
                "imsTerminalTransactionIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "You can use * as wildcard. For example use A* to trace all transaction IDs that start with A.\n"
                },
                "imsTransactionIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "You can use * as wildcard. For example use A* to trace all transaction IDs that start with A.\n"
                }
            },
            "inputProperties": {
                "cicsTerminalTransactionIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "You can use * as wildcard. For example use A* to trace all transaction IDs that start with A.\n"
                },
                "cicsTransactionIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "You can use * as wildcard. For example use A* to trace all transaction IDs that start with A.\n"
                },
                "imsTerminalTransactionIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "You can use * as wildcard. For example use A* to trace all transaction IDs that start with A.\n"
                },
                "imsTransactionIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "You can use * as wildcard. For example use A* to trace all transaction IDs that start with A.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TransactionStartFilters resources.\n",
                "properties": {
                    "cicsTerminalTransactionIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "You can use * as wildcard. For example use A* to trace all transaction IDs that start with A.\n"
                    },
                    "cicsTransactionIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "You can use * as wildcard. For example use A* to trace all transaction IDs that start with A.\n"
                    },
                    "imsTerminalTransactionIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "You can use * as wildcard. For example use A* to trace all transaction IDs that start with A.\n"
                    },
                    "imsTransactionIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "You can use * as wildcard. For example use A* to trace all transaction IDs that start with A.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/trelloNotification:TrelloNotification": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "applicationKey": {
                    "type": "string",
                    "description": "The application key for the Trello account\n"
                },
                "authorizationToken": {
                    "type": "string",
                    "description": "The application token for the Trello account\n",
                    "secret": true
                },
                "boardId": {
                    "type": "string",
                    "description": "The Trello board to which the card should be assigned\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the Trello card.   You can use same placeholders as in card text\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                },
                "listId": {
                    "type": "string",
                    "description": "The Trello list to which the card should be assigned\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "resolvedListId": {
                    "type": "string",
                    "description": "The Trello list to which the card of the resolved problem should be assigned\n"
                },
                "text": {
                    "type": "string",
                    "description": "The text of the generated Trello card.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                }
            },
            "required": [
                "active",
                "applicationKey",
                "boardId",
                "description",
                "legacyId",
                "listId",
                "name",
                "profile",
                "resolvedListId",
                "text"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "applicationKey": {
                    "type": "string",
                    "description": "The application key for the Trello account\n"
                },
                "authorizationToken": {
                    "type": "string",
                    "description": "The application token for the Trello account\n",
                    "secret": true
                },
                "boardId": {
                    "type": "string",
                    "description": "The Trello board to which the card should be assigned\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the Trello card.   You can use same placeholders as in card text\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                },
                "listId": {
                    "type": "string",
                    "description": "The Trello list to which the card should be assigned\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "resolvedListId": {
                    "type": "string",
                    "description": "The Trello list to which the card of the resolved problem should be assigned\n"
                },
                "text": {
                    "type": "string",
                    "description": "The text of the generated Trello card.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                }
            },
            "requiredInputs": [
                "active",
                "applicationKey",
                "boardId",
                "description",
                "listId",
                "profile",
                "resolvedListId",
                "text"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TrelloNotification resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                    },
                    "applicationKey": {
                        "type": "string",
                        "description": "The application key for the Trello account\n"
                    },
                    "authorizationToken": {
                        "type": "string",
                        "description": "The application token for the Trello account\n",
                        "secret": true
                    },
                    "boardId": {
                        "type": "string",
                        "description": "The Trello board to which the card should be assigned\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the Trello card.   You can use same placeholders as in card text\n"
                    },
                    "legacyId": {
                        "type": "string",
                        "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                    },
                    "listId": {
                        "type": "string",
                        "description": "The Trello list to which the card should be assigned\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the notification configuration\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "The ID of the associated alerting profile\n"
                    },
                    "resolvedListId": {
                        "type": "string",
                        "description": "The Trello list to which the card of the resolved problem should be assigned\n"
                    },
                    "text": {
                        "type": "string",
                        "description": "The text of the generated Trello card.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/unifiedServicesMetrics:UnifiedServicesMetrics": {
            "properties": {
                "enableEndpointMetrics": {
                    "type": "boolean",
                    "description": "Should metrics be written for endpoints? Please be aware that this setting has billing implications. Check out this [documentation](https://dt-url.net/td23cgh) for further details.\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                }
            },
            "required": [
                "enableEndpointMetrics"
            ],
            "inputProperties": {
                "enableEndpointMetrics": {
                    "type": "boolean",
                    "description": "Should metrics be written for endpoints? Please be aware that this setting has billing implications. Check out this [documentation](https://dt-url.net/td23cgh) for further details.\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enableEndpointMetrics"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UnifiedServicesMetrics resources.\n",
                "properties": {
                    "enableEndpointMetrics": {
                        "type": "boolean",
                        "description": "Should metrics be written for endpoints? Please be aware that this setting has billing implications. Check out this [documentation](https://dt-url.net/td23cgh) for further details.\n"
                    },
                    "serviceId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/unifiedServicesOpentel:UnifiedServicesOpentel": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "required": [
                "enabled"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                }
            },
            "requiredInputs": [
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UnifiedServicesOpentel resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/updateWindows:UpdateWindows": {
            "properties": {
                "dailyRecurrence": {
                    "$ref": "#/types/dynatrace:index/UpdateWindowsDailyRecurrence:UpdateWindowsDailyRecurrence",
                    "description": "no documentation available\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "monthlyRecurrence": {
                    "$ref": "#/types/dynatrace:index/UpdateWindowsMonthlyRecurrence:UpdateWindowsMonthlyRecurrence",
                    "description": "no documentation available\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name\n"
                },
                "onceRecurrence": {
                    "$ref": "#/types/dynatrace:index/UpdateWindowsOnceRecurrence:UpdateWindowsOnceRecurrence",
                    "description": "no documentation available\n"
                },
                "recurrence": {
                    "type": "string",
                    "description": "Possible Values: `MONTHLY`, `ONCE`, `DAILY`, `WEEKLY`\n"
                },
                "weeklyRecurrence": {
                    "$ref": "#/types/dynatrace:index/UpdateWindowsWeeklyRecurrence:UpdateWindowsWeeklyRecurrence",
                    "description": "no documentation available\n"
                }
            },
            "required": [
                "enabled",
                "name",
                "recurrence"
            ],
            "inputProperties": {
                "dailyRecurrence": {
                    "$ref": "#/types/dynatrace:index/UpdateWindowsDailyRecurrence:UpdateWindowsDailyRecurrence",
                    "description": "no documentation available\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "monthlyRecurrence": {
                    "$ref": "#/types/dynatrace:index/UpdateWindowsMonthlyRecurrence:UpdateWindowsMonthlyRecurrence",
                    "description": "no documentation available\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name\n"
                },
                "onceRecurrence": {
                    "$ref": "#/types/dynatrace:index/UpdateWindowsOnceRecurrence:UpdateWindowsOnceRecurrence",
                    "description": "no documentation available\n"
                },
                "recurrence": {
                    "type": "string",
                    "description": "Possible Values: `MONTHLY`, `ONCE`, `DAILY`, `WEEKLY`\n"
                },
                "weeklyRecurrence": {
                    "$ref": "#/types/dynatrace:index/UpdateWindowsWeeklyRecurrence:UpdateWindowsWeeklyRecurrence",
                    "description": "no documentation available\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "recurrence"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UpdateWindows resources.\n",
                "properties": {
                    "dailyRecurrence": {
                        "$ref": "#/types/dynatrace:index/UpdateWindowsDailyRecurrence:UpdateWindowsDailyRecurrence",
                        "description": "no documentation available\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "monthlyRecurrence": {
                        "$ref": "#/types/dynatrace:index/UpdateWindowsMonthlyRecurrence:UpdateWindowsMonthlyRecurrence",
                        "description": "no documentation available\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name\n"
                    },
                    "onceRecurrence": {
                        "$ref": "#/types/dynatrace:index/UpdateWindowsOnceRecurrence:UpdateWindowsOnceRecurrence",
                        "description": "no documentation available\n"
                    },
                    "recurrence": {
                        "type": "string",
                        "description": "Possible Values: `MONTHLY`, `ONCE`, `DAILY`, `WEEKLY`\n"
                    },
                    "weeklyRecurrence": {
                        "$ref": "#/types/dynatrace:index/UpdateWindowsWeeklyRecurrence:UpdateWindowsWeeklyRecurrence",
                        "description": "no documentation available\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/urlBasedSampling:UrlBasedSampling": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "factor": {
                    "type": "string",
                    "description": "Select the scaling factor for the current sampling rate of the system. Possible values: `IncreaseCapturing128Times`, `IncreaseCapturing64Times`, `IncreaseCapturing32Times`, `IncreaseCapturing16Times`, `IncreaseCapturing8Times`, `IncreaseCapturing4Times`, `IncreaseCapturing2Times`, `ReduceCapturingByFactor2`, `ReduceCapturingByFactor4`, `ReduceCapturingByFactor8`, `ReduceCapturingByFactor16`, `ReduceCapturingByFactor32`, `ReduceCapturingByFactor64`, `ReduceCapturingByFactor128`\n"
                },
                "httpMethodAny": {
                    "type": "boolean",
                    "description": "The scaling factor for the defined URL will be applied to any HTTP method.\n"
                },
                "httpMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Possible values: `GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`\n"
                },
                "ignore": {
                    "type": "boolean",
                    "description": "The matching URLs will always be ignored, also if Adaptive Traffic Management is not active.\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path of the URL.\n"
                },
                "pathComparisonType": {
                    "type": "string",
                    "description": "Path comparison condition. Possible values: `EQUALS`, `DOES_NOT_EQUAL`, `CONTAINS`, `DOES_NOT_CONTAIN`, `STARTS_WITH`, `DOES_NOT_START_WITH`, `ENDS_WITH`, `DOES_NOT_END_WITH`\n"
                },
                "queryParameters": {
                    "$ref": "#/types/dynatrace:index/UrlBasedSamplingQueryParameters:UrlBasedSamplingQueryParameters",
                    "description": "Add URL parameters in any order. **All** specified parameters must be present in the query of an URL to get a match.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (PROCESS*GROUP*INSTANCE, PROCESS_GROUP). Omit this property if you want to cover the whole environment.\n"
                }
            },
            "required": [
                "enabled",
                "httpMethodAny",
                "ignore",
                "insertAfter",
                "queryParameters"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "factor": {
                    "type": "string",
                    "description": "Select the scaling factor for the current sampling rate of the system. Possible values: `IncreaseCapturing128Times`, `IncreaseCapturing64Times`, `IncreaseCapturing32Times`, `IncreaseCapturing16Times`, `IncreaseCapturing8Times`, `IncreaseCapturing4Times`, `IncreaseCapturing2Times`, `ReduceCapturingByFactor2`, `ReduceCapturingByFactor4`, `ReduceCapturingByFactor8`, `ReduceCapturingByFactor16`, `ReduceCapturingByFactor32`, `ReduceCapturingByFactor64`, `ReduceCapturingByFactor128`\n"
                },
                "httpMethodAny": {
                    "type": "boolean",
                    "description": "The scaling factor for the defined URL will be applied to any HTTP method.\n"
                },
                "httpMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Possible values: `GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`\n"
                },
                "ignore": {
                    "type": "boolean",
                    "description": "The matching URLs will always be ignored, also if Adaptive Traffic Management is not active.\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path of the URL.\n"
                },
                "pathComparisonType": {
                    "type": "string",
                    "description": "Path comparison condition. Possible values: `EQUALS`, `DOES_NOT_EQUAL`, `CONTAINS`, `DOES_NOT_CONTAIN`, `STARTS_WITH`, `DOES_NOT_START_WITH`, `ENDS_WITH`, `DOES_NOT_END_WITH`\n"
                },
                "queryParameters": {
                    "$ref": "#/types/dynatrace:index/UrlBasedSamplingQueryParameters:UrlBasedSamplingQueryParameters",
                    "description": "Add URL parameters in any order. **All** specified parameters must be present in the query of an URL to get a match.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (PROCESS*GROUP*INSTANCE, PROCESS_GROUP). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enabled",
                "httpMethodAny",
                "ignore",
                "queryParameters"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UrlBasedSampling resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "factor": {
                        "type": "string",
                        "description": "Select the scaling factor for the current sampling rate of the system. Possible values: `IncreaseCapturing128Times`, `IncreaseCapturing64Times`, `IncreaseCapturing32Times`, `IncreaseCapturing16Times`, `IncreaseCapturing8Times`, `IncreaseCapturing4Times`, `IncreaseCapturing2Times`, `ReduceCapturingByFactor2`, `ReduceCapturingByFactor4`, `ReduceCapturingByFactor8`, `ReduceCapturingByFactor16`, `ReduceCapturingByFactor32`, `ReduceCapturingByFactor64`, `ReduceCapturingByFactor128`\n"
                    },
                    "httpMethodAny": {
                        "type": "boolean",
                        "description": "The scaling factor for the defined URL will be applied to any HTTP method.\n"
                    },
                    "httpMethods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Possible values: `GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`\n"
                    },
                    "ignore": {
                        "type": "boolean",
                        "description": "The matching URLs will always be ignored, also if Adaptive Traffic Management is not active.\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Path of the URL.\n"
                    },
                    "pathComparisonType": {
                        "type": "string",
                        "description": "Path comparison condition. Possible values: `EQUALS`, `DOES_NOT_EQUAL`, `CONTAINS`, `DOES_NOT_CONTAIN`, `STARTS_WITH`, `DOES_NOT_START_WITH`, `ENDS_WITH`, `DOES_NOT_END_WITH`\n"
                    },
                    "queryParameters": {
                        "$ref": "#/types/dynatrace:index/UrlBasedSamplingQueryParameters:UrlBasedSamplingQueryParameters",
                        "description": "Add URL parameters in any order. **All** specified parameters must be present in the query of an URL to get a match.\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (PROCESS*GROUP*INSTANCE, PROCESS_GROUP). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/usabilityAnalytics:UsabilityAnalytics": {
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                },
                "detectRageClicks": {
                    "type": "boolean",
                    "description": "Three or more rapid clicks within the same area of a web page are considered to be rage clicks. Rage clicks commonly reflect slow-loading or failed page resources. Rage click counts are compiled for each session and considered in the [User Experience Score](https://dt-url.net/39034wt) .\nWith this setting enabled, a rage click count is compiled for each monitored user session.\n"
                }
            },
            "required": [
                "detectRageClicks"
            ],
            "inputProperties": {
                "applicationId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                },
                "detectRageClicks": {
                    "type": "boolean",
                    "description": "Three or more rapid clicks within the same area of a web page are considered to be rage clicks. Rage clicks commonly reflect slow-loading or failed page resources. Rage click counts are compiled for each session and considered in the [User Experience Score](https://dt-url.net/39034wt) .\nWith this setting enabled, a rage click count is compiled for each monitored user session.\n"
                }
            },
            "requiredInputs": [
                "detectRageClicks"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UsabilityAnalytics resources.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    },
                    "detectRageClicks": {
                        "type": "boolean",
                        "description": "Three or more rapid clicks within the same area of a web page are considered to be rage clicks. Rage clicks commonly reflect slow-loading or failed page resources. Rage click counts are compiled for each session and considered in the [User Experience Score](https://dt-url.net/39034wt) .\nWith this setting enabled, a rage click count is compiled for each monitored user session.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/user:User": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "User's email address\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "User's first name\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of user's user group IDs\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "User's last name\n"
                },
                "userName": {
                    "type": "string",
                    "description": "The User Name\n"
                }
            },
            "required": [
                "email",
                "firstName",
                "lastName",
                "userName"
            ],
            "inputProperties": {
                "email": {
                    "type": "string",
                    "description": "User's email address\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "User's first name\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of user's user group IDs\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "User's last name\n"
                },
                "userName": {
                    "type": "string",
                    "description": "The User Name\n"
                }
            },
            "requiredInputs": [
                "email",
                "firstName",
                "lastName",
                "userName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email address\n"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "User's first name\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of user's user group IDs\n"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "User's last name\n"
                    },
                    "userName": {
                        "type": "string",
                        "description": "The User Name\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/userActionMetrics:UserActionMetrics": {
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines the fields that are used as dimensions. A dimension is a collection of reference information about a metric data point that is of interest to your business. Dimensions are parameters like \"application\", \"type\", \"name\". For example, using \"type\" as a dimension allows you to split chart data based on the user action type.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "filters": {
                    "$ref": "#/types/dynatrace:index/UserActionMetricsFilters:UserActionMetricsFilters",
                    "description": "Defines the filters for the user action. Filters apply at the moment of extracting the data and only sessions that satisfy the filtering criteria will be used to extract the custom metrics. You will not be able to modify these filters in the metric data explorer. For example, using \"type equals Xhr\" will give you only data from xhr actions, while forcing the rest of user actions of different types to be ignored.\n"
                },
                "metricKey": {
                    "type": "string",
                    "description": "Metric key\n"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/UserActionMetricsValue:UserActionMetricsValue",
                    "description": "no documentation available\n"
                }
            },
            "required": [
                "enabled",
                "metricKey",
                "value"
            ],
            "inputProperties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines the fields that are used as dimensions. A dimension is a collection of reference information about a metric data point that is of interest to your business. Dimensions are parameters like \"application\", \"type\", \"name\". For example, using \"type\" as a dimension allows you to split chart data based on the user action type.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "filters": {
                    "$ref": "#/types/dynatrace:index/UserActionMetricsFilters:UserActionMetricsFilters",
                    "description": "Defines the filters for the user action. Filters apply at the moment of extracting the data and only sessions that satisfy the filtering criteria will be used to extract the custom metrics. You will not be able to modify these filters in the metric data explorer. For example, using \"type equals Xhr\" will give you only data from xhr actions, while forcing the rest of user actions of different types to be ignored.\n"
                },
                "metricKey": {
                    "type": "string",
                    "description": "Metric key\n"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/UserActionMetricsValue:UserActionMetricsValue",
                    "description": "no documentation available\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "metricKey",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserActionMetrics resources.\n",
                "properties": {
                    "dimensions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Defines the fields that are used as dimensions. A dimension is a collection of reference information about a metric data point that is of interest to your business. Dimensions are parameters like \"application\", \"type\", \"name\". For example, using \"type\" as a dimension allows you to split chart data based on the user action type.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "filters": {
                        "$ref": "#/types/dynatrace:index/UserActionMetricsFilters:UserActionMetricsFilters",
                        "description": "Defines the filters for the user action. Filters apply at the moment of extracting the data and only sessions that satisfy the filtering criteria will be used to extract the custom metrics. You will not be able to modify these filters in the metric data explorer. For example, using \"type equals Xhr\" will give you only data from xhr actions, while forcing the rest of user actions of different types to be ignored.\n"
                    },
                    "metricKey": {
                        "type": "string",
                        "description": "Metric key\n"
                    },
                    "value": {
                        "$ref": "#/types/dynatrace:index/UserActionMetricsValue:UserActionMetricsValue",
                        "description": "no documentation available\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/userExperienceScore:UserExperienceScore": {
            "properties": {
                "considerLastAction": {
                    "type": "boolean",
                    "description": "If last user action in a session is classified as Frustrating, classify the entire session as Frustrating\n"
                },
                "considerRageClick": {
                    "type": "boolean",
                    "description": "Consider rage clicks / rage taps in score calculation\n"
                },
                "maxFrustratedUserActionsThreshold": {
                    "type": "integer",
                    "description": "User experience is considered Frustrating when the selected percentage or more of the user actions in a session are rated as Frustrating.\n"
                },
                "minSatisfiedUserActionsThreshold": {
                    "type": "integer",
                    "description": "User experience is considered Satisfying when at least the selected percentage of the user actions in a session are rated as Satisfying.\n"
                }
            },
            "required": [
                "considerLastAction",
                "considerRageClick",
                "maxFrustratedUserActionsThreshold",
                "minSatisfiedUserActionsThreshold"
            ],
            "inputProperties": {
                "considerLastAction": {
                    "type": "boolean",
                    "description": "If last user action in a session is classified as Frustrating, classify the entire session as Frustrating\n"
                },
                "considerRageClick": {
                    "type": "boolean",
                    "description": "Consider rage clicks / rage taps in score calculation\n"
                },
                "maxFrustratedUserActionsThreshold": {
                    "type": "integer",
                    "description": "User experience is considered Frustrating when the selected percentage or more of the user actions in a session are rated as Frustrating.\n"
                },
                "minSatisfiedUserActionsThreshold": {
                    "type": "integer",
                    "description": "User experience is considered Satisfying when at least the selected percentage of the user actions in a session are rated as Satisfying.\n"
                }
            },
            "requiredInputs": [
                "considerLastAction",
                "considerRageClick",
                "maxFrustratedUserActionsThreshold",
                "minSatisfiedUserActionsThreshold"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserExperienceScore resources.\n",
                "properties": {
                    "considerLastAction": {
                        "type": "boolean",
                        "description": "If last user action in a session is classified as Frustrating, classify the entire session as Frustrating\n"
                    },
                    "considerRageClick": {
                        "type": "boolean",
                        "description": "Consider rage clicks / rage taps in score calculation\n"
                    },
                    "maxFrustratedUserActionsThreshold": {
                        "type": "integer",
                        "description": "User experience is considered Frustrating when the selected percentage or more of the user actions in a session are rated as Frustrating.\n"
                    },
                    "minSatisfiedUserActionsThreshold": {
                        "type": "integer",
                        "description": "User experience is considered Satisfying when at least the selected percentage of the user actions in a session are rated as Satisfying.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/userGroup:UserGroup": {
            "properties": {
                "accessAccount": {
                    "type": "boolean",
                    "description": "If `true`, then the group has the access account rights\n"
                },
                "clusterAdmin": {
                    "type": "boolean",
                    "description": "If `true`, then the group has the cluster administrator rights\n"
                },
                "ldapGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "LDAP group names\n"
                },
                "manageAccount": {
                    "type": "boolean",
                    "description": "If `true`, then the group has the manage account rights\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the user group\n"
                },
                "permissions": {
                    "$ref": "#/types/dynatrace:index/UserGroupPermissions:UserGroupPermissions",
                    "description": "Permissions for environments\n"
                },
                "ssoGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "SSO group names. If defined it's used to map SSO group name to Dynatrace group name, otherwise mapping is done by group name\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "accessAccount": {
                    "type": "boolean",
                    "description": "If `true`, then the group has the access account rights\n"
                },
                "clusterAdmin": {
                    "type": "boolean",
                    "description": "If `true`, then the group has the cluster administrator rights\n"
                },
                "ldapGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "LDAP group names\n"
                },
                "manageAccount": {
                    "type": "boolean",
                    "description": "If `true`, then the group has the manage account rights\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the user group\n"
                },
                "permissions": {
                    "$ref": "#/types/dynatrace:index/UserGroupPermissions:UserGroupPermissions",
                    "description": "Permissions for environments\n"
                },
                "ssoGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "SSO group names. If defined it's used to map SSO group name to Dynatrace group name, otherwise mapping is done by group name\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserGroup resources.\n",
                "properties": {
                    "accessAccount": {
                        "type": "boolean",
                        "description": "If `true`, then the group has the access account rights\n"
                    },
                    "clusterAdmin": {
                        "type": "boolean",
                        "description": "If `true`, then the group has the cluster administrator rights\n"
                    },
                    "ldapGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "LDAP group names\n"
                    },
                    "manageAccount": {
                        "type": "boolean",
                        "description": "If `true`, then the group has the manage account rights\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the user group\n"
                    },
                    "permissions": {
                        "$ref": "#/types/dynatrace:index/UserGroupPermissions:UserGroupPermissions",
                        "description": "Permissions for environments\n"
                    },
                    "ssoGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "SSO group names. If defined it's used to map SSO group name to Dynatrace group name, otherwise mapping is done by group name\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/userSessionMetrics:UserSessionMetrics": {
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines the fields that are used as dimensions. A dimension is a collection of reference information about a metric data point that is of interest to your business. Dimensions are parameters like \"browserFamily\", \"userType\", \"country\". For example, using \"userType\" as a dimension allows you to split chart data based on user types.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "filters": {
                    "$ref": "#/types/dynatrace:index/UserSessionMetricsFilters:UserSessionMetricsFilters",
                    "description": "Defines the filters for the user session. Filters apply at the moment of extracting the data and only sessions that satisfy the filtering criteria will be used to extract the custom metrics. You will not be able to modify these filters in the metric data explorer. For example, using \"userType equals REAL_USER\" will give you only data from real users, while forcing the synthetic sessions to be ignored.\n"
                },
                "metricKey": {
                    "type": "string",
                    "description": "Metric key\n"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/UserSessionMetricsValue:UserSessionMetricsValue",
                    "description": "no documentation available\n"
                }
            },
            "required": [
                "enabled",
                "metricKey",
                "value"
            ],
            "inputProperties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines the fields that are used as dimensions. A dimension is a collection of reference information about a metric data point that is of interest to your business. Dimensions are parameters like \"browserFamily\", \"userType\", \"country\". For example, using \"userType\" as a dimension allows you to split chart data based on user types.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "filters": {
                    "$ref": "#/types/dynatrace:index/UserSessionMetricsFilters:UserSessionMetricsFilters",
                    "description": "Defines the filters for the user session. Filters apply at the moment of extracting the data and only sessions that satisfy the filtering criteria will be used to extract the custom metrics. You will not be able to modify these filters in the metric data explorer. For example, using \"userType equals REAL_USER\" will give you only data from real users, while forcing the synthetic sessions to be ignored.\n"
                },
                "metricKey": {
                    "type": "string",
                    "description": "Metric key\n"
                },
                "value": {
                    "$ref": "#/types/dynatrace:index/UserSessionMetricsValue:UserSessionMetricsValue",
                    "description": "no documentation available\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "metricKey",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserSessionMetrics resources.\n",
                "properties": {
                    "dimensions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Defines the fields that are used as dimensions. A dimension is a collection of reference information about a metric data point that is of interest to your business. Dimensions are parameters like \"browserFamily\", \"userType\", \"country\". For example, using \"userType\" as a dimension allows you to split chart data based on user types.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "filters": {
                        "$ref": "#/types/dynatrace:index/UserSessionMetricsFilters:UserSessionMetricsFilters",
                        "description": "Defines the filters for the user session. Filters apply at the moment of extracting the data and only sessions that satisfy the filtering criteria will be used to extract the custom metrics. You will not be able to modify these filters in the metric data explorer. For example, using \"userType equals REAL_USER\" will give you only data from real users, while forcing the synthetic sessions to be ignored.\n"
                    },
                    "metricKey": {
                        "type": "string",
                        "description": "Metric key\n"
                    },
                    "value": {
                        "$ref": "#/types/dynatrace:index/UserSessionMetricsValue:UserSessionMetricsValue",
                        "description": "no documentation available\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/userSettings:UserSettings": {
            "properties": {
                "autoLanguage": {
                    "type": "boolean",
                    "description": "Language - use browser default\n"
                },
                "autoRegion": {
                    "type": "boolean",
                    "description": "Region - use browser default\n"
                },
                "autoTheme": {
                    "type": "boolean",
                    "description": "Theme - use browser default\n"
                },
                "autoTimezone": {
                    "type": "boolean",
                    "description": "Timezone - use browser default\n"
                },
                "language": {
                    "type": "string",
                    "description": "Possible Values: `En`, `Ja`\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (user, userdefaults)\n"
                },
                "theme": {
                    "type": "string",
                    "description": "Possible Values: `Dark`, `Light`\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "Timezone\n"
                }
            },
            "required": [
                "autoLanguage",
                "autoRegion",
                "autoTheme",
                "autoTimezone",
                "scope"
            ],
            "inputProperties": {
                "autoLanguage": {
                    "type": "boolean",
                    "description": "Language - use browser default\n"
                },
                "autoRegion": {
                    "type": "boolean",
                    "description": "Region - use browser default\n"
                },
                "autoTheme": {
                    "type": "boolean",
                    "description": "Theme - use browser default\n"
                },
                "autoTimezone": {
                    "type": "boolean",
                    "description": "Timezone - use browser default\n"
                },
                "language": {
                    "type": "string",
                    "description": "Possible Values: `En`, `Ja`\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (user, userdefaults)\n",
                    "willReplaceOnChanges": true
                },
                "theme": {
                    "type": "string",
                    "description": "Possible Values: `Dark`, `Light`\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "Timezone\n"
                }
            },
            "requiredInputs": [
                "autoLanguage",
                "autoRegion",
                "autoTheme",
                "autoTimezone",
                "scope"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserSettings resources.\n",
                "properties": {
                    "autoLanguage": {
                        "type": "boolean",
                        "description": "Language - use browser default\n"
                    },
                    "autoRegion": {
                        "type": "boolean",
                        "description": "Region - use browser default\n"
                    },
                    "autoTheme": {
                        "type": "boolean",
                        "description": "Theme - use browser default\n"
                    },
                    "autoTimezone": {
                        "type": "boolean",
                        "description": "Timezone - use browser default\n"
                    },
                    "language": {
                        "type": "string",
                        "description": "Possible Values: `En`, `Ja`\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Region\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (user, userdefaults)\n",
                        "willReplaceOnChanges": true
                    },
                    "theme": {
                        "type": "string",
                        "description": "Possible Values: `Dark`, `Light`\n"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "Timezone\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/victorOpsNotification:VictorOpsNotification": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "The API key for the target VictorOps account\n",
                    "secret": true
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                },
                "message": {
                    "type": "string",
                    "description": "The content of the message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "routingKey": {
                    "type": "string",
                    "description": "The routing key, defining the group to be notified\n"
                }
            },
            "required": [
                "active",
                "legacyId",
                "message",
                "name",
                "profile",
                "routingKey"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "The API key for the target VictorOps account\n",
                    "secret": true
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                },
                "message": {
                    "type": "string",
                    "description": "The content of the message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification configuration\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "routingKey": {
                    "type": "string",
                    "description": "The routing key, defining the group to be notified\n"
                }
            },
            "requiredInputs": [
                "active",
                "message",
                "profile",
                "routingKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VictorOpsNotification resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                    },
                    "apiKey": {
                        "type": "string",
                        "description": "The API key for the target VictorOps account\n",
                        "secret": true
                    },
                    "legacyId": {
                        "type": "string",
                        "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "The content of the message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the notification configuration\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "The ID of the associated alerting profile\n"
                    },
                    "routingKey": {
                        "type": "string",
                        "description": "The routing key, defining the group to be notified\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/vmware:Vmware": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "filter": {
                    "type": "string",
                    "description": "This string should have one of the following formats: - $prefix(parameter) - property value starting with 'parameter' -\n$eq(parameter) - property value exactly matching 'parameter' - $suffix(parameter) - property value ends with 'parameter'\n- $contains(parameter) - property value contains 'parameter'\n"
                },
                "ipaddress": {
                    "type": "string",
                    "description": "Specify the IP address or name of the vCenter or standalone ESXi host:\n"
                },
                "label": {
                    "type": "string",
                    "description": "Name this connection\n"
                },
                "password": {
                    "type": "string",
                    "description": "no documentation available\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "Provide user credentials for the vCenter or standalone ESXi host:\n"
                }
            },
            "required": [
                "enabled",
                "ipaddress",
                "label",
                "password",
                "username"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "filter": {
                    "type": "string",
                    "description": "This string should have one of the following formats: - $prefix(parameter) - property value starting with 'parameter' -\n$eq(parameter) - property value exactly matching 'parameter' - $suffix(parameter) - property value ends with 'parameter'\n- $contains(parameter) - property value contains 'parameter'\n"
                },
                "ipaddress": {
                    "type": "string",
                    "description": "Specify the IP address or name of the vCenter or standalone ESXi host:\n"
                },
                "label": {
                    "type": "string",
                    "description": "Name this connection\n"
                },
                "password": {
                    "type": "string",
                    "description": "no documentation available\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "Provide user credentials for the vCenter or standalone ESXi host:\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "ipaddress",
                "label",
                "password",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Vmware resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "filter": {
                        "type": "string",
                        "description": "This string should have one of the following formats: - $prefix(parameter) - property value starting with 'parameter' -\n$eq(parameter) - property value exactly matching 'parameter' - $suffix(parameter) - property value ends with 'parameter'\n- $contains(parameter) - property value contains 'parameter'\n"
                    },
                    "ipaddress": {
                        "type": "string",
                        "description": "Specify the IP address or name of the vCenter or standalone ESXi host:\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "Name this connection\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "no documentation available\n",
                        "secret": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Provide user credentials for the vCenter or standalone ESXi host:\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/vmwareAnomalies:VmwareAnomalies": {
            "properties": {
                "droppedPacketsDetection": {
                    "$ref": "#/types/dynatrace:index/VmwareAnomaliesDroppedPacketsDetection:VmwareAnomaliesDroppedPacketsDetection",
                    "description": "no documentation available\n"
                },
                "esxiHighCpuDetection": {
                    "$ref": "#/types/dynatrace:index/VmwareAnomaliesEsxiHighCpuDetection:VmwareAnomaliesEsxiHighCpuDetection",
                    "description": "no documentation available\n"
                },
                "esxiHighMemoryDetection": {
                    "$ref": "#/types/dynatrace:index/VmwareAnomaliesEsxiHighMemoryDetection:VmwareAnomaliesEsxiHighMemoryDetection",
                    "description": "no documentation available\n"
                },
                "guestCpuLimitDetection": {
                    "$ref": "#/types/dynatrace:index/VmwareAnomaliesGuestCpuLimitDetection:VmwareAnomaliesGuestCpuLimitDetection",
                    "description": "no documentation available\n"
                },
                "lowDatastoreSpaceDetection": {
                    "$ref": "#/types/dynatrace:index/VmwareAnomaliesLowDatastoreSpaceDetection:VmwareAnomaliesLowDatastoreSpaceDetection",
                    "description": "no documentation available\n"
                },
                "overloadedStorageDetection": {
                    "$ref": "#/types/dynatrace:index/VmwareAnomaliesOverloadedStorageDetection:VmwareAnomaliesOverloadedStorageDetection",
                    "description": "no documentation available\n"
                },
                "slowPhysicalStorageDetection": {
                    "$ref": "#/types/dynatrace:index/VmwareAnomaliesSlowPhysicalStorageDetection:VmwareAnomaliesSlowPhysicalStorageDetection",
                    "description": "no documentation available\n"
                },
                "undersizedStorageDetection": {
                    "$ref": "#/types/dynatrace:index/VmwareAnomaliesUndersizedStorageDetection:VmwareAnomaliesUndersizedStorageDetection",
                    "description": "no documentation available\n"
                }
            },
            "required": [
                "droppedPacketsDetection",
                "esxiHighCpuDetection",
                "esxiHighMemoryDetection",
                "guestCpuLimitDetection",
                "lowDatastoreSpaceDetection",
                "overloadedStorageDetection",
                "slowPhysicalStorageDetection",
                "undersizedStorageDetection"
            ],
            "inputProperties": {
                "droppedPacketsDetection": {
                    "$ref": "#/types/dynatrace:index/VmwareAnomaliesDroppedPacketsDetection:VmwareAnomaliesDroppedPacketsDetection",
                    "description": "no documentation available\n"
                },
                "esxiHighCpuDetection": {
                    "$ref": "#/types/dynatrace:index/VmwareAnomaliesEsxiHighCpuDetection:VmwareAnomaliesEsxiHighCpuDetection",
                    "description": "no documentation available\n"
                },
                "esxiHighMemoryDetection": {
                    "$ref": "#/types/dynatrace:index/VmwareAnomaliesEsxiHighMemoryDetection:VmwareAnomaliesEsxiHighMemoryDetection",
                    "description": "no documentation available\n"
                },
                "guestCpuLimitDetection": {
                    "$ref": "#/types/dynatrace:index/VmwareAnomaliesGuestCpuLimitDetection:VmwareAnomaliesGuestCpuLimitDetection",
                    "description": "no documentation available\n"
                },
                "lowDatastoreSpaceDetection": {
                    "$ref": "#/types/dynatrace:index/VmwareAnomaliesLowDatastoreSpaceDetection:VmwareAnomaliesLowDatastoreSpaceDetection",
                    "description": "no documentation available\n"
                },
                "overloadedStorageDetection": {
                    "$ref": "#/types/dynatrace:index/VmwareAnomaliesOverloadedStorageDetection:VmwareAnomaliesOverloadedStorageDetection",
                    "description": "no documentation available\n"
                },
                "slowPhysicalStorageDetection": {
                    "$ref": "#/types/dynatrace:index/VmwareAnomaliesSlowPhysicalStorageDetection:VmwareAnomaliesSlowPhysicalStorageDetection",
                    "description": "no documentation available\n"
                },
                "undersizedStorageDetection": {
                    "$ref": "#/types/dynatrace:index/VmwareAnomaliesUndersizedStorageDetection:VmwareAnomaliesUndersizedStorageDetection",
                    "description": "no documentation available\n"
                }
            },
            "requiredInputs": [
                "droppedPacketsDetection",
                "esxiHighCpuDetection",
                "esxiHighMemoryDetection",
                "guestCpuLimitDetection",
                "lowDatastoreSpaceDetection",
                "overloadedStorageDetection",
                "slowPhysicalStorageDetection",
                "undersizedStorageDetection"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VmwareAnomalies resources.\n",
                "properties": {
                    "droppedPacketsDetection": {
                        "$ref": "#/types/dynatrace:index/VmwareAnomaliesDroppedPacketsDetection:VmwareAnomaliesDroppedPacketsDetection",
                        "description": "no documentation available\n"
                    },
                    "esxiHighCpuDetection": {
                        "$ref": "#/types/dynatrace:index/VmwareAnomaliesEsxiHighCpuDetection:VmwareAnomaliesEsxiHighCpuDetection",
                        "description": "no documentation available\n"
                    },
                    "esxiHighMemoryDetection": {
                        "$ref": "#/types/dynatrace:index/VmwareAnomaliesEsxiHighMemoryDetection:VmwareAnomaliesEsxiHighMemoryDetection",
                        "description": "no documentation available\n"
                    },
                    "guestCpuLimitDetection": {
                        "$ref": "#/types/dynatrace:index/VmwareAnomaliesGuestCpuLimitDetection:VmwareAnomaliesGuestCpuLimitDetection",
                        "description": "no documentation available\n"
                    },
                    "lowDatastoreSpaceDetection": {
                        "$ref": "#/types/dynatrace:index/VmwareAnomaliesLowDatastoreSpaceDetection:VmwareAnomaliesLowDatastoreSpaceDetection",
                        "description": "no documentation available\n"
                    },
                    "overloadedStorageDetection": {
                        "$ref": "#/types/dynatrace:index/VmwareAnomaliesOverloadedStorageDetection:VmwareAnomaliesOverloadedStorageDetection",
                        "description": "no documentation available\n"
                    },
                    "slowPhysicalStorageDetection": {
                        "$ref": "#/types/dynatrace:index/VmwareAnomaliesSlowPhysicalStorageDetection:VmwareAnomaliesSlowPhysicalStorageDetection",
                        "description": "no documentation available\n"
                    },
                    "undersizedStorageDetection": {
                        "$ref": "#/types/dynatrace:index/VmwareAnomaliesUndersizedStorageDetection:VmwareAnomaliesUndersizedStorageDetection",
                        "description": "no documentation available\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/vulnerabilityAlerting:VulnerabilityAlerting": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Alerting profile is enabled (`true`) or disabled (`false`)\n"
                },
                "enabledRiskLevels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of risk levels to alert\n"
                },
                "enabledTriggerEvents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of events to alert\n"
                },
                "managementZone": {
                    "type": "string",
                    "description": "Alert only if the following management zone is affected (optional)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Alerting profile name\n"
                }
            },
            "required": [
                "enabled",
                "name"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Alerting profile is enabled (`true`) or disabled (`false`)\n"
                },
                "enabledRiskLevels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of risk levels to alert\n"
                },
                "enabledTriggerEvents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of events to alert\n"
                },
                "managementZone": {
                    "type": "string",
                    "description": "Alert only if the following management zone is affected (optional)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Alerting profile name\n"
                }
            },
            "requiredInputs": [
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VulnerabilityAlerting resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Alerting profile is enabled (`true`) or disabled (`false`)\n"
                    },
                    "enabledRiskLevels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of risk levels to alert\n"
                    },
                    "enabledTriggerEvents": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of events to alert\n"
                    },
                    "managementZone": {
                        "type": "string",
                        "description": "Alert only if the following management zone is affected (optional)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Alerting profile name\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/vulnerabilityCode:VulnerabilityCode": {
            "properties": {
                "criteria": {
                    "$ref": "#/types/dynatrace:index/VulnerabilityCodeCriteria:VulnerabilityCodeCriteria",
                    "description": "Step 1: Define criteria\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "metadata": {
                    "$ref": "#/types/dynatrace:index/VulnerabilityCodeMetadata:VulnerabilityCodeMetadata",
                    "description": "Step 3: Leave comment\n"
                },
                "vulnerabilityDetectionControl": {
                    "$ref": "#/types/dynatrace:index/VulnerabilityCodeVulnerabilityDetectionControl:VulnerabilityCodeVulnerabilityDetectionControl",
                    "description": "Step 2: Define code-level vulnerability detection control for chosen criteria\n"
                }
            },
            "required": [
                "enabled",
                "insertAfter",
                "metadata",
                "vulnerabilityDetectionControl"
            ],
            "inputProperties": {
                "criteria": {
                    "$ref": "#/types/dynatrace:index/VulnerabilityCodeCriteria:VulnerabilityCodeCriteria",
                    "description": "Step 1: Define criteria\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "metadata": {
                    "$ref": "#/types/dynatrace:index/VulnerabilityCodeMetadata:VulnerabilityCodeMetadata",
                    "description": "Step 3: Leave comment\n"
                },
                "vulnerabilityDetectionControl": {
                    "$ref": "#/types/dynatrace:index/VulnerabilityCodeVulnerabilityDetectionControl:VulnerabilityCodeVulnerabilityDetectionControl",
                    "description": "Step 2: Define code-level vulnerability detection control for chosen criteria\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "metadata",
                "vulnerabilityDetectionControl"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VulnerabilityCode resources.\n",
                "properties": {
                    "criteria": {
                        "$ref": "#/types/dynatrace:index/VulnerabilityCodeCriteria:VulnerabilityCodeCriteria",
                        "description": "Step 1: Define criteria\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "metadata": {
                        "$ref": "#/types/dynatrace:index/VulnerabilityCodeMetadata:VulnerabilityCodeMetadata",
                        "description": "Step 3: Leave comment\n"
                    },
                    "vulnerabilityDetectionControl": {
                        "$ref": "#/types/dynatrace:index/VulnerabilityCodeVulnerabilityDetectionControl:VulnerabilityCodeVulnerabilityDetectionControl",
                        "description": "Step 2: Define code-level vulnerability detection control for chosen criteria\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/vulnerabilitySettings:VulnerabilitySettings": {
            "properties": {
                "enableCodeLevelVulnerabilityDetection": {
                    "type": "boolean",
                    "description": "Enable Code-level Vulnerability Analytics\n"
                },
                "enableRuntimeVulnerabilityDetection": {
                    "type": "boolean",
                    "description": "Enable Third-party Vulnerability Analytics\n"
                },
                "globalMonitoringModeDotNet": {
                    "type": "string",
                    "description": "(v1.290) Global .NET code-level vulnerability detection control defines the default for all process groups. You can use monitoring rules to override the default for certain process groups.\n"
                },
                "globalMonitoringModeJava": {
                    "type": "string",
                    "description": "Possible Values: `MONITORING_OFF`, `MONITORING_ON`\n"
                },
                "globalMonitoringModeTpv": {
                    "type": "string",
                    "description": "Possible Values: `MONITORING_OFF`, `MONITORING_ON`\n"
                },
                "technologies": {
                    "$ref": "#/types/dynatrace:index/VulnerabilitySettingsTechnologies:VulnerabilitySettingsTechnologies",
                    "description": "Vulnerability Analytics can be enabled/disabled per supported technology.\n"
                }
            },
            "required": [
                "enableCodeLevelVulnerabilityDetection",
                "enableRuntimeVulnerabilityDetection",
                "globalMonitoringModeJava",
                "technologies"
            ],
            "inputProperties": {
                "enableCodeLevelVulnerabilityDetection": {
                    "type": "boolean",
                    "description": "Enable Code-level Vulnerability Analytics\n"
                },
                "enableRuntimeVulnerabilityDetection": {
                    "type": "boolean",
                    "description": "Enable Third-party Vulnerability Analytics\n"
                },
                "globalMonitoringModeDotNet": {
                    "type": "string",
                    "description": "(v1.290) Global .NET code-level vulnerability detection control defines the default for all process groups. You can use monitoring rules to override the default for certain process groups.\n"
                },
                "globalMonitoringModeJava": {
                    "type": "string",
                    "description": "Possible Values: `MONITORING_OFF`, `MONITORING_ON`\n"
                },
                "globalMonitoringModeTpv": {
                    "type": "string",
                    "description": "Possible Values: `MONITORING_OFF`, `MONITORING_ON`\n"
                },
                "technologies": {
                    "$ref": "#/types/dynatrace:index/VulnerabilitySettingsTechnologies:VulnerabilitySettingsTechnologies",
                    "description": "Vulnerability Analytics can be enabled/disabled per supported technology.\n"
                }
            },
            "requiredInputs": [
                "enableCodeLevelVulnerabilityDetection",
                "enableRuntimeVulnerabilityDetection",
                "globalMonitoringModeJava",
                "technologies"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VulnerabilitySettings resources.\n",
                "properties": {
                    "enableCodeLevelVulnerabilityDetection": {
                        "type": "boolean",
                        "description": "Enable Code-level Vulnerability Analytics\n"
                    },
                    "enableRuntimeVulnerabilityDetection": {
                        "type": "boolean",
                        "description": "Enable Third-party Vulnerability Analytics\n"
                    },
                    "globalMonitoringModeDotNet": {
                        "type": "string",
                        "description": "(v1.290) Global .NET code-level vulnerability detection control defines the default for all process groups. You can use monitoring rules to override the default for certain process groups.\n"
                    },
                    "globalMonitoringModeJava": {
                        "type": "string",
                        "description": "Possible Values: `MONITORING_OFF`, `MONITORING_ON`\n"
                    },
                    "globalMonitoringModeTpv": {
                        "type": "string",
                        "description": "Possible Values: `MONITORING_OFF`, `MONITORING_ON`\n"
                    },
                    "technologies": {
                        "$ref": "#/types/dynatrace:index/VulnerabilitySettingsTechnologies:VulnerabilitySettingsTechnologies",
                        "description": "Vulnerability Analytics can be enabled/disabled per supported technology.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/vulnerabilityThirdParty:VulnerabilityThirdParty": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Possible Values: `MONITORING_OFF`, `MONITORING_ON`\n"
                },
                "operator": {
                    "type": "string",
                    "description": "Possible Values: `EQUALS`, `NOT_EQUALS`\n"
                },
                "property": {
                    "type": "string",
                    "description": "Possible Values: `HOST_TAG`, `MANAGEMENT_ZONE`, `PROCESS_TAG`\n"
                },
                "value": {
                    "type": "string",
                    "description": "Condition value\n"
                }
            },
            "required": [
                "enabled",
                "insertAfter",
                "mode",
                "operator",
                "property",
                "value"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                },
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Possible Values: `MONITORING_OFF`, `MONITORING_ON`\n"
                },
                "operator": {
                    "type": "string",
                    "description": "Possible Values: `EQUALS`, `NOT_EQUALS`\n"
                },
                "property": {
                    "type": "string",
                    "description": "Possible Values: `HOST_TAG`, `MANAGEMENT_ZONE`, `PROCESS_TAG`\n"
                },
                "value": {
                    "type": "string",
                    "description": "Condition value\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "mode",
                "operator",
                "property",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VulnerabilityThirdParty resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "This setting is enabled (`true`) or disabled (`false`)\n"
                    },
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Possible Values: `MONITORING_OFF`, `MONITORING_ON`\n"
                    },
                    "operator": {
                        "type": "string",
                        "description": "Possible Values: `EQUALS`, `NOT_EQUALS`\n"
                    },
                    "property": {
                        "type": "string",
                        "description": "Possible Values: `HOST_TAG`, `MANAGEMENT_ZONE`, `PROCESS_TAG`\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "Condition value\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/webAppAnomalies:WebAppAnomalies": {
            "properties": {
                "errorRate": {
                    "$ref": "#/types/dynatrace:index/WebAppAnomaliesErrorRate:WebAppAnomaliesErrorRate",
                    "description": "Error rate\n"
                },
                "responseTime": {
                    "$ref": "#/types/dynatrace:index/WebAppAnomaliesResponseTime:WebAppAnomaliesResponseTime",
                    "description": "Response time\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (APPLICATION_METHOD, APPLICATION). Omit this property if you want to cover the whole environment.\n"
                },
                "trafficDrops": {
                    "$ref": "#/types/dynatrace:index/WebAppAnomaliesTrafficDrops:WebAppAnomaliesTrafficDrops",
                    "description": "Dynatrace learns your typical application traffic over an observation period of one week.\n"
                },
                "trafficSpikes": {
                    "$ref": "#/types/dynatrace:index/WebAppAnomaliesTrafficSpikes:WebAppAnomaliesTrafficSpikes",
                    "description": "Dynatrace learns your typical application traffic over an observation period of one week.\n"
                }
            },
            "required": [
                "errorRate",
                "responseTime",
                "trafficDrops",
                "trafficSpikes"
            ],
            "inputProperties": {
                "errorRate": {
                    "$ref": "#/types/dynatrace:index/WebAppAnomaliesErrorRate:WebAppAnomaliesErrorRate",
                    "description": "Error rate\n"
                },
                "responseTime": {
                    "$ref": "#/types/dynatrace:index/WebAppAnomaliesResponseTime:WebAppAnomaliesResponseTime",
                    "description": "Response time\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (APPLICATION_METHOD, APPLICATION). Omit this property if you want to cover the whole environment.\n",
                    "willReplaceOnChanges": true
                },
                "trafficDrops": {
                    "$ref": "#/types/dynatrace:index/WebAppAnomaliesTrafficDrops:WebAppAnomaliesTrafficDrops",
                    "description": "Dynatrace learns your typical application traffic over an observation period of one week.\n"
                },
                "trafficSpikes": {
                    "$ref": "#/types/dynatrace:index/WebAppAnomaliesTrafficSpikes:WebAppAnomaliesTrafficSpikes",
                    "description": "Dynatrace learns your typical application traffic over an observation period of one week.\n"
                }
            },
            "requiredInputs": [
                "errorRate",
                "responseTime",
                "trafficDrops",
                "trafficSpikes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WebAppAnomalies resources.\n",
                "properties": {
                    "errorRate": {
                        "$ref": "#/types/dynatrace:index/WebAppAnomaliesErrorRate:WebAppAnomaliesErrorRate",
                        "description": "Error rate\n"
                    },
                    "responseTime": {
                        "$ref": "#/types/dynatrace:index/WebAppAnomaliesResponseTime:WebAppAnomaliesResponseTime",
                        "description": "Response time\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (APPLICATION_METHOD, APPLICATION). Omit this property if you want to cover the whole environment.\n",
                        "willReplaceOnChanges": true
                    },
                    "trafficDrops": {
                        "$ref": "#/types/dynatrace:index/WebAppAnomaliesTrafficDrops:WebAppAnomaliesTrafficDrops",
                        "description": "Dynatrace learns your typical application traffic over an observation period of one week.\n"
                    },
                    "trafficSpikes": {
                        "$ref": "#/types/dynatrace:index/WebAppAnomaliesTrafficSpikes:WebAppAnomaliesTrafficSpikes",
                        "description": "Dynatrace learns your typical application traffic over an observation period of one week.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/webAppBeaconEndpoint:WebAppBeaconEndpoint": {
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "The scope of this setting\n"
                },
                "type": {
                    "type": "string",
                    "description": "Possible Values: `ACTIVEGATE`, `DEFAULT_CONFIG`, `ONEAGENT`\n"
                },
                "url": {
                    "type": "string",
                    "description": "You can specify either path segments or an absolute URL.\n"
                },
                "useCors": {
                    "type": "boolean",
                    "description": "Learn more about [sending beacon data via CORS](https://dt-url.net/r7038sa)\n"
                }
            },
            "required": [
                "applicationId",
                "type"
            ],
            "inputProperties": {
                "applicationId": {
                    "type": "string",
                    "description": "The scope of this setting\n"
                },
                "type": {
                    "type": "string",
                    "description": "Possible Values: `ACTIVEGATE`, `DEFAULT_CONFIG`, `ONEAGENT`\n"
                },
                "url": {
                    "type": "string",
                    "description": "You can specify either path segments or an absolute URL.\n"
                },
                "useCors": {
                    "type": "boolean",
                    "description": "Learn more about [sending beacon data via CORS](https://dt-url.net/r7038sa)\n"
                }
            },
            "requiredInputs": [
                "applicationId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WebAppBeaconEndpoint resources.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "The scope of this setting\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Possible Values: `ACTIVEGATE`, `DEFAULT_CONFIG`, `ONEAGENT`\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "You can specify either path segments or an absolute URL.\n"
                    },
                    "useCors": {
                        "type": "boolean",
                        "description": "Learn more about [sending beacon data via CORS](https://dt-url.net/r7038sa)\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/webAppBeaconOrigins:WebAppBeaconOrigins": {
            "properties": {
                "matcher": {
                    "type": "string",
                    "description": "Possible Values: `CONTAINS`, `ENDS_WITH`, `EQUALS`, `STARTS_WITH`\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Pattern\n"
                }
            },
            "required": [
                "matcher",
                "pattern"
            ],
            "inputProperties": {
                "matcher": {
                    "type": "string",
                    "description": "Possible Values: `CONTAINS`, `ENDS_WITH`, `EQUALS`, `STARTS_WITH`\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Pattern\n"
                }
            },
            "requiredInputs": [
                "matcher",
                "pattern"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WebAppBeaconOrigins resources.\n",
                "properties": {
                    "matcher": {
                        "type": "string",
                        "description": "Possible Values: `CONTAINS`, `ENDS_WITH`, `EQUALS`, `STARTS_WITH`\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "Pattern\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/webAppCustomConfigProperties:WebAppCustomConfigProperties": {
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "The scope of this setting\n"
                },
                "customProperty": {
                    "type": "string",
                    "description": "Custom configuration property\n"
                }
            },
            "required": [
                "applicationId",
                "customProperty"
            ],
            "inputProperties": {
                "applicationId": {
                    "type": "string",
                    "description": "The scope of this setting\n"
                },
                "customProperty": {
                    "type": "string",
                    "description": "Custom configuration property\n"
                }
            },
            "requiredInputs": [
                "applicationId",
                "customProperty"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WebAppCustomConfigProperties resources.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "The scope of this setting\n"
                    },
                    "customProperty": {
                        "type": "string",
                        "description": "Custom configuration property\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/webAppCustomErrors:WebAppCustomErrors": {
            "properties": {
                "errorRules": {
                    "$ref": "#/types/dynatrace:index/WebAppCustomErrorsErrorRules:WebAppCustomErrorsErrorRules",
                    "description": "(Field has overlap with `dynatrace.ApplicationErrorRules`)\n"
                },
                "ignoreCustomErrorsInApdexCalculation": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.ApplicationErrorRules`) This setting overrides Apdex settings for individual rules listed below\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (APPLICATION)\n"
                }
            },
            "required": [
                "ignoreCustomErrorsInApdexCalculation",
                "scope"
            ],
            "inputProperties": {
                "errorRules": {
                    "$ref": "#/types/dynatrace:index/WebAppCustomErrorsErrorRules:WebAppCustomErrorsErrorRules",
                    "description": "(Field has overlap with `dynatrace.ApplicationErrorRules`)\n"
                },
                "ignoreCustomErrorsInApdexCalculation": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.ApplicationErrorRules`) This setting overrides Apdex settings for individual rules listed below\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (APPLICATION)\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ignoreCustomErrorsInApdexCalculation",
                "scope"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WebAppCustomErrors resources.\n",
                "properties": {
                    "errorRules": {
                        "$ref": "#/types/dynatrace:index/WebAppCustomErrorsErrorRules:WebAppCustomErrorsErrorRules",
                        "description": "(Field has overlap with `dynatrace.ApplicationErrorRules`)\n"
                    },
                    "ignoreCustomErrorsInApdexCalculation": {
                        "type": "boolean",
                        "description": "(Field has overlap with `dynatrace.ApplicationErrorRules`) This setting overrides Apdex settings for individual rules listed below\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (APPLICATION)\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/webAppEnablement:WebAppEnablement": {
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                },
                "rum": {
                    "$ref": "#/types/dynatrace:index/WebAppEnablementRum:WebAppEnablementRum",
                    "description": "Capture and analyze all user actions within your application. Enable [Real User Monitoring (RUM)](https://dt-url.net/1n2b0prq) to monitor and improve your application's performance, identify errors, and gain insight into your user's behavior and experience.\n"
                },
                "sessionReplay": {
                    "$ref": "#/types/dynatrace:index/WebAppEnablementSessionReplay:WebAppEnablementSessionReplay",
                    "description": "[Session Replay](https://dt-url.net/session-replay) captures all user interactions within your application and replays them in a movie-like experience while providing [best-in-class security and data protection](https://dt-url.net/b303zxj).\n"
                }
            },
            "required": [
                "rum",
                "sessionReplay"
            ],
            "inputProperties": {
                "applicationId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                },
                "rum": {
                    "$ref": "#/types/dynatrace:index/WebAppEnablementRum:WebAppEnablementRum",
                    "description": "Capture and analyze all user actions within your application. Enable [Real User Monitoring (RUM)](https://dt-url.net/1n2b0prq) to monitor and improve your application's performance, identify errors, and gain insight into your user's behavior and experience.\n"
                },
                "sessionReplay": {
                    "$ref": "#/types/dynatrace:index/WebAppEnablementSessionReplay:WebAppEnablementSessionReplay",
                    "description": "[Session Replay](https://dt-url.net/session-replay) captures all user interactions within your application and replays them in a movie-like experience while providing [best-in-class security and data protection](https://dt-url.net/b303zxj).\n"
                }
            },
            "requiredInputs": [
                "rum",
                "sessionReplay"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WebAppEnablement resources.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    },
                    "rum": {
                        "$ref": "#/types/dynatrace:index/WebAppEnablementRum:WebAppEnablementRum",
                        "description": "Capture and analyze all user actions within your application. Enable [Real User Monitoring (RUM)](https://dt-url.net/1n2b0prq) to monitor and improve your application's performance, identify errors, and gain insight into your user's behavior and experience.\n"
                    },
                    "sessionReplay": {
                        "$ref": "#/types/dynatrace:index/WebAppEnablementSessionReplay:WebAppEnablementSessionReplay",
                        "description": "[Session Replay](https://dt-url.net/session-replay) captures all user interactions within your application and replays them in a movie-like experience while providing [best-in-class security and data protection](https://dt-url.net/b303zxj).\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/webAppInjectionCookie:WebAppInjectionCookie": {
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                },
                "cookiePlacementDomain": {
                    "type": "string",
                    "description": "Specify an alternative domain for cookies set by Dynatrace. Keep in mind that your browser may not allow placement of cookies on certain domains (for example, top-level domains). Before typing a domain name here, confirm that the domain will accept cookies from your browser. For details, see the list of [forbidden top-level domains](https://dt-url.net/9n6b0pfz).\n"
                },
                "sameSiteCookieAttribute": {
                    "type": "string",
                    "description": "Possible Values: `LAX`, `NONE`, `NOTSET`, `STRICT`\n"
                },
                "useSecureCookieAttribute": {
                    "type": "boolean",
                    "description": "If your application is only accessible via SSL, you can add the Secure attribute to all cookies set by Dynatrace. This setting prevents the display of warnings from PCI-compliance security scanners. Be aware that with this setting enabled Dynatrace correlation of user actions with server-side web requests is only possible over SSL connections.\n"
                }
            },
            "required": [
                "applicationId",
                "sameSiteCookieAttribute",
                "useSecureCookieAttribute"
            ],
            "inputProperties": {
                "applicationId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                },
                "cookiePlacementDomain": {
                    "type": "string",
                    "description": "Specify an alternative domain for cookies set by Dynatrace. Keep in mind that your browser may not allow placement of cookies on certain domains (for example, top-level domains). Before typing a domain name here, confirm that the domain will accept cookies from your browser. For details, see the list of [forbidden top-level domains](https://dt-url.net/9n6b0pfz).\n"
                },
                "sameSiteCookieAttribute": {
                    "type": "string",
                    "description": "Possible Values: `LAX`, `NONE`, `NOTSET`, `STRICT`\n"
                },
                "useSecureCookieAttribute": {
                    "type": "boolean",
                    "description": "If your application is only accessible via SSL, you can add the Secure attribute to all cookies set by Dynatrace. This setting prevents the display of warnings from PCI-compliance security scanners. Be aware that with this setting enabled Dynatrace correlation of user actions with server-side web requests is only possible over SSL connections.\n"
                }
            },
            "requiredInputs": [
                "applicationId",
                "sameSiteCookieAttribute",
                "useSecureCookieAttribute"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WebAppInjectionCookie resources.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                    },
                    "cookiePlacementDomain": {
                        "type": "string",
                        "description": "Specify an alternative domain for cookies set by Dynatrace. Keep in mind that your browser may not allow placement of cookies on certain domains (for example, top-level domains). Before typing a domain name here, confirm that the domain will accept cookies from your browser. For details, see the list of [forbidden top-level domains](https://dt-url.net/9n6b0pfz).\n"
                    },
                    "sameSiteCookieAttribute": {
                        "type": "string",
                        "description": "Possible Values: `LAX`, `NONE`, `NOTSET`, `STRICT`\n"
                    },
                    "useSecureCookieAttribute": {
                        "type": "boolean",
                        "description": "If your application is only accessible via SSL, you can add the Secure attribute to all cookies set by Dynatrace. This setting prevents the display of warnings from PCI-compliance security scanners. Be aware that with this setting enabled Dynatrace correlation of user actions with server-side web requests is only possible over SSL connections.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/webAppJavascriptUpdates:WebAppJavascriptUpdates": {
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n"
                },
                "javascriptVersion": {
                    "type": "string",
                    "description": "Possible Values: `CUSTOM`, `LATEST_IE7_10_SUPPORTED`, `LATEST_STABLE`, `PREVIOUS_STABLE`\n"
                }
            },
            "required": [
                "javascriptVersion"
            ],
            "inputProperties": {
                "applicationId": {
                    "type": "string",
                    "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                    "willReplaceOnChanges": true
                },
                "javascriptVersion": {
                    "type": "string",
                    "description": "Possible Values: `CUSTOM`, `LATEST_IE7_10_SUPPORTED`, `LATEST_STABLE`, `PREVIOUS_STABLE`\n"
                }
            },
            "requiredInputs": [
                "javascriptVersion"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WebAppJavascriptUpdates resources.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.\n",
                        "willReplaceOnChanges": true
                    },
                    "javascriptVersion": {
                        "type": "string",
                        "description": "Possible Values: `CUSTOM`, `LATEST_IE7_10_SUPPORTED`, `LATEST_STABLE`, `PREVIOUS_STABLE`\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/webAppJavascriptVersion:WebAppJavascriptVersion": {
            "properties": {
                "customJavascriptVersion": {
                    "type": "string",
                    "description": "Choose custom version\n"
                }
            },
            "inputProperties": {
                "customJavascriptVersion": {
                    "type": "string",
                    "description": "Choose custom version\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WebAppJavascriptVersion resources.\n",
                "properties": {
                    "customJavascriptVersion": {
                        "type": "string",
                        "description": "Choose custom version\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/webAppKeyPerformanceCustom:WebAppKeyPerformanceCustom": {
            "properties": {
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (APPLICATION_METHOD, APPLICATION)\n"
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/WebAppKeyPerformanceCustomThresholds:WebAppKeyPerformanceCustomThresholds",
                    "description": "User action duration thresholds\n"
                }
            },
            "required": [
                "scope",
                "thresholds"
            ],
            "inputProperties": {
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (APPLICATION_METHOD, APPLICATION)\n",
                    "willReplaceOnChanges": true
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/WebAppKeyPerformanceCustomThresholds:WebAppKeyPerformanceCustomThresholds",
                    "description": "User action duration thresholds\n"
                }
            },
            "requiredInputs": [
                "scope",
                "thresholds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WebAppKeyPerformanceCustom resources.\n",
                "properties": {
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (APPLICATION_METHOD, APPLICATION)\n",
                        "willReplaceOnChanges": true
                    },
                    "thresholds": {
                        "$ref": "#/types/dynatrace:index/WebAppKeyPerformanceCustomThresholds:WebAppKeyPerformanceCustomThresholds",
                        "description": "User action duration thresholds\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/webAppKeyPerformanceLoad:WebAppKeyPerformanceLoad": {
            "properties": {
                "fallbackThresholds": {
                    "$ref": "#/types/dynatrace:index/WebAppKeyPerformanceLoadFallbackThresholds:WebAppKeyPerformanceLoadFallbackThresholds",
                    "description": "If the selected key performance metric is not detected, the **User action duration** metric is used instead.\n"
                },
                "kpm": {
                    "type": "string",
                    "description": "Possible Values: `CUMULATIVE_LAYOUT_SHIFT`, `DOM_INTERACTIVE`, `FIRST_INPUT_DELAY`, `LARGEST_CONTENTFUL_PAINT`, `LOAD_EVENT_END`, `LOAD_EVENT_START`, `RESPONSE_END`, `RESPONSE_START`, `SPEED_INDEX`, `USER_ACTION_DURATION`, `VISUALLY_COMPLETE`\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (APPLICATION_METHOD, APPLICATION)\n"
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/WebAppKeyPerformanceLoadThresholds:WebAppKeyPerformanceLoadThresholds",
                    "description": "Set the Tolerating and Frustrated performance thresholds for this action type.\n"
                }
            },
            "required": [
                "kpm",
                "scope",
                "thresholds"
            ],
            "inputProperties": {
                "fallbackThresholds": {
                    "$ref": "#/types/dynatrace:index/WebAppKeyPerformanceLoadFallbackThresholds:WebAppKeyPerformanceLoadFallbackThresholds",
                    "description": "If the selected key performance metric is not detected, the **User action duration** metric is used instead.\n"
                },
                "kpm": {
                    "type": "string",
                    "description": "Possible Values: `CUMULATIVE_LAYOUT_SHIFT`, `DOM_INTERACTIVE`, `FIRST_INPUT_DELAY`, `LARGEST_CONTENTFUL_PAINT`, `LOAD_EVENT_END`, `LOAD_EVENT_START`, `RESPONSE_END`, `RESPONSE_START`, `SPEED_INDEX`, `USER_ACTION_DURATION`, `VISUALLY_COMPLETE`\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (APPLICATION_METHOD, APPLICATION)\n",
                    "willReplaceOnChanges": true
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/WebAppKeyPerformanceLoadThresholds:WebAppKeyPerformanceLoadThresholds",
                    "description": "Set the Tolerating and Frustrated performance thresholds for this action type.\n"
                }
            },
            "requiredInputs": [
                "kpm",
                "scope",
                "thresholds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WebAppKeyPerformanceLoad resources.\n",
                "properties": {
                    "fallbackThresholds": {
                        "$ref": "#/types/dynatrace:index/WebAppKeyPerformanceLoadFallbackThresholds:WebAppKeyPerformanceLoadFallbackThresholds",
                        "description": "If the selected key performance metric is not detected, the **User action duration** metric is used instead.\n"
                    },
                    "kpm": {
                        "type": "string",
                        "description": "Possible Values: `CUMULATIVE_LAYOUT_SHIFT`, `DOM_INTERACTIVE`, `FIRST_INPUT_DELAY`, `LARGEST_CONTENTFUL_PAINT`, `LOAD_EVENT_END`, `LOAD_EVENT_START`, `RESPONSE_END`, `RESPONSE_START`, `SPEED_INDEX`, `USER_ACTION_DURATION`, `VISUALLY_COMPLETE`\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (APPLICATION_METHOD, APPLICATION)\n",
                        "willReplaceOnChanges": true
                    },
                    "thresholds": {
                        "$ref": "#/types/dynatrace:index/WebAppKeyPerformanceLoadThresholds:WebAppKeyPerformanceLoadThresholds",
                        "description": "Set the Tolerating and Frustrated performance thresholds for this action type.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/webAppKeyPerformanceXhr:WebAppKeyPerformanceXhr": {
            "properties": {
                "fallbackThresholds": {
                    "$ref": "#/types/dynatrace:index/WebAppKeyPerformanceXhrFallbackThresholds:WebAppKeyPerformanceXhrFallbackThresholds",
                    "description": "If the selected key performance metric is not detected, the **User action duration** metric is used instead.\n"
                },
                "kpm": {
                    "type": "string",
                    "description": "Possible Values: `RESPONSE_END`, `RESPONSE_START`, `USER_ACTION_DURATION`, `VISUALLY_COMPLETE`\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (APPLICATION_METHOD, APPLICATION)\n"
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/WebAppKeyPerformanceXhrThresholds:WebAppKeyPerformanceXhrThresholds",
                    "description": "Set the Tolerating and Frustrated performance thresholds for this action type.\n"
                }
            },
            "required": [
                "kpm",
                "scope",
                "thresholds"
            ],
            "inputProperties": {
                "fallbackThresholds": {
                    "$ref": "#/types/dynatrace:index/WebAppKeyPerformanceXhrFallbackThresholds:WebAppKeyPerformanceXhrFallbackThresholds",
                    "description": "If the selected key performance metric is not detected, the **User action duration** metric is used instead.\n"
                },
                "kpm": {
                    "type": "string",
                    "description": "Possible Values: `RESPONSE_END`, `RESPONSE_START`, `USER_ACTION_DURATION`, `VISUALLY_COMPLETE`\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (APPLICATION_METHOD, APPLICATION)\n",
                    "willReplaceOnChanges": true
                },
                "thresholds": {
                    "$ref": "#/types/dynatrace:index/WebAppKeyPerformanceXhrThresholds:WebAppKeyPerformanceXhrThresholds",
                    "description": "Set the Tolerating and Frustrated performance thresholds for this action type.\n"
                }
            },
            "requiredInputs": [
                "kpm",
                "scope",
                "thresholds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WebAppKeyPerformanceXhr resources.\n",
                "properties": {
                    "fallbackThresholds": {
                        "$ref": "#/types/dynatrace:index/WebAppKeyPerformanceXhrFallbackThresholds:WebAppKeyPerformanceXhrFallbackThresholds",
                        "description": "If the selected key performance metric is not detected, the **User action duration** metric is used instead.\n"
                    },
                    "kpm": {
                        "type": "string",
                        "description": "Possible Values: `RESPONSE_END`, `RESPONSE_START`, `USER_ACTION_DURATION`, `VISUALLY_COMPLETE`\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (APPLICATION_METHOD, APPLICATION)\n",
                        "willReplaceOnChanges": true
                    },
                    "thresholds": {
                        "$ref": "#/types/dynatrace:index/WebAppKeyPerformanceXhrThresholds:WebAppKeyPerformanceXhrThresholds",
                        "description": "Set the Tolerating and Frustrated performance thresholds for this action type.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/webAppRequestErrors:WebAppRequestErrors": {
            "properties": {
                "errorRules": {
                    "$ref": "#/types/dynatrace:index/WebAppRequestErrorsErrorRules:WebAppRequestErrorsErrorRules",
                    "description": "(Field has overlap with `dynatrace.ApplicationErrorRules`)\n"
                },
                "ignoreRequestErrorsInApdexCalculation": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.ApplicationErrorRules`) This setting overrides Apdex settings for individual rules listed below\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (APPLICATION)\n"
                }
            },
            "required": [
                "ignoreRequestErrorsInApdexCalculation",
                "scope"
            ],
            "inputProperties": {
                "errorRules": {
                    "$ref": "#/types/dynatrace:index/WebAppRequestErrorsErrorRules:WebAppRequestErrorsErrorRules",
                    "description": "(Field has overlap with `dynatrace.ApplicationErrorRules`)\n"
                },
                "ignoreRequestErrorsInApdexCalculation": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.ApplicationErrorRules`) This setting overrides Apdex settings for individual rules listed below\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of this setting (APPLICATION)\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ignoreRequestErrorsInApdexCalculation",
                "scope"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WebAppRequestErrors resources.\n",
                "properties": {
                    "errorRules": {
                        "$ref": "#/types/dynatrace:index/WebAppRequestErrorsErrorRules:WebAppRequestErrorsErrorRules",
                        "description": "(Field has overlap with `dynatrace.ApplicationErrorRules`)\n"
                    },
                    "ignoreRequestErrorsInApdexCalculation": {
                        "type": "boolean",
                        "description": "(Field has overlap with `dynatrace.ApplicationErrorRules`) This setting overrides Apdex settings for individual rules listed below\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of this setting (APPLICATION)\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/webAppResourceCleanup:WebAppResourceCleanup": {
            "properties": {
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "name": {
                    "type": "string",
                    "description": "For example: *Mask journeyId*\n"
                },
                "regularExpression": {
                    "type": "string",
                    "description": "For example: `(.*)(journeyId=)-?\\d+(.*)`\n"
                },
                "replaceWith": {
                    "type": "string",
                    "description": "For example: `$1$2\\*$3`\n"
                }
            },
            "required": [
                "insertAfter",
                "name",
                "regularExpression",
                "replaceWith"
            ],
            "inputProperties": {
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "name": {
                    "type": "string",
                    "description": "For example: *Mask journeyId*\n"
                },
                "regularExpression": {
                    "type": "string",
                    "description": "For example: `(.*)(journeyId=)-?\\d+(.*)`\n"
                },
                "replaceWith": {
                    "type": "string",
                    "description": "For example: `$1$2\\*$3`\n"
                }
            },
            "requiredInputs": [
                "regularExpression",
                "replaceWith"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WebAppResourceCleanup resources.\n",
                "properties": {
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "For example: *Mask journeyId*\n"
                    },
                    "regularExpression": {
                        "type": "string",
                        "description": "For example: `(.*)(journeyId=)-?\\d+(.*)`\n"
                    },
                    "replaceWith": {
                        "type": "string",
                        "description": "For example: `$1$2\\*$3`\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/webAppResourceTypes:WebAppResourceTypes": {
            "properties": {
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "primaryResourceType": {
                    "type": "string",
                    "description": "Possible Values: `CSS`, `IMAGE`, `OTHER`, `SCRIPT`\n"
                },
                "regularExpression": {
                    "type": "string",
                    "description": "The regular expression to detect the resource.\n"
                },
                "secondaryResourceType": {
                    "type": "string",
                    "description": "The secondary type of the resource.\n"
                }
            },
            "required": [
                "insertAfter",
                "primaryResourceType",
                "regularExpression"
            ],
            "inputProperties": {
                "insertAfter": {
                    "type": "string",
                    "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                },
                "primaryResourceType": {
                    "type": "string",
                    "description": "Possible Values: `CSS`, `IMAGE`, `OTHER`, `SCRIPT`\n"
                },
                "regularExpression": {
                    "type": "string",
                    "description": "The regular expression to detect the resource.\n"
                },
                "secondaryResourceType": {
                    "type": "string",
                    "description": "The secondary type of the resource.\n"
                }
            },
            "requiredInputs": [
                "primaryResourceType",
                "regularExpression"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WebAppResourceTypes resources.\n",
                "properties": {
                    "insertAfter": {
                        "type": "string",
                        "description": "Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched\n"
                    },
                    "primaryResourceType": {
                        "type": "string",
                        "description": "Possible Values: `CSS`, `IMAGE`, `OTHER`, `SCRIPT`\n"
                    },
                    "regularExpression": {
                        "type": "string",
                        "description": "The regular expression to detect the resource.\n"
                    },
                    "secondaryResourceType": {
                        "type": "string",
                        "description": "The secondary type of the resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/webApplication:WebApplication": {
            "properties": {
                "conversionGoals": {
                    "$ref": "#/types/dynatrace:index/WebApplicationConversionGoals:WebApplicationConversionGoals",
                    "description": "A list of conversion goals of the application\n"
                },
                "costControlUserSessionPercentage": {
                    "type": "integer",
                    "description": "(Field has overlap with `dynatrace.WebAppEnablement`) Analize *X*% of user sessions\n"
                },
                "customActionApdexSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationCustomActionApdexSettings:WebApplicationCustomActionApdexSettings",
                    "description": "Defines the Custom Action Apdex settings of an application\n"
                },
                "keyUserActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationKeyUserAction:WebApplicationKeyUserAction"
                    },
                    "description": "User Action names to be flagged as Key User Actions\n",
                    "deprecationMessage": "Configuring Key User Actions within `dynatrace_web_application` is discouraged. Use the dedicated resource `dynatrace_key_user_action` instead."
                },
                "loadActionApdexSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationLoadActionApdexSettings:WebApplicationLoadActionApdexSettings",
                    "description": "Defines the Load Action Apdex settings of an application\n"
                },
                "loadActionKeyPerformanceMetric": {
                    "type": "string",
                    "description": "The key performance metric of load actions. Possible values are `ACTION_DURATION`, `CUMULATIVE_LAYOUT_SHIFT`, `DOM_INTERACTIVE`, `FIRST_INPUT_DELAY`, `LARGEST_CONTENTFUL_PAINT`, `LOAD_EVENT_END`, `LOAD_EVENT_START`, `RESPONSE_END`, `RESPONSE_START`, `SPEED_INDEX` and `VISUALLY_COMPLETE`\n"
                },
                "metaDataCaptureSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMetaDataCaptureSettings:WebApplicationMetaDataCaptureSettings",
                    "description": "Java script agent meta data capture settings\n"
                },
                "monitoringSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettings:WebApplicationMonitoringSettings",
                    "description": "Real user monitoring settings\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the conversion goal. Valid length within 1 and 50 characters.\n"
                },
                "realUserMonitoringEnabled": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.WebAppEnablement`) Real user monitoring enabled/disabled\n"
                },
                "sessionReplayConfig": {
                    "$ref": "#/types/dynatrace:index/WebApplicationSessionReplayConfig:WebApplicationSessionReplayConfig",
                    "description": "Settings regarding Session Replay\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the action. Possible values are `Custom`, `Load` and `Xhr`.\n"
                },
                "urlInjectionPattern": {
                    "type": "string",
                    "description": "URL injection pattern for manual web application\n"
                },
                "userActionAndSessionProperties": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserActionAndSessionProperties:WebApplicationUserActionAndSessionProperties",
                    "description": "User action and session properties settings\n"
                },
                "userActionNamingSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettings:WebApplicationUserActionNamingSettings",
                    "description": "The settings of user action naming\n"
                },
                "userTags": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserTags:WebApplicationUserTags",
                    "description": "User tags settings\n"
                },
                "waterfallSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationWaterfallSettings:WebApplicationWaterfallSettings",
                    "description": "These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources\n"
                },
                "xhrActionApdexSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationXhrActionApdexSettings:WebApplicationXhrActionApdexSettings",
                    "description": "Defines the XHR Action Apdex settings of an application\n"
                },
                "xhrActionKeyPerformanceMetric": {
                    "type": "string",
                    "description": "The key performance metric of XHR actions. Possible values are `ACTION_DURATION`, `RESPONSE_END`, `RESPONSE_START` and `VISUALLY_COMPLETE`.\n"
                }
            },
            "required": [
                "costControlUserSessionPercentage",
                "customActionApdexSettings",
                "loadActionApdexSettings",
                "loadActionKeyPerformanceMetric",
                "monitoringSettings",
                "name",
                "sessionReplayConfig",
                "type",
                "waterfallSettings",
                "xhrActionApdexSettings",
                "xhrActionKeyPerformanceMetric"
            ],
            "inputProperties": {
                "conversionGoals": {
                    "$ref": "#/types/dynatrace:index/WebApplicationConversionGoals:WebApplicationConversionGoals",
                    "description": "A list of conversion goals of the application\n"
                },
                "costControlUserSessionPercentage": {
                    "type": "integer",
                    "description": "(Field has overlap with `dynatrace.WebAppEnablement`) Analize *X*% of user sessions\n"
                },
                "customActionApdexSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationCustomActionApdexSettings:WebApplicationCustomActionApdexSettings",
                    "description": "Defines the Custom Action Apdex settings of an application\n"
                },
                "keyUserActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/dynatrace:index/WebApplicationKeyUserAction:WebApplicationKeyUserAction"
                    },
                    "description": "User Action names to be flagged as Key User Actions\n",
                    "deprecationMessage": "Configuring Key User Actions within `dynatrace_web_application` is discouraged. Use the dedicated resource `dynatrace_key_user_action` instead."
                },
                "loadActionApdexSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationLoadActionApdexSettings:WebApplicationLoadActionApdexSettings",
                    "description": "Defines the Load Action Apdex settings of an application\n"
                },
                "loadActionKeyPerformanceMetric": {
                    "type": "string",
                    "description": "The key performance metric of load actions. Possible values are `ACTION_DURATION`, `CUMULATIVE_LAYOUT_SHIFT`, `DOM_INTERACTIVE`, `FIRST_INPUT_DELAY`, `LARGEST_CONTENTFUL_PAINT`, `LOAD_EVENT_END`, `LOAD_EVENT_START`, `RESPONSE_END`, `RESPONSE_START`, `SPEED_INDEX` and `VISUALLY_COMPLETE`\n"
                },
                "metaDataCaptureSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMetaDataCaptureSettings:WebApplicationMetaDataCaptureSettings",
                    "description": "Java script agent meta data capture settings\n"
                },
                "monitoringSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettings:WebApplicationMonitoringSettings",
                    "description": "Real user monitoring settings\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the conversion goal. Valid length within 1 and 50 characters.\n"
                },
                "realUserMonitoringEnabled": {
                    "type": "boolean",
                    "description": "(Field has overlap with `dynatrace.WebAppEnablement`) Real user monitoring enabled/disabled\n"
                },
                "sessionReplayConfig": {
                    "$ref": "#/types/dynatrace:index/WebApplicationSessionReplayConfig:WebApplicationSessionReplayConfig",
                    "description": "Settings regarding Session Replay\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the action. Possible values are `Custom`, `Load` and `Xhr`.\n"
                },
                "urlInjectionPattern": {
                    "type": "string",
                    "description": "URL injection pattern for manual web application\n"
                },
                "userActionAndSessionProperties": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserActionAndSessionProperties:WebApplicationUserActionAndSessionProperties",
                    "description": "User action and session properties settings\n"
                },
                "userActionNamingSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettings:WebApplicationUserActionNamingSettings",
                    "description": "The settings of user action naming\n"
                },
                "userTags": {
                    "$ref": "#/types/dynatrace:index/WebApplicationUserTags:WebApplicationUserTags",
                    "description": "User tags settings\n"
                },
                "waterfallSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationWaterfallSettings:WebApplicationWaterfallSettings",
                    "description": "These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources\n"
                },
                "xhrActionApdexSettings": {
                    "$ref": "#/types/dynatrace:index/WebApplicationXhrActionApdexSettings:WebApplicationXhrActionApdexSettings",
                    "description": "Defines the XHR Action Apdex settings of an application\n"
                },
                "xhrActionKeyPerformanceMetric": {
                    "type": "string",
                    "description": "The key performance metric of XHR actions. Possible values are `ACTION_DURATION`, `RESPONSE_END`, `RESPONSE_START` and `VISUALLY_COMPLETE`.\n"
                }
            },
            "requiredInputs": [
                "costControlUserSessionPercentage",
                "customActionApdexSettings",
                "loadActionApdexSettings",
                "loadActionKeyPerformanceMetric",
                "monitoringSettings",
                "type",
                "waterfallSettings",
                "xhrActionApdexSettings",
                "xhrActionKeyPerformanceMetric"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WebApplication resources.\n",
                "properties": {
                    "conversionGoals": {
                        "$ref": "#/types/dynatrace:index/WebApplicationConversionGoals:WebApplicationConversionGoals",
                        "description": "A list of conversion goals of the application\n"
                    },
                    "costControlUserSessionPercentage": {
                        "type": "integer",
                        "description": "(Field has overlap with `dynatrace.WebAppEnablement`) Analize *X*% of user sessions\n"
                    },
                    "customActionApdexSettings": {
                        "$ref": "#/types/dynatrace:index/WebApplicationCustomActionApdexSettings:WebApplicationCustomActionApdexSettings",
                        "description": "Defines the Custom Action Apdex settings of an application\n"
                    },
                    "keyUserActions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/WebApplicationKeyUserAction:WebApplicationKeyUserAction"
                        },
                        "description": "User Action names to be flagged as Key User Actions\n",
                        "deprecationMessage": "Configuring Key User Actions within `dynatrace_web_application` is discouraged. Use the dedicated resource `dynatrace_key_user_action` instead."
                    },
                    "loadActionApdexSettings": {
                        "$ref": "#/types/dynatrace:index/WebApplicationLoadActionApdexSettings:WebApplicationLoadActionApdexSettings",
                        "description": "Defines the Load Action Apdex settings of an application\n"
                    },
                    "loadActionKeyPerformanceMetric": {
                        "type": "string",
                        "description": "The key performance metric of load actions. Possible values are `ACTION_DURATION`, `CUMULATIVE_LAYOUT_SHIFT`, `DOM_INTERACTIVE`, `FIRST_INPUT_DELAY`, `LARGEST_CONTENTFUL_PAINT`, `LOAD_EVENT_END`, `LOAD_EVENT_START`, `RESPONSE_END`, `RESPONSE_START`, `SPEED_INDEX` and `VISUALLY_COMPLETE`\n"
                    },
                    "metaDataCaptureSettings": {
                        "$ref": "#/types/dynatrace:index/WebApplicationMetaDataCaptureSettings:WebApplicationMetaDataCaptureSettings",
                        "description": "Java script agent meta data capture settings\n"
                    },
                    "monitoringSettings": {
                        "$ref": "#/types/dynatrace:index/WebApplicationMonitoringSettings:WebApplicationMonitoringSettings",
                        "description": "Real user monitoring settings\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the conversion goal. Valid length within 1 and 50 characters.\n"
                    },
                    "realUserMonitoringEnabled": {
                        "type": "boolean",
                        "description": "(Field has overlap with `dynatrace.WebAppEnablement`) Real user monitoring enabled/disabled\n"
                    },
                    "sessionReplayConfig": {
                        "$ref": "#/types/dynatrace:index/WebApplicationSessionReplayConfig:WebApplicationSessionReplayConfig",
                        "description": "Settings regarding Session Replay\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the action. Possible values are `Custom`, `Load` and `Xhr`.\n"
                    },
                    "urlInjectionPattern": {
                        "type": "string",
                        "description": "URL injection pattern for manual web application\n"
                    },
                    "userActionAndSessionProperties": {
                        "$ref": "#/types/dynatrace:index/WebApplicationUserActionAndSessionProperties:WebApplicationUserActionAndSessionProperties",
                        "description": "User action and session properties settings\n"
                    },
                    "userActionNamingSettings": {
                        "$ref": "#/types/dynatrace:index/WebApplicationUserActionNamingSettings:WebApplicationUserActionNamingSettings",
                        "description": "The settings of user action naming\n"
                    },
                    "userTags": {
                        "$ref": "#/types/dynatrace:index/WebApplicationUserTags:WebApplicationUserTags",
                        "description": "User tags settings\n"
                    },
                    "waterfallSettings": {
                        "$ref": "#/types/dynatrace:index/WebApplicationWaterfallSettings:WebApplicationWaterfallSettings",
                        "description": "These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources\n"
                    },
                    "xhrActionApdexSettings": {
                        "$ref": "#/types/dynatrace:index/WebApplicationXhrActionApdexSettings:WebApplicationXhrActionApdexSettings",
                        "description": "Defines the XHR Action Apdex settings of an application\n"
                    },
                    "xhrActionKeyPerformanceMetric": {
                        "type": "string",
                        "description": "The key performance metric of XHR actions. Possible values are `ACTION_DURATION`, `RESPONSE_END`, `RESPONSE_START` and `VISUALLY_COMPLETE`.\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/webhookNotification:WebhookNotification": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "headers": {
                    "$ref": "#/types/dynatrace:index/WebhookNotificationHeaders:WebhookNotificationHeaders",
                    "description": "A list of the additional HTTP headers\n"
                },
                "insecure": {
                    "type": "boolean",
                    "description": "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the HTTP header\n"
                },
                "notifyClosedProblems": {
                    "type": "boolean",
                    "description": "Send email if problem is closed\n"
                },
                "notifyEventMerges": {
                    "type": "boolean",
                    "description": "Call webhook if new events merge into existing problems\n"
                },
                "oauth2Credentials": {
                    "$ref": "#/types/dynatrace:index/WebhookNotificationOauth2Credentials:WebhookNotificationOauth2Credentials",
                    "description": "To authenticate your integration, the OAuth 2.0 *Client Credentials* Flow (Grant Type) is used. For details see [Client Credentials Flow](https://dt-url.net/ym22wsm)).\n"
                },
                "payload": {
                    "type": "string",
                    "description": "The content of the notification message. You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "secretUrl": {
                    "type": "string",
                    "description": "The secret URL of the webhook endpoint.\n",
                    "secret": true
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the WebHook endpoint\n"
                },
                "urlContainsSecret": {
                    "type": "boolean",
                    "description": "Secret webhook URL\n"
                },
                "useOauth2": {
                    "type": "boolean",
                    "description": "Use OAuth 2.0 for authentication\n"
                }
            },
            "required": [
                "active",
                "legacyId",
                "name",
                "payload",
                "profile"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "headers": {
                    "$ref": "#/types/dynatrace:index/WebhookNotificationHeaders:WebhookNotificationHeaders",
                    "description": "A list of the additional HTTP headers\n"
                },
                "insecure": {
                    "type": "boolean",
                    "description": "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the HTTP header\n"
                },
                "notifyClosedProblems": {
                    "type": "boolean",
                    "description": "Send email if problem is closed\n"
                },
                "notifyEventMerges": {
                    "type": "boolean",
                    "description": "Call webhook if new events merge into existing problems\n"
                },
                "oauth2Credentials": {
                    "$ref": "#/types/dynatrace:index/WebhookNotificationOauth2Credentials:WebhookNotificationOauth2Credentials",
                    "description": "To authenticate your integration, the OAuth 2.0 *Client Credentials* Flow (Grant Type) is used. For details see [Client Credentials Flow](https://dt-url.net/ym22wsm)).\n"
                },
                "payload": {
                    "type": "string",
                    "description": "The content of the notification message. You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "secretUrl": {
                    "type": "string",
                    "description": "The secret URL of the webhook endpoint.\n",
                    "secret": true
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the WebHook endpoint\n"
                },
                "urlContainsSecret": {
                    "type": "boolean",
                    "description": "Secret webhook URL\n"
                },
                "useOauth2": {
                    "type": "boolean",
                    "description": "Use OAuth 2.0 for authentication\n"
                }
            },
            "requiredInputs": [
                "active",
                "payload",
                "profile"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WebhookNotification resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                    },
                    "headers": {
                        "$ref": "#/types/dynatrace:index/WebhookNotificationHeaders:WebhookNotificationHeaders",
                        "description": "A list of the additional HTTP headers\n"
                    },
                    "insecure": {
                        "type": "boolean",
                        "description": "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates\n"
                    },
                    "legacyId": {
                        "type": "string",
                        "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the HTTP header\n"
                    },
                    "notifyClosedProblems": {
                        "type": "boolean",
                        "description": "Send email if problem is closed\n"
                    },
                    "notifyEventMerges": {
                        "type": "boolean",
                        "description": "Call webhook if new events merge into existing problems\n"
                    },
                    "oauth2Credentials": {
                        "$ref": "#/types/dynatrace:index/WebhookNotificationOauth2Credentials:WebhookNotificationOauth2Credentials",
                        "description": "To authenticate your integration, the OAuth 2.0 *Client Credentials* Flow (Grant Type) is used. For details see [Client Credentials Flow](https://dt-url.net/ym22wsm)).\n"
                    },
                    "payload": {
                        "type": "string",
                        "description": "The content of the notification message. You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "The ID of the associated alerting profile\n"
                    },
                    "secretUrl": {
                        "type": "string",
                        "description": "The secret URL of the webhook endpoint.\n",
                        "secret": true
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the WebHook endpoint\n"
                    },
                    "urlContainsSecret": {
                        "type": "boolean",
                        "description": "Secret webhook URL\n"
                    },
                    "useOauth2": {
                        "type": "boolean",
                        "description": "Use OAuth 2.0 for authentication\n"
                    }
                },
                "type": "object"
            }
        },
        "dynatrace:index/xmattersNotification:XmattersNotification": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "headers": {
                    "$ref": "#/types/dynatrace:index/XmattersNotificationHeaders:XmattersNotificationHeaders",
                    "description": "A list of the additional HTTP headers\n"
                },
                "insecure": {
                    "type": "boolean",
                    "description": "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the HTTP header\n"
                },
                "payload": {
                    "type": "string",
                    "description": "The content of the notification message. You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the WebHook endpoint\n"
                }
            },
            "required": [
                "active",
                "legacyId",
                "name",
                "payload",
                "profile",
                "url"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                },
                "headers": {
                    "$ref": "#/types/dynatrace:index/XmattersNotificationHeaders:XmattersNotificationHeaders",
                    "description": "A list of the additional HTTP headers\n"
                },
                "insecure": {
                    "type": "boolean",
                    "description": "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates\n"
                },
                "legacyId": {
                    "type": "string",
                    "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the HTTP header\n"
                },
                "payload": {
                    "type": "string",
                    "description": "The content of the notification message. You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                },
                "profile": {
                    "type": "string",
                    "description": "The ID of the associated alerting profile\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the WebHook endpoint\n"
                }
            },
            "requiredInputs": [
                "active",
                "payload",
                "profile",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering XmattersNotification resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "The configuration is enabled (`true`) or disabled (`false`)\n"
                    },
                    "headers": {
                        "$ref": "#/types/dynatrace:index/XmattersNotificationHeaders:XmattersNotificationHeaders",
                        "description": "A list of the additional HTTP headers\n"
                    },
                    "insecure": {
                        "type": "boolean",
                        "description": "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates\n"
                    },
                    "legacyId": {
                        "type": "string",
                        "description": "The ID of these settings when referred to from resources requiring the REST API V1 keys\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the HTTP header\n"
                    },
                    "payload": {
                        "type": "string",
                        "description": "The content of the notification message. You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "The ID of the associated alerting profile\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the WebHook endpoint\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "dynatrace:index/getAlertingProfile:getAlertingProfile": {
            "description": "The Alerting Profile queries for an Alerting Profile that has a specified name. In case multiple Alerting Profiles share the same name the first one found will be used.\nThe ID of this Data Resource aligns with the IDs used by the Dynatrace Settings 2.0 API.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst default = dynatrace.getAlertingProfile({\n    name: \"Default\",\n});\nconst myWebhookNotification = new dynatrace.WebhookNotification(\"myWebhookNotification\", {\n    active: false,\n    profile: _default.then(_default =\u003e _default.id),\n    url: \"https://webhook.site/40bf4d43-1a50-4ebd-913d-bf50ce7c3a1e\",\n    insecure: true,\n    notifyEventMerges: true,\n    notifyClosedProblems: true,\n    payload: \"web-hook-payload\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\nimport pulumi_dynatrace as dynatrace\n\ndefault = dynatrace.get_alerting_profile(name=\"Default\")\nmy_webhook_notification = dynatrace.WebhookNotification(\"myWebhookNotification\",\n    active=False,\n    profile=default.id,\n    url=\"https://webhook.site/40bf4d43-1a50-4ebd-913d-bf50ce7c3a1e\",\n    insecure=True,\n    notify_event_merges=True,\n    notify_closed_problems=True,\n    payload=\"web-hook-payload\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var @default = Dynatrace.GetAlertingProfile.Invoke(new()\n    {\n        Name = \"Default\",\n    });\n\n    var myWebhookNotification = new Dynatrace.WebhookNotification(\"myWebhookNotification\", new()\n    {\n        Active = false,\n        Profile = @default.Apply(@default =\u003e @default.Apply(getAlertingProfileResult =\u003e getAlertingProfileResult.Id)),\n        Url = \"https://webhook.site/40bf4d43-1a50-4ebd-913d-bf50ce7c3a1e\",\n        Insecure = true,\n        NotifyEventMerges = true,\n        NotifyClosedProblems = true,\n        Payload = \"web-hook-payload\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_default, err := dynatrace.LookupAlertingProfile(ctx, \u0026dynatrace.LookupAlertingProfileArgs{\n\t\t\tName: \"Default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dynatrace.NewWebhookNotification(ctx, \"myWebhookNotification\", \u0026dynatrace.WebhookNotificationArgs{\n\t\t\tActive:               pulumi.Bool(false),\n\t\t\tProfile:              *pulumi.String(_default.Id),\n\t\t\tUrl:                  pulumi.String(\"https://webhook.site/40bf4d43-1a50-4ebd-913d-bf50ce7c3a1e\"),\n\t\t\tInsecure:             pulumi.Bool(true),\n\t\t\tNotifyEventMerges:    pulumi.Bool(true),\n\t\t\tNotifyClosedProblems: pulumi.Bool(true),\n\t\t\tPayload:              pulumi.String(\"web-hook-payload\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetAlertingProfileArgs;\nimport com.pulumi.dynatrace.WebhookNotification;\nimport com.pulumi.dynatrace.WebhookNotificationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var default = DynatraceFunctions.getAlertingProfile(GetAlertingProfileArgs.builder()\n            .name(\"Default\")\n            .build());\n\n        var myWebhookNotification = new WebhookNotification(\"myWebhookNotification\", WebhookNotificationArgs.builder()        \n            .active(false)\n            .profile(default_.id())\n            .url(\"https://webhook.site/40bf4d43-1a50-4ebd-913d-bf50ce7c3a1e\")\n            .insecure(true)\n            .notifyEventMerges(true)\n            .notifyClosedProblems(true)\n            .payload(\"web-hook-payload\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myWebhookNotification:\n    type: dynatrace:WebhookNotification\n    properties:\n      active: false\n      profile: ${default.id}\n      url: https://webhook.site/40bf4d43-1a50-4ebd-913d-bf50ce7c3a1e\n      insecure: true\n      notifyEventMerges: true\n      notifyClosedProblems: true\n      payload: web-hook-payload\nvariables:\n  default:\n    fn::invoke:\n      Function: dynatrace:getAlertingProfile\n      Arguments:\n        name: Default\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAlertingProfile.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAlertingProfile.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "legacyId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "legacyId",
                    "name",
                    "id"
                ]
            }
        },
        "dynatrace:index/getAlertingProfiles:getAlertingProfiles": {
            "description": "The alerting profiles data source allows retrieval of all alerting profiles.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAlertingProfiles.\n",
                "properties": {
                    "profiles": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAlertingProfiles.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "profiles": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/getAlertingProfilesValue:getAlertingProfilesValue"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "values",
                    "id"
                ]
            }
        },
        "dynatrace:index/getApplication:getApplication": {
            "description": "The application data source allows the application ID to be retrieved by its name.\n\n- `name` queries for all applications with the specified name\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst test = dynatrace.getApplication({\n    name: \"Example\",\n});\nconst _name_ = new dynatrace.ApplicationDetectionRule(\"#name#\", {\n    applicationIdentifier: test.then(test =\u003e test.id),\n    filterConfig: {\n        applicationMatchTarget: \"DOMAIN\",\n        applicationMatchType: \"MATCHES\",\n        pattern: \"www.google.com\",\n    },\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\nimport pulumi_dynatrace as dynatrace\n\ntest = dynatrace.get_application(name=\"Example\")\n_name_ = dynatrace.ApplicationDetectionRule(\"#name#\",\n    application_identifier=test.id,\n    filter_config=dynatrace.ApplicationDetectionRuleFilterConfigArgs(\n        application_match_target=\"DOMAIN\",\n        application_match_type=\"MATCHES\",\n        pattern=\"www.google.com\",\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Dynatrace.GetApplication.Invoke(new()\n    {\n        Name = \"Example\",\n    });\n\n    var _name_ = new Dynatrace.ApplicationDetectionRule(\"#name#\", new()\n    {\n        ApplicationIdentifier = test.Apply(getApplicationResult =\u003e getApplicationResult.Id),\n        FilterConfig = new Dynatrace.Inputs.ApplicationDetectionRuleFilterConfigArgs\n        {\n            ApplicationMatchTarget = \"DOMAIN\",\n            ApplicationMatchType = \"MATCHES\",\n            Pattern = \"www.google.com\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := dynatrace.GetApplication(ctx, \u0026dynatrace.GetApplicationArgs{\n\t\t\tName: \"Example\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dynatrace.NewApplicationDetectionRule(ctx, \"#name#\", \u0026dynatrace.ApplicationDetectionRuleArgs{\n\t\t\tApplicationIdentifier: *pulumi.String(test.Id),\n\t\t\tFilterConfig: \u0026dynatrace.ApplicationDetectionRuleFilterConfigArgs{\n\t\t\t\tApplicationMatchTarget: pulumi.String(\"DOMAIN\"),\n\t\t\t\tApplicationMatchType:   pulumi.String(\"MATCHES\"),\n\t\t\t\tPattern:                pulumi.String(\"www.google.com\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetApplicationArgs;\nimport com.pulumi.dynatrace.ApplicationDetectionRule;\nimport com.pulumi.dynatrace.ApplicationDetectionRuleArgs;\nimport com.pulumi.dynatrace.inputs.ApplicationDetectionRuleFilterConfigArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DynatraceFunctions.getApplication(GetApplicationArgs.builder()\n            .name(\"Example\")\n            .build());\n\n        var _name_ = new ApplicationDetectionRule(\"#name#\", ApplicationDetectionRuleArgs.builder()        \n            .applicationIdentifier(test.applyValue(getApplicationResult -\u003e getApplicationResult.id()))\n            .filterConfig(ApplicationDetectionRuleFilterConfigArgs.builder()\n                .applicationMatchTarget(\"DOMAIN\")\n                .applicationMatchType(\"MATCHES\")\n                .pattern(\"www.google.com\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  '#name#':\n    type: dynatrace:ApplicationDetectionRule\n    properties:\n      applicationIdentifier: ${test.id}\n      filterConfig:\n        applicationMatchTarget: DOMAIN\n        applicationMatchType: MATCHES\n        pattern: www.google.com\nvariables:\n  test:\n    fn::invoke:\n      Function: dynatrace:getApplication\n      Arguments:\n        name: Example\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getApplication.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApplication.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "dynatrace:index/getAttackAlerting:getAttackAlerting": {
            "description": "The `dynatrace.AttackAlerting` data source allows the attack alerting profile ID to be retrieved by its name.\n\n- `name` (String) - The name of the attack alerting profile\n\nIf multiple services match the given criteria, the first result will be retrieved.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst example = dynatrace.getAttackAlerting({\n    name: \"Terraform Example\",\n});\nexport const id = example.then(example =\u003e example.id);\n```\n```python\nimport pulumi\nimport pulumi_dynatrace as dynatrace\n\nexample = dynatrace.get_attack_alerting(name=\"Terraform Example\")\npulumi.export(\"id\", example.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Dynatrace.GetAttackAlerting.Invoke(new()\n    {\n        Name = \"Terraform Example\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"id\"] = example.Apply(getAttackAlertingResult =\u003e getAttackAlertingResult.Id),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texample, err := dynatrace.LookupAttackAlerting(ctx, \u0026dynatrace.LookupAttackAlertingArgs{\n\t\t\tName: \"Terraform Example\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"id\", example.Id)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetAttackAlertingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = DynatraceFunctions.getAttackAlerting(GetAttackAlertingArgs.builder()\n            .name(\"Terraform Example\")\n            .build());\n\n        ctx.export(\"id\", example.applyValue(getAttackAlertingResult -\u003e getAttackAlertingResult.id()));\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: dynatrace:getAttackAlerting\n      Arguments:\n        name: Terraform Example\noutputs:\n  id: ${example.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAttackAlerting.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAttackAlerting.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "dynatrace:index/getAwsCredentials:getAwsCredentials": {
            "description": "The `dynatrace.AwsCredentials` data source allows the AWS credential ID to be retrieved by its label.\n\n- `label` (String) - The label/name of the AWS credential\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetAwsCredentialsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = DynatraceFunctions.getAwsCredentials(GetAwsCredentialsArgs.builder()\n            .name(\"Terraform Example\")\n            .build());\n\n        ctx.export(\"id\", example.applyValue(getAwsCredentialsResult -\u003e getAwsCredentialsResult.id()));\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: dynatrace:getAwsCredentials\n      Arguments:\n        name: Terraform Example\noutputs:\n  id: ${example.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAwsCredentials.\n",
                "properties": {
                    "label": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "label"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAwsCredentials.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "label": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "label",
                    "id"
                ]
            }
        },
        "dynatrace:index/getAwsIamExternal:getAwsIamExternal": {
            "description": "The AWS IAM external data source allows the AWS IAM external ID to be retrieved.\n",
            "outputs": {
                "description": "A collection of values returned by getAwsIamExternal.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            }
        },
        "dynatrace:index/getAwsSupportedServices:getAwsSupportedServices": {
            "description": "The AWS supported service data source queries for a full list of all supported services.\n\n{{% examples %}}\n## Example Usage\n\nFor an example of this data source, please refer to the Resource Example Usage of the dynatrace.AwsService resource.\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAwsSupportedServices.\n",
                "properties": {
                    "excepts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Services with the given names won't be included in the results\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAwsSupportedServices.\n",
                "properties": {
                    "excepts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Services with the given names won't be included in the results\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "services": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "boolean"
                        },
                        "description": "The keys are the names of the supported services. The values provide information whether that service is built in or not.\n"
                    }
                },
                "type": "object",
                "required": [
                    "services",
                    "id"
                ]
            }
        },
        "dynatrace:index/getAzureCredentials:getAzureCredentials": {
            "description": "The `dynatrace.AzureCredentials` data source allows the Azure credential ID to be retrieved by its label.\n\n- `label` (String) - The label/name of the Azure credential\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetAzureCredentialsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = DynatraceFunctions.getAzureCredentials(GetAzureCredentialsArgs.builder()\n            .name(\"Terraform Example\")\n            .build());\n\n        ctx.export(\"id\", example.applyValue(getAzureCredentialsResult -\u003e getAzureCredentialsResult.id()));\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: dynatrace:getAzureCredentials\n      Arguments:\n        name: Terraform Example\noutputs:\n  id: ${example.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAzureCredentials.\n",
                "properties": {
                    "label": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "label"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAzureCredentials.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "label": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "label",
                    "id"
                ]
            }
        },
        "dynatrace:index/getAzureSupportedServices:getAzureSupportedServices": {
            "description": "The Azure supported service data source queries for a full list of all supported services.\n\n{{% examples %}}\n## Example Usage\n\nFor an example of this data source, please refer to the Resource Example Usage of the dynatrace.AzureService resource.\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAzureSupportedServices.\n",
                "properties": {
                    "excepts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Services with the given names won't be included in the results\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAzureSupportedServices.\n",
                "properties": {
                    "excepts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Services with the given names won't be included in the results\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "services": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "boolean"
                        },
                        "description": "The keys are the names of the supported services. The values provide information whether that service is built in or not.\n"
                    }
                },
                "type": "object",
                "required": [
                    "services",
                    "id"
                ]
            }
        },
        "dynatrace:index/getCalculatedServiceMetric:getCalculatedServiceMetric": {
            "description": "The calculated service metric data source allows the metric ID to be retrieved by its name.\n\n- `name` (String) - The name of the calculated service metric\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst example = dynatrace.getCalculatedServiceMetric({\n    name: \"Terraform Example\",\n});\nexport const groups = example.then(example =\u003e example.id);\n```\n```python\nimport pulumi\nimport pulumi_dynatrace as dynatrace\n\nexample = dynatrace.get_calculated_service_metric(name=\"Terraform Example\")\npulumi.export(\"groups\", example.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Dynatrace.GetCalculatedServiceMetric.Invoke(new()\n    {\n        Name = \"Terraform Example\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"groups\"] = example.Apply(getCalculatedServiceMetricResult =\u003e getCalculatedServiceMetricResult.Id),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texample, err := dynatrace.LookupCalculatedServiceMetric(ctx, \u0026dynatrace.LookupCalculatedServiceMetricArgs{\n\t\t\tName: \"Terraform Example\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"groups\", example.Id)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetCalculatedServiceMetricArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = DynatraceFunctions.getCalculatedServiceMetric(GetCalculatedServiceMetricArgs.builder()\n            .name(\"Terraform Example\")\n            .build());\n\n        ctx.export(\"groups\", example.applyValue(getCalculatedServiceMetricResult -\u003e getCalculatedServiceMetricResult.id()));\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: dynatrace:getCalculatedServiceMetric\n      Arguments:\n        name: Terraform Example\noutputs:\n  groups: ${example.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCalculatedServiceMetric.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCalculatedServiceMetric.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "dynatrace:index/getCredentials:getCredentials": {
            "description": "The `dynatrace.Credentials` data source queries for Credentials stored within the Credentials Vault using the properties `name`, `scope` and `type`. At least one of `name`, `scope` or `type` needs to be specified as a non empty value. Combinations of the three properties are also possible.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst creds = dynatrace.getCredentials({\n    name: \"Office365 Access Token\",\n});\nconst _name_ = new dynatrace.HttpMonitor(\"#name#\", {\n    enabled: true,\n    frequency: 60,\n    locations: [\"SYNTHETIC_LOCATION-781752216580B1BC\"],\n    anomalyDetections: [{\n        loadingTimeThresholds: [{\n            enabled: true,\n        }],\n        outageHandlings: [{\n            globalOutage: true,\n            localOutage: false,\n            retryOnError: false,\n        }],\n    }],\n    script: {\n        requests: [{\n            description: \"google.com\",\n            method: \"GET\",\n            url: \"https://www.google.com\",\n            authentication: {\n                type: \"BASIC_AUTHENTICATION\",\n                credentials: creds.then(creds =\u003e creds.id),\n            },\n            configuration: {\n                acceptAnyCertificate: true,\n                followRedirects: true,\n            },\n            validation: {\n                rules: [{\n                    type: \"httpStatusesList\",\n                    passIfFound: false,\n                    value: \"\u003e=400\",\n                }],\n            },\n        }],\n    },\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\nimport pulumi_dynatrace as dynatrace\n\ncreds = dynatrace.get_credentials(name=\"Office365 Access Token\")\n_name_ = dynatrace.HttpMonitor(\"#name#\",\n    enabled=True,\n    frequency=60,\n    locations=[\"SYNTHETIC_LOCATION-781752216580B1BC\"],\n    anomaly_detections=[dynatrace.HttpMonitorAnomalyDetectionArgs(\n        loading_time_thresholds=[dynatrace.HttpMonitorAnomalyDetectionLoadingTimeThresholdArgs(\n            enabled=True,\n        )],\n        outage_handlings=[dynatrace.HttpMonitorAnomalyDetectionOutageHandlingArgs(\n            global_outage=True,\n            local_outage=False,\n            retry_on_error=False,\n        )],\n    )],\n    script=dynatrace.HttpMonitorScriptArgs(\n        requests=[dynatrace.HttpMonitorScriptRequestArgs(\n            description=\"google.com\",\n            method=\"GET\",\n            url=\"https://www.google.com\",\n            authentication=dynatrace.HttpMonitorScriptRequestAuthenticationArgs(\n                type=\"BASIC_AUTHENTICATION\",\n                credentials=creds.id,\n            ),\n            configuration=dynatrace.HttpMonitorScriptRequestConfigurationArgs(\n                accept_any_certificate=True,\n                follow_redirects=True,\n            ),\n            validation=dynatrace.HttpMonitorScriptRequestValidationArgs(\n                rules=[dynatrace.HttpMonitorScriptRequestValidationRuleArgs(\n                    type=\"httpStatusesList\",\n                    pass_if_found=False,\n                    value=\"\u003e=400\",\n                )],\n            ),\n        )],\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var creds = Dynatrace.GetCredentials.Invoke(new()\n    {\n        Name = \"Office365 Access Token\",\n    });\n\n    var _name_ = new Dynatrace.HttpMonitor(\"#name#\", new()\n    {\n        Enabled = true,\n        Frequency = 60,\n        Locations = new[]\n        {\n            \"SYNTHETIC_LOCATION-781752216580B1BC\",\n        },\n        AnomalyDetections = new[]\n        {\n            new Dynatrace.Inputs.HttpMonitorAnomalyDetectionArgs\n            {\n                LoadingTimeThresholds = new[]\n                {\n                    new Dynatrace.Inputs.HttpMonitorAnomalyDetectionLoadingTimeThresholdArgs\n                    {\n                        Enabled = true,\n                    },\n                },\n                OutageHandlings = new[]\n                {\n                    new Dynatrace.Inputs.HttpMonitorAnomalyDetectionOutageHandlingArgs\n                    {\n                        GlobalOutage = true,\n                        LocalOutage = false,\n                        RetryOnError = false,\n                    },\n                },\n            },\n        },\n        Script = new Dynatrace.Inputs.HttpMonitorScriptArgs\n        {\n            Requests = new[]\n            {\n                new Dynatrace.Inputs.HttpMonitorScriptRequestArgs\n                {\n                    Description = \"google.com\",\n                    Method = \"GET\",\n                    Url = \"https://www.google.com\",\n                    Authentication = new Dynatrace.Inputs.HttpMonitorScriptRequestAuthenticationArgs\n                    {\n                        Type = \"BASIC_AUTHENTICATION\",\n                        Credentials = creds.Apply(getCredentialsResult =\u003e getCredentialsResult.Id),\n                    },\n                    Configuration = new Dynatrace.Inputs.HttpMonitorScriptRequestConfigurationArgs\n                    {\n                        AcceptAnyCertificate = true,\n                        FollowRedirects = true,\n                    },\n                    Validation = new Dynatrace.Inputs.HttpMonitorScriptRequestValidationArgs\n                    {\n                        Rules = new[]\n                        {\n                            new Dynatrace.Inputs.HttpMonitorScriptRequestValidationRuleArgs\n                            {\n                                Type = \"httpStatusesList\",\n                                PassIfFound = false,\n                                Value = \"\u003e=400\",\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tcreds, err := dynatrace.LookupCredentials(ctx, \u0026dynatrace.LookupCredentialsArgs{\n\t\t\tName: pulumi.StringRef(\"Office365 Access Token\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dynatrace.NewHttpMonitor(ctx, \"#name#\", \u0026dynatrace.HttpMonitorArgs{\n\t\t\tEnabled:   pulumi.Bool(true),\n\t\t\tFrequency: pulumi.Int(60),\n\t\t\tLocations: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"SYNTHETIC_LOCATION-781752216580B1BC\"),\n\t\t\t},\n\t\t\tAnomalyDetections: dynatrace.HttpMonitorAnomalyDetectionArray{\n\t\t\t\t\u0026dynatrace.HttpMonitorAnomalyDetectionArgs{\n\t\t\t\t\tLoadingTimeThresholds: dynatrace.HttpMonitorAnomalyDetectionLoadingTimeThresholdArray{\n\t\t\t\t\t\t\u0026dynatrace.HttpMonitorAnomalyDetectionLoadingTimeThresholdArgs{\n\t\t\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tOutageHandlings: dynatrace.HttpMonitorAnomalyDetectionOutageHandlingArray{\n\t\t\t\t\t\t\u0026dynatrace.HttpMonitorAnomalyDetectionOutageHandlingArgs{\n\t\t\t\t\t\t\tGlobalOutage: pulumi.Bool(true),\n\t\t\t\t\t\t\tLocalOutage:  pulumi.Bool(false),\n\t\t\t\t\t\t\tRetryOnError: pulumi.Bool(false),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tScript: \u0026dynatrace.HttpMonitorScriptTypeArgs{\n\t\t\t\tRequests: dynatrace.HttpMonitorScriptRequestArray{\n\t\t\t\t\t\u0026dynatrace.HttpMonitorScriptRequestArgs{\n\t\t\t\t\t\tDescription: pulumi.String(\"google.com\"),\n\t\t\t\t\t\tMethod:      pulumi.String(\"GET\"),\n\t\t\t\t\t\tUrl:         pulumi.String(\"https://www.google.com\"),\n\t\t\t\t\t\tAuthentication: \u0026dynatrace.HttpMonitorScriptRequestAuthenticationArgs{\n\t\t\t\t\t\t\tType:        pulumi.String(\"BASIC_AUTHENTICATION\"),\n\t\t\t\t\t\t\tCredentials: *pulumi.String(creds.Id),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tConfiguration: \u0026dynatrace.HttpMonitorScriptRequestConfigurationArgs{\n\t\t\t\t\t\t\tAcceptAnyCertificate: pulumi.Bool(true),\n\t\t\t\t\t\t\tFollowRedirects:      pulumi.Bool(true),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tValidation: \u0026dynatrace.HttpMonitorScriptRequestValidationArgs{\n\t\t\t\t\t\t\tRules: dynatrace.HttpMonitorScriptRequestValidationRuleArray{\n\t\t\t\t\t\t\t\t\u0026dynatrace.HttpMonitorScriptRequestValidationRuleArgs{\n\t\t\t\t\t\t\t\t\tType:        pulumi.String(\"httpStatusesList\"),\n\t\t\t\t\t\t\t\t\tPassIfFound: pulumi.Bool(false),\n\t\t\t\t\t\t\t\t\tValue:       pulumi.String(\"\u003e=400\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetCredentialsArgs;\nimport com.pulumi.dynatrace.HttpMonitor;\nimport com.pulumi.dynatrace.HttpMonitorArgs;\nimport com.pulumi.dynatrace.inputs.HttpMonitorAnomalyDetectionArgs;\nimport com.pulumi.dynatrace.inputs.HttpMonitorScriptArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var creds = DynatraceFunctions.getCredentials(GetCredentialsArgs.builder()\n            .name(\"Office365 Access Token\")\n            .build());\n\n        var _name_ = new HttpMonitor(\"#name#\", HttpMonitorArgs.builder()        \n            .enabled(true)\n            .frequency(60)\n            .locations(\"SYNTHETIC_LOCATION-781752216580B1BC\")\n            .anomalyDetections(HttpMonitorAnomalyDetectionArgs.builder()\n                .loadingTimeThresholds(HttpMonitorAnomalyDetectionLoadingTimeThresholdArgs.builder()\n                    .enabled(true)\n                    .build())\n                .outageHandlings(HttpMonitorAnomalyDetectionOutageHandlingArgs.builder()\n                    .globalOutage(true)\n                    .localOutage(false)\n                    .retryOnError(false)\n                    .build())\n                .build())\n            .script(HttpMonitorScriptArgs.builder()\n                .requests(HttpMonitorScriptRequestArgs.builder()\n                    .description(\"google.com\")\n                    .method(\"GET\")\n                    .url(\"https://www.google.com\")\n                    .authentication(HttpMonitorScriptRequestAuthenticationArgs.builder()\n                        .type(\"BASIC_AUTHENTICATION\")\n                        .credentials(creds.applyValue(getCredentialsResult -\u003e getCredentialsResult.id()))\n                        .build())\n                    .configuration(HttpMonitorScriptRequestConfigurationArgs.builder()\n                        .acceptAnyCertificate(true)\n                        .followRedirects(true)\n                        .build())\n                    .validation(HttpMonitorScriptRequestValidationArgs.builder()\n                        .rules(HttpMonitorScriptRequestValidationRuleArgs.builder()\n                            .type(\"httpStatusesList\")\n                            .passIfFound(false)\n                            .value(\"\u003e=400\")\n                            .build())\n                        .build())\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  '#name#':\n    type: dynatrace:HttpMonitor\n    properties:\n      enabled: true\n      frequency: 60\n      locations:\n        - SYNTHETIC_LOCATION-781752216580B1BC\n      anomalyDetections:\n        - loadingTimeThresholds:\n            - enabled: true\n          outageHandlings:\n            - globalOutage: true\n              localOutage: false\n              retryOnError: false\n      script:\n        requests:\n          - description: google.com\n            method: GET\n            url: https://www.google.com\n            authentication:\n              type: BASIC_AUTHENTICATION\n              credentials: ${creds.id}\n            configuration:\n              acceptAnyCertificate: true\n              followRedirects: true\n            validation:\n              rules:\n                - type: httpStatusesList\n                  passIfFound: false\n                  value: '\u003e=400'\nvariables:\n  creds:\n    fn::invoke:\n      Function: dynatrace:getCredentials\n      Arguments:\n        name: Office365 Access Token\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCredentials.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the credential as shown within the Dynatrace WebUI. If not specified all names will match\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of the credential. Possible values are `ALL`, `EXTENSION` and `SYNTHETIC`. If not specified all scopes will match.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the credential. Possible values are `CERTIFICATE`, `PUBLIC_CERTIFICATE`, `TOKEN`, `USERNAME_PASSWORD` and `UNKNOWN`. If not specified all credential types will match\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCredentials.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the credential as shown within the Dynatrace WebUI. If not specified all names will match\n"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The scope of the credential. Possible values are `ALL`, `EXTENSION` and `SYNTHETIC`. If not specified all scopes will match.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the credential. Possible values are `CERTIFICATE`, `PUBLIC_CERTIFICATE`, `TOKEN`, `USERNAME_PASSWORD` and `UNKNOWN`. If not specified all credential types will match\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            }
        },
        "dynatrace:index/getDashboard:getDashboard": {
            "description": "The `dynatrace.Dashboard` data source allows the dashboard ID to be retrieved by its name and owner.\n\n- `name` (String) - The name of the dashboard\n- `owner` (String) - The owner of the dashboard\n\nIf multiple services match the given criteria, the first result will be retrieved.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst example = dynatrace.getDashboard({\n    name: \"Terraform\",\n    owner: \"Hashicorp\",\n});\nexport const id = example.then(example =\u003e example.id);\n```\n```python\nimport pulumi\nimport pulumi_dynatrace as dynatrace\n\nexample = dynatrace.get_dashboard(name=\"Terraform\",\n    owner=\"Hashicorp\")\npulumi.export(\"id\", example.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Dynatrace.GetDashboard.Invoke(new()\n    {\n        Name = \"Terraform\",\n        Owner = \"Hashicorp\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"id\"] = example.Apply(getDashboardResult =\u003e getDashboardResult.Id),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texample, err := dynatrace.LookupDashboard(ctx, \u0026dynatrace.LookupDashboardArgs{\n\t\t\tName:  \"Terraform\",\n\t\t\tOwner: \"Hashicorp\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"id\", example.Id)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetDashboardArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = DynatraceFunctions.getDashboard(GetDashboardArgs.builder()\n            .name(\"Terraform\")\n            .owner(\"Hashicorp\")\n            .build());\n\n        ctx.export(\"id\", example.applyValue(getDashboardResult -\u003e getDashboardResult.id()));\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: dynatrace:getDashboard\n      Arguments:\n        name: Terraform\n        owner: Hashicorp\noutputs:\n  id: ${example.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDashboard.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "owner"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDashboard.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "owner",
                    "id"
                ]
            }
        },
        "dynatrace:index/getDocuments:getDocuments": {
            "description": "Retrieve a list of all documents.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDocuments.\n",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDocuments.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of documents to query for. Leave empty if you want to query for all kinds of documents. Possible values are `document` or `notebook`\n"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/getDocumentsValue:getDocumentsValue"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "values",
                    "id"
                ]
            }
        },
        "dynatrace:index/getEntities:getEntities": {
            "description": "The entities data source allows all entities to be retrieved by its type.\n\n- `type` (String) Type of the entity, e.g. SERVICE. All available entity types can be retrieved with [/api/v2/entityTypes](https://www.dynatrace.com/support/help/dynatrace-api/environment-api/entity-v2/get-all-entity-types).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst test = dynatrace.getEntities({\n    type: \"SERVICE\",\n});\nexport const serviceList = test.then(test =\u003e test.entities);\n```\n```python\nimport pulumi\nimport pulumi_dynatrace as dynatrace\n\ntest = dynatrace.get_entities(type=\"SERVICE\")\npulumi.export(\"serviceList\", test.entities)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Dynatrace.GetEntities.Invoke(new()\n    {\n        Type = \"SERVICE\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"serviceList\"] = test.Apply(getEntitiesResult =\u003e getEntitiesResult.Entities),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := dynatrace.GetEntities(ctx, \u0026dynatrace.GetEntitiesArgs{\n\t\t\tType: pulumi.StringRef(\"SERVICE\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"serviceList\", test.Entities)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetEntitiesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DynatraceFunctions.getEntities(GetEntitiesArgs.builder()\n            .type(\"SERVICE\")\n            .build());\n\n        ctx.export(\"serviceList\", test.applyValue(getEntitiesResult -\u003e getEntitiesResult.entities()));\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: dynatrace:getEntities\n      Arguments:\n        type: SERVICE\noutputs:\n  serviceList: ${test.entities}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getEntities.\n",
                "properties": {
                    "entitySelector": {
                        "type": "string"
                    },
                    "from": {
                        "type": "string"
                    },
                    "to": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getEntities.\n",
                "properties": {
                    "entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/getEntitiesEntity:getEntitiesEntity"
                        }
                    },
                    "entitySelector": {
                        "type": "string"
                    },
                    "from": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "to": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "entities",
                    "id"
                ]
            }
        },
        "dynatrace:index/getEntity:getEntity": {
            "description": "The entity data source allows the entity ID to be retrieved by its name and type.\n\n- `name` (String) Display name of the entity\n- `type` (String) Type of the entity, e.g. SERVICE. All available entity types can be retrieved with [/api/v2/entityTypes](https://www.dynatrace.com/support/help/dynatrace-api/environment-api/entity-v2/get-all-entity-types).\n\nIf multiple services match the given criteria, the first result will be retrieved.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst test = dynatrace.getEntity({\n    type: \"SERVICE\",\n    name: \"BookingService\",\n});\nexport const id = test.then(test =\u003e test.id);\n```\n```python\nimport pulumi\nimport pulumi_dynatrace as dynatrace\n\ntest = dynatrace.get_entity(type=\"SERVICE\",\n    name=\"BookingService\")\npulumi.export(\"id\", test.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Dynatrace.GetEntity.Invoke(new()\n    {\n        Type = \"SERVICE\",\n        Name = \"BookingService\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"id\"] = test.Apply(getEntityResult =\u003e getEntityResult.Id),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := dynatrace.GetEntity(ctx, \u0026dynatrace.GetEntityArgs{\n\t\t\tType: pulumi.StringRef(\"SERVICE\"),\n\t\t\tName: pulumi.StringRef(\"BookingService\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"id\", test.Id)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetEntityArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DynatraceFunctions.getEntity(GetEntityArgs.builder()\n            .type(\"SERVICE\")\n            .name(\"BookingService\")\n            .build());\n\n        ctx.export(\"id\", test.applyValue(getEntityResult -\u003e getEntityResult.id()));\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: dynatrace:getEntity\n      Arguments:\n        type: SERVICE\n        name: BookingService\noutputs:\n  id: ${test.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getEntity.\n",
                "properties": {
                    "entitySelector": {
                        "type": "string"
                    },
                    "from": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "to": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getEntity.\n",
                "properties": {
                    "entitySelector": {
                        "type": "string"
                    },
                    "from": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "properties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "to": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "properties",
                    "id"
                ]
            }
        },
        "dynatrace:index/getFailureDetectionParameters:getFailureDetectionParameters": {
            "description": "The `dynatrace.FailureDetectionParameters` data source allows the failure detection parameter ID to be retrieved by its name.\n\n- `name` (String) - The name of the failure detection parameter\n\nIf multiple services match the given criteria, the first result will be retrieved.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst example = dynatrace.getFailureDetectionParameters({\n    name: \"Terraform Example\",\n});\nexport const id = example.then(example =\u003e example.id);\n```\n```python\nimport pulumi\nimport pulumi_dynatrace as dynatrace\n\nexample = dynatrace.get_failure_detection_parameters(name=\"Terraform Example\")\npulumi.export(\"id\", example.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Dynatrace.GetFailureDetectionParameters.Invoke(new()\n    {\n        Name = \"Terraform Example\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"id\"] = example.Apply(getFailureDetectionParametersResult =\u003e getFailureDetectionParametersResult.Id),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texample, err := dynatrace.LookupFailureDetectionParameters(ctx, \u0026dynatrace.LookupFailureDetectionParametersArgs{\n\t\t\tName: \"Terraform Example\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"id\", example.Id)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetFailureDetectionParametersArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = DynatraceFunctions.getFailureDetectionParameters(GetFailureDetectionParametersArgs.builder()\n            .name(\"Terraform Example\")\n            .build());\n\n        ctx.export(\"id\", example.applyValue(getFailureDetectionParametersResult -\u003e getFailureDetectionParametersResult.id()));\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: dynatrace:getFailureDetectionParameters\n      Arguments:\n        name: Terraform Example\noutputs:\n  id: ${example.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFailureDetectionParameters.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFailureDetectionParameters.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "dynatrace:index/getHost:getHost": {
            "description": "!\u003e The data source API endpoint has been deprecated, please use dynatrace.getEntity with entity type `HOST` instead.\n\nThe host data source allows the host ID to be retrieved by its name and optionally tags / tag-value pairs.\n\n- `name` queries for all hosts with the specified name\n- `tags` (optional) refers to the tags that need to be present for the host (inclusive)\n\nIf multiple hosts match the given criteria, the first result will be retrieved.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst test = dynatrace.getHost({\n    name: \"Example\",\n    tags: [\n        \"TerraformKeyTest\",\n        \"TerraformKeyValueTest=TestValue\",\n    ],\n});\nconst _name_ = new dynatrace.ManagementZone(\"#name#\", {entitySelectorBasedRules: [{\n    enabled: true,\n    selector: test.then(test =\u003e `type(\"host\"),entityId(\"${test.id}\")`),\n}]});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\nimport pulumi_dynatrace as dynatrace\n\ntest = dynatrace.get_host(name=\"Example\",\n    tags=[\n        \"TerraformKeyTest\",\n        \"TerraformKeyValueTest=TestValue\",\n    ])\n_name_ = dynatrace.ManagementZone(\"#name#\", entity_selector_based_rules=[dynatrace.ManagementZoneEntitySelectorBasedRuleArgs(\n    enabled=True,\n    selector=f\"type(\\\"host\\\"),entityId(\\\"{test.id}\\\")\",\n)])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Dynatrace.GetHost.Invoke(new()\n    {\n        Name = \"Example\",\n        Tags = new[]\n        {\n            \"TerraformKeyTest\",\n            \"TerraformKeyValueTest=TestValue\",\n        },\n    });\n\n    var _name_ = new Dynatrace.ManagementZone(\"#name#\", new()\n    {\n        EntitySelectorBasedRules = new[]\n        {\n            new Dynatrace.Inputs.ManagementZoneEntitySelectorBasedRuleArgs\n            {\n                Enabled = true,\n                Selector = $\"type(\\\"host\\\"),entityId(\\\"{test.Apply(getHostResult =\u003e getHostResult.Id)}\\\")\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := dynatrace.GetHost(ctx, \u0026dynatrace.GetHostArgs{\n\t\t\tName: \"Example\",\n\t\t\tTags: []string{\n\t\t\t\t\"TerraformKeyTest\",\n\t\t\t\t\"TerraformKeyValueTest=TestValue\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dynatrace.NewManagementZone(ctx, \"#name#\", \u0026dynatrace.ManagementZoneArgs{\n\t\t\tEntitySelectorBasedRules: dynatrace.ManagementZoneEntitySelectorBasedRuleArray{\n\t\t\t\t\u0026dynatrace.ManagementZoneEntitySelectorBasedRuleArgs{\n\t\t\t\t\tEnabled:  pulumi.Bool(true),\n\t\t\t\t\tSelector: pulumi.String(fmt.Sprintf(\"type(\\\"host\\\"),entityId(\\\"%v\\\")\", test.Id)),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetHostArgs;\nimport com.pulumi.dynatrace.ManagementZone;\nimport com.pulumi.dynatrace.ManagementZoneArgs;\nimport com.pulumi.dynatrace.inputs.ManagementZoneEntitySelectorBasedRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DynatraceFunctions.getHost(GetHostArgs.builder()\n            .name(\"Example\")\n            .tags(            \n                \"TerraformKeyTest\",\n                \"TerraformKeyValueTest=TestValue\")\n            .build());\n\n        var _name_ = new ManagementZone(\"#name#\", ManagementZoneArgs.builder()        \n            .entitySelectorBasedRules(ManagementZoneEntitySelectorBasedRuleArgs.builder()\n                .enabled(true)\n                .selector(String.format(\"type(\\\"host\\\"),entityId(\\\"%s\\\")\", test.applyValue(getHostResult -\u003e getHostResult.id())))\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  '#name#':\n    type: dynatrace:ManagementZone\n    properties:\n      entitySelectorBasedRules:\n        - enabled: true\n          selector: type(\"host\"),entityId(\"${test.id}\")\nvariables:\n  test:\n    fn::invoke:\n      Function: dynatrace:getHost\n      Arguments:\n        name: Example\n        tags:\n          - TerraformKeyTest\n          - TerraformKeyValueTest=TestValue\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getHost.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required tags of the host to find\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getHost.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required tags of the host to find\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "dynatrace:index/getHubItems:getHubItems": {
            "description": "\u003e This data source requires the API token scope `hub.read`)\n\n- `type` (String) The type of hub item you are interested in. Possible values are `TECHNOLOGY`, `EXTENSION1` or `EXTENSION2`. If not specified, no restriction regarding type happens\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nexport = async () =\u003e {\n    const extension-20-items = await dynatrace.getHubItems({\n        type: \"EXTENSION2\",\n    });\n    return {\n        \"artifact-ids\": extension_20_items.artifacts,\n        \"hub-items\": extension_20_items.items,\n    };\n}\n```\n```python\nimport pulumi\nimport pulumi_dynatrace as dynatrace\n\nextension_20_items = dynatrace.get_hub_items(type=\"EXTENSION2\")\npulumi.export(\"artifact-ids\", extension_20_items.artifacts)\npulumi.export(\"hub-items\", extension_20_items.items)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var extension_20_items = Dynatrace.GetHubItems.Invoke(new()\n    {\n        Type = \"EXTENSION2\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"artifact-ids\"] = extension_20_items.Apply(extension_20_items =\u003e extension_20_items.Apply(getHubItemsResult =\u003e getHubItemsResult.Artifacts)),\n        [\"hub-items\"] = extension_20_items.Apply(extension_20_items =\u003e extension_20_items.Apply(getHubItemsResult =\u003e getHubItemsResult.Items)),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\textension_20_items, err := dynatrace.GetHubItems(ctx, \u0026dynatrace.GetHubItemsArgs{\n\t\t\tType: pulumi.StringRef(\"EXTENSION2\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"artifact-ids\", extension_20_items.Artifacts)\n\t\tctx.Export(\"hub-items\", extension_20_items.Items)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetHubItemsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var extension-20-items = DynatraceFunctions.getHubItems(GetHubItemsArgs.builder()\n            .type(\"EXTENSION2\")\n            .build());\n\n        ctx.export(\"artifact-ids\", extension_20_items.artifacts());\n        ctx.export(\"hub-items\", extension_20_items.items());\n    }\n}\n```\n```yaml\nvariables:\n  extension-20-items:\n    fn::invoke:\n      Function: dynatrace:getHubItems\n      Arguments:\n        type: EXTENSION2\noutputs:\n  artifact-ids: ${[\"extension-20-items\"].artifacts}\n  hub-items: ${[\"extension-20-items\"].items}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getHubItems.\n",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getHubItems.\n",
                "properties": {
                    "artifacts": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The fully qualified names of the items as a map\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/getHubItemsItem:getHubItemsItem"
                        },
                        "description": "The items within this list\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Represents the type of item. It can be `TECHNOLOGY`, `EXTENSION1` or `EXTENSION2`. If not specified, no restriction regarding type happens\n"
                    }
                },
                "type": "object",
                "required": [
                    "artifacts",
                    "items",
                    "id"
                ]
            }
        },
        "dynatrace:index/getIamGroup:getIamGroup": {
            "description": "The IAM group data source allows the group ID to be retrieved by its name.\n\n- `name` (String) - The name of the IAM group\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst example = dynatrace.getIamGroup({\n    name: \"Terraform Example\",\n});\nexport const groups = example.then(example =\u003e example.id);\n```\n```python\nimport pulumi\nimport pulumi_dynatrace as dynatrace\n\nexample = dynatrace.get_iam_group(name=\"Terraform Example\")\npulumi.export(\"groups\", example.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Dynatrace.GetIamGroup.Invoke(new()\n    {\n        Name = \"Terraform Example\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"groups\"] = example.Apply(getIamGroupResult =\u003e getIamGroupResult.Id),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texample, err := dynatrace.LookupIamGroup(ctx, \u0026dynatrace.LookupIamGroupArgs{\n\t\t\tName: \"Terraform Example\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"groups\", example.Id)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetIamGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = DynatraceFunctions.getIamGroup(GetIamGroupArgs.builder()\n            .name(\"Terraform Example\")\n            .build());\n\n        ctx.export(\"groups\", example.applyValue(getIamGroupResult -\u003e getIamGroupResult.id()));\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: dynatrace:getIamGroup\n      Arguments:\n        name: Terraform Example\noutputs:\n  groups: ${example.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIamGroup.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIamGroup.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "dynatrace:index/getIamUser:getIamUser": {
            "description": "This data source allows you to specify the email address of the user and produces an ordered list of group IDs this user is a member of\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst userA = dynatrace.getIamUser({\n    email: \"me@home.com\",\n});\nexport const groups = userA.then(userA =\u003e userA.groups);\n```\n```python\nimport pulumi\nimport pulumi_dynatrace as dynatrace\n\nuser_a = dynatrace.get_iam_user(email=\"me@home.com\")\npulumi.export(\"groups\", user_a.groups)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var userA = Dynatrace.GetIamUser.Invoke(new()\n    {\n        Email = \"me@home.com\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"groups\"] = userA.Apply(getIamUserResult =\u003e getIamUserResult.Groups),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tuserA, err := dynatrace.LookupIamUser(ctx, \u0026dynatrace.LookupIamUserArgs{\n\t\t\tEmail: \"me@home.com\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"groups\", userA.Groups)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetIamUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var userA = DynatraceFunctions.getIamUser(GetIamUserArgs.builder()\n            .email(\"me@home.com\")\n            .build());\n\n        ctx.export(\"groups\", userA.applyValue(getIamUserResult -\u003e getIamUserResult.groups()));\n    }\n}\n```\n```yaml\nvariables:\n  userA:\n    fn::invoke:\n      Function: dynatrace:getIamUser\n      Arguments:\n        email: me@home.com\noutputs:\n  groups: ${userA.groups}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIamUser.\n",
                "properties": {
                    "email": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "email"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIamUser.\n",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "uid": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "groups",
                    "uid",
                    "id"
                ]
            }
        },
        "dynatrace:index/getManagementZone:getManagementZone": {
            "description": "The management zone data source allows the management zone ID to be retrieved by its name.\n\n\u003e This data source requires the API token scope **Read configuration** (`ReadConfig`)\n\n!\u003e This data source is utilizing an older API endpoint, please use dynatrace.ManagementZoneV2 instead.\n\n- `name` queries for all management zones with the specified name\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst test = dynatrace.getManagementZone({\n    name: \"Example\",\n});\nconst _name_ = new dynatrace.CalculatedServiceMetric(\"#name#\", {\n    conditions: [{\n        conditions: [{\n            attribute: \"HTTP_REQUEST_METHOD\",\n            comparison: {\n                httpMethod: {\n                    operator: \"EQUALS_ANY_OF\",\n                    values: [\n                        \"POST\",\n                        \"GET\",\n                    ],\n                },\n                negate: false,\n            },\n        }],\n    }],\n    enabled: true,\n    managementZones: [test.then(test =\u003e test.id)],\n    metricDefinition: {\n        metric: \"REQUEST_ATTRIBUTE\",\n        requestAttribute: \"foo\",\n    },\n    metricKey: \"calc:service.#name#\",\n    unit: \"MILLI_SECOND_PER_MINUTE\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\nimport pulumi_dynatrace as dynatrace\n\ntest = dynatrace.get_management_zone(name=\"Example\")\n_name_ = dynatrace.CalculatedServiceMetric(\"#name#\",\n    conditions=[dynatrace.CalculatedServiceMetricConditionArgs(\n        conditions=[dynatrace.CalculatedServiceMetricConditionConditionArgs(\n            attribute=\"HTTP_REQUEST_METHOD\",\n            comparison=dynatrace.CalculatedServiceMetricConditionConditionComparisonArgs(\n                http_method=dynatrace.CalculatedServiceMetricConditionConditionComparisonHttpMethodArgs(\n                    operator=\"EQUALS_ANY_OF\",\n                    values=[\n                        \"POST\",\n                        \"GET\",\n                    ],\n                ),\n                negate=False,\n            ),\n        )],\n    )],\n    enabled=True,\n    management_zones=[test.id],\n    metric_definition=dynatrace.CalculatedServiceMetricMetricDefinitionArgs(\n        metric=\"REQUEST_ATTRIBUTE\",\n        request_attribute=\"foo\",\n    ),\n    metric_key=\"calc:service.#name#\",\n    unit=\"MILLI_SECOND_PER_MINUTE\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Dynatrace.GetManagementZone.Invoke(new()\n    {\n        Name = \"Example\",\n    });\n\n    var _name_ = new Dynatrace.CalculatedServiceMetric(\"#name#\", new()\n    {\n        Conditions = new[]\n        {\n            new Dynatrace.Inputs.CalculatedServiceMetricConditionArgs\n            {\n                Conditions = new[]\n                {\n                    new Dynatrace.Inputs.CalculatedServiceMetricConditionConditionArgs\n                    {\n                        Attribute = \"HTTP_REQUEST_METHOD\",\n                        Comparison = new Dynatrace.Inputs.CalculatedServiceMetricConditionConditionComparisonArgs\n                        {\n                            HttpMethod = new Dynatrace.Inputs.CalculatedServiceMetricConditionConditionComparisonHttpMethodArgs\n                            {\n                                Operator = \"EQUALS_ANY_OF\",\n                                Values = new[]\n                                {\n                                    \"POST\",\n                                    \"GET\",\n                                },\n                            },\n                            Negate = false,\n                        },\n                    },\n                },\n            },\n        },\n        Enabled = true,\n        ManagementZones = new[]\n        {\n            test.Apply(getManagementZoneResult =\u003e getManagementZoneResult.Id),\n        },\n        MetricDefinition = new Dynatrace.Inputs.CalculatedServiceMetricMetricDefinitionArgs\n        {\n            Metric = \"REQUEST_ATTRIBUTE\",\n            RequestAttribute = \"foo\",\n        },\n        MetricKey = \"calc:service.#name#\",\n        Unit = \"MILLI_SECOND_PER_MINUTE\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := dynatrace.LookupManagementZone(ctx, \u0026dynatrace.LookupManagementZoneArgs{\n\t\t\tName: \"Example\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dynatrace.NewCalculatedServiceMetric(ctx, \"#name#\", \u0026dynatrace.CalculatedServiceMetricArgs{\n\t\t\tConditions: dynatrace.CalculatedServiceMetricConditionArray{\n\t\t\t\t\u0026dynatrace.CalculatedServiceMetricConditionArgs{\n\t\t\t\t\tConditions: dynatrace.CalculatedServiceMetricConditionConditionArray{\n\t\t\t\t\t\t\u0026dynatrace.CalculatedServiceMetricConditionConditionArgs{\n\t\t\t\t\t\t\tAttribute: pulumi.String(\"HTTP_REQUEST_METHOD\"),\n\t\t\t\t\t\t\tComparison: \u0026dynatrace.CalculatedServiceMetricConditionConditionComparisonArgs{\n\t\t\t\t\t\t\t\tHttpMethod: \u0026dynatrace.CalculatedServiceMetricConditionConditionComparisonHttpMethodArgs{\n\t\t\t\t\t\t\t\t\tOperator: pulumi.String(\"EQUALS_ANY_OF\"),\n\t\t\t\t\t\t\t\t\tValues: pulumi.StringArray{\n\t\t\t\t\t\t\t\t\t\tpulumi.String(\"POST\"),\n\t\t\t\t\t\t\t\t\t\tpulumi.String(\"GET\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tNegate: pulumi.Bool(false),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tEnabled: pulumi.Bool(true),\n\t\t\tManagementZones: pulumi.StringArray{\n\t\t\t\t*pulumi.String(test.Id),\n\t\t\t},\n\t\t\tMetricDefinition: \u0026dynatrace.CalculatedServiceMetricMetricDefinitionArgs{\n\t\t\t\tMetric:           pulumi.String(\"REQUEST_ATTRIBUTE\"),\n\t\t\t\tRequestAttribute: pulumi.String(\"foo\"),\n\t\t\t},\n\t\t\tMetricKey: pulumi.String(\"calc:service.#name#\"),\n\t\t\tUnit:      pulumi.String(\"MILLI_SECOND_PER_MINUTE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetManagementZoneArgs;\nimport com.pulumi.dynatrace.CalculatedServiceMetric;\nimport com.pulumi.dynatrace.CalculatedServiceMetricArgs;\nimport com.pulumi.dynatrace.inputs.CalculatedServiceMetricConditionArgs;\nimport com.pulumi.dynatrace.inputs.CalculatedServiceMetricMetricDefinitionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DynatraceFunctions.getManagementZone(GetManagementZoneArgs.builder()\n            .name(\"Example\")\n            .build());\n\n        var _name_ = new CalculatedServiceMetric(\"#name#\", CalculatedServiceMetricArgs.builder()        \n            .conditions(CalculatedServiceMetricConditionArgs.builder()\n                .conditions(CalculatedServiceMetricConditionConditionArgs.builder()\n                    .attribute(\"HTTP_REQUEST_METHOD\")\n                    .comparison(CalculatedServiceMetricConditionConditionComparisonArgs.builder()\n                        .httpMethod(CalculatedServiceMetricConditionConditionComparisonHttpMethodArgs.builder()\n                            .operator(\"EQUALS_ANY_OF\")\n                            .values(                            \n                                \"POST\",\n                                \"GET\")\n                            .build())\n                        .negate(false)\n                        .build())\n                    .build())\n                .build())\n            .enabled(true)\n            .managementZones(test.applyValue(getManagementZoneResult -\u003e getManagementZoneResult.id()))\n            .metricDefinition(CalculatedServiceMetricMetricDefinitionArgs.builder()\n                .metric(\"REQUEST_ATTRIBUTE\")\n                .requestAttribute(\"foo\")\n                .build())\n            .metricKey(\"calc:service.#name#\")\n            .unit(\"MILLI_SECOND_PER_MINUTE\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  '#name#':\n    type: dynatrace:CalculatedServiceMetric\n    properties:\n      conditions:\n        - conditions:\n            - attribute: HTTP_REQUEST_METHOD\n              comparison:\n                httpMethod:\n                  operator: EQUALS_ANY_OF\n                  values:\n                    - POST\n                    - GET\n                negate: false\n      enabled: true\n      managementZones:\n        - ${test.id}\n      metricDefinition:\n        metric: REQUEST_ATTRIBUTE\n        requestAttribute: foo\n      metricKey: calc:service.#name#\n      unit: MILLI_SECOND_PER_MINUTE\nvariables:\n  test:\n    fn::invoke:\n      Function: dynatrace:getManagementZone\n      Arguments:\n        name: Example\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getManagementZone.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getManagementZone.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "legacyId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "settings20Id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "legacyId",
                    "name",
                    "settings20Id",
                    "id"
                ]
            }
        },
        "dynatrace:index/getManagementZoneV2:getManagementZoneV2": {
            "description": "The management zone data source allows the management zone ID to be retrieved by its name.\n\n\u003e This data source requires the API token scopes **Read settings** (`settings.read`)\n\n- `name` queries for all management zones with the specified name\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst test = dynatrace.getManagementZoneV2({\n    name: \"Example\",\n});\nconst _name_ = new dynatrace.CalculatedServiceMetric(\"#name#\", {\n    conditions: [{\n        conditions: [{\n            attribute: \"HTTP_REQUEST_METHOD\",\n            comparison: {\n                httpMethod: {\n                    operator: \"EQUALS_ANY_OF\",\n                    values: [\n                        \"POST\",\n                        \"GET\",\n                    ],\n                },\n                negate: false,\n            },\n        }],\n    }],\n    enabled: true,\n    managementZones: [test.then(test =\u003e test.legacyId)],\n    metricDefinition: {\n        metric: \"REQUEST_ATTRIBUTE\",\n        requestAttribute: \"foo\",\n    },\n    metricKey: \"calc:service.#name#\",\n    unit: \"MILLI_SECOND_PER_MINUTE\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\nimport pulumi_dynatrace as dynatrace\n\ntest = dynatrace.get_management_zone_v2(name=\"Example\")\n_name_ = dynatrace.CalculatedServiceMetric(\"#name#\",\n    conditions=[dynatrace.CalculatedServiceMetricConditionArgs(\n        conditions=[dynatrace.CalculatedServiceMetricConditionConditionArgs(\n            attribute=\"HTTP_REQUEST_METHOD\",\n            comparison=dynatrace.CalculatedServiceMetricConditionConditionComparisonArgs(\n                http_method=dynatrace.CalculatedServiceMetricConditionConditionComparisonHttpMethodArgs(\n                    operator=\"EQUALS_ANY_OF\",\n                    values=[\n                        \"POST\",\n                        \"GET\",\n                    ],\n                ),\n                negate=False,\n            ),\n        )],\n    )],\n    enabled=True,\n    management_zones=[test.legacy_id],\n    metric_definition=dynatrace.CalculatedServiceMetricMetricDefinitionArgs(\n        metric=\"REQUEST_ATTRIBUTE\",\n        request_attribute=\"foo\",\n    ),\n    metric_key=\"calc:service.#name#\",\n    unit=\"MILLI_SECOND_PER_MINUTE\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Dynatrace.GetManagementZoneV2.Invoke(new()\n    {\n        Name = \"Example\",\n    });\n\n    var _name_ = new Dynatrace.CalculatedServiceMetric(\"#name#\", new()\n    {\n        Conditions = new[]\n        {\n            new Dynatrace.Inputs.CalculatedServiceMetricConditionArgs\n            {\n                Conditions = new[]\n                {\n                    new Dynatrace.Inputs.CalculatedServiceMetricConditionConditionArgs\n                    {\n                        Attribute = \"HTTP_REQUEST_METHOD\",\n                        Comparison = new Dynatrace.Inputs.CalculatedServiceMetricConditionConditionComparisonArgs\n                        {\n                            HttpMethod = new Dynatrace.Inputs.CalculatedServiceMetricConditionConditionComparisonHttpMethodArgs\n                            {\n                                Operator = \"EQUALS_ANY_OF\",\n                                Values = new[]\n                                {\n                                    \"POST\",\n                                    \"GET\",\n                                },\n                            },\n                            Negate = false,\n                        },\n                    },\n                },\n            },\n        },\n        Enabled = true,\n        ManagementZones = new[]\n        {\n            test.Apply(getManagementZoneV2Result =\u003e getManagementZoneV2Result.LegacyId),\n        },\n        MetricDefinition = new Dynatrace.Inputs.CalculatedServiceMetricMetricDefinitionArgs\n        {\n            Metric = \"REQUEST_ATTRIBUTE\",\n            RequestAttribute = \"foo\",\n        },\n        MetricKey = \"calc:service.#name#\",\n        Unit = \"MILLI_SECOND_PER_MINUTE\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := dynatrace.LookupManagementZoneV2(ctx, \u0026dynatrace.LookupManagementZoneV2Args{\n\t\t\tName: \"Example\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dynatrace.NewCalculatedServiceMetric(ctx, \"#name#\", \u0026dynatrace.CalculatedServiceMetricArgs{\n\t\t\tConditions: dynatrace.CalculatedServiceMetricConditionArray{\n\t\t\t\t\u0026dynatrace.CalculatedServiceMetricConditionArgs{\n\t\t\t\t\tConditions: dynatrace.CalculatedServiceMetricConditionConditionArray{\n\t\t\t\t\t\t\u0026dynatrace.CalculatedServiceMetricConditionConditionArgs{\n\t\t\t\t\t\t\tAttribute: pulumi.String(\"HTTP_REQUEST_METHOD\"),\n\t\t\t\t\t\t\tComparison: \u0026dynatrace.CalculatedServiceMetricConditionConditionComparisonArgs{\n\t\t\t\t\t\t\t\tHttpMethod: \u0026dynatrace.CalculatedServiceMetricConditionConditionComparisonHttpMethodArgs{\n\t\t\t\t\t\t\t\t\tOperator: pulumi.String(\"EQUALS_ANY_OF\"),\n\t\t\t\t\t\t\t\t\tValues: pulumi.StringArray{\n\t\t\t\t\t\t\t\t\t\tpulumi.String(\"POST\"),\n\t\t\t\t\t\t\t\t\t\tpulumi.String(\"GET\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tNegate: pulumi.Bool(false),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tEnabled: pulumi.Bool(true),\n\t\t\tManagementZones: pulumi.StringArray{\n\t\t\t\t*pulumi.String(test.LegacyId),\n\t\t\t},\n\t\t\tMetricDefinition: \u0026dynatrace.CalculatedServiceMetricMetricDefinitionArgs{\n\t\t\t\tMetric:           pulumi.String(\"REQUEST_ATTRIBUTE\"),\n\t\t\t\tRequestAttribute: pulumi.String(\"foo\"),\n\t\t\t},\n\t\t\tMetricKey: pulumi.String(\"calc:service.#name#\"),\n\t\t\tUnit:      pulumi.String(\"MILLI_SECOND_PER_MINUTE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetManagementZoneV2Args;\nimport com.pulumi.dynatrace.CalculatedServiceMetric;\nimport com.pulumi.dynatrace.CalculatedServiceMetricArgs;\nimport com.pulumi.dynatrace.inputs.CalculatedServiceMetricConditionArgs;\nimport com.pulumi.dynatrace.inputs.CalculatedServiceMetricMetricDefinitionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DynatraceFunctions.getManagementZoneV2(GetManagementZoneV2Args.builder()\n            .name(\"Example\")\n            .build());\n\n        var _name_ = new CalculatedServiceMetric(\"#name#\", CalculatedServiceMetricArgs.builder()        \n            .conditions(CalculatedServiceMetricConditionArgs.builder()\n                .conditions(CalculatedServiceMetricConditionConditionArgs.builder()\n                    .attribute(\"HTTP_REQUEST_METHOD\")\n                    .comparison(CalculatedServiceMetricConditionConditionComparisonArgs.builder()\n                        .httpMethod(CalculatedServiceMetricConditionConditionComparisonHttpMethodArgs.builder()\n                            .operator(\"EQUALS_ANY_OF\")\n                            .values(                            \n                                \"POST\",\n                                \"GET\")\n                            .build())\n                        .negate(false)\n                        .build())\n                    .build())\n                .build())\n            .enabled(true)\n            .managementZones(test.applyValue(getManagementZoneV2Result -\u003e getManagementZoneV2Result.legacyId()))\n            .metricDefinition(CalculatedServiceMetricMetricDefinitionArgs.builder()\n                .metric(\"REQUEST_ATTRIBUTE\")\n                .requestAttribute(\"foo\")\n                .build())\n            .metricKey(\"calc:service.#name#\")\n            .unit(\"MILLI_SECOND_PER_MINUTE\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  '#name#':\n    type: dynatrace:CalculatedServiceMetric\n    properties:\n      conditions:\n        - conditions:\n            - attribute: HTTP_REQUEST_METHOD\n              comparison:\n                httpMethod:\n                  operator: EQUALS_ANY_OF\n                  values:\n                    - POST\n                    - GET\n                negate: false\n      enabled: true\n      managementZones:\n        - ${test.legacyId}\n      metricDefinition:\n        metric: REQUEST_ATTRIBUTE\n        requestAttribute: foo\n      metricKey: calc:service.#name#\n      unit: MILLI_SECOND_PER_MINUTE\nvariables:\n  test:\n    fn::invoke:\n      Function: dynatrace:getManagementZoneV2\n      Arguments:\n        name: Example\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getManagementZoneV2.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getManagementZoneV2.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "legacyId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "settings20Id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "legacyId",
                    "name",
                    "settings20Id",
                    "id"
                ]
            }
        },
        "dynatrace:index/getManagementZones:getManagementZones": {
            "description": "The management zones data source allows retrieval of all management zones.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst test = dynatrace.getManagementZones({});\nconst _name_ = new dynatrace.CalculatedServiceMetric(\"#name#\", {\n    enabled: true,\n    managementZones: [test.then(test =\u003e test.values?.[0]?.id)],\n    metricKey: \"calc:service.#name#\",\n    unit: \"MILLI_SECOND_PER_MINUTE\",\n    conditions: [{\n        conditions: [{\n            attribute: \"HTTP_REQUEST_METHOD\",\n            comparison: {\n                negate: false,\n                httpMethod: {\n                    operator: \"EQUALS_ANY_OF\",\n                    values: [\n                        \"POST\",\n                        \"GET\",\n                    ],\n                },\n            },\n        }],\n    }],\n    metricDefinition: {\n        metric: \"REQUEST_ATTRIBUTE\",\n        requestAttribute: \"foo\",\n    },\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\nimport pulumi_dynatrace as dynatrace\n\ntest = dynatrace.get_management_zones()\n_name_ = dynatrace.CalculatedServiceMetric(\"#name#\",\n    enabled=True,\n    management_zones=[test.values[0].id],\n    metric_key=\"calc:service.#name#\",\n    unit=\"MILLI_SECOND_PER_MINUTE\",\n    conditions=[dynatrace.CalculatedServiceMetricConditionArgs(\n        conditions=[dynatrace.CalculatedServiceMetricConditionConditionArgs(\n            attribute=\"HTTP_REQUEST_METHOD\",\n            comparison=dynatrace.CalculatedServiceMetricConditionConditionComparisonArgs(\n                negate=False,\n                http_method=dynatrace.CalculatedServiceMetricConditionConditionComparisonHttpMethodArgs(\n                    operator=\"EQUALS_ANY_OF\",\n                    values=[\n                        \"POST\",\n                        \"GET\",\n                    ],\n                ),\n            ),\n        )],\n    )],\n    metric_definition=dynatrace.CalculatedServiceMetricMetricDefinitionArgs(\n        metric=\"REQUEST_ATTRIBUTE\",\n        request_attribute=\"foo\",\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Dynatrace.GetManagementZones.Invoke();\n\n    var _name_ = new Dynatrace.CalculatedServiceMetric(\"#name#\", new()\n    {\n        Enabled = true,\n        ManagementZones = new[]\n        {\n            test.Apply(getManagementZonesResult =\u003e getManagementZonesResult.Values[0]?.Id),\n        },\n        MetricKey = \"calc:service.#name#\",\n        Unit = \"MILLI_SECOND_PER_MINUTE\",\n        Conditions = new[]\n        {\n            new Dynatrace.Inputs.CalculatedServiceMetricConditionArgs\n            {\n                Conditions = new[]\n                {\n                    new Dynatrace.Inputs.CalculatedServiceMetricConditionConditionArgs\n                    {\n                        Attribute = \"HTTP_REQUEST_METHOD\",\n                        Comparison = new Dynatrace.Inputs.CalculatedServiceMetricConditionConditionComparisonArgs\n                        {\n                            Negate = false,\n                            HttpMethod = new Dynatrace.Inputs.CalculatedServiceMetricConditionConditionComparisonHttpMethodArgs\n                            {\n                                Operator = \"EQUALS_ANY_OF\",\n                                Values = new[]\n                                {\n                                    \"POST\",\n                                    \"GET\",\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n        MetricDefinition = new Dynatrace.Inputs.CalculatedServiceMetricMetricDefinitionArgs\n        {\n            Metric = \"REQUEST_ATTRIBUTE\",\n            RequestAttribute = \"foo\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := dynatrace.GetManagementZones(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dynatrace.NewCalculatedServiceMetric(ctx, \"#name#\", \u0026dynatrace.CalculatedServiceMetricArgs{\n\t\t\tEnabled: pulumi.Bool(true),\n\t\t\tManagementZones: pulumi.StringArray{\n\t\t\t\t*pulumi.String(test.Values[0].Id),\n\t\t\t},\n\t\t\tMetricKey: pulumi.String(\"calc:service.#name#\"),\n\t\t\tUnit:      pulumi.String(\"MILLI_SECOND_PER_MINUTE\"),\n\t\t\tConditions: dynatrace.CalculatedServiceMetricConditionArray{\n\t\t\t\t\u0026dynatrace.CalculatedServiceMetricConditionArgs{\n\t\t\t\t\tConditions: dynatrace.CalculatedServiceMetricConditionConditionArray{\n\t\t\t\t\t\t\u0026dynatrace.CalculatedServiceMetricConditionConditionArgs{\n\t\t\t\t\t\t\tAttribute: pulumi.String(\"HTTP_REQUEST_METHOD\"),\n\t\t\t\t\t\t\tComparison: \u0026dynatrace.CalculatedServiceMetricConditionConditionComparisonArgs{\n\t\t\t\t\t\t\t\tNegate: pulumi.Bool(false),\n\t\t\t\t\t\t\t\tHttpMethod: \u0026dynatrace.CalculatedServiceMetricConditionConditionComparisonHttpMethodArgs{\n\t\t\t\t\t\t\t\t\tOperator: pulumi.String(\"EQUALS_ANY_OF\"),\n\t\t\t\t\t\t\t\t\tValues: pulumi.StringArray{\n\t\t\t\t\t\t\t\t\t\tpulumi.String(\"POST\"),\n\t\t\t\t\t\t\t\t\t\tpulumi.String(\"GET\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tMetricDefinition: \u0026dynatrace.CalculatedServiceMetricMetricDefinitionArgs{\n\t\t\t\tMetric:           pulumi.String(\"REQUEST_ATTRIBUTE\"),\n\t\t\t\tRequestAttribute: pulumi.String(\"foo\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.CalculatedServiceMetric;\nimport com.pulumi.dynatrace.CalculatedServiceMetricArgs;\nimport com.pulumi.dynatrace.inputs.CalculatedServiceMetricConditionArgs;\nimport com.pulumi.dynatrace.inputs.CalculatedServiceMetricMetricDefinitionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DynatraceFunctions.getManagementZones();\n\n        var _name_ = new CalculatedServiceMetric(\"#name#\", CalculatedServiceMetricArgs.builder()        \n            .enabled(true)\n            .managementZones(test.applyValue(getManagementZonesResult -\u003e getManagementZonesResult.values()[0].id()))\n            .metricKey(\"calc:service.#name#\")\n            .unit(\"MILLI_SECOND_PER_MINUTE\")\n            .conditions(CalculatedServiceMetricConditionArgs.builder()\n                .conditions(CalculatedServiceMetricConditionConditionArgs.builder()\n                    .attribute(\"HTTP_REQUEST_METHOD\")\n                    .comparison(CalculatedServiceMetricConditionConditionComparisonArgs.builder()\n                        .negate(false)\n                        .httpMethod(CalculatedServiceMetricConditionConditionComparisonHttpMethodArgs.builder()\n                            .operator(\"EQUALS_ANY_OF\")\n                            .values(                            \n                                \"POST\",\n                                \"GET\")\n                            .build())\n                        .build())\n                    .build())\n                .build())\n            .metricDefinition(CalculatedServiceMetricMetricDefinitionArgs.builder()\n                .metric(\"REQUEST_ATTRIBUTE\")\n                .requestAttribute(\"foo\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  '#name#':\n    type: dynatrace:CalculatedServiceMetric\n    properties:\n      enabled: true\n      managementZones:\n        - ${test.values[0].id}\n      metricKey: calc:service.#name#\n      unit: MILLI_SECOND_PER_MINUTE\n      conditions:\n        - conditions:\n            - attribute: HTTP_REQUEST_METHOD\n              comparison:\n                negate: false\n                httpMethod:\n                  operator: EQUALS_ANY_OF\n                  values:\n                    - POST\n                    - GET\n      metricDefinition:\n        metric: REQUEST_ATTRIBUTE\n        requestAttribute: foo\nvariables:\n  test:\n    fn::invoke:\n      Function: dynatrace:getManagementZones\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getManagementZones.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/getManagementZonesValue:getManagementZonesValue"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "values",
                    "id"
                ]
            }
        },
        "dynatrace:index/getMobileApplication:getMobileApplication": {
            "description": "The `dynatrace.MobileApplication` data source allows the mobile application ID to be retrieved by its name.\n\n- `name` (String) - The name of the mobile application\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst example = dynatrace.getMobileApplication({\n    name: \"Terraform\",\n});\nexport const id = example.then(example =\u003e example.id);\n```\n```python\nimport pulumi\nimport pulumi_dynatrace as dynatrace\n\nexample = dynatrace.get_mobile_application(name=\"Terraform\")\npulumi.export(\"id\", example.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Dynatrace.GetMobileApplication.Invoke(new()\n    {\n        Name = \"Terraform\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"id\"] = example.Apply(getMobileApplicationResult =\u003e getMobileApplicationResult.Id),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texample, err := dynatrace.LookupMobileApplication(ctx, \u0026dynatrace.LookupMobileApplicationArgs{\n\t\t\tName: \"Terraform\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"id\", example.Id)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetMobileApplicationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = DynatraceFunctions.getMobileApplication(GetMobileApplicationArgs.builder()\n            .name(\"Terraform\")\n            .build());\n\n        ctx.export(\"id\", example.applyValue(getMobileApplicationResult -\u003e getMobileApplicationResult.id()));\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: dynatrace:getMobileApplication\n      Arguments:\n        name: Terraform\noutputs:\n  id: ${example.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMobileApplication.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMobileApplication.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "dynatrace:index/getProcess:getProcess": {
            "description": "!\u003e The data source API endpoint has been deprecated, please use dynatrace.getEntity with entity type `PROCESS_GROUP_INSTANCE` instead.\n\nThe process data source allows the process ID to be retrieved by its name and optionally tags / tag-value pairs.\n\n- `name` queries for all processes with the specified name\n- `tags` (optional) refers to the tags that need to be present for the process (inclusive)\n\nIf multiple processes match the given criteria, the first result will be retrieved.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst test = dynatrace.getProcess({\n    name: \"Example\",\n    tags: [\n        \"TerraformKeyTest\",\n        \"TerraformKeyValueTest=TestValue\",\n    ],\n});\nconst _name_ = new dynatrace.ManagementZone(\"#name#\", {entitySelectorBasedRules: [{\n    enabled: true,\n    selector: test.then(test =\u003e `type(\"process_group_instance\"),entityId(\"${test.id}\")`),\n}]});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\nimport pulumi_dynatrace as dynatrace\n\ntest = dynatrace.get_process(name=\"Example\",\n    tags=[\n        \"TerraformKeyTest\",\n        \"TerraformKeyValueTest=TestValue\",\n    ])\n_name_ = dynatrace.ManagementZone(\"#name#\", entity_selector_based_rules=[dynatrace.ManagementZoneEntitySelectorBasedRuleArgs(\n    enabled=True,\n    selector=f\"type(\\\"process_group_instance\\\"),entityId(\\\"{test.id}\\\")\",\n)])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Dynatrace.GetProcess.Invoke(new()\n    {\n        Name = \"Example\",\n        Tags = new[]\n        {\n            \"TerraformKeyTest\",\n            \"TerraformKeyValueTest=TestValue\",\n        },\n    });\n\n    var _name_ = new Dynatrace.ManagementZone(\"#name#\", new()\n    {\n        EntitySelectorBasedRules = new[]\n        {\n            new Dynatrace.Inputs.ManagementZoneEntitySelectorBasedRuleArgs\n            {\n                Enabled = true,\n                Selector = $\"type(\\\"process_group_instance\\\"),entityId(\\\"{test.Apply(getProcessResult =\u003e getProcessResult.Id)}\\\")\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := dynatrace.GetProcess(ctx, \u0026dynatrace.GetProcessArgs{\n\t\t\tName: \"Example\",\n\t\t\tTags: []string{\n\t\t\t\t\"TerraformKeyTest\",\n\t\t\t\t\"TerraformKeyValueTest=TestValue\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dynatrace.NewManagementZone(ctx, \"#name#\", \u0026dynatrace.ManagementZoneArgs{\n\t\t\tEntitySelectorBasedRules: dynatrace.ManagementZoneEntitySelectorBasedRuleArray{\n\t\t\t\t\u0026dynatrace.ManagementZoneEntitySelectorBasedRuleArgs{\n\t\t\t\t\tEnabled:  pulumi.Bool(true),\n\t\t\t\t\tSelector: pulumi.String(fmt.Sprintf(\"type(\\\"process_group_instance\\\"),entityId(\\\"%v\\\")\", test.Id)),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetProcessArgs;\nimport com.pulumi.dynatrace.ManagementZone;\nimport com.pulumi.dynatrace.ManagementZoneArgs;\nimport com.pulumi.dynatrace.inputs.ManagementZoneEntitySelectorBasedRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DynatraceFunctions.getProcess(GetProcessArgs.builder()\n            .name(\"Example\")\n            .tags(            \n                \"TerraformKeyTest\",\n                \"TerraformKeyValueTest=TestValue\")\n            .build());\n\n        var _name_ = new ManagementZone(\"#name#\", ManagementZoneArgs.builder()        \n            .entitySelectorBasedRules(ManagementZoneEntitySelectorBasedRuleArgs.builder()\n                .enabled(true)\n                .selector(String.format(\"type(\\\"process_group_instance\\\"),entityId(\\\"%s\\\")\", test.applyValue(getProcessResult -\u003e getProcessResult.id())))\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  '#name#':\n    type: dynatrace:ManagementZone\n    properties:\n      entitySelectorBasedRules:\n        - enabled: true\n          selector: type(\"process_group_instance\"),entityId(\"${test.id}\")\nvariables:\n  test:\n    fn::invoke:\n      Function: dynatrace:getProcess\n      Arguments:\n        name: Example\n        tags:\n          - TerraformKeyTest\n          - TerraformKeyValueTest=TestValue\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getProcess.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required tags of the process to find\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProcess.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required tags of the process to find\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "dynatrace:index/getProcessGroup:getProcessGroup": {
            "description": "!\u003e The data source API endpoint has been deprecated, please use dynatrace.getEntity with entity type `PROCESS_GROUP` instead.\n\nThe process group data source allows the process group ID to be retrieved by its name and optionally tags / tag-value pairs.\n\n- `name` queries for all process groups with the specified name\n- `tags` (optional) refers to the tags that need to be present for the process group (inclusive)\n\nIf multiple process groups match the given criteria, the first result will be retrieved.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst test = dynatrace.getProcessGroup({\n    name: \"Example\",\n    tags: [\n        \"TerraformKeyTest\",\n        \"TerraformKeyValueTest=TestValue\",\n    ],\n});\nconst _name_ = new dynatrace.ManagementZone(\"#name#\", {entitySelectorBasedRules: [{\n    enabled: true,\n    selector: test.then(test =\u003e `type(\"process_group\"),entityId(\"${test.id}\")`),\n}]});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\nimport pulumi_dynatrace as dynatrace\n\ntest = dynatrace.get_process_group(name=\"Example\",\n    tags=[\n        \"TerraformKeyTest\",\n        \"TerraformKeyValueTest=TestValue\",\n    ])\n_name_ = dynatrace.ManagementZone(\"#name#\", entity_selector_based_rules=[dynatrace.ManagementZoneEntitySelectorBasedRuleArgs(\n    enabled=True,\n    selector=f\"type(\\\"process_group\\\"),entityId(\\\"{test.id}\\\")\",\n)])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Dynatrace.GetProcessGroup.Invoke(new()\n    {\n        Name = \"Example\",\n        Tags = new[]\n        {\n            \"TerraformKeyTest\",\n            \"TerraformKeyValueTest=TestValue\",\n        },\n    });\n\n    var _name_ = new Dynatrace.ManagementZone(\"#name#\", new()\n    {\n        EntitySelectorBasedRules = new[]\n        {\n            new Dynatrace.Inputs.ManagementZoneEntitySelectorBasedRuleArgs\n            {\n                Enabled = true,\n                Selector = $\"type(\\\"process_group\\\"),entityId(\\\"{test.Apply(getProcessGroupResult =\u003e getProcessGroupResult.Id)}\\\")\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := dynatrace.GetProcessGroup(ctx, \u0026dynatrace.GetProcessGroupArgs{\n\t\t\tName: \"Example\",\n\t\t\tTags: []string{\n\t\t\t\t\"TerraformKeyTest\",\n\t\t\t\t\"TerraformKeyValueTest=TestValue\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dynatrace.NewManagementZone(ctx, \"#name#\", \u0026dynatrace.ManagementZoneArgs{\n\t\t\tEntitySelectorBasedRules: dynatrace.ManagementZoneEntitySelectorBasedRuleArray{\n\t\t\t\t\u0026dynatrace.ManagementZoneEntitySelectorBasedRuleArgs{\n\t\t\t\t\tEnabled:  pulumi.Bool(true),\n\t\t\t\t\tSelector: pulumi.String(fmt.Sprintf(\"type(\\\"process_group\\\"),entityId(\\\"%v\\\")\", test.Id)),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetProcessGroupArgs;\nimport com.pulumi.dynatrace.ManagementZone;\nimport com.pulumi.dynatrace.ManagementZoneArgs;\nimport com.pulumi.dynatrace.inputs.ManagementZoneEntitySelectorBasedRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DynatraceFunctions.getProcessGroup(GetProcessGroupArgs.builder()\n            .name(\"Example\")\n            .tags(            \n                \"TerraformKeyTest\",\n                \"TerraformKeyValueTest=TestValue\")\n            .build());\n\n        var _name_ = new ManagementZone(\"#name#\", ManagementZoneArgs.builder()        \n            .entitySelectorBasedRules(ManagementZoneEntitySelectorBasedRuleArgs.builder()\n                .enabled(true)\n                .selector(String.format(\"type(\\\"process_group\\\"),entityId(\\\"%s\\\")\", test.applyValue(getProcessGroupResult -\u003e getProcessGroupResult.id())))\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  '#name#':\n    type: dynatrace:ManagementZone\n    properties:\n      entitySelectorBasedRules:\n        - enabled: true\n          selector: type(\"process_group\"),entityId(\"${test.id}\")\nvariables:\n  test:\n    fn::invoke:\n      Function: dynatrace:getProcessGroup\n      Arguments:\n        name: Example\n        tags:\n          - TerraformKeyTest\n          - TerraformKeyValueTest=TestValue\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getProcessGroup.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required tags of the process group to find\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProcessGroup.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required tags of the process group to find\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "dynatrace:index/getRemoteEnvironments:getRemoteEnvironments": {
            "description": "The remote environments data source allows retrieval of all remote environments.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst example = dynatrace.getRemoteEnvironments({});\nexport const remoteEnvironments = example;\n```\n```python\nimport pulumi\nimport pulumi_dynatrace as dynatrace\n\nexample = dynatrace.get_remote_environments()\npulumi.export(\"remoteEnvironments\", example)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Dynatrace.GetRemoteEnvironments.Invoke();\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"remoteEnvironments\"] = example,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texample, err := dynatrace.LookupRemoteEnvironments(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"remoteEnvironments\", example)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = DynatraceFunctions.getRemoteEnvironments();\n\n        ctx.export(\"remoteEnvironments\", example.applyValue(getRemoteEnvironmentsResult -\u003e getRemoteEnvironmentsResult));\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: dynatrace:getRemoteEnvironments\n      Arguments: {}\noutputs:\n  remoteEnvironments: ${example}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getRemoteEnvironments.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "remoteEnvironments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/getRemoteEnvironmentsRemoteEnvironment:getRemoteEnvironmentsRemoteEnvironment"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "remoteEnvironments",
                    "id"
                ]
            }
        },
        "dynatrace:index/getRequestAttribute:getRequestAttribute": {
            "description": "The `dynatrace.RequestAttribute` data source allows the request attribute ID to be retrieved by its name.\n\n- `name` (String) - The name of the request attribute\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst example = dynatrace.getRequestAttribute({\n    name: \"Terraform Example\",\n});\nexport const id = example.then(example =\u003e example.id);\n```\n```python\nimport pulumi\nimport pulumi_dynatrace as dynatrace\n\nexample = dynatrace.get_request_attribute(name=\"Terraform Example\")\npulumi.export(\"id\", example.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Dynatrace.GetRequestAttribute.Invoke(new()\n    {\n        Name = \"Terraform Example\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"id\"] = example.Apply(getRequestAttributeResult =\u003e getRequestAttributeResult.Id),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texample, err := dynatrace.LookupRequestAttribute(ctx, \u0026dynatrace.LookupRequestAttributeArgs{\n\t\t\tName: \"Terraform Example\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"id\", example.Id)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetRequestAttributeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = DynatraceFunctions.getRequestAttribute(GetRequestAttributeArgs.builder()\n            .name(\"Terraform Example\")\n            .build());\n\n        ctx.export(\"id\", example.applyValue(getRequestAttributeResult -\u003e getRequestAttributeResult.id()));\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: dynatrace:getRequestAttribute\n      Arguments:\n        name: Terraform Example\noutputs:\n  id: ${example.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getRequestAttribute.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRequestAttribute.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "dynatrace:index/getRequestNaming:getRequestNaming": {
            "description": "The `dynatrace.RequestNaming` data source allows the request naming rule ID to be retrieved by its name.\n\n- `name` (String) - The name to be assigned to matching requests.\n\nIf multiple services match the given criteria, the first result will be retrieved.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst example = dynatrace.getRequestNaming({\n    name: \"Terraform Example\",\n});\nexport const id = example.then(example =\u003e example.id);\n```\n```python\nimport pulumi\nimport pulumi_dynatrace as dynatrace\n\nexample = dynatrace.get_request_naming(name=\"Terraform Example\")\npulumi.export(\"id\", example.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Dynatrace.GetRequestNaming.Invoke(new()\n    {\n        Name = \"Terraform Example\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"id\"] = example.Apply(getRequestNamingResult =\u003e getRequestNamingResult.Id),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texample, err := dynatrace.LookupRequestNaming(ctx, \u0026dynatrace.LookupRequestNamingArgs{\n\t\t\tName: \"Terraform Example\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"id\", example.Id)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetRequestNamingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = DynatraceFunctions.getRequestNaming(GetRequestNamingArgs.builder()\n            .name(\"Terraform Example\")\n            .build());\n\n        ctx.export(\"id\", example.applyValue(getRequestNamingResult -\u003e getRequestNamingResult.id()));\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: dynatrace:getRequestNaming\n      Arguments:\n        name: Terraform Example\noutputs:\n  id: ${example.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getRequestNaming.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRequestNaming.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "dynatrace:index/getService:getService": {
            "description": "!\u003e The data source API endpoint has been deprecated, please use dynatrace.getEntity with entity type `SERVICE` instead.\n\nThe service data source allows the service ID to be retrieved by its name and optionally tags / tag-value pairs.\n\n- `name` queries for all services with the specified name\n- `tags` (optional) refers to the tags that need to be present for the service (inclusive)\n\nIf multiple services match the given criteria, the first result will be retrieved.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst test = dynatrace.getService({\n    name: \"Example\",\n    tags: [\n        \"TerraformKeyTest\",\n        \"TerraformKeyValueTest=TestValue\",\n    ],\n});\nconst _name_ = new dynatrace.KeyRequests(\"#name#\", {service: test.then(test =\u003e test.id)});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\nimport pulumi_dynatrace as dynatrace\n\ntest = dynatrace.get_service(name=\"Example\",\n    tags=[\n        \"TerraformKeyTest\",\n        \"TerraformKeyValueTest=TestValue\",\n    ])\n_name_ = dynatrace.KeyRequests(\"#name#\", service=test.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Dynatrace.GetService.Invoke(new()\n    {\n        Name = \"Example\",\n        Tags = new[]\n        {\n            \"TerraformKeyTest\",\n            \"TerraformKeyValueTest=TestValue\",\n        },\n    });\n\n    var _name_ = new Dynatrace.KeyRequests(\"#name#\", new()\n    {\n        Service = test.Apply(getServiceResult =\u003e getServiceResult.Id),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := dynatrace.GetService(ctx, \u0026dynatrace.GetServiceArgs{\n\t\t\tName: \"Example\",\n\t\t\tTags: []string{\n\t\t\t\t\"TerraformKeyTest\",\n\t\t\t\t\"TerraformKeyValueTest=TestValue\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dynatrace.NewKeyRequests(ctx, \"#name#\", \u0026dynatrace.KeyRequestsArgs{\n\t\t\tService: *pulumi.String(test.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetServiceArgs;\nimport com.pulumi.dynatrace.KeyRequests;\nimport com.pulumi.dynatrace.KeyRequestsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DynatraceFunctions.getService(GetServiceArgs.builder()\n            .name(\"Example\")\n            .tags(            \n                \"TerraformKeyTest\",\n                \"TerraformKeyValueTest=TestValue\")\n            .build());\n\n        var _name_ = new KeyRequests(\"#name#\", KeyRequestsArgs.builder()        \n            .service(test.applyValue(getServiceResult -\u003e getServiceResult.id()))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  '#name#':\n    type: dynatrace:KeyRequests\n    properties:\n      service: ${test.id}\nvariables:\n  test:\n    fn::invoke:\n      Function: dynatrace:getService\n      Arguments:\n        name: Example\n        tags:\n          - TerraformKeyTest\n          - TerraformKeyValueTest=TestValue\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getService.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "operator": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required tags of the service to find\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getService.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "operator": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Required tags of the service to find\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "dynatrace:index/getSlo:getSlo": {
            "description": "The `dynatrace.Slo` data source allows the SLO ID to be retrieved by its name.\n\n- `name` (String) - The name of the SLO\n\nIf multiple services match the given criteria, the first result will be retrieved.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst example = dynatrace.getSlo({\n    name: \"Terraform\",\n});\nexport const id = example.then(example =\u003e example.id);\n```\n```python\nimport pulumi\nimport pulumi_dynatrace as dynatrace\n\nexample = dynatrace.get_slo(name=\"Terraform\")\npulumi.export(\"id\", example.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Dynatrace.GetSlo.Invoke(new()\n    {\n        Name = \"Terraform\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"id\"] = example.Apply(getSloResult =\u003e getSloResult.Id),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texample, err := dynatrace.LookupSlo(ctx, \u0026dynatrace.LookupSloArgs{\n\t\t\tName: \"Terraform\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"id\", example.Id)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetSloArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = DynatraceFunctions.getSlo(GetSloArgs.builder()\n            .name(\"Terraform\")\n            .build());\n\n        ctx.export(\"id\", example.applyValue(getSloResult -\u003e getSloResult.id()));\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: dynatrace:getSlo\n      Arguments:\n        name: Terraform\noutputs:\n  id: ${example.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSlo.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSlo.\n",
                "properties": {
                    "burnRateVisualizationEnabled": {
                        "type": "boolean",
                        "description": "Burn rate visualization is enabled (`true`) or disabled (`false`)\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The custom description of the SLO\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "The SLO is enabled (`true`) or disabled (`false`)\n"
                    },
                    "evaluationType": {
                        "type": "string",
                        "description": "The evaluation type of the SLO. Currently only `AGGREGATE` is supported\n"
                    },
                    "evaluationWindow": {
                        "type": "string",
                        "description": "The timeframe during which the SLO is to be evaluated. For the timeframe you can enter expressions like -1h (last hour), -1w (last week) or complex expressions like -2d to now (last two days), -1d/d to now/d (beginning of yesterday to beginning of today).\n"
                    },
                    "fastBurnThreshold": {
                        "type": "number",
                        "description": "The threshold defines when a burn rate is marked as fast-burning (high-emergency). Burn rates lower than this threshold (and greater than 1) are highlighted as slow-burn (low-emergency)\n"
                    },
                    "filter": {
                        "type": "string",
                        "description": "The entity filter for the SLO evaluation. See [syntax of entity selector](https://dt-url.net/entityselector) for details\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "legacyId": {
                        "type": "string",
                        "description": "The ID of this setting when referred to by the Config REST API V1\n"
                    },
                    "metricExpression": {
                        "type": "string",
                        "description": "The percentage-based metric expression for the calculation of the SLO\n"
                    },
                    "metricName": {
                        "type": "string",
                        "description": "No documentation available\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "targetSuccess": {
                        "type": "number",
                        "description": "The target value of the SLO\n"
                    },
                    "targetWarning": {
                        "type": "number",
                        "description": "The warning value of the SLO. At warning state the SLO is still fulfilled but is getting close to failure\n"
                    }
                },
                "type": "object",
                "required": [
                    "burnRateVisualizationEnabled",
                    "description",
                    "enabled",
                    "evaluationType",
                    "evaluationWindow",
                    "fastBurnThreshold",
                    "filter",
                    "legacyId",
                    "metricExpression",
                    "metricName",
                    "name",
                    "targetSuccess",
                    "targetWarning",
                    "id"
                ]
            }
        },
        "dynatrace:index/getSyntheticLocation:getSyntheticLocation": {
            "description": "The synthetic location data source allows the location ID to be retrieved based off of provided parameters.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetSyntheticLocationArgs;\nimport com.pulumi.dynatrace.HttpMonitor;\nimport com.pulumi.dynatrace.HttpMonitorArgs;\nimport com.pulumi.dynatrace.inputs.HttpMonitorAnomalyDetectionArgs;\nimport com.pulumi.dynatrace.inputs.HttpMonitorScriptArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DynatraceFunctions.getSyntheticLocation(GetSyntheticLocationArgs.builder()\n            .cloudPlatform(\"AMAZON_EC2\")\n            .name(\"Sydney\")\n            .type(\"PUBLIC\")\n            .build());\n\n        var _name_ = new HttpMonitor(\"#name#\", HttpMonitorArgs.builder()        \n            .anomalyDetections(HttpMonitorAnomalyDetectionArgs.builder()\n                .loadingTimeThresholds(HttpMonitorAnomalyDetectionLoadingTimeThresholdArgs.builder()\n                    .enabled(true)\n                    .build())\n                .outageHandlings(HttpMonitorAnomalyDetectionOutageHandlingArgs.builder()\n                    .globalOutage(true)\n                    .localOutage(false)\n                    .retryOnError(false)\n                    .build())\n                .build())\n            .enabled(true)\n            .frequency(60)\n            .locations(test.applyValue(getSyntheticLocationResult -\u003e getSyntheticLocationResult.id()))\n            .script(HttpMonitorScriptArgs.builder()\n                .requests(HttpMonitorScriptRequestArgs.builder()\n                    .configuration(HttpMonitorScriptRequestConfigurationArgs.builder()\n                        .acceptAnyCertificate(true)\n                        .followRedirects(true)\n                        .build())\n                    .description(\"google.com\")\n                    .method(\"GET\")\n                    .url(\"https://www.google.com\")\n                    .validation(HttpMonitorScriptRequestValidationArgs.builder()\n                        .rule(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                        .build())\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  '#name#':\n    type: dynatrace:HttpMonitor\n    properties:\n      anomalyDetections:\n        - loadingTimeThresholds:\n            - enabled: true\n          outageHandlings:\n            - globalOutage: true\n              localOutage: false\n              retryOnError: false\n      enabled: true\n      frequency: 60\n      locations:\n        - ${test.id}\n      script:\n        requests:\n          - configuration:\n              acceptAnyCertificate: true\n              followRedirects: true\n            description: google.com\n            method: GET\n            url: https://www.google.com\n            validation:\n              rule:\n                - passIfFound: false\n                  type: httpStatusesList\n                  value: '\u003e=400'\nvariables:\n  test:\n    fn::invoke:\n      Function: dynatrace:getSyntheticLocation\n      Arguments:\n        cloudPlatform: AMAZON_EC2\n        name: Sydney\n        type: PUBLIC\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSyntheticLocation.\n",
                "properties": {
                    "cloudPlatform": {
                        "type": "string",
                        "description": "The cloud provider where the location is hosted.\n"
                    },
                    "entityId": {
                        "type": "string"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "stage": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSyntheticLocation.\n",
                "properties": {
                    "cloudPlatform": {
                        "type": "string",
                        "description": "The cloud provider where the location is hosted.\n"
                    },
                    "entityId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "stage": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "cloudPlatform",
                    "ips",
                    "stage",
                    "status",
                    "id"
                ]
            }
        },
        "dynatrace:index/getSyntheticLocations:getSyntheticLocations": {
            "description": "The synthetic locations data source allows the location IDs to be retrieved based off of provided parameters.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@alvaroblazquez4567/pulumi-dynatrace\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst test = dynatrace.getSyntheticLocations({\n    name: \"Sydney\",\n});\nconst _name_ = new dynatrace.HttpMonitor(\"#name#\", {\n    enabled: true,\n    frequency: 60,\n    locations: [test.then(test =\u003e test.locations?.entityId)],\n    anomalyDetections: [{\n        loadingTimeThresholds: [{\n            enabled: true,\n        }],\n        outageHandlings: [{\n            globalOutage: true,\n            localOutage: false,\n            retryOnError: false,\n        }],\n    }],\n    script: {\n        requests: [{\n            description: \"google.com\",\n            method: \"GET\",\n            url: \"https://www.google.com\",\n            configuration: {\n                acceptAnyCertificate: true,\n                followRedirects: true,\n            },\n            validation: {\n                rules: [{\n                    type: \"httpStatusesList\",\n                    passIfFound: false,\n                    value: \"\u003e=400\",\n                }],\n            },\n        }],\n    },\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_dynatrace as dynatrace\nimport pulumi_dynatrace as dynatrace\n\ntest = dynatrace.get_synthetic_locations(name=\"Sydney\")\n_name_ = dynatrace.HttpMonitor(\"#name#\",\n    enabled=True,\n    frequency=60,\n    locations=[test.locations.entity_id],\n    anomaly_detections=[dynatrace.HttpMonitorAnomalyDetectionArgs(\n        loading_time_thresholds=[dynatrace.HttpMonitorAnomalyDetectionLoadingTimeThresholdArgs(\n            enabled=True,\n        )],\n        outage_handlings=[dynatrace.HttpMonitorAnomalyDetectionOutageHandlingArgs(\n            global_outage=True,\n            local_outage=False,\n            retry_on_error=False,\n        )],\n    )],\n    script=dynatrace.HttpMonitorScriptArgs(\n        requests=[dynatrace.HttpMonitorScriptRequestArgs(\n            description=\"google.com\",\n            method=\"GET\",\n            url=\"https://www.google.com\",\n            configuration=dynatrace.HttpMonitorScriptRequestConfigurationArgs(\n                accept_any_certificate=True,\n                follow_redirects=True,\n            ),\n            validation=dynatrace.HttpMonitorScriptRequestValidationArgs(\n                rules=[dynatrace.HttpMonitorScriptRequestValidationRuleArgs(\n                    type=\"httpStatusesList\",\n                    pass_if_found=False,\n                    value=\"\u003e=400\",\n                )],\n            ),\n        )],\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Lbrlabs.PulumiPackage.Dynatrace;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Dynatrace.GetSyntheticLocations.Invoke(new()\n    {\n        Name = \"Sydney\",\n    });\n\n    var _name_ = new Dynatrace.HttpMonitor(\"#name#\", new()\n    {\n        Enabled = true,\n        Frequency = 60,\n        Locations = new[]\n        {\n            test.Apply(getSyntheticLocationsResult =\u003e getSyntheticLocationsResult.Locations?.EntityId),\n        },\n        AnomalyDetections = new[]\n        {\n            new Dynatrace.Inputs.HttpMonitorAnomalyDetectionArgs\n            {\n                LoadingTimeThresholds = new[]\n                {\n                    new Dynatrace.Inputs.HttpMonitorAnomalyDetectionLoadingTimeThresholdArgs\n                    {\n                        Enabled = true,\n                    },\n                },\n                OutageHandlings = new[]\n                {\n                    new Dynatrace.Inputs.HttpMonitorAnomalyDetectionOutageHandlingArgs\n                    {\n                        GlobalOutage = true,\n                        LocalOutage = false,\n                        RetryOnError = false,\n                    },\n                },\n            },\n        },\n        Script = new Dynatrace.Inputs.HttpMonitorScriptArgs\n        {\n            Requests = new[]\n            {\n                new Dynatrace.Inputs.HttpMonitorScriptRequestArgs\n                {\n                    Description = \"google.com\",\n                    Method = \"GET\",\n                    Url = \"https://www.google.com\",\n                    Configuration = new Dynatrace.Inputs.HttpMonitorScriptRequestConfigurationArgs\n                    {\n                        AcceptAnyCertificate = true,\n                        FollowRedirects = true,\n                    },\n                    Validation = new Dynatrace.Inputs.HttpMonitorScriptRequestValidationArgs\n                    {\n                        Rules = new[]\n                        {\n                            new Dynatrace.Inputs.HttpMonitorScriptRequestValidationRuleArgs\n                            {\n                                Type = \"httpStatusesList\",\n                                PassIfFound = false,\n                                Value = \"\u003e=400\",\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := dynatrace.GetSyntheticLocations(ctx, \u0026dynatrace.GetSyntheticLocationsArgs{\n\t\t\tName: pulumi.StringRef(\"Sydney\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dynatrace.NewHttpMonitor(ctx, \"#name#\", \u0026dynatrace.HttpMonitorArgs{\n\t\t\tEnabled:   pulumi.Bool(true),\n\t\t\tFrequency: pulumi.Int(60),\n\t\t\tLocations: pulumi.StringArray{\n\t\t\t\t*pulumi.String(test.Locations.EntityId),\n\t\t\t},\n\t\t\tAnomalyDetections: dynatrace.HttpMonitorAnomalyDetectionArray{\n\t\t\t\t\u0026dynatrace.HttpMonitorAnomalyDetectionArgs{\n\t\t\t\t\tLoadingTimeThresholds: dynatrace.HttpMonitorAnomalyDetectionLoadingTimeThresholdArray{\n\t\t\t\t\t\t\u0026dynatrace.HttpMonitorAnomalyDetectionLoadingTimeThresholdArgs{\n\t\t\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tOutageHandlings: dynatrace.HttpMonitorAnomalyDetectionOutageHandlingArray{\n\t\t\t\t\t\t\u0026dynatrace.HttpMonitorAnomalyDetectionOutageHandlingArgs{\n\t\t\t\t\t\t\tGlobalOutage: pulumi.Bool(true),\n\t\t\t\t\t\t\tLocalOutage:  pulumi.Bool(false),\n\t\t\t\t\t\t\tRetryOnError: pulumi.Bool(false),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tScript: \u0026dynatrace.HttpMonitorScriptTypeArgs{\n\t\t\t\tRequests: dynatrace.HttpMonitorScriptRequestArray{\n\t\t\t\t\t\u0026dynatrace.HttpMonitorScriptRequestArgs{\n\t\t\t\t\t\tDescription: pulumi.String(\"google.com\"),\n\t\t\t\t\t\tMethod:      pulumi.String(\"GET\"),\n\t\t\t\t\t\tUrl:         pulumi.String(\"https://www.google.com\"),\n\t\t\t\t\t\tConfiguration: \u0026dynatrace.HttpMonitorScriptRequestConfigurationArgs{\n\t\t\t\t\t\t\tAcceptAnyCertificate: pulumi.Bool(true),\n\t\t\t\t\t\t\tFollowRedirects:      pulumi.Bool(true),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tValidation: \u0026dynatrace.HttpMonitorScriptRequestValidationArgs{\n\t\t\t\t\t\t\tRules: dynatrace.HttpMonitorScriptRequestValidationRuleArray{\n\t\t\t\t\t\t\t\t\u0026dynatrace.HttpMonitorScriptRequestValidationRuleArgs{\n\t\t\t\t\t\t\t\t\tType:        pulumi.String(\"httpStatusesList\"),\n\t\t\t\t\t\t\t\t\tPassIfFound: pulumi.Bool(false),\n\t\t\t\t\t\t\t\t\tValue:       pulumi.String(\"\u003e=400\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetSyntheticLocationsArgs;\nimport com.pulumi.dynatrace.HttpMonitor;\nimport com.pulumi.dynatrace.HttpMonitorArgs;\nimport com.pulumi.dynatrace.inputs.HttpMonitorAnomalyDetectionArgs;\nimport com.pulumi.dynatrace.inputs.HttpMonitorScriptArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DynatraceFunctions.getSyntheticLocations(GetSyntheticLocationsArgs.builder()\n            .name(\"Sydney\")\n            .build());\n\n        var _name_ = new HttpMonitor(\"#name#\", HttpMonitorArgs.builder()        \n            .enabled(true)\n            .frequency(60)\n            .locations(test.applyValue(getSyntheticLocationsResult -\u003e getSyntheticLocationsResult.locations().entityId()))\n            .anomalyDetections(HttpMonitorAnomalyDetectionArgs.builder()\n                .loadingTimeThresholds(HttpMonitorAnomalyDetectionLoadingTimeThresholdArgs.builder()\n                    .enabled(true)\n                    .build())\n                .outageHandlings(HttpMonitorAnomalyDetectionOutageHandlingArgs.builder()\n                    .globalOutage(true)\n                    .localOutage(false)\n                    .retryOnError(false)\n                    .build())\n                .build())\n            .script(HttpMonitorScriptArgs.builder()\n                .requests(HttpMonitorScriptRequestArgs.builder()\n                    .description(\"google.com\")\n                    .method(\"GET\")\n                    .url(\"https://www.google.com\")\n                    .configuration(HttpMonitorScriptRequestConfigurationArgs.builder()\n                        .acceptAnyCertificate(true)\n                        .followRedirects(true)\n                        .build())\n                    .validation(HttpMonitorScriptRequestValidationArgs.builder()\n                        .rules(HttpMonitorScriptRequestValidationRuleArgs.builder()\n                            .type(\"httpStatusesList\")\n                            .passIfFound(false)\n                            .value(\"\u003e=400\")\n                            .build())\n                        .build())\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  '#name#':\n    type: dynatrace:HttpMonitor\n    properties:\n      enabled: true\n      frequency: 60\n      locations:\n        - ${test.locations.entityId}\n      anomalyDetections:\n        - loadingTimeThresholds:\n            - enabled: true\n          outageHandlings:\n            - globalOutage: true\n              localOutage: false\n              retryOnError: false\n      script:\n        requests:\n          - description: google.com\n            method: GET\n            url: https://www.google.com\n            configuration:\n              acceptAnyCertificate: true\n              followRedirects: true\n            validation:\n              rules:\n                - type: httpStatusesList\n                  passIfFound: false\n                  value: '\u003e=400'\nvariables:\n  test:\n    fn::invoke:\n      Function: dynatrace:getSyntheticLocations\n      Arguments:\n        name: Sydney\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSyntheticLocations.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "locations": {
                        "$ref": "#/types/dynatrace:index/getSyntheticLocationsLocations:getSyntheticLocationsLocations"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSyntheticLocations.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "locations": {
                        "$ref": "#/types/dynatrace:index/getSyntheticLocationsLocations:getSyntheticLocationsLocations"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "locations"
                ]
            }
        },
        "dynatrace:index/getSyntheticNodes:getSyntheticNodes": {
            "description": "The synthetic locations data source queries for all available Synthetic Nodes. The data source doesn't need to get configured. It always provides the full list of synthetic nodes.\n",
            "outputs": {
                "description": "A collection of values returned by getSyntheticNodes.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/dynatrace:index/getSyntheticNodesNode:getSyntheticNodesNode"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "nodes",
                    "id"
                ]
            }
        },
        "dynatrace:index/getTenant:getTenant": {
            "description": "The data source `dynatrace.getTenant` evalutes the configured Environment URL (either the environment variable `DYNATRACE_ENV_URL` or the configuration attribute `dt_env_url`) and extracts out the name/id of the environment this provider addresses.\nMain purpose is for migrating settings from one environment to another, but it can be used to in general to avoid hard coding the environment ID like in the example below.\n",
            "outputs": {
                "description": "A collection of values returned by getTenant.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "dynatrace:index/getUpdateWindows:getUpdateWindows": {
            "description": "The `dynatrace.UpdateWindows` data source allows the OneAgent update maintenance window ID to be retrieved by its name.\n\n- `name` (String) - The name of the OneAgent update maintenance window\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst example = dynatrace.getUpdateWindows({\n    name: \"Terraform Example\",\n});\nexport const id = example.then(example =\u003e example.id);\n```\n```python\nimport pulumi\nimport pulumi_dynatrace as dynatrace\n\nexample = dynatrace.get_update_windows(name=\"Terraform Example\")\npulumi.export(\"id\", example.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Dynatrace.GetUpdateWindows.Invoke(new()\n    {\n        Name = \"Terraform Example\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"id\"] = example.Apply(getUpdateWindowsResult =\u003e getUpdateWindowsResult.Id),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texample, err := dynatrace.LookupUpdateWindows(ctx, \u0026dynatrace.LookupUpdateWindowsArgs{\n\t\t\tName: \"Terraform Example\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"id\", example.Id)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetUpdateWindowsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = DynatraceFunctions.getUpdateWindows(GetUpdateWindowsArgs.builder()\n            .name(\"Terraform Example\")\n            .build());\n\n        ctx.export(\"id\", example.applyValue(getUpdateWindowsResult -\u003e getUpdateWindowsResult.id()));\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: dynatrace:getUpdateWindows\n      Arguments:\n        name: Terraform Example\noutputs:\n  id: ${example.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getUpdateWindows.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUpdateWindows.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "dynatrace:index/getVulnerabilityAlerting:getVulnerabilityAlerting": {
            "description": "The `dynatrace.VulnerabilityAlerting` data source allows the vulnerability alerting profile ID to be retrieved by its name.\n\n- `name` (String) - The name of the vulnerability alerting profile\n\nIf multiple services match the given criteria, the first result will be retrieved.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as dynatrace from \"@pulumi/dynatrace\";\n\nconst example = dynatrace.getVulnerabilityAlerting({\n    name: \"Terraform Example\",\n});\nexport const id = example.then(example =\u003e example.id);\n```\n```python\nimport pulumi\nimport pulumi_dynatrace as dynatrace\n\nexample = dynatrace.get_vulnerability_alerting(name=\"Terraform Example\")\npulumi.export(\"id\", example.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Dynatrace = Pulumi.Dynatrace;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Dynatrace.GetVulnerabilityAlerting.Invoke(new()\n    {\n        Name = \"Terraform Example\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"id\"] = example.Apply(getVulnerabilityAlertingResult =\u003e getVulnerabilityAlertingResult.Id),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texample, err := dynatrace.LookupVulnerabilityAlerting(ctx, \u0026dynatrace.LookupVulnerabilityAlertingArgs{\n\t\t\tName: \"Terraform Example\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"id\", example.Id)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.dynatrace.DynatraceFunctions;\nimport com.pulumi.dynatrace.inputs.GetVulnerabilityAlertingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = DynatraceFunctions.getVulnerabilityAlerting(GetVulnerabilityAlertingArgs.builder()\n            .name(\"Terraform Example\")\n            .build());\n\n        ctx.export(\"id\", example.applyValue(getVulnerabilityAlertingResult -\u003e getVulnerabilityAlertingResult.id()));\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: dynatrace:getVulnerabilityAlerting\n      Arguments:\n        name: Terraform Example\noutputs:\n  id: ${example.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getVulnerabilityAlerting.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVulnerabilityAlerting.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        }
    }
}