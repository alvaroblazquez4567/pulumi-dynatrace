// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-dynatrace/sdk/go/dynatrace/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieve a list of all documents.
func GetDocuments(ctx *pulumi.Context, args *GetDocumentsArgs, opts ...pulumi.InvokeOption) (*GetDocumentsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDocumentsResult
	err := ctx.Invoke("dynatrace:index/getDocuments:getDocuments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDocuments.
type GetDocumentsArgs struct {
	Type *string `pulumi:"type"`
}

// A collection of values returned by getDocuments.
type GetDocumentsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The type of documents to query for. Leave empty if you want to query for all kinds of documents. Possible values are `document` or `notebook`
	Type   *string             `pulumi:"type"`
	Values []GetDocumentsValue `pulumi:"values"`
}

func GetDocumentsOutput(ctx *pulumi.Context, args GetDocumentsOutputArgs, opts ...pulumi.InvokeOption) GetDocumentsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDocumentsResult, error) {
			args := v.(GetDocumentsArgs)
			r, err := GetDocuments(ctx, &args, opts...)
			var s GetDocumentsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDocumentsResultOutput)
}

// A collection of arguments for invoking getDocuments.
type GetDocumentsOutputArgs struct {
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetDocumentsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDocumentsArgs)(nil)).Elem()
}

// A collection of values returned by getDocuments.
type GetDocumentsResultOutput struct{ *pulumi.OutputState }

func (GetDocumentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDocumentsResult)(nil)).Elem()
}

func (o GetDocumentsResultOutput) ToGetDocumentsResultOutput() GetDocumentsResultOutput {
	return o
}

func (o GetDocumentsResultOutput) ToGetDocumentsResultOutputWithContext(ctx context.Context) GetDocumentsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetDocumentsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDocumentsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The type of documents to query for. Leave empty if you want to query for all kinds of documents. Possible values are `document` or `notebook`
func (o GetDocumentsResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDocumentsResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o GetDocumentsResultOutput) Values() GetDocumentsValueArrayOutput {
	return o.ApplyT(func(v GetDocumentsResult) []GetDocumentsValue { return v.Values }).(GetDocumentsValueArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDocumentsResultOutput{})
}
