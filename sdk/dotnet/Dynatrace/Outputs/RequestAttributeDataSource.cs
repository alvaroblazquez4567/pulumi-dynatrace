// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Dynatrace.Outputs
{

    [OutputType]
    public sealed class RequestAttributeDataSource
    {
        /// <summary>
        /// Specifies the location where the values are captured and stored.  Required if the **source** is one of the following: `GET_PARAMETER`, `URI`, `REQUEST_HEADER`, `RESPONSE_HEADER`.   Not applicable in other cases.   If the **source** value is `REQUEST_HEADER` or `RESPONSE_HEADER`, the `CAPTURE_AND_STORE_ON_BOTH` location is not allowed
        /// </summary>
        public readonly string? CapturingAndStorageLocation;
        /// <summary>
        /// IBM integration bus label node name condition for which the value is captured
        /// </summary>
        public readonly Outputs.RequestAttributeDataSourceCicsSdkMethodNodeCondition? CicsSdkMethodNodeCondition;
        /// <summary>
        /// The data source is enabled (`true`) or disabled (`false`)
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// IBM integration bus label node name condition for which the value is captured
        /// </summary>
        public readonly Outputs.RequestAttributeDataSourceIibLabelMethodNodeCondition? IibLabelMethodNodeCondition;
        /// <summary>
        /// IBM integration bus label node name condition for which the value is captured
        /// </summary>
        public readonly Outputs.RequestAttributeDataSourceIibMethodNodeCondition? IibMethodNodeCondition;
        /// <summary>
        /// The IBM integration bus node type for which the value is captured.  This or `iibMethodNodeCondition` is required if the **source** is: `IIB_NODE`.  Not applicable in other cases
        /// </summary>
        public readonly string? IibNodeType;
        /// <summary>
        /// The method specification if the **source** value is `METHOD_PARAM`.   Not applicable in other cases
        /// </summary>
        public readonly ImmutableArray<Outputs.RequestAttributeDataSourceMethod> Methods;
        /// <summary>
        /// The name of the web request parameter to capture.  Required if the **source** is one of the following: `POST_PARAMETER`, `GET_PARAMETER`, `REQUEST_HEADER`, `RESPONSE_HEADER`, `CUSTOM_ATTRIBUTE`.  Not applicable in other cases
        /// </summary>
        public readonly string? ParameterName;
        /// <summary>
        /// Conditions for data capturing
        /// </summary>
        public readonly Outputs.RequestAttributeDataSourceScope? Scope;
        /// <summary>
        /// The technology of the session attribute to capture if the **source** value is `SESSION_ATTRIBUTE`.
        /// </summary>
        public readonly string? SessionAttributeTechnology;
        /// <summary>
        /// The source of the attribute to capture. Works in conjunction with **parameterName** or **methods** and **technology**
        /// </summary>
        public readonly string Source;
        public readonly string? Technology;
        /// <summary>
        /// allows for configuring properties that are not explicitly supported by the current version of this provider
        /// </summary>
        public readonly string? Unknowns;
        public readonly Outputs.RequestAttributeDataSourceValueProcessing? ValueProcessing;

        [OutputConstructor]
        private RequestAttributeDataSource(
            string? capturingAndStorageLocation,

            Outputs.RequestAttributeDataSourceCicsSdkMethodNodeCondition? cicsSdkMethodNodeCondition,

            bool enabled,

            Outputs.RequestAttributeDataSourceIibLabelMethodNodeCondition? iibLabelMethodNodeCondition,

            Outputs.RequestAttributeDataSourceIibMethodNodeCondition? iibMethodNodeCondition,

            string? iibNodeType,

            ImmutableArray<Outputs.RequestAttributeDataSourceMethod> methods,

            string? parameterName,

            Outputs.RequestAttributeDataSourceScope? scope,

            string? sessionAttributeTechnology,

            string source,

            string? technology,

            string? unknowns,

            Outputs.RequestAttributeDataSourceValueProcessing? valueProcessing)
        {
            CapturingAndStorageLocation = capturingAndStorageLocation;
            CicsSdkMethodNodeCondition = cicsSdkMethodNodeCondition;
            Enabled = enabled;
            IibLabelMethodNodeCondition = iibLabelMethodNodeCondition;
            IibMethodNodeCondition = iibMethodNodeCondition;
            IibNodeType = iibNodeType;
            Methods = methods;
            ParameterName = parameterName;
            Scope = scope;
            SessionAttributeTechnology = sessionAttributeTechnology;
            Source = source;
            Technology = technology;
            Unknowns = unknowns;
            ValueProcessing = valueProcessing;
        }
    }
}
